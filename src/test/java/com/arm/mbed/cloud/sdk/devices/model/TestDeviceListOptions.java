// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import org.junit.Test;

/**
 * Unit tests for Model DeviceListOptions.
 */
public class TestDeviceListOptions {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            DeviceListOptions devicelistoptions1 = new DeviceListOptions(Integer.valueOf(-50), Long.valueOf(34),
                                                                         Order.getDefault(),
                                                                         "02130c81-61ed-42ab-9513-4679207e0406", null,
                                                                         null);
            DeviceListOptions devicelistoptions2 = devicelistoptions1.clone();
            assertNotNull(devicelistoptions1);
            assertNotNull(devicelistoptions2);
            assertNotSame(devicelistoptions2, devicelistoptions1);
            assertEquals(devicelistoptions2, devicelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            DeviceListOptions devicelistoptions1 = new DeviceListOptions(Integer.valueOf(105), Long.valueOf(22),
                                                                         Order.getDefault(),
                                                                         "67a860b2-5160-4ff1-b6b9-4ba61f6cdfcc", null,
                                                                         null);
            DeviceListOptions devicelistoptions2 = new DeviceListOptions(Integer.valueOf(105), Long.valueOf(22),
                                                                         Order.getDefault(),
                                                                         "67a860b2-5160-4ff1-b6b9-4ba61f6cdfcc", null,
                                                                         null);
            assertNotNull(devicelistoptions1);
            assertNotNull(devicelistoptions2);
            assertNotSame(devicelistoptions2, devicelistoptions1);
            assertEquals(devicelistoptions2, devicelistoptions1);
            assertEquals(devicelistoptions2.hashCode(), devicelistoptions1.hashCode());
            int hashCode = devicelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, devicelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            DeviceListOptions devicelistoptions1 = new DeviceListOptions(Integer.valueOf(91), Long.valueOf(-19),
                                                                         Order.getDefault(),
                                                                         "5def20d7-ef6e-4ecd-915a-c3e46f1ea2ca", null,
                                                                         null);
            DeviceListOptions devicelistoptions2 = new DeviceListOptions(Integer.valueOf(91), Long.valueOf(-19),
                                                                         Order.getDefault(),
                                                                         "5def20d7-ef6e-4ecd-915a-c3e46f1ea2ca", null,
                                                                         null);
            DeviceListOptions devicelistoptions3 = new DeviceListOptions(Integer.valueOf(106), Long.valueOf(-111),
                                                                         Order.getDefault(),
                                                                         "aaab8fc4-31d1-4fbb-8706-b1655fdf7eba", null,
                                                                         null);
            assertNotNull(devicelistoptions1);
            assertNotNull(devicelistoptions2);
            assertNotNull(devicelistoptions3);
            assertNotSame(devicelistoptions2, devicelistoptions1);
            assertNotSame(devicelistoptions3, devicelistoptions1);
            assertEquals(devicelistoptions2, devicelistoptions1);
            assertEquals(devicelistoptions2, devicelistoptions1);
            assertEquals(devicelistoptions1, devicelistoptions2);
            assertEquals(devicelistoptions1, devicelistoptions1);
            assertFalse(devicelistoptions1.equals(null));
            assertNotEquals(devicelistoptions3, devicelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
