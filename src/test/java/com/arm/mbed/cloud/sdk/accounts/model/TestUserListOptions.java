// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import org.junit.Test;

/**
 * Unit tests for Model UserListOptions.
 */
public class TestUserListOptions {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            UserListOptions userlistoptions1 = new UserListOptions(Integer.valueOf(-65), Long.valueOf(73),
                                                                   Order.getDefault(),
                                                                   "c860cb63-f6d8-4ed9-9306-0c0fe4eac029", null, null);
            UserListOptions userlistoptions2 = userlistoptions1.clone();
            assertNotNull(userlistoptions1);
            assertNotNull(userlistoptions2);
            assertNotSame(userlistoptions2, userlistoptions1);
            assertEquals(userlistoptions2, userlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            UserListOptions userlistoptions1 = new UserListOptions(Integer.valueOf(71), Long.valueOf(61),
                                                                   Order.getDefault(),
                                                                   "86f1d572-ba3b-4d86-80ff-64423d6a1071", null, null);
            UserListOptions userlistoptions2 = new UserListOptions(Integer.valueOf(71), Long.valueOf(61),
                                                                   Order.getDefault(),
                                                                   "86f1d572-ba3b-4d86-80ff-64423d6a1071", null, null);
            assertNotNull(userlistoptions1);
            assertNotNull(userlistoptions2);
            assertNotSame(userlistoptions2, userlistoptions1);
            assertEquals(userlistoptions2, userlistoptions1);
            assertEquals(userlistoptions2.hashCode(), userlistoptions1.hashCode());
            int hashCode = userlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            UserListOptions userlistoptions1 = new UserListOptions(Integer.valueOf(-94), Long.valueOf(111),
                                                                   Order.getDefault(),
                                                                   "13074e8c-f939-47a1-931d-27fbe58ab3aa", null, null);
            UserListOptions userlistoptions2 = new UserListOptions(Integer.valueOf(-94), Long.valueOf(111),
                                                                   Order.getDefault(),
                                                                   "13074e8c-f939-47a1-931d-27fbe58ab3aa", null, null);
            UserListOptions userlistoptions3 = new UserListOptions(Integer.valueOf(-5), Long.valueOf(-105),
                                                                   Order.getDefault(),
                                                                   "7b3fad62-7d31-425e-8259-fd52538e4e36", null, null);
            assertNotNull(userlistoptions1);
            assertNotNull(userlistoptions2);
            assertNotNull(userlistoptions3);
            assertNotSame(userlistoptions2, userlistoptions1);
            assertNotSame(userlistoptions3, userlistoptions1);
            assertEquals(userlistoptions2, userlistoptions1);
            assertEquals(userlistoptions2, userlistoptions1);
            assertEquals(userlistoptions1, userlistoptions2);
            assertEquals(userlistoptions1, userlistoptions1);
            assertFalse(userlistoptions1.equals(null));
            assertNotEquals(userlistoptions3, userlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
