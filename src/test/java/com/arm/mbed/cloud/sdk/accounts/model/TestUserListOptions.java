// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import org.junit.Test;

/**
 * Unit tests for Model UserListOptions.
 */
public class TestUserListOptions {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            UserListOptions userlistoptions1 = new UserListOptions(Integer.valueOf(41), Long.valueOf(-76),
                                                                   Order.getDefault(),
                                                                   "7a3536a5-7161-4d81-abfc-5a0e05f35726", null, null);
            UserListOptions userlistoptions2 = userlistoptions1.clone();
            assertNotNull(userlistoptions1);
            assertNotNull(userlistoptions2);
            assertNotSame(userlistoptions2, userlistoptions1);
            assertEquals(userlistoptions2, userlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            UserListOptions userlistoptions1 = new UserListOptions(Integer.valueOf(52), Long.valueOf(-71),
                                                                   Order.getDefault(),
                                                                   "bdac021c-1a57-4971-88bf-93ae649ebed0", null, null);
            UserListOptions userlistoptions2 = new UserListOptions(Integer.valueOf(52), Long.valueOf(-71),
                                                                   Order.getDefault(),
                                                                   "bdac021c-1a57-4971-88bf-93ae649ebed0", null, null);
            assertNotNull(userlistoptions1);
            assertNotNull(userlistoptions2);
            assertNotSame(userlistoptions2, userlistoptions1);
            assertEquals(userlistoptions2, userlistoptions1);
            assertEquals(userlistoptions2.hashCode(), userlistoptions1.hashCode());
            int hashCode = userlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            UserListOptions userlistoptions1 = new UserListOptions(Integer.valueOf(-63), Long.valueOf(-100),
                                                                   Order.getDefault(),
                                                                   "4bb21f0d-7df3-4469-95a5-df2f2407f25a", null, null);
            UserListOptions userlistoptions2 = new UserListOptions(Integer.valueOf(-63), Long.valueOf(-100),
                                                                   Order.getDefault(),
                                                                   "4bb21f0d-7df3-4469-95a5-df2f2407f25a", null, null);
            UserListOptions userlistoptions3 = new UserListOptions(Integer.valueOf(-23), Long.valueOf(116),
                                                                   Order.getDefault(),
                                                                   "f702a8db-a484-40bd-b05d-889e9eafcf7a", null, null);
            assertNotNull(userlistoptions1);
            assertNotNull(userlistoptions2);
            assertNotNull(userlistoptions3);
            assertNotSame(userlistoptions2, userlistoptions1);
            assertNotSame(userlistoptions3, userlistoptions1);
            assertEquals(userlistoptions2, userlistoptions1);
            assertEquals(userlistoptions2, userlistoptions1);
            assertEquals(userlistoptions1, userlistoptions2);
            assertEquals(userlistoptions1, userlistoptions1);
            assertFalse(userlistoptions1.equals(null));
            assertNotEquals(userlistoptions3, userlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
