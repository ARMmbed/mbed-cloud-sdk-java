// This file was generated by the Pelion SDK foundation code generator.
// This unit test suite was autogenerated on Fri Jan 11 00:36:38 GMT 2019. Feel free to change its contents as you wish.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ApiKeyListDao.
 */
public class TestApiKeyListDao {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            ApiKeyListDao apikeylistdao1 = new ApiKeyListDao();
            ApiKeyListDao apikeylistdao2 = apikeylistdao1.clone();
            assertNotNull(apikeylistdao1);
            assertNotNull(apikeylistdao2);
            assertNotSame(apikeylistdao2, apikeylistdao1);
            assertEquals(apikeylistdao2, apikeylistdao1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            ApiKeyListDao apikeylistdao1 = new ApiKeyListDao();
            ApiKeyListDao apikeylistdao2 = new ApiKeyListDao();
            assertNotNull(apikeylistdao1);
            assertNotNull(apikeylistdao2);
            assertNotSame(apikeylistdao2, apikeylistdao1);
            assertEquals(apikeylistdao2, apikeylistdao1);
            assertEquals(apikeylistdao2.hashCode(), apikeylistdao1.hashCode());
            int hashCode = apikeylistdao1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikeylistdao1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            ApiKeyListDao apikeylistdao1 = new ApiKeyListDao();
            ApiKeyListDao apikeylistdao2 = new ApiKeyListDao();
            assertNotNull(apikeylistdao1);
            assertNotNull(apikeylistdao2);
            assertNotSame(apikeylistdao2, apikeylistdao1);
            assertEquals(apikeylistdao2, apikeylistdao1);
            assertEquals(apikeylistdao2, apikeylistdao1);
            assertEquals(apikeylistdao1, apikeylistdao2);
            assertEquals(apikeylistdao1, apikeylistdao1);
            assertFalse(apikeylistdao1.equals(null));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
