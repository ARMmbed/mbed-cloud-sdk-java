machine:
  timezone: Europe/London
  environment:
    AWS_DEFAULT_REGION: us-west-2
    PROJECT_NAME: ${CIRCLE_PROJECT_REPONAME}
    PROJECT_DOCS: ${HOME}/docs
    PROJECT_TESTS: ${HOME}/tests
    PROJECT_ARTIFACTS: ${HOME}/artifacts
    PROJECT_REPORTS: ${HOME}/reports
    PROJECT_TOP: ${HOME}/${CIRCLE_PROJECT_REPONAME}
    BUILD_DOCS: ${HOME}/${CIRCLE_PROJECT_REPONAME}/build/docs/javadoc
    BUILD_JARS: ${HOME}/${CIRCLE_PROJECT_REPONAME}/build/libs
    BUILD_DIST: ${HOME}/${CIRCLE_PROJECT_REPONAME}/build/distributions
    BUILD_REPORTS: ${HOME}/${CIRCLE_PROJECT_REPONAME}/build/reports
    SCRIPTS_DIR: ${HOME}/${CIRCLE_PROJECT_REPONAME}/scripts
    ARTIFACTORY_URL: http://192.168.99.100:5000/
  java:
    version: oraclejdk8
  services:
    - docker
    
general:
  artifacts:
    - ~/docs
    - ~/tests
    - ~/artifacts
    - ~/reports
    
  branches:
    ignore:
      - build

checkout:
  post:
    - git config --global user.name monty-bot
    - git config --global user.email monty-bot@arm.com
    - git clone https://github.com/ARMmbed/mbed-cloud-sdk-testrunner.git tests/testrunner
    - pip install -r tests/testrunner/requirements.txt
    - python setup.py develop:
        pwd: tests/testrunner
    - python ${SCRIPTS_DIR}/sdk.py configure
    - aws s3 sync --cache-control max-age=3600 s3://artifactory-store ${PROJECT_TOP}
    - docker build -t artifactory . :
        pwd: proxy

compile:
  pre:
    - mkdir ${PROJECT_DOCS}
    - mkdir ${PROJECT_ARTIFACTS}
    - mkdir ${PROJECT_REPORTS}    

  override:
    - python ${SCRIPTS_DIR}/sdk.py license
    - python ${SCRIPTS_DIR}/sdk.py build
    - cp -r ${BUILD_DIST}/* ${PROJECT_ARTIFACTS}/
    - cp -r ${BUILD_JARS}/* ${PROJECT_ARTIFACTS}/
    - cp -r ${BUILD_DOCS}/* ${PROJECT_DOCS}/
    - cp -r ${BUILD_REPORTS}/* ${PROJECT_REPORTS}/

test:
  pre:
    - npm install -g ansi-html-stream
  override:
    - python ${SCRIPTS_DIR}/sdk.py build_test_server
    - mv artifacts.properties tests/
    - mkdir ${PROJECT_TESTS}
    - echo "<h1>${PROJECT_NAME} (build ${CIRCLE_BUILD_NUM})</h1>" > ${PROJECT_TESTS}/index.html:
    - set -o pipefail && bash run.sh 2>&1 | tee /dev/tty | ansi-html >> ${PROJECT_TESTS}/index.html:
        pwd: tests
  post:
    - docker run -d -p 5000:80 artifactory; sleep 10

deployment:
  staging:
    branch: master
    commands:
      - echo Syncing $PROJECT_NAME to S3...
      - aws s3 sync --delete --cache-control max-age=3600 ${BUILD_DOCS} s3://$PROJECT_NAME
      - echo Deploy to artifactory
      - python ${SCRIPTS_DIR}/sdk.py deploy
  release:
    branch: /[0-9]+\.[0-9]+.*/
    commands:
      - echo Tagging $PROJECT_NAME in GitHub...
      - python ${SCRIPTS_DIR}/sdk.py version | xargs git tag 
      - git push --tags
      - echo Deploy to artifactory
      - python ${SCRIPTS_DIR}/sdk.py deploy
      
      