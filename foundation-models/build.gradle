buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'org.walkmod:gradle-walkmod-plugin:0.0.+'
    }
}
plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'eclipse'
    id 'jacoco' //Code coverage
    id 'checkstyle'
    id 'pmd'
    id "com.diffplug.gradle.spotless" version "3.16.0"
}


apply plugin: 'walkmod'
dependencies {
    api project(':pelion-sdk-core')
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}


compileJava {
    // Library compatibility
    sourceCompatibility  JavaVersion.VERSION_1_7.toString()
    targetCompatibility  JavaVersion.VERSION_1_7.toString()
}

allprojects {
    buildscript {
        repositories {
            jcenter()
            mavenCentral()
            maven {
                url "https://plugins.gradle.org/m2/"
            }
        }
    }
    repositories {
        jcenter()
        mavenCentral()
    }
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
    }
}

def checkStyleConfigFile=new File("$rootDir/../config/checkstyle/checkstyle.xml").canonicalPath
def pmdConfigFile=new File("$rootDir/../config/pmd/pmd-rules.xml").canonicalPath
def eclipseConfigFile=new File("$rootDir/../config/eclipse/formatter.xml").canonicalPath

checkstyle {
    toolVersion = '7.2'
    configFile rootProject.file(checkStyleConfigFile)
    sourceSets = [sourceSets.main]
    ignoreFailures = false
    maxWarnings = 0
}
checkstyleMain {
    reports {
        xml.enabled true
        html.enabled true
    }
}
pmd {
    toolVersion = "5.0.4"
    sourceSets = [sourceSets.main]
    ignoreFailures = false
    ruleSets = []
    ruleSetFiles = files(pmdConfigFile)
}
pmdMain {
    excludes = []
    reports {
        xml.enabled false
        html.enabled true
    }
}

spotless {
    format 'misc', {
        target '**/*.gradle', '**/*.md', '**/.gitignore'
        indentWithSpaces()
        trimTrailingWhitespace()
        endWithNewline()
    }
  java {
        removeUnusedImports() // removes any unused imports
        eclipse().configFile "${eclipseConfigFile}"
        encoding 'Cp1252' // java will have Cp1252
  }
}

walkmod {
  chains = [ 'pmd' , 'override']
  verbose = true
  //properties = "configurationFile=\"${pmdConfigFile}\""
}
