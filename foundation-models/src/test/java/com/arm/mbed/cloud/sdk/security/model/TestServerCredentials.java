// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ServerCredentials.
 */
public class TestServerCredentials {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            ServerCredentials servercredentials1 = new ServerCredentials(new java.util.Date(1546622509965L),
                                                                         "a093c5af-355e-4fab-920f-f10c9d2b4ac3",
                                                                         "07f77cbe-4c3f-46b2-8a0d-b13b372d79d0",
                                                                         "8727b47d-504a-4eea-bd15-3b471634db2b");
            ServerCredentials servercredentials2 = servercredentials1.clone();
            assertNotNull(servercredentials1);
            assertNotNull(servercredentials2);
            assertNotSame(servercredentials2, servercredentials1);
            assertEquals(servercredentials2, servercredentials1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            ServerCredentials servercredentials1 = new ServerCredentials(new java.util.Date(1546622511745L),
                                                                         "9f6559fc-3bf5-4ff5-a20e-d611b0b4b605",
                                                                         "bb286e44-ef7d-4277-87cd-ffce3ad30748",
                                                                         "3cb5987d-9665-41b3-874d-47dfe2f9289e");
            ServerCredentials servercredentials2 = new ServerCredentials(new java.util.Date(1546622511745L),
                                                                         "9f6559fc-3bf5-4ff5-a20e-d611b0b4b605",
                                                                         "bb286e44-ef7d-4277-87cd-ffce3ad30748",
                                                                         "3cb5987d-9665-41b3-874d-47dfe2f9289e");
            assertNotNull(servercredentials1);
            assertNotNull(servercredentials2);
            assertNotSame(servercredentials2, servercredentials1);
            assertEquals(servercredentials2, servercredentials1);
            assertEquals(servercredentials2.hashCode(), servercredentials1.hashCode());
            int hashCode = servercredentials1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, servercredentials1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        ServerCredentials servercredentials = new ServerCredentials(new java.util.Date(1546622515041L),
                                                                    "a4362d02-4b76-40ce-b8ff-3ff4e17cd063",
                                                                    "4c24dc4f-4c54-452f-9cd8-3932cdb1182f",
                                                                    "be9e253b-35d5-4e80-8276-b3694fc4fe9a");
        assertTrue(servercredentials.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            ServerCredentials servercredentials1 = new ServerCredentials(new java.util.Date(1546622510627L),
                                                                         "2cf4eb3a-e0bd-449a-9dfa-8275489e425e",
                                                                         "90ae3840-2d5a-40bb-8eb8-77dd49c0abf1",
                                                                         "049b0123-5bd1-455d-abbf-fda69b908197");
            ServerCredentials servercredentials2 = new ServerCredentials(new java.util.Date(1546622510627L),
                                                                         "2cf4eb3a-e0bd-449a-9dfa-8275489e425e",
                                                                         "90ae3840-2d5a-40bb-8eb8-77dd49c0abf1",
                                                                         "049b0123-5bd1-455d-abbf-fda69b908197");
            ServerCredentials servercredentials3 = new ServerCredentials(new java.util.Date(1546622511053L),
                                                                         "5992f4b3-8d4e-4ade-9250-832b6f2fae1e",
                                                                         "b15b7920-cb3b-44df-995a-d34f30ec4bcf",
                                                                         "cb6eb251-2149-4a48-9e9d-4337db473aac");
            assertNotNull(servercredentials1);
            assertNotNull(servercredentials2);
            assertNotNull(servercredentials3);
            assertNotSame(servercredentials2, servercredentials1);
            assertNotSame(servercredentials3, servercredentials1);
            assertEquals(servercredentials2, servercredentials1);
            assertEquals(servercredentials2, servercredentials1);
            assertEquals(servercredentials1, servercredentials2);
            assertEquals(servercredentials1, servercredentials1);
            assertFalse(servercredentials1.equals(null));
            assertNotEquals(servercredentials3, servercredentials1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
