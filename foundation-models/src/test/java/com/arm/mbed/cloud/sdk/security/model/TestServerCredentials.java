// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ServerCredentials.
 */
public class TestServerCredentials {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            ServerCredentials servercredentials1 = new ServerCredentials(new java.util.Date(1547041498266L),
                                                                         "336a6e42-c7ca-4f43-b822-30d0833b82ee",
                                                                         "7c6747d1-044e-4110-a88f-f16ce6cb0d0b",
                                                                         "c5bc7059-9ed8-41e2-aa05-7eabfa56eb9d");
            ServerCredentials servercredentials2 = servercredentials1.clone();
            assertNotNull(servercredentials1);
            assertNotNull(servercredentials2);
            assertNotSame(servercredentials2, servercredentials1);
            assertEquals(servercredentials2, servercredentials1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            ServerCredentials servercredentials1 = new ServerCredentials(new java.util.Date(1547041497066L),
                                                                         "25666099-05ee-4668-81ec-f238f5a16e45",
                                                                         "ca1363ca-d99b-4f5d-93ef-3c92c321d5b2",
                                                                         "b1932263-05f4-43c1-8646-55b2601f3434");
            ServerCredentials servercredentials2 = new ServerCredentials(new java.util.Date(1547041497066L),
                                                                         "25666099-05ee-4668-81ec-f238f5a16e45",
                                                                         "ca1363ca-d99b-4f5d-93ef-3c92c321d5b2",
                                                                         "b1932263-05f4-43c1-8646-55b2601f3434");
            assertNotNull(servercredentials1);
            assertNotNull(servercredentials2);
            assertNotSame(servercredentials2, servercredentials1);
            assertEquals(servercredentials2, servercredentials1);
            assertEquals(servercredentials2.hashCode(), servercredentials1.hashCode());
            int hashCode = servercredentials1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, servercredentials1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        ServerCredentials servercredentials = new ServerCredentials(new java.util.Date(1547041497897L),
                                                                    "fc83c8eb-2918-4b94-b337-c4b54c5b66f1",
                                                                    "f393b8ad-a2e7-45a1-88db-142de4ca441e",
                                                                    "f11d8b21-db6f-43d0-915c-dc6ce51b8706");
        assertTrue(servercredentials.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            ServerCredentials servercredentials1 = new ServerCredentials(new java.util.Date(1547041498239L),
                                                                         "2748d8cb-1f13-4f13-8740-89c4807965b2",
                                                                         "a4fe7e67-de38-426f-a441-dcb3da96c1ea",
                                                                         "b114cc20-40bc-4888-957b-c12bf15f6f35");
            ServerCredentials servercredentials2 = new ServerCredentials(new java.util.Date(1547041498239L),
                                                                         "2748d8cb-1f13-4f13-8740-89c4807965b2",
                                                                         "a4fe7e67-de38-426f-a441-dcb3da96c1ea",
                                                                         "b114cc20-40bc-4888-957b-c12bf15f6f35");
            ServerCredentials servercredentials3 = new ServerCredentials(new java.util.Date(1547041494144L),
                                                                         "15dd13cf-29b7-4b8f-a145-61af9d006df1",
                                                                         "0939439b-c237-46b6-973e-5ea55c5cf776",
                                                                         "dbc8504e-b9d3-4b6b-83d5-e5febe3914f7");
            assertNotNull(servercredentials1);
            assertNotNull(servercredentials2);
            assertNotNull(servercredentials3);
            assertNotSame(servercredentials2, servercredentials1);
            assertNotSame(servercredentials3, servercredentials1);
            assertEquals(servercredentials2, servercredentials1);
            assertEquals(servercredentials2, servercredentials1);
            assertEquals(servercredentials1, servercredentials2);
            assertEquals(servercredentials1, servercredentials1);
            assertFalse(servercredentials1.equals(null));
            assertNotEquals(servercredentials3, servercredentials1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
