// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceGroup.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceGroup {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1559752148522L), null,
                                                       "62061213-903e-4fb6-a8f8-e5b33c9df638", 20,
                                                       "e5b3f996-8570-4a79-8d51-b510af6ceecc",
                                                       "0dcfad93-06c5-4aa6-8379-2291368d49d4",
                                                       new Date(1559752144659L));
            DeviceGroup devicegroup2 = devicegroup1.clone();
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotSame(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1559752153043L), null,
                                                       "085d4a5c-398b-489e-9b90-26121920973c", 10,
                                                       "0f98ebbd-80cd-490d-b929-bedb0a40c1d4",
                                                       "1359b23f-99db-4310-86d1-ab0bb4cc6533",
                                                       new Date(1559752149280L));
            DeviceGroup devicegroup2 = new DeviceGroup(new Date(1559752153043L), null,
                                                       "085d4a5c-398b-489e-9b90-26121920973c", 10,
                                                       "0f98ebbd-80cd-490d-b929-bedb0a40c1d4",
                                                       "1359b23f-99db-4310-86d1-ab0bb4cc6533",
                                                       new Date(1559752149280L));
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotSame(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup2.hashCode(), devicegroup1.hashCode());
            int hashCode = devicegroup1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, devicegroup1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceGroup devicegroup = new DeviceGroup(new Date(1559752149045L), null,
                                                  "5f47468c-934d-4e05-a750-96a6f1dd37c9", 10,
                                                  "35e60474-46f8-4fa4-ada1-9d66fc030945",
                                                  "cf57c921-274a-4f35-8e38-bd0acaffdf01", new Date(1559752147378L));
        assertTrue(devicegroup.isValid());
        DeviceGroup devicegroupInvalid = new DeviceGroup(new Date(1559752143991L), null,
                                                         "91fc5973-089e-47ac-a25e-03e9de0e69cd00167a21-9516-4ffa-865f-5c674e3a9c94b156354a-0ee9-4e06-8524-4f336d42f93f39360bb0-1ec3-41b8-a126-1f8bc2a3cf5d46ccf2fb-7b0b-4ea2-83a0-29fb732866670f9dd1b2-f242-491e-814b-6e7663c9565564a23f59-3c69-4140-a88e-d788ae7ae3023e4577d3-ed81-4add-9b60-3ae2355dbada0383d652-0946-4a94-9f46-fa3a2d322338462041e6-fc6d-46cc-8a09-1dc22f0aaaaa35a88414-e58f-4e75-9551-9dd5486df441baa8a932-073c-4920-8595-a0f4e9b31928caf8e3c1-0098-4706-a887-31b8a95c2264401d31af-6881-46d6-ba20-e0276b44bb6378720108-c328-45b3-a88a-32d32878b197702a9370-7e63-40eb-9bdc-f595ea4a142227f787a0-c6fc-4111-9c2a-360c255a6fcd17d5010e-bffd-4460-87d9-2c53fd7e02a741d5e4b4-17a7-446a-a723-01ad803ad63786faf84f-a159-4174-9324-a9ea8d5dd0cdf3f91588-bdd3-4052-a329-b3e54ce0277a8a78e867-b107-4ad1-bf87-265582e9d0ef5eb09803-feb7-49a9-bf6f-e37489d870732ea6894d-0877-47f1-b169-6092016f1b17681212b5-5d70-4c63-88ee-c6a10a731822b4fe9a5a-0bf5-44e3-abaf-f07768eaf96c380f8c25-2dfe-4be8-a305-34fad13a4aebd247574d-e164-48e2-a5f1-46e58f27096b3b033640-92bc-4fdc-903d-3ddd5eae11a219599fd9-dac7-4b9c-b96e-17a4997fd97829024f13-ef22-4a25-bb28-c2293710f503bdff43a1-9d20-47e5-8adb-196328b657d0060ee162-2349-434b-9d8d-8e1aafec573f8af4619a-fb16-45b8-b307-61bb2aa69572e37df762-aaf2-4a21-8418-991d1b5b3e1d45a02b8e-8a06-4500-a3cf-859e76dce053c0f0251e-fcda-4a73-8d0a-b5bb90c19ecdccfb3899-5b8f-4c38-9fd3-c0669c36a14cf3febd43-aafd-4506-935d-9062745eb199bdb4b52f-ae6d-4a92-9d3a-637ab909cb5b2777865a-0c53-497f-a7a0-9eb8f30b28c8a7dd5e24-7cb0-429a-9479-27efce8714fe6aba9b0e-1815-4e00-a746-2b22fc241d7c2f35b171-d2f2-4dba-aa1c-45cae3d0b59fcc282f1f-8f30-4200-b603-9f77b0dc64bfdc4e5b40-d35f-4eac-bc79-00ab648525e456965509-eae4-46c3-983a-a8d7f63a24c5385b93a1-11f0-4472-b1b5-b7e0bd89719b43e3aa12-fa06-4aae-ab7e-cdd53a3cb12958b0e9e9-9614-4fb8-a477-2f152df261a66bcb42f1-2b0f-4fe4-80bd-096e5ef6a60ecd743d7e-9f59-4b06-b27b-2d02573409bc4bb05b92-f225-41b8-9719-ff2c0b040f18dd1c43f8-8b94-4010-955c-9d5886293d240dcf1610-8a19-4c60-8017-57d132a59f34438380ae-9366-4367-9465-e68975abe674",
                                                         72, "3534ac95-6342-4a8e-a40d-97a6c7f3f758",
                                                         "42152f5e-40e6-44d7-a885-ba07a7afe464e6ad22cd-f4ca-4cc5-8709-198ab35596df93c242b3-23a3-4bbb-b929-6d4a10f047c11c374735-5086-4a22-9156-655d85a9b44e",
                                                         new Date(1559752152715L));
        assertFalse(devicegroupInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1559752148999L), null,
                                                       "1201d06e-17a5-404f-9a5b-ae11424d89e9", 38,
                                                       "e8ba2d9e-0aec-4abb-aece-7fe0d9041766",
                                                       "c301b4db-8d10-4279-8e55-bb6a62f9bc4c",
                                                       new Date(1559752147198L));
            DeviceGroup devicegroup2 = new DeviceGroup(new Date(1559752148999L), null,
                                                       "1201d06e-17a5-404f-9a5b-ae11424d89e9", 38,
                                                       "e8ba2d9e-0aec-4abb-aece-7fe0d9041766",
                                                       "c301b4db-8d10-4279-8e55-bb6a62f9bc4c",
                                                       new Date(1559752147198L));
            DeviceGroup devicegroup3 = new DeviceGroup(new Date(1559752146908L), null,
                                                       "d7bb5ebe-b4bf-45cb-b115-9c52166b1b06", -56,
                                                       "27a1c478-fb61-42d2-84d7-50207505789b",
                                                       "6ef970df-9555-44c8-a51a-dd9886f605fe",
                                                       new Date(1559752146282L));
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotNull(devicegroup3);
            assertNotSame(devicegroup2, devicegroup1);
            assertNotSame(devicegroup3, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup1, devicegroup2);
            assertEquals(devicegroup1, devicegroup1);
            assertFalse(devicegroup1.equals(null));
            assertNotEquals(devicegroup3, devicegroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
