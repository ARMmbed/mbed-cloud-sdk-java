// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceGroup.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceGroup {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1559313347930L), null,
                                                       "093e6f88-c833-4bee-a77e-544457137161", 19,
                                                       "a3e73841-5625-473d-b2c4-3e0c9ea0a6ce",
                                                       "8e652619-490c-4b5c-bb25-f7d9b5f4b1f5",
                                                       new Date(1559313345613L));
            DeviceGroup devicegroup2 = devicegroup1.clone();
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotSame(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1559313340971L), null,
                                                       "65a446d5-a2d6-464b-a829-3b7739bb67ce", 57,
                                                       "b43d662a-3644-4466-886a-ca2fb980d1cb",
                                                       "89f900a8-7043-4576-8365-6e52d09a97df",
                                                       new Date(1559313347507L));
            DeviceGroup devicegroup2 = new DeviceGroup(new Date(1559313340971L), null,
                                                       "65a446d5-a2d6-464b-a829-3b7739bb67ce", 57,
                                                       "b43d662a-3644-4466-886a-ca2fb980d1cb",
                                                       "89f900a8-7043-4576-8365-6e52d09a97df",
                                                       new Date(1559313347507L));
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotSame(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup2.hashCode(), devicegroup1.hashCode());
            int hashCode = devicegroup1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, devicegroup1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceGroup devicegroup = new DeviceGroup(new Date(1559313345055L), null,
                                                  "c7d4c9ce-77e0-4414-8505-f35dcc22b110", 91,
                                                  "a01f9e31-213c-4960-9656-eba010e7647f",
                                                  "dad634c8-148b-4225-ac36-a980c7fd2f88", new Date(1559313344280L));
        assertTrue(devicegroup.isValid());
        DeviceGroup devicegroupInvalid = new DeviceGroup(new Date(1559313346956L), null,
                                                         "d86f4013-cdca-4241-a15e-72bbb8b255a952f8aa6e-cf82-44e2-947b-4c4aff45d352ac1e6dc2-f93d-4b88-ab8e-3732c92ba12896ee270f-8731-45cd-bdd1-16da451679904c089eda-ab10-4b56-be60-b92671ff033002dd618f-af54-4b64-9c8b-9e7b1eb904b10ec5b565-95ea-4804-9ad2-ca14364f09625363359d-7d59-4293-8002-bc9e8380173b25e4e30f-ccdd-42dc-aada-b1a0183afdf2b9c7c6a0-e89d-4701-95a0-a3082d3e63d258f6ceeb-2f01-4fad-997c-28490ca353afa3a90d86-8685-45a6-b881-3886d49b2ff928519ff9-be51-4879-a593-89a589df390d8a7991d3-1bae-44c6-8a0d-0095ca28251a9ac37cdd-942d-45dd-8653-bab5ae67b93d7c55f30f-66a2-45d8-a6dc-b001cf9037f96bf13c85-cc0e-413e-8b57-bcf49c8a9692f48e2d60-ca9c-4188-abb0-9b0de62a66601869ebd6-6db6-4972-a78d-8c5a4821e4a2b5b68a25-7731-4224-bf60-d2053de6d142c0306aed-05c6-4e92-a877-d12cb8dbd49be6786b95-e754-46bc-819e-8a295548b35f73fcf07a-f57f-443e-ba34-498cab3c86e919225420-1c0d-4ecc-9402-2a3d3d13a85f8d0689a0-bcd2-4ffa-bf2a-0f9d17f4ace388e67880-4b2d-41be-90af-7be5c1228963ed12086c-b38f-43c3-afb1-97c9aec36844b33fef56-a85e-45f6-b5ea-48edcaac33b7488f0f94-f60b-4682-add9-c1636c41faa950af6197-89f6-4fd9-a0cd-6c98434c0bd713d640ba-88f5-40dc-bebb-11b2bd0fcd3eb289a5f9-9908-4df1-9cd3-4e063b85d44bb8208cb2-83e2-4250-9ebd-a26abd5a4f83a8b30035-d11c-4f4b-a044-e20f65cca503fdee3011-abdb-4cfc-8ce2-69e07e3bae6a8c76b3df-f357-4f13-9f06-1047efa01ebedcc4db74-6ed3-4e06-8de9-f59208fca19060097f04-a904-4ec5-afd0-773f103f647b7741cf37-3612-4dc0-85c8-63f3a7dae56d44be1b7b-91fb-4b21-8495-e5310c5f31e11eff6c9b-10ad-4953-8b91-6701c0a4bc20124d6887-d7ba-4538-bf87-2ba0573350667b0ab590-50ac-4619-870a-bc3186acb817a82cdfd5-c323-47fd-8dbf-7441c7918bb3a96ab3f5-1621-403f-ad2f-63cef5ea8764c85c3ef8-6999-4f9f-a816-2c286a184a7a1fa76070-2376-4fb2-816a-f57bec7e6c0184a2bab5-7116-4c6b-8bb8-ca98d7f416a605813090-8d12-42e6-92b4-6272a186b2bd9987f990-9b85-487d-94e9-adb4caec4b27998e9cd2-e00a-47ea-82ef-06127655a8f9024aaaf3-17ea-464d-ba77-000f8bfff68cb72ce7e6-bfbf-43f4-ab6a-1b76bdcaf7fbd2c7963b-4529-4f37-921e-889c760314ee458698e0-8103-47c8-9966-1b9345b66a2534e90dec-a809-4901-bf4d-7368964e35b7",
                                                         77, "430292b1-0330-4ae8-8429-b476e1c0f1c9",
                                                         "6ce33e7f-94da-4cb4-b19c-3ca7d9a6617fd85bd5a6-a085-49f8-a196-b79cea307142e544e0f8-93af-43bd-b5a6-ee88865729cd2f57ab48-197e-4833-bf67-42d33c942574",
                                                         new Date(1559313346319L));
        assertFalse(devicegroupInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1559313341548L), null,
                                                       "ead715c0-86c6-4f3c-8694-f801bbea215f", 62,
                                                       "6d56c402-af15-4c53-8898-9e321be9a349",
                                                       "1444e074-5d1d-4756-92b6-d40cb3215010",
                                                       new Date(1559313341776L));
            DeviceGroup devicegroup2 = new DeviceGroup(new Date(1559313341548L), null,
                                                       "ead715c0-86c6-4f3c-8694-f801bbea215f", 62,
                                                       "6d56c402-af15-4c53-8898-9e321be9a349",
                                                       "1444e074-5d1d-4756-92b6-d40cb3215010",
                                                       new Date(1559313341776L));
            DeviceGroup devicegroup3 = new DeviceGroup(new Date(1559313339761L), null,
                                                       "5fd68bda-478e-4647-99a0-2ddba8951b2c", 3,
                                                       "1ac42a35-d37d-4dfc-a6bf-13effa6d3a87",
                                                       "798fa6bf-fa06-4384-961c-a3a1cbbbba9f",
                                                       new Date(1559313340180L));
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotNull(devicegroup3);
            assertNotSame(devicegroup2, devicegroup1);
            assertNotSame(devicegroup3, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup1, devicegroup2);
            assertEquals(devicegroup1, devicegroup1);
            assertFalse(devicegroup1.equals(null));
            assertNotEquals(devicegroup3, devicegroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
