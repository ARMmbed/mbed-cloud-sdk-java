// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceGroup.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceGroup {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1559662776546L), null,
                                                       "c0f727a3-40d6-4422-8d54-ff4f563d4697", 34,
                                                       "650656d8-7f01-4987-9704-42d961c39c40",
                                                       "339f1a50-810f-47fc-afc6-823172e312c7",
                                                       new Date(1559662777251L));
            DeviceGroup devicegroup2 = devicegroup1.clone();
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotSame(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1559662777172L), null,
                                                       "24d0a947-cb0b-48d3-9ef2-26264ba32a44", 74,
                                                       "776aa520-64f7-44e9-bc3f-61cdf170571e",
                                                       "82f649e4-49fb-4075-b200-673ca98e6eb0",
                                                       new Date(1559662782370L));
            DeviceGroup devicegroup2 = new DeviceGroup(new Date(1559662777172L), null,
                                                       "24d0a947-cb0b-48d3-9ef2-26264ba32a44", 74,
                                                       "776aa520-64f7-44e9-bc3f-61cdf170571e",
                                                       "82f649e4-49fb-4075-b200-673ca98e6eb0",
                                                       new Date(1559662782370L));
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotSame(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup2.hashCode(), devicegroup1.hashCode());
            int hashCode = devicegroup1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, devicegroup1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceGroup devicegroup = new DeviceGroup(new Date(1559662777948L), null,
                                                  "11a54a64-7c5d-42fa-b88b-2419fee661be", -33,
                                                  "d4405d28-ee3b-4a01-bfeb-3d25517235c6",
                                                  "18ad2995-4090-4888-b978-d1f470891106", new Date(1559662784513L));
        assertTrue(devicegroup.isValid());
        DeviceGroup devicegroupInvalid = new DeviceGroup(new Date(1559662780958L), null,
                                                         "eece1a72-c397-4504-a17d-f02937326c2f5cc8f612-1d37-46f0-a4a1-d200f07b4bf8a132705c-1f37-4fd5-83db-01a2be6d6b1c5c4ea619-667b-4327-8283-95bd3d7345d3ad99a7b0-f521-47a2-bacd-e0093ccc746ac2126eae-7412-48c9-b6a9-c42b5f9826e6d76c1a5b-bad8-43f4-b86a-8f8b97d46cb3e9508833-3cc1-4ffd-84f5-8e0dd1c169484e9cdf69-1a9a-4dd1-a4d7-9c1dd9618e4016d86ea9-1d34-4cab-8064-6c4b8b1a306b684686db-3f32-49a6-8fec-05d3542cb08de2aa89f5-1c3e-4647-b66b-1994d7bd768cb5d1fe61-be8d-43af-a464-9ce0a4cb8b081b06d6eb-4088-4a6e-9c0a-be7fe3f2ea09345b6981-5d35-432b-af28-0656bf6910eda16c82ce-255f-40b3-a061-b034c08a245152957635-f0ef-45f2-b587-22a52efc7fc79dd8cf63-2fa9-4051-8f82-b855d8ed7ea019b0755c-4457-4e29-b782-793f7fc62835d82e382a-5329-4091-b44e-7b2cd8f328c7a0f2c011-f86d-4b00-8d74-9f7d9d44fc240f6377af-a280-484d-8c88-8535c2e77131085f7142-25e8-4025-a726-5b85e5a72638bc376b27-83b0-4eeb-9662-40d614087057bea9d4af-2a93-4d79-81b3-529bc5385fa55b99b9a9-8a7b-46ea-bdd1-71e5adfaba3d0165e245-4745-428a-a28f-f66da79f8ffbe7fe181e-b41f-4aff-8e63-a5e6381a8afeda9c3624-d733-4703-9ec6-b168c9db97bd013fbd71-a174-4997-8fe3-1867fa6808afef54c1b7-5a8a-436d-8938-c4ac9e083c839bbbe350-ceac-42b2-bbb3-d4294eb69caea1004fbd-e549-4e70-af6d-e264983513ac8863656a-ee54-4018-899b-4e4e6e3add0767d35609-bf4f-4bf6-b291-dc4acff2aa09af2917cd-06ef-458a-9960-43b1584d92860c541d61-87a7-44f8-af39-07f5c9f1dffc11059fa1-ab53-43d9-a178-0bdd28e9f7a49fa35a70-eed0-4d75-af73-a1ee5d3e1844d9eec236-5b47-41d2-9d60-cf88837ff191fb015b7d-81a2-4f45-a00c-68061634c5aefae62875-6359-4c07-9ed5-32aca5ca8f8f5c9fdf42-b932-4338-b5f3-1a8133206ea369e56c30-53b1-47b6-9911-dcc3408276c6e3289863-59ed-4c37-b3af-5af654adff534ac8817f-3aa4-4376-8390-7eb9c6c22f06cdd1ae3a-be95-4f58-8d81-18bca4add55b0034e416-e740-4743-a864-b006f916761567b89059-0db2-4eb2-b49c-75cd0776e44fd6513e79-060b-44eb-9657-491f60c80c010fe95f3e-59a3-4b9b-9a65-c088ebcae6985e171285-7833-4dca-8548-50c62c0d3da5e068db25-c0f0-4487-aa95-ec2043b985205fac40ff-04c7-4bed-948a-c4ad3b4c67f9f5dc8bd0-f46b-4420-9d6d-9200f7aeefe420f213b9-db71-4f4d-9b3d-3d68b4113c02",
                                                         0, "411aa028-1625-4dfe-8fd0-fabc806f9161",
                                                         "d37224cb-a812-41c7-a11a-fcfd1e016d039f7a5878-182a-489f-b824-6cf4ef8cc10d62056f23-8cff-4e00-b58d-f2562bd484514c366632-b851-4d70-8575-a56366c7d8ff",
                                                         new Date(1559662785698L));
        assertFalse(devicegroupInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1559662781556L), null,
                                                       "d0a9f3d1-9a02-4875-a573-24dd5a5af87a", 85,
                                                       "6721f32e-3765-4e88-ab86-2ee724b15387",
                                                       "8b0c6469-286e-46fb-9d9b-6cb9e17e0d17",
                                                       new Date(1559662783227L));
            DeviceGroup devicegroup2 = new DeviceGroup(new Date(1559662781556L), null,
                                                       "d0a9f3d1-9a02-4875-a573-24dd5a5af87a", 85,
                                                       "6721f32e-3765-4e88-ab86-2ee724b15387",
                                                       "8b0c6469-286e-46fb-9d9b-6cb9e17e0d17",
                                                       new Date(1559662783227L));
            DeviceGroup devicegroup3 = new DeviceGroup(new Date(1559662779450L), null,
                                                       "7572e7ed-d797-4287-8b50-a213d9a1dfdc", -89,
                                                       "6280f66a-2847-4e67-8a91-5f0469ae5eb0",
                                                       "705da470-27ae-464d-b0b5-60f45194db13",
                                                       new Date(1559662778651L));
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotNull(devicegroup3);
            assertNotSame(devicegroup2, devicegroup1);
            assertNotSame(devicegroup3, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup1, devicegroup2);
            assertEquals(devicegroup1, devicegroup1);
            assertFalse(devicegroup1.equals(null));
            assertNotEquals(devicegroup3, devicegroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
