// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.branding.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantDarkThemeColor.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantDarkThemeColor {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantDarkThemeColor subtenantdarkthemecolor1 = new SubtenantDarkThemeColor("af1f4779-3d65-49b7-a6ab-a2ab72ada756",
                                                                                           SubtenantDarkThemeColorReference.getDefault(),
                                                                                           new Date(1559745299715L));
            SubtenantDarkThemeColor subtenantdarkthemecolor2 = subtenantdarkthemecolor1.clone();
            assertNotNull(subtenantdarkthemecolor1);
            assertNotNull(subtenantdarkthemecolor2);
            assertNotSame(subtenantdarkthemecolor2, subtenantdarkthemecolor1);
            assertEquals(subtenantdarkthemecolor2, subtenantdarkthemecolor1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantDarkThemeColor subtenantdarkthemecolor1 = new SubtenantDarkThemeColor("5eaf70d0-8186-4b27-be35-b1bdb0abf109",
                                                                                           SubtenantDarkThemeColorReference.getDefault(),
                                                                                           new Date(1559745301612L));
            SubtenantDarkThemeColor subtenantdarkthemecolor2 = new SubtenantDarkThemeColor("5eaf70d0-8186-4b27-be35-b1bdb0abf109",
                                                                                           SubtenantDarkThemeColorReference.getDefault(),
                                                                                           new Date(1559745301612L));
            assertNotNull(subtenantdarkthemecolor1);
            assertNotNull(subtenantdarkthemecolor2);
            assertNotSame(subtenantdarkthemecolor2, subtenantdarkthemecolor1);
            assertEquals(subtenantdarkthemecolor2, subtenantdarkthemecolor1);
            assertEquals(subtenantdarkthemecolor2.hashCode(), subtenantdarkthemecolor1.hashCode());
            int hashCode = subtenantdarkthemecolor1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantdarkthemecolor1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantDarkThemeColor subtenantdarkthemecolor = new SubtenantDarkThemeColor("0d30acde-ba0f-4818-b988-6f0893eaee07",
                                                                                      SubtenantDarkThemeColorReference.getDefault(),
                                                                                      new Date(1559745297385L));
        assertTrue(subtenantdarkthemecolor.isValid());
        SubtenantDarkThemeColor subtenantdarkthemecolorInvalid = new SubtenantDarkThemeColor("60aaf6e3-0284-4a32-8826-2e91abccf506",
                                                                                             SubtenantDarkThemeColorReference.getDefault(),
                                                                                             new Date(1559745295285L));
        assertFalse(subtenantdarkthemecolorInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantDarkThemeColor subtenantdarkthemecolor1 = new SubtenantDarkThemeColor("1ee950d6-d27d-442d-a01e-04ebd65ad5f4",
                                                                                           SubtenantDarkThemeColorReference.getDefault(),
                                                                                           new Date(1559745302985L));
            SubtenantDarkThemeColor subtenantdarkthemecolor2 = new SubtenantDarkThemeColor("1ee950d6-d27d-442d-a01e-04ebd65ad5f4",
                                                                                           SubtenantDarkThemeColorReference.getDefault(),
                                                                                           new Date(1559745302985L));
            SubtenantDarkThemeColor subtenantdarkthemecolor3 = new SubtenantDarkThemeColor("cff21cc7-61fd-4a97-bc44-d18e2f5e10b0",
                                                                                           SubtenantDarkThemeColorReference.getDefault(),
                                                                                           new Date(1559745297051L));
            assertNotNull(subtenantdarkthemecolor1);
            assertNotNull(subtenantdarkthemecolor2);
            assertNotNull(subtenantdarkthemecolor3);
            assertNotSame(subtenantdarkthemecolor2, subtenantdarkthemecolor1);
            assertNotSame(subtenantdarkthemecolor3, subtenantdarkthemecolor1);
            assertEquals(subtenantdarkthemecolor2, subtenantdarkthemecolor1);
            assertEquals(subtenantdarkthemecolor2, subtenantdarkthemecolor1);
            assertEquals(subtenantdarkthemecolor1, subtenantdarkthemecolor2);
            assertEquals(subtenantdarkthemecolor1, subtenantdarkthemecolor1);
            assertFalse(subtenantdarkthemecolor1.equals(null));
            assertNotEquals(subtenantdarkthemecolor3, subtenantdarkthemecolor1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
