// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.branding.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantDarkThemeColor.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantDarkThemeColor {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantDarkThemeColor subtenantdarkthemecolor1 = new SubtenantDarkThemeColor("6972a4ac-dabf-46f1-95da-4182b99a18ba",
                                                                                           SubtenantDarkThemeColorReference.getDefault(),
                                                                                           new Date(1559746953158L));
            SubtenantDarkThemeColor subtenantdarkthemecolor2 = subtenantdarkthemecolor1.clone();
            assertNotNull(subtenantdarkthemecolor1);
            assertNotNull(subtenantdarkthemecolor2);
            assertNotSame(subtenantdarkthemecolor2, subtenantdarkthemecolor1);
            assertEquals(subtenantdarkthemecolor2, subtenantdarkthemecolor1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantDarkThemeColor subtenantdarkthemecolor1 = new SubtenantDarkThemeColor("8f671761-4077-47cf-8407-42704ea03eb4",
                                                                                           SubtenantDarkThemeColorReference.getDefault(),
                                                                                           new Date(1559746951049L));
            SubtenantDarkThemeColor subtenantdarkthemecolor2 = new SubtenantDarkThemeColor("8f671761-4077-47cf-8407-42704ea03eb4",
                                                                                           SubtenantDarkThemeColorReference.getDefault(),
                                                                                           new Date(1559746951049L));
            assertNotNull(subtenantdarkthemecolor1);
            assertNotNull(subtenantdarkthemecolor2);
            assertNotSame(subtenantdarkthemecolor2, subtenantdarkthemecolor1);
            assertEquals(subtenantdarkthemecolor2, subtenantdarkthemecolor1);
            assertEquals(subtenantdarkthemecolor2.hashCode(), subtenantdarkthemecolor1.hashCode());
            int hashCode = subtenantdarkthemecolor1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantdarkthemecolor1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantDarkThemeColor subtenantdarkthemecolor = new SubtenantDarkThemeColor("9a4aa371-0d5a-434a-ad1b-08ab6b12fd81",
                                                                                      SubtenantDarkThemeColorReference.getDefault(),
                                                                                      new Date(1559746949307L));
        assertTrue(subtenantdarkthemecolor.isValid());
        SubtenantDarkThemeColor subtenantdarkthemecolorInvalid = new SubtenantDarkThemeColor("b589ec57-f7dc-464e-8c04-a95710a66f92",
                                                                                             SubtenantDarkThemeColorReference.getDefault(),
                                                                                             new Date(1559746951104L));
        assertFalse(subtenantdarkthemecolorInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantDarkThemeColor subtenantdarkthemecolor1 = new SubtenantDarkThemeColor("fcbccfd8-9c27-4dbd-91d2-b8be7dd8ce23",
                                                                                           SubtenantDarkThemeColorReference.getDefault(),
                                                                                           new Date(1559746949517L));
            SubtenantDarkThemeColor subtenantdarkthemecolor2 = new SubtenantDarkThemeColor("fcbccfd8-9c27-4dbd-91d2-b8be7dd8ce23",
                                                                                           SubtenantDarkThemeColorReference.getDefault(),
                                                                                           new Date(1559746949517L));
            SubtenantDarkThemeColor subtenantdarkthemecolor3 = new SubtenantDarkThemeColor("29979c0e-7869-4db8-bbd7-745ca3b0f92a",
                                                                                           SubtenantDarkThemeColorReference.getDefault(),
                                                                                           new Date(1559746954888L));
            assertNotNull(subtenantdarkthemecolor1);
            assertNotNull(subtenantdarkthemecolor2);
            assertNotNull(subtenantdarkthemecolor3);
            assertNotSame(subtenantdarkthemecolor2, subtenantdarkthemecolor1);
            assertNotSame(subtenantdarkthemecolor3, subtenantdarkthemecolor1);
            assertEquals(subtenantdarkthemecolor2, subtenantdarkthemecolor1);
            assertEquals(subtenantdarkthemecolor2, subtenantdarkthemecolor1);
            assertEquals(subtenantdarkthemecolor1, subtenantdarkthemecolor2);
            assertEquals(subtenantdarkthemecolor1, subtenantdarkthemecolor1);
            assertFalse(subtenantdarkthemecolor1.equals(null));
            assertNotEquals(subtenantdarkthemecolor3, subtenantdarkthemecolor1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
