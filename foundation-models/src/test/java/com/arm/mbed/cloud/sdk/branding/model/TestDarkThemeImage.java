// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.branding.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DarkThemeImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDarkThemeImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DarkThemeImage darkthemeimage1 = new DarkThemeImage(DarkThemeImageReference.getDefault(),
                                                                "56599571-11b6-4640-bafa-4980fe824c8b",
                                                                new Date(1559662782733L));
            DarkThemeImage darkthemeimage2 = darkthemeimage1.clone();
            assertNotNull(darkthemeimage1);
            assertNotNull(darkthemeimage2);
            assertNotSame(darkthemeimage2, darkthemeimage1);
            assertEquals(darkthemeimage2, darkthemeimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DarkThemeImage darkthemeimage1 = new DarkThemeImage(DarkThemeImageReference.getDefault(),
                                                                "5761cdd6-e915-41e9-851e-38f1fb9272c6",
                                                                new Date(1559662778654L));
            DarkThemeImage darkthemeimage2 = new DarkThemeImage(DarkThemeImageReference.getDefault(),
                                                                "5761cdd6-e915-41e9-851e-38f1fb9272c6",
                                                                new Date(1559662778654L));
            assertNotNull(darkthemeimage1);
            assertNotNull(darkthemeimage2);
            assertNotSame(darkthemeimage2, darkthemeimage1);
            assertEquals(darkthemeimage2, darkthemeimage1);
            assertEquals(darkthemeimage2.hashCode(), darkthemeimage1.hashCode());
            int hashCode = darkthemeimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, darkthemeimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DarkThemeImage darkthemeimage = new DarkThemeImage(DarkThemeImageReference.getDefault(),
                                                           "8b77f826-5684-4189-95f0-a654b6cbedb6",
                                                           new Date(1559662779780L));
        assertTrue(darkthemeimage.isValid());
        DarkThemeImage darkthemeimageInvalid = new DarkThemeImage(DarkThemeImageReference.getDefault(),
                                                                  "3d42bd98-ea6d-4347-9517-2d9b6bb5e2e7",
                                                                  new Date(1559662785864L));
        assertFalse(darkthemeimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DarkThemeImage darkthemeimage1 = new DarkThemeImage(DarkThemeImageReference.getDefault(),
                                                                "8dba3a1c-bc7e-4e14-a2d0-029be22f4d32",
                                                                new Date(1559662783744L));
            DarkThemeImage darkthemeimage2 = new DarkThemeImage(DarkThemeImageReference.getDefault(),
                                                                "8dba3a1c-bc7e-4e14-a2d0-029be22f4d32",
                                                                new Date(1559662783744L));
            DarkThemeImage darkthemeimage3 = new DarkThemeImage(DarkThemeImageReference.getDefault(),
                                                                "d8ba46bc-fc06-498f-b860-f66136315dd0",
                                                                new Date(1559662777423L));
            assertNotNull(darkthemeimage1);
            assertNotNull(darkthemeimage2);
            assertNotNull(darkthemeimage3);
            assertNotSame(darkthemeimage2, darkthemeimage1);
            assertNotSame(darkthemeimage3, darkthemeimage1);
            assertEquals(darkthemeimage2, darkthemeimage1);
            assertEquals(darkthemeimage2, darkthemeimage1);
            assertEquals(darkthemeimage1, darkthemeimage2);
            assertEquals(darkthemeimage1, darkthemeimage1);
            assertFalse(darkthemeimage1.equals(null));
            assertNotEquals(darkthemeimage3, darkthemeimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
