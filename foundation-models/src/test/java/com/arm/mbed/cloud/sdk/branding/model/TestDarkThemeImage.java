// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.branding.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DarkThemeImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDarkThemeImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DarkThemeImage darkthemeimage1 = new DarkThemeImage(DarkThemeImageReference.getDefault(),
                                                                "5b0db5cf-ea85-492d-8c8f-5be893ce5ceb",
                                                                new Date(1559560669082L));
            DarkThemeImage darkthemeimage2 = darkthemeimage1.clone();
            assertNotNull(darkthemeimage1);
            assertNotNull(darkthemeimage2);
            assertNotSame(darkthemeimage2, darkthemeimage1);
            assertEquals(darkthemeimage2, darkthemeimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DarkThemeImage darkthemeimage1 = new DarkThemeImage(DarkThemeImageReference.getDefault(),
                                                                "719b9e59-bd7c-43c5-831e-8be1ac308c8e",
                                                                new Date(1559560672267L));
            DarkThemeImage darkthemeimage2 = new DarkThemeImage(DarkThemeImageReference.getDefault(),
                                                                "719b9e59-bd7c-43c5-831e-8be1ac308c8e",
                                                                new Date(1559560672267L));
            assertNotNull(darkthemeimage1);
            assertNotNull(darkthemeimage2);
            assertNotSame(darkthemeimage2, darkthemeimage1);
            assertEquals(darkthemeimage2, darkthemeimage1);
            assertEquals(darkthemeimage2.hashCode(), darkthemeimage1.hashCode());
            int hashCode = darkthemeimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, darkthemeimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DarkThemeImage darkthemeimage = new DarkThemeImage(DarkThemeImageReference.getDefault(),
                                                           "5469405d-48a4-4a3e-b1ba-6f7202c6b6aa",
                                                           new Date(1559560668263L));
        assertTrue(darkthemeimage.isValid());
        DarkThemeImage darkthemeimageInvalid = new DarkThemeImage(DarkThemeImageReference.getDefault(),
                                                                  "5afa6ec1-1721-47e9-805c-5f27c871b5b9",
                                                                  new Date(1559560669337L));
        assertFalse(darkthemeimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DarkThemeImage darkthemeimage1 = new DarkThemeImage(DarkThemeImageReference.getDefault(),
                                                                "19561177-b156-4567-83b5-33fd4c558702",
                                                                new Date(1559560667047L));
            DarkThemeImage darkthemeimage2 = new DarkThemeImage(DarkThemeImageReference.getDefault(),
                                                                "19561177-b156-4567-83b5-33fd4c558702",
                                                                new Date(1559560667047L));
            DarkThemeImage darkthemeimage3 = new DarkThemeImage(DarkThemeImageReference.getDefault(),
                                                                "41af63c7-f0a1-44c6-9a31-c6c767448800",
                                                                new Date(1559560666668L));
            assertNotNull(darkthemeimage1);
            assertNotNull(darkthemeimage2);
            assertNotNull(darkthemeimage3);
            assertNotSame(darkthemeimage2, darkthemeimage1);
            assertNotSame(darkthemeimage3, darkthemeimage1);
            assertEquals(darkthemeimage2, darkthemeimage1);
            assertEquals(darkthemeimage2, darkthemeimage1);
            assertEquals(darkthemeimage1, darkthemeimage2);
            assertEquals(darkthemeimage1, darkthemeimage1);
            assertFalse(darkthemeimage1.equals(null));
            assertNotEquals(darkthemeimage3, darkthemeimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
