// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.branding.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DarkThemeImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDarkThemeImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DarkThemeImage darkthemeimage1 = new DarkThemeImage(DarkThemeImageReference.getDefault(),
                                                                "f8da8f30-0617-4c93-8d20-dd48213df093",
                                                                new Date(1559746947376L));
            DarkThemeImage darkthemeimage2 = darkthemeimage1.clone();
            assertNotNull(darkthemeimage1);
            assertNotNull(darkthemeimage2);
            assertNotSame(darkthemeimage2, darkthemeimage1);
            assertEquals(darkthemeimage2, darkthemeimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DarkThemeImage darkthemeimage1 = new DarkThemeImage(DarkThemeImageReference.getDefault(),
                                                                "4921c965-4a8c-469b-a290-0bf9e26e99e4",
                                                                new Date(1559746947496L));
            DarkThemeImage darkthemeimage2 = new DarkThemeImage(DarkThemeImageReference.getDefault(),
                                                                "4921c965-4a8c-469b-a290-0bf9e26e99e4",
                                                                new Date(1559746947496L));
            assertNotNull(darkthemeimage1);
            assertNotNull(darkthemeimage2);
            assertNotSame(darkthemeimage2, darkthemeimage1);
            assertEquals(darkthemeimage2, darkthemeimage1);
            assertEquals(darkthemeimage2.hashCode(), darkthemeimage1.hashCode());
            int hashCode = darkthemeimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, darkthemeimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DarkThemeImage darkthemeimage = new DarkThemeImage(DarkThemeImageReference.getDefault(),
                                                           "2525e2a8-5411-49fc-9be6-ba7e1a402acc",
                                                           new Date(1559746954846L));
        assertTrue(darkthemeimage.isValid());
        DarkThemeImage darkthemeimageInvalid = new DarkThemeImage(DarkThemeImageReference.getDefault(),
                                                                  "50cd4e4e-8b75-4575-9292-ccada997ad84",
                                                                  new Date(1559746952682L));
        assertFalse(darkthemeimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DarkThemeImage darkthemeimage1 = new DarkThemeImage(DarkThemeImageReference.getDefault(),
                                                                "3aa1e6d6-0802-4c0c-9cb4-ec52773c5396",
                                                                new Date(1559746950477L));
            DarkThemeImage darkthemeimage2 = new DarkThemeImage(DarkThemeImageReference.getDefault(),
                                                                "3aa1e6d6-0802-4c0c-9cb4-ec52773c5396",
                                                                new Date(1559746950477L));
            DarkThemeImage darkthemeimage3 = new DarkThemeImage(DarkThemeImageReference.getDefault(),
                                                                "fe31c163-cce9-4ced-b650-afc268633bb4",
                                                                new Date(1559746951722L));
            assertNotNull(darkthemeimage1);
            assertNotNull(darkthemeimage2);
            assertNotNull(darkthemeimage3);
            assertNotSame(darkthemeimage2, darkthemeimage1);
            assertNotSame(darkthemeimage3, darkthemeimage1);
            assertEquals(darkthemeimage2, darkthemeimage1);
            assertEquals(darkthemeimage2, darkthemeimage1);
            assertEquals(darkthemeimage1, darkthemeimage2);
            assertEquals(darkthemeimage1, darkthemeimage1);
            assertFalse(darkthemeimage1.equals(null));
            assertNotEquals(darkthemeimage3, darkthemeimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
