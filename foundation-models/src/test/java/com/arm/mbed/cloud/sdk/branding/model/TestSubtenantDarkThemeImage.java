// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.branding.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantDarkThemeImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantDarkThemeImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantDarkThemeImage subtenantdarkthemeimage1 = new SubtenantDarkThemeImage(SubtenantDarkThemeImageReference.getDefault(),
                                                                                           "df84f195-74a8-4c26-b160-a592fe697849",
                                                                                           new Date(1559754637152L));
            SubtenantDarkThemeImage subtenantdarkthemeimage2 = subtenantdarkthemeimage1.clone();
            assertNotNull(subtenantdarkthemeimage1);
            assertNotNull(subtenantdarkthemeimage2);
            assertNotSame(subtenantdarkthemeimage2, subtenantdarkthemeimage1);
            assertEquals(subtenantdarkthemeimage2, subtenantdarkthemeimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantDarkThemeImage subtenantdarkthemeimage1 = new SubtenantDarkThemeImage(SubtenantDarkThemeImageReference.getDefault(),
                                                                                           "25c2aa52-0dbc-4ae8-aec0-6615913e0d47",
                                                                                           new Date(1559754640221L));
            SubtenantDarkThemeImage subtenantdarkthemeimage2 = new SubtenantDarkThemeImage(SubtenantDarkThemeImageReference.getDefault(),
                                                                                           "25c2aa52-0dbc-4ae8-aec0-6615913e0d47",
                                                                                           new Date(1559754640221L));
            assertNotNull(subtenantdarkthemeimage1);
            assertNotNull(subtenantdarkthemeimage2);
            assertNotSame(subtenantdarkthemeimage2, subtenantdarkthemeimage1);
            assertEquals(subtenantdarkthemeimage2, subtenantdarkthemeimage1);
            assertEquals(subtenantdarkthemeimage2.hashCode(), subtenantdarkthemeimage1.hashCode());
            int hashCode = subtenantdarkthemeimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantdarkthemeimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantDarkThemeImage subtenantdarkthemeimage = new SubtenantDarkThemeImage(SubtenantDarkThemeImageReference.getDefault(),
                                                                                      "cee402d0-1100-4cb7-8846-4f8ccb23ed9e",
                                                                                      new Date(1559754642726L));
        assertTrue(subtenantdarkthemeimage.isValid());
        SubtenantDarkThemeImage subtenantdarkthemeimageInvalid = new SubtenantDarkThemeImage(null,
                                                                                             "36835245-ab66-4bfa-861f-f349d7c841a8",
                                                                                             new Date(1559754637019L));
        assertFalse(subtenantdarkthemeimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantDarkThemeImage subtenantdarkthemeimage1 = new SubtenantDarkThemeImage(SubtenantDarkThemeImageReference.getDefault(),
                                                                                           "28f2afca-29ae-4f77-9153-72a8faa48538",
                                                                                           new Date(1559754635406L));
            SubtenantDarkThemeImage subtenantdarkthemeimage2 = new SubtenantDarkThemeImage(SubtenantDarkThemeImageReference.getDefault(),
                                                                                           "28f2afca-29ae-4f77-9153-72a8faa48538",
                                                                                           new Date(1559754635406L));
            SubtenantDarkThemeImage subtenantdarkthemeimage3 = new SubtenantDarkThemeImage(SubtenantDarkThemeImageReference.getDefault(),
                                                                                           "9dde1a0a-d543-4297-8b8d-08927e9e1d13",
                                                                                           new Date(1559754639129L));
            assertNotNull(subtenantdarkthemeimage1);
            assertNotNull(subtenantdarkthemeimage2);
            assertNotNull(subtenantdarkthemeimage3);
            assertNotSame(subtenantdarkthemeimage2, subtenantdarkthemeimage1);
            assertNotSame(subtenantdarkthemeimage3, subtenantdarkthemeimage1);
            assertEquals(subtenantdarkthemeimage2, subtenantdarkthemeimage1);
            assertEquals(subtenantdarkthemeimage2, subtenantdarkthemeimage1);
            assertEquals(subtenantdarkthemeimage1, subtenantdarkthemeimage2);
            assertEquals(subtenantdarkthemeimage1, subtenantdarkthemeimage1);
            assertFalse(subtenantdarkthemeimage1.equals(null));
            assertNotEquals(subtenantdarkthemeimage3, subtenantdarkthemeimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
