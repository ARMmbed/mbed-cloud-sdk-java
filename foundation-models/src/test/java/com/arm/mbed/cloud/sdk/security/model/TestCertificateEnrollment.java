// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model CertificateEnrollment.
 */
public class TestCertificateEnrollment {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            CertificateEnrollment certificateenrollment1 = new CertificateEnrollment("82635226-1920-4a39-b80a-3723248e5a9d",
                                                                                     new Date(1547225904027L),
                                                                                     "b654218a-a51b-4033-ba35-e328d7a558d0",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "1fd67114-4d9c-449c-a309-cd13f9ec7184",
                                                                                     new Date(1547225896350L));
            CertificateEnrollment certificateenrollment2 = certificateenrollment1.clone();
            assertNotNull(certificateenrollment1);
            assertNotNull(certificateenrollment2);
            assertNotSame(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment2, certificateenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            CertificateEnrollment certificateenrollment1 = new CertificateEnrollment("72a843d8-ab00-492b-a680-5015d6288316",
                                                                                     new Date(1547225897181L),
                                                                                     "60ebb6ea-37c4-4902-a0fa-87cc326e3246",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "ca8f137a-a2c0-426b-96ee-cf6fe0b73bc3",
                                                                                     new Date(1547225899994L));
            CertificateEnrollment certificateenrollment2 = new CertificateEnrollment("72a843d8-ab00-492b-a680-5015d6288316",
                                                                                     new Date(1547225897181L),
                                                                                     "60ebb6ea-37c4-4902-a0fa-87cc326e3246",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "ca8f137a-a2c0-426b-96ee-cf6fe0b73bc3",
                                                                                     new Date(1547225899994L));
            assertNotNull(certificateenrollment1);
            assertNotNull(certificateenrollment2);
            assertNotSame(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment2.hashCode(), certificateenrollment1.hashCode());
            int hashCode = certificateenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, certificateenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        CertificateEnrollment certificateenrollment = new CertificateEnrollment("733a5e4e-e26a-46b6-b8ed-f3573b55d179",
                                                                                new Date(1547225895808L),
                                                                                "b947517e-595a-40c7-977d-1d9db43f6a7c",
                                                                                CertificateEnrollmentEnrollResult.getDefault(),
                                                                                CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                "a4979a17-3bd2-4ba5-9c88-0652c1101c31",
                                                                                new Date(1547225901361L));
        assertTrue(certificateenrollment.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            CertificateEnrollment certificateenrollment1 = new CertificateEnrollment("f6b3df89-8946-44e7-8cd6-7733fc123c19",
                                                                                     new Date(1547225894899L),
                                                                                     "bc7f06ba-82d2-420d-b2af-305d2c263367",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "5150cb65-cc1d-4172-8864-85ca759128f0",
                                                                                     new Date(1547225898540L));
            CertificateEnrollment certificateenrollment2 = new CertificateEnrollment("f6b3df89-8946-44e7-8cd6-7733fc123c19",
                                                                                     new Date(1547225894899L),
                                                                                     "bc7f06ba-82d2-420d-b2af-305d2c263367",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "5150cb65-cc1d-4172-8864-85ca759128f0",
                                                                                     new Date(1547225898540L));
            CertificateEnrollment certificateenrollment3 = new CertificateEnrollment("adb81742-3031-4c22-a189-4965e4c1cc0b",
                                                                                     new Date(1547225901685L),
                                                                                     "33d346c4-075d-4637-b4d9-a95076c7000c",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "3aa399ee-792c-4715-8e73-9b760b271f7a",
                                                                                     new Date(1547225901932L));
            assertNotNull(certificateenrollment1);
            assertNotNull(certificateenrollment2);
            assertNotNull(certificateenrollment3);
            assertNotSame(certificateenrollment2, certificateenrollment1);
            assertNotSame(certificateenrollment3, certificateenrollment1);
            assertEquals(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment1, certificateenrollment2);
            assertEquals(certificateenrollment1, certificateenrollment1);
            assertFalse(certificateenrollment1.equals(null));
            assertNotEquals(certificateenrollment3, certificateenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
