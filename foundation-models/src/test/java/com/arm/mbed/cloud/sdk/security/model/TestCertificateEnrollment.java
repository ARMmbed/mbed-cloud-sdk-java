// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model CertificateEnrollment.
 */
public class TestCertificateEnrollment {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            CertificateEnrollment certificateenrollment1 = new CertificateEnrollment("_-].3-艆]]]",
                                                                                     new Date(1547730052982L),
                                                                                     "00d23f7c-95e7-4a76-baaa-f1fe931d912e",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "a6ec274a-c5ea-4b90-8ec9-d7f8b0f96dee",
                                                                                     new Date(1547730055217L));
            CertificateEnrollment certificateenrollment2 = certificateenrollment1.clone();
            assertNotNull(certificateenrollment1);
            assertNotNull(certificateenrollment2);
            assertNotSame(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment2, certificateenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            CertificateEnrollment certificateenrollment1 = new CertificateEnrollment("2-].r-]]]]",
                                                                                     new Date(1547730054742L),
                                                                                     "0c47929c-7f69-49ac-a9fb-3e9196d56ce9",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "3c01edce-06f8-4a9e-a794-e9b9c9cf379d",
                                                                                     new Date(1547730054616L));
            CertificateEnrollment certificateenrollment2 = new CertificateEnrollment("2-].r-]]]]",
                                                                                     new Date(1547730054742L),
                                                                                     "0c47929c-7f69-49ac-a9fb-3e9196d56ce9",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "3c01edce-06f8-4a9e-a794-e9b9c9cf379d",
                                                                                     new Date(1547730054616L));
            assertNotNull(certificateenrollment1);
            assertNotNull(certificateenrollment2);
            assertNotSame(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment2.hashCode(), certificateenrollment1.hashCode());
            int hashCode = certificateenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, certificateenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        CertificateEnrollment certificateenrollment = new CertificateEnrollment("_-]]].9-]",
                                                                                new Date(1547730054453L),
                                                                                "be630383-1191-4767-bcd6-ddb02d4a98e0",
                                                                                CertificateEnrollmentEnrollResult.getDefault(),
                                                                                CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                "a295a03e-dbdc-40b5-a01a-e27fcb3206ab",
                                                                                new Date(1547730058283L));
        assertTrue(certificateenrollment.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            CertificateEnrollment certificateenrollment1 = new CertificateEnrollment("1-]]]]._-]]]",
                                                                                     new Date(1547730055121L),
                                                                                     "69f94a5e-db9d-4162-85f1-a4f51723adeb",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "b50c1a8f-3a7e-4b95-bd32-f443dd4d0560",
                                                                                     new Date(1547730055291L));
            CertificateEnrollment certificateenrollment2 = new CertificateEnrollment("1-]]]]._-]]]",
                                                                                     new Date(1547730055121L),
                                                                                     "69f94a5e-db9d-4162-85f1-a4f51723adeb",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "b50c1a8f-3a7e-4b95-bd32-f443dd4d0560",
                                                                                     new Date(1547730055291L));
            CertificateEnrollment certificateenrollment3 = new CertificateEnrollment("I-]].i-豴]]]]]]",
                                                                                     new Date(1547730056589L),
                                                                                     "20b8d681-e4c0-47ca-8981-0739090290ac",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "2f8c44c2-81d2-4d17-af5e-830071af00ee",
                                                                                     new Date(1547730055580L));
            assertNotNull(certificateenrollment1);
            assertNotNull(certificateenrollment2);
            assertNotNull(certificateenrollment3);
            assertNotSame(certificateenrollment2, certificateenrollment1);
            assertNotSame(certificateenrollment3, certificateenrollment1);
            assertEquals(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment1, certificateenrollment2);
            assertEquals(certificateenrollment1, certificateenrollment1);
            assertFalse(certificateenrollment1.equals(null));
            assertNotEquals(certificateenrollment3, certificateenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
