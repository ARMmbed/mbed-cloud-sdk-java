// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model CertificateEnrollment.
 */
public class TestCertificateEnrollment {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            CertificateEnrollment certificateenrollment1 = new CertificateEnrollment("57c77b39-d68f-42fa-8fa9-99ab075552cc",
                                                                                     new java.util.Date(1547041492371L),
                                                                                     "b4926c15-4ee0-4974-9ec1-95669c4dbf71",
                                                                                     com.arm.mbed.cloud.sdk.security.model.CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     com.arm.mbed.cloud.sdk.security.model.CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "5568b88a-68a1-4a06-9109-122a66dfbc16",
                                                                                     new java.util.Date(1547041498788L));
            CertificateEnrollment certificateenrollment2 = certificateenrollment1.clone();
            assertNotNull(certificateenrollment1);
            assertNotNull(certificateenrollment2);
            assertNotSame(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment2, certificateenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            CertificateEnrollment certificateenrollment1 = new CertificateEnrollment("301b5f1f-9bbb-4152-955e-ae7a7778add9",
                                                                                     new java.util.Date(1547041497330L),
                                                                                     "c1e5e010-5d5a-4de1-930f-2455c3967c4a",
                                                                                     com.arm.mbed.cloud.sdk.security.model.CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     com.arm.mbed.cloud.sdk.security.model.CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "97ef248b-c1a8-40bc-94af-fbd8ad06c0f5",
                                                                                     new java.util.Date(1547041497890L));
            CertificateEnrollment certificateenrollment2 = new CertificateEnrollment("301b5f1f-9bbb-4152-955e-ae7a7778add9",
                                                                                     new java.util.Date(1547041497330L),
                                                                                     "c1e5e010-5d5a-4de1-930f-2455c3967c4a",
                                                                                     com.arm.mbed.cloud.sdk.security.model.CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     com.arm.mbed.cloud.sdk.security.model.CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "97ef248b-c1a8-40bc-94af-fbd8ad06c0f5",
                                                                                     new java.util.Date(1547041497890L));
            assertNotNull(certificateenrollment1);
            assertNotNull(certificateenrollment2);
            assertNotSame(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment2.hashCode(), certificateenrollment1.hashCode());
            int hashCode = certificateenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, certificateenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        CertificateEnrollment certificateenrollment = new CertificateEnrollment("00de35b9-9369-4152-aefd-4a22b179f8ef",
                                                                                new java.util.Date(1547041493176L),
                                                                                "bda179bd-51a1-4655-a962-3cc595d0d410",
                                                                                com.arm.mbed.cloud.sdk.security.model.CertificateEnrollmentEnrollResult.getDefault(),
                                                                                com.arm.mbed.cloud.sdk.security.model.CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                "b35e8535-a053-45e1-9bf6-fabd17415e20",
                                                                                new java.util.Date(1547041489350L));
        assertTrue(certificateenrollment.isValid());
        CertificateEnrollment certificateenrollmentInvalid = new CertificateEnrollment("ed312415-7ca8-4ffa-bbb2-197dff1979fe",
                                                                                       new java.util.Date(1547041498470L),
                                                                                       "1b79aacb-eab7-42e5-8c47-da6c2e441a26",
                                                                                       com.arm.mbed.cloud.sdk.security.model.CertificateEnrollmentEnrollResult.getDefault(),
                                                                                       com.arm.mbed.cloud.sdk.security.model.CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                       null,
                                                                                       new java.util.Date(1547041490986L));
        assertFalse(certificateenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            CertificateEnrollment certificateenrollment1 = new CertificateEnrollment("d3d0f8da-b417-438a-8912-c3003f409f27",
                                                                                     new java.util.Date(1547041496966L),
                                                                                     "ee3e331b-13e9-44e9-b9bc-4653bbceac7f",
                                                                                     com.arm.mbed.cloud.sdk.security.model.CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     com.arm.mbed.cloud.sdk.security.model.CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "03742fa7-c01a-49d5-b38d-15104144dc82",
                                                                                     new java.util.Date(1547041498293L));
            CertificateEnrollment certificateenrollment2 = new CertificateEnrollment("d3d0f8da-b417-438a-8912-c3003f409f27",
                                                                                     new java.util.Date(1547041496966L),
                                                                                     "ee3e331b-13e9-44e9-b9bc-4653bbceac7f",
                                                                                     com.arm.mbed.cloud.sdk.security.model.CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     com.arm.mbed.cloud.sdk.security.model.CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "03742fa7-c01a-49d5-b38d-15104144dc82",
                                                                                     new java.util.Date(1547041498293L));
            CertificateEnrollment certificateenrollment3 = new CertificateEnrollment("55833744-3537-4a7a-9795-80873db9b431",
                                                                                     new java.util.Date(1547041489238L),
                                                                                     "b0c24cb5-1f40-4b99-b3fc-4045488330b4",
                                                                                     com.arm.mbed.cloud.sdk.security.model.CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     com.arm.mbed.cloud.sdk.security.model.CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "c78bd029-3b81-4d35-bffc-b7a13fbc48c1",
                                                                                     new java.util.Date(1547041494620L));
            assertNotNull(certificateenrollment1);
            assertNotNull(certificateenrollment2);
            assertNotNull(certificateenrollment3);
            assertNotSame(certificateenrollment2, certificateenrollment1);
            assertNotSame(certificateenrollment3, certificateenrollment1);
            assertEquals(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment1, certificateenrollment2);
            assertEquals(certificateenrollment1, certificateenrollment1);
            assertFalse(certificateenrollment1.equals(null));
            assertNotEquals(certificateenrollment3, certificateenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
