// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model CertificateEnrollment.
 */
public class TestCertificateEnrollment {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            CertificateEnrollment certificateenrollment1 = new CertificateEnrollment("55ad34b2-d124-4188-99c5-93f107d8695f",
                                                                                     new Date(1547225118278L),
                                                                                     "4d015335-3ce6-456d-8bdb-6558ed2b3f8d",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "73179f36-57e4-4185-af46-66ec124fc128",
                                                                                     new Date(1547225115288L));
            CertificateEnrollment certificateenrollment2 = certificateenrollment1.clone();
            assertNotNull(certificateenrollment1);
            assertNotNull(certificateenrollment2);
            assertNotSame(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment2, certificateenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            CertificateEnrollment certificateenrollment1 = new CertificateEnrollment("f6a938e4-f7ba-4b1e-afa8-2ba440ed208a",
                                                                                     new Date(1547225117495L),
                                                                                     "5fb52dfd-b2e8-40b3-aa43-6a1e4fa75014",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "332d40fb-e3fb-4c5e-8da4-482fbcc54e89",
                                                                                     new Date(1547225114891L));
            CertificateEnrollment certificateenrollment2 = new CertificateEnrollment("f6a938e4-f7ba-4b1e-afa8-2ba440ed208a",
                                                                                     new Date(1547225117495L),
                                                                                     "5fb52dfd-b2e8-40b3-aa43-6a1e4fa75014",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "332d40fb-e3fb-4c5e-8da4-482fbcc54e89",
                                                                                     new Date(1547225114891L));
            assertNotNull(certificateenrollment1);
            assertNotNull(certificateenrollment2);
            assertNotSame(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment2.hashCode(), certificateenrollment1.hashCode());
            int hashCode = certificateenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, certificateenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        CertificateEnrollment certificateenrollment = new CertificateEnrollment("9b5149eb-511e-42a7-b056-0ac77e7212cb",
                                                                                new Date(1547225117384L),
                                                                                "7c631390-610a-4b7f-a315-e90ae121cfc8",
                                                                                CertificateEnrollmentEnrollResult.getDefault(),
                                                                                CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                "9eedaab2-a953-4c98-9cc6-4ecbd8782114",
                                                                                new Date(1547225121985L));
        assertTrue(certificateenrollment.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            CertificateEnrollment certificateenrollment1 = new CertificateEnrollment("6cdace19-91bc-486d-845f-32898e699c6a",
                                                                                     new Date(1547225115223L),
                                                                                     "af46617b-f420-4a3a-ba67-8a279968b874",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "49297186-6dd9-48c6-950e-e5d8052230ce",
                                                                                     new Date(1547225116996L));
            CertificateEnrollment certificateenrollment2 = new CertificateEnrollment("6cdace19-91bc-486d-845f-32898e699c6a",
                                                                                     new Date(1547225115223L),
                                                                                     "af46617b-f420-4a3a-ba67-8a279968b874",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "49297186-6dd9-48c6-950e-e5d8052230ce",
                                                                                     new Date(1547225116996L));
            CertificateEnrollment certificateenrollment3 = new CertificateEnrollment("00c61bef-2b5e-4288-9903-6a1e78cb12f3",
                                                                                     new Date(1547225119135L),
                                                                                     "3c2a699b-084a-49e6-ab99-36b158aa3de8",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "afb22dfd-da25-4aeb-a326-aaaf740bd1d3",
                                                                                     new Date(1547225122699L));
            assertNotNull(certificateenrollment1);
            assertNotNull(certificateenrollment2);
            assertNotNull(certificateenrollment3);
            assertNotSame(certificateenrollment2, certificateenrollment1);
            assertNotSame(certificateenrollment3, certificateenrollment1);
            assertEquals(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment1, certificateenrollment2);
            assertEquals(certificateenrollment1, certificateenrollment1);
            assertFalse(certificateenrollment1.equals(null));
            assertNotEquals(certificateenrollment3, certificateenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
