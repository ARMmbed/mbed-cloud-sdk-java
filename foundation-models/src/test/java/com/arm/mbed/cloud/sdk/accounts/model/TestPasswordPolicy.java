// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model PasswordPolicy.
 */
public class TestPasswordPolicy {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        PasswordPolicy passwordpolicy1 = new PasswordPolicy("ccc5be1e-45e9-4aed-a83d-8deb6b56bd9d");
        PasswordPolicy passwordpolicy2 = passwordpolicy1.clone();
        assertNotNull(passwordpolicy1);
        assertNotNull(passwordpolicy2);
        assertNotSame(passwordpolicy2, passwordpolicy1);
        assertEquals(passwordpolicy2, passwordpolicy1);
    }

    /**
     * Tests the isvalid method.
     */
    @Test
    public void testIsvalid() {
        PasswordPolicy passwordpolicy = new PasswordPolicy("83eb8b20-1a38-4402-a6a9-0293905c4e58");
        assertTrue(passwordpolicy.isValid());
    }

    /**
     * Tests the hashcode method.
     */
    @Test
    public void testHashcode() {
        PasswordPolicy passwordpolicy1 = new PasswordPolicy("d171b7ce-3e9d-4ed4-b585-3f13ae95758e");
        PasswordPolicy passwordpolicy2 = new PasswordPolicy("d171b7ce-3e9d-4ed4-b585-3f13ae95758e");
        assertNotNull(passwordpolicy1);
        assertNotNull(passwordpolicy2);
        assertNotSame(passwordpolicy2, passwordpolicy1);
        assertEquals(passwordpolicy2, passwordpolicy1);
        assertEquals(passwordpolicy2.hashCode(), passwordpolicy1.hashCode());
        int hashCode = passwordpolicy1.hashCode();
        for (int i = 0; i < 5; i++) {
            assertEquals(hashCode, passwordpolicy1.hashCode());
        }
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        PasswordPolicy passwordpolicy1 = new PasswordPolicy("3efb441e-f483-40e2-a7bf-d6fbdc9b306b");
        PasswordPolicy passwordpolicy2 = new PasswordPolicy("3efb441e-f483-40e2-a7bf-d6fbdc9b306b");
        PasswordPolicy passwordpolicy3 = new PasswordPolicy("1c140d53-4abf-4b63-966f-671d899cea8c");
        assertNotNull(passwordpolicy1);
        assertNotNull(passwordpolicy2);
        assertNotNull(passwordpolicy3);
        assertNotSame(passwordpolicy2, passwordpolicy1);
        assertNotSame(passwordpolicy3, passwordpolicy1);
        assertEquals(passwordpolicy2, passwordpolicy1);
        assertEquals(passwordpolicy2, passwordpolicy1);
        assertEquals(passwordpolicy1, passwordpolicy2);
        assertEquals(passwordpolicy1, passwordpolicy1);
        assertFalse(passwordpolicy1.equals(null));
        assertNotEquals(passwordpolicy3, passwordpolicy1);
    }
}
