// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model PasswordPolicy.
 */
public class TestPasswordPolicy {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        PasswordPolicy passwordpolicy1 = new PasswordPolicy("c71aedb1-8247-4724-8d24-14e36350db34");
        PasswordPolicy passwordpolicy2 = passwordpolicy1.clone();
        assertNotNull(passwordpolicy1);
        assertNotNull(passwordpolicy2);
        assertNotSame(passwordpolicy2, passwordpolicy1);
        assertEquals(passwordpolicy2, passwordpolicy1);
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsvalid() {
        PasswordPolicy passwordpolicy = new PasswordPolicy("b39e2c4b-8abe-4156-8396-d3faf1227fa2");
        assertTrue(passwordpolicy.isValid());
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashcode() {
        PasswordPolicy passwordpolicy1 = new PasswordPolicy("fda9a1b7-7a26-4752-8a63-d35a230db3a0");
        PasswordPolicy passwordpolicy2 = new PasswordPolicy("fda9a1b7-7a26-4752-8a63-d35a230db3a0");
        assertNotNull(passwordpolicy1);
        assertNotNull(passwordpolicy2);
        assertNotSame(passwordpolicy2, passwordpolicy1);
        assertEquals(passwordpolicy2, passwordpolicy1);
        assertEquals(passwordpolicy2.hashCode(), passwordpolicy1.hashCode());
        int hashCode = passwordpolicy1.hashCode();
        for (int i = 0; i < 5; i++) {
            assertEquals(hashCode, passwordpolicy1.hashCode());
        }
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        PasswordPolicy passwordpolicy1 = new PasswordPolicy("6b67fd36-912a-4133-844a-46de7b06e4d5");
        PasswordPolicy passwordpolicy2 = new PasswordPolicy("6b67fd36-912a-4133-844a-46de7b06e4d5");
        PasswordPolicy passwordpolicy3 = new PasswordPolicy("3d0f33c7-1aaa-46ec-9778-25990b683f4d");
        assertNotNull(passwordpolicy1);
        assertNotNull(passwordpolicy2);
        assertNotNull(passwordpolicy3);
        assertNotSame(passwordpolicy2, passwordpolicy1);
        assertNotSame(passwordpolicy3, passwordpolicy1);
        assertEquals(passwordpolicy2, passwordpolicy1);
        assertEquals(passwordpolicy2, passwordpolicy1);
        assertEquals(passwordpolicy1, passwordpolicy2);
        assertEquals(passwordpolicy1, passwordpolicy1);
        assertFalse(passwordpolicy1.equals(null));
        assertNotEquals(passwordpolicy3, passwordpolicy1);
    }
}
