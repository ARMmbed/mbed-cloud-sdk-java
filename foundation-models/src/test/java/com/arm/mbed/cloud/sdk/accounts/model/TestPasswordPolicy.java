// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model PasswordPolicy.
 */
public class TestPasswordPolicy {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            PasswordPolicy passwordpolicy1 = new PasswordPolicy("60dcf53d-2dcd-42c4-ae40-1085513f0fb6");
            PasswordPolicy passwordpolicy2 = passwordpolicy1.clone();
            assertNotNull(passwordpolicy1);
            assertNotNull(passwordpolicy2);
            assertNotSame(passwordpolicy2, passwordpolicy1);
            assertEquals(passwordpolicy2, passwordpolicy1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            PasswordPolicy passwordpolicy1 = new PasswordPolicy("d4072388-e988-40da-81d1-eec8ffb624bc");
            PasswordPolicy passwordpolicy2 = new PasswordPolicy("d4072388-e988-40da-81d1-eec8ffb624bc");
            assertNotNull(passwordpolicy1);
            assertNotNull(passwordpolicy2);
            assertNotSame(passwordpolicy2, passwordpolicy1);
            assertEquals(passwordpolicy2, passwordpolicy1);
            assertEquals(passwordpolicy2.hashCode(), passwordpolicy1.hashCode());
            int hashCode = passwordpolicy1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, passwordpolicy1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        PasswordPolicy passwordpolicy = new PasswordPolicy("5666a846-d04f-4377-9ffd-239b743e4789");
        assertTrue(passwordpolicy.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            PasswordPolicy passwordpolicy1 = new PasswordPolicy("1b184cd2-ede5-4fc6-b772-355b42d6487f");
            PasswordPolicy passwordpolicy2 = new PasswordPolicy("1b184cd2-ede5-4fc6-b772-355b42d6487f");
            PasswordPolicy passwordpolicy3 = new PasswordPolicy("a957fb35-26be-4837-a4b9-cac4c2f0593b");
            assertNotNull(passwordpolicy1);
            assertNotNull(passwordpolicy2);
            assertNotNull(passwordpolicy3);
            assertNotSame(passwordpolicy2, passwordpolicy1);
            assertNotSame(passwordpolicy3, passwordpolicy1);
            assertEquals(passwordpolicy2, passwordpolicy1);
            assertEquals(passwordpolicy2, passwordpolicy1);
            assertEquals(passwordpolicy1, passwordpolicy2);
            assertEquals(passwordpolicy1, passwordpolicy1);
            assertFalse(passwordpolicy1.equals(null));
            assertNotEquals(passwordpolicy3, passwordpolicy1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
