// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model PasswordPolicy.
 */
public class TestPasswordPolicy {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            PasswordPolicy passwordpolicy1 = new PasswordPolicy("7ca7de14-c874-459f-87c5-fef3bb483d9d");
            PasswordPolicy passwordpolicy2 = passwordpolicy1.clone();
            assertNotNull(passwordpolicy1);
            assertNotNull(passwordpolicy2);
            assertNotSame(passwordpolicy2, passwordpolicy1);
            assertEquals(passwordpolicy2, passwordpolicy1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsvalid() {
        PasswordPolicy passwordpolicy = new PasswordPolicy("157c731b-574d-48c0-b81a-f625acc7550c");
        assertTrue(passwordpolicy.isValid());
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashcode() {
        try {
            PasswordPolicy passwordpolicy1 = new PasswordPolicy("0ba06113-1d8f-41de-ac61-541a8623c075");
            PasswordPolicy passwordpolicy2 = new PasswordPolicy("0ba06113-1d8f-41de-ac61-541a8623c075");
            assertNotNull(passwordpolicy1);
            assertNotNull(passwordpolicy2);
            assertNotSame(passwordpolicy2, passwordpolicy1);
            assertEquals(passwordpolicy2, passwordpolicy1);
            assertEquals(passwordpolicy2.hashCode(), passwordpolicy1.hashCode());
            int hashCode = passwordpolicy1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, passwordpolicy1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            PasswordPolicy passwordpolicy1 = new PasswordPolicy("378221fb-e55a-4e7a-a95b-27673e0ca24d");
            PasswordPolicy passwordpolicy2 = new PasswordPolicy("378221fb-e55a-4e7a-a95b-27673e0ca24d");
            PasswordPolicy passwordpolicy3 = new PasswordPolicy("71f0643d-5330-4879-a8cd-af6fa4505765");
            assertNotNull(passwordpolicy1);
            assertNotNull(passwordpolicy2);
            assertNotNull(passwordpolicy3);
            assertNotSame(passwordpolicy2, passwordpolicy1);
            assertNotSame(passwordpolicy3, passwordpolicy1);
            assertEquals(passwordpolicy2, passwordpolicy1);
            assertEquals(passwordpolicy2, passwordpolicy1);
            assertEquals(passwordpolicy1, passwordpolicy2);
            assertEquals(passwordpolicy1, passwordpolicy1);
            assertFalse(passwordpolicy1.equals(null));
            assertNotEquals(passwordpolicy3, passwordpolicy1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
