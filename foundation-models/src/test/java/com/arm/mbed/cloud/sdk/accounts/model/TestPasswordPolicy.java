// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model PasswordPolicy.
 */
public class TestPasswordPolicy {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        PasswordPolicy passwordpolicy1 = new PasswordPolicy("c9c2c5ab-8f56-4be8-91d7-7baa86327f0f");
        PasswordPolicy passwordpolicy2 = passwordpolicy1.clone();
        assertNotNull(passwordpolicy1);
        assertNotNull(passwordpolicy2);
        assertNotSame(passwordpolicy2, passwordpolicy1);
        assertEquals(passwordpolicy2, passwordpolicy1);
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsvalid() {
        PasswordPolicy passwordpolicy = new PasswordPolicy("b0b2720b-6313-40bb-9e4a-730f71e47e80");
        assertTrue(passwordpolicy.isValid());
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashcode() {
        PasswordPolicy passwordpolicy1 = new PasswordPolicy("266c1090-8026-4e13-86b3-f4168d5ffcb1");
        PasswordPolicy passwordpolicy2 = new PasswordPolicy("266c1090-8026-4e13-86b3-f4168d5ffcb1");
        assertNotNull(passwordpolicy1);
        assertNotNull(passwordpolicy2);
        assertNotSame(passwordpolicy2, passwordpolicy1);
        assertEquals(passwordpolicy2, passwordpolicy1);
        assertEquals(passwordpolicy2.hashCode(), passwordpolicy1.hashCode());
        int hashCode = passwordpolicy1.hashCode();
        for (int i = 0; i < 5; i++) {
            assertEquals(hashCode, passwordpolicy1.hashCode());
        }
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        PasswordPolicy passwordpolicy1 = new PasswordPolicy("86801767-e36b-4438-93bf-c437f83936d9");
        PasswordPolicy passwordpolicy2 = new PasswordPolicy("86801767-e36b-4438-93bf-c437f83936d9");
        PasswordPolicy passwordpolicy3 = new PasswordPolicy("41789e53-80b1-4993-a178-44a0ecd59dd3");
        assertNotNull(passwordpolicy1);
        assertNotNull(passwordpolicy2);
        assertNotNull(passwordpolicy3);
        assertNotSame(passwordpolicy2, passwordpolicy1);
        assertNotSame(passwordpolicy3, passwordpolicy1);
        assertEquals(passwordpolicy2, passwordpolicy1);
        assertEquals(passwordpolicy2, passwordpolicy1);
        assertEquals(passwordpolicy1, passwordpolicy2);
        assertEquals(passwordpolicy1, passwordpolicy1);
        assertFalse(passwordpolicy1.equals(null));
        assertNotEquals(passwordpolicy3, passwordpolicy1);
    }
}
