// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1559747932866L),
                                                             "a030fc8d-e66d-4497-ae40-5e6604ee8ce2", 34,
                                                             "d0a8c330-e9d9-4c3e-8f9f-1090830a1008",
                                                             "f95f6637-466e-4127-9e01-433a7e4ce3a7",
                                                             "23a8078d-d21e-4569-92da-dc37cfe719d8",
                                                             "3c414d5b-7bdd-4c45-9fa8-0cd3ffac95c3",
                                                             new Date(1559747935290L));
            FirmwareImage firmwareimage2 = firmwareimage1.clone();
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1559747929078L),
                                                             "4c98679b-c87b-41d6-b0b2-37085d0101ac", 1,
                                                             "d93ac058-4471-4773-907c-99f8f060f0c3",
                                                             "13ddbc28-bba1-4c77-8f8c-ca96d1f9ef2d",
                                                             "b809470b-4923-4e0b-b1e8-64fd666b883e",
                                                             "a39b0462-6e61-4877-8023-a4e729cc5b48",
                                                             new Date(1559747928267L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1559747929078L),
                                                             "4c98679b-c87b-41d6-b0b2-37085d0101ac", 1,
                                                             "d93ac058-4471-4773-907c-99f8f060f0c3",
                                                             "13ddbc28-bba1-4c77-8f8c-ca96d1f9ef2d",
                                                             "b809470b-4923-4e0b-b1e8-64fd666b883e",
                                                             "a39b0462-6e61-4877-8023-a4e729cc5b48",
                                                             new Date(1559747928267L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2.hashCode(), firmwareimage1.hashCode());
            int hashCode = firmwareimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        FirmwareImage firmwareimage = new FirmwareImage(new Date(1559747928460L),
                                                        "b652e10e-eae0-47a7-8396-5ce3a434d71c", 119,
                                                        "35230fa3-c05b-40cb-839f-862c8312005b",
                                                        "e86f33ed-d0a3-4468-9859-4ffa6ae86b45",
                                                        "469e739e-0e04-48fa-825c-e3217a47afc3",
                                                        "60f750b9-6078-4f4b-972e-cafcbcbd9b47",
                                                        new Date(1559747931594L));
        assertTrue(firmwareimage.isValid());
        FirmwareImage firmwareimageInvalid = new FirmwareImage(new Date(1559747934765L),
                                                               "4394487f-45f9-4bde-a3cb-3b5ff3769da4", 36,
                                                               "c3964675-b7ef-48d2-84fe-d2377a998a63",
                                                               "1441161e-1da2-48a9-b47e-4f3228a668ddb8e8b093-f407-4ac4-858c-5184469394ad4033c990-2177-4035-a27c-e8137b869b1bebc6f5fb-5725-4f63-88ca-23cdc56da2e742c313c0-59c2-4ab7-ada6-4281644d24be0f746418-835d-41b1-8a1f-fb22ffa5e0baa00bae3b-fd82-49b7-bde1-a9d665caacd822be8924-9ef8-4da3-a359-52b2a81da96fdcd83901-2d2a-47af-a3b8-98a7c159706b72a4ea2b-d44f-4766-935c-63f4d9b0ac149de503cb-ea4f-47f6-a01c-087441d45691a7ff6883-007b-4294-88c8-290dfb23099bd110e2fa-5b37-4277-9cb3-ac1e495d426d1d2ff60c-94cd-41f4-a9aa-461db747fd81771e1aa1-8c08-4fc6-ad14-a853217f027293982017-b729-4479-809e-79eec1bb7aaad9e20ff0-1c8b-41bb-885c-af39d0ffeb97e899fc7a-08bc-43bf-b22b-830cdce830ba9d5ef03e-84e1-481d-83d7-a316c75f33976be13c3c-7029-41cb-835f-39b46303a25d05cada16-231f-4cf1-a903-d0b9a8285e647f26afba-c5ea-413d-bcd4-d04bd8d3463feef8182d-be27-4b15-9fd2-ea8b949cf10fb6745281-f346-4c30-a33d-7917ef52bc74cfc90dbf-ea4d-499f-a73b-53d0f3f2287750fadc8a-8a53-4d52-818d-a1fd4efb5d43f341653f-ebfb-4ca2-a0c0-fb28473cc245df418426-8c23-4939-93e6-dbd747708685a18d806a-4b6b-4fff-8460-b5e861f52ec7a9249eae-9098-4f27-827a-fc73dc7e8b5bc4f3159a-9866-4a8d-bd9c-2f2ec3c403c294234950-68e6-4ab0-b7d2-f2e4d599f8e618447d01-a2e9-4628-9120-7bbe0f80357694b7c635-7993-475f-bee5-4c929fde4ffaebd1a9b8-4b35-4dfe-b453-55f7d85813ce09d4ebdd-b6e7-466c-8547-4b5136a595952fa7d17c-43ff-42ab-a44a-3c0fe64c4d6412d1002c-b868-4a44-9594-2585c459eec8bcec08f4-a85d-49f2-ae3e-d587b49e8437552bb77a-a155-4c2c-a01c-bea97437b5d9353f7eb2-4f7b-405a-a23d-9a5e10a5b26ff81d68c4-0ef5-4045-879c-d128d1027d0bbf239bf9-0936-4714-84d5-5ab9f77e4031627cb90a-620a-4c11-bd71-b28d34552b02e156fbd5-f3e6-4100-b893-c0b23fafaef56bd125d5-0bc4-44df-986d-ecd015c3231b3ee0fa46-2895-465d-b202-2a8692f69366b976a23f-2fa3-4d0c-b159-529191caf7bcded1a17d-49c2-4b9b-b387-ba0310ef8387a939f7c7-c8bd-478a-83a5-29527c7b0a193b50fc5c-ee88-4cd0-9694-5af02c58051d6e0b3d92-200d-47ff-8567-590fcf1e9130072cb8ba-3155-4d21-a80c-55400ae0bb11a7077a30-cd8e-4851-95a4-4645897b2017d4321b64-8964-4c60-8d14-5b470eb301e18ff394dd-43c3-42de-8928-f64605432f5e",
                                                               "401e4989-7960-4c58-8184-43b7d0389720",
                                                               "d7d914c8-3c37-4288-9729-817eda1696a3cd91a384-578d-4137-90c8-02a62e72e14644dd3381-e5b8-42bc-98b6-b0f87c3d847500cff75a-d87f-4b2d-8ab2-bde38b57e430",
                                                               new Date(1559747934270L));
        assertFalse(firmwareimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1559747934818L),
                                                             "21244750-4cfc-40b8-95f2-f23c0384e7b6", -107,
                                                             "28e0d927-cbff-4d0c-886e-3abaff7dd93e",
                                                             "47dbfc44-f1b6-4ff1-8c71-456907a51303",
                                                             "bde75969-52df-4a14-bc8e-885d097eca6b",
                                                             "1aaf57a6-c9c7-432d-baab-c6933a566b5d",
                                                             new Date(1559747926659L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1559747934818L),
                                                             "21244750-4cfc-40b8-95f2-f23c0384e7b6", -107,
                                                             "28e0d927-cbff-4d0c-886e-3abaff7dd93e",
                                                             "47dbfc44-f1b6-4ff1-8c71-456907a51303",
                                                             "bde75969-52df-4a14-bc8e-885d097eca6b",
                                                             "1aaf57a6-c9c7-432d-baab-c6933a566b5d",
                                                             new Date(1559747926659L));
            FirmwareImage firmwareimage3 = new FirmwareImage(new Date(1559747930857L),
                                                             "0465c8b8-dbeb-4ab6-af2c-1b675032301b", 3,
                                                             "fc2fea80-e78c-4571-804c-8e5d737de235",
                                                             "52e1ce1e-3d12-4a30-ba81-870b8dd2192a",
                                                             "0a1c7a3b-d428-4da8-94ec-9eca486b9be1",
                                                             "3140ba88-d813-419a-bd54-82b6a7453d47",
                                                             new Date(1559747931902L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotNull(firmwareimage3);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertNotSame(firmwareimage3, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage1, firmwareimage2);
            assertEquals(firmwareimage1, firmwareimage1);
            assertFalse(firmwareimage1.equals(null));
            assertNotEquals(firmwareimage3, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
