// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1559288255842L),
                                                             "6a5b9689-d3c3-471d-8124-045df53532b0", 55,
                                                             "3b3b3915-3ad7-4bcc-ada1-6d20d2d77db8",
                                                             "8540e626-46e8-4210-a68e-4f2b28c8352d",
                                                             "a94f41f6-e5b6-4f78-9c33-2ea23fd7dbf3",
                                                             "d0f3eef1-0bfe-4c1a-8644-b6cddede8142",
                                                             new Date(1559288262439L));
            FirmwareImage firmwareimage2 = firmwareimage1.clone();
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1559288260043L),
                                                             "5abac1ae-0085-4afa-97a2-5c4fdcf29659", 91,
                                                             "741ea87c-41f7-4e61-9c63-e7d163f8714e",
                                                             "cd39fa94-6710-443c-aa85-ee5745bbe284",
                                                             "a3ee707b-a534-436b-9ba2-cfe9470efe92",
                                                             "da013271-eba3-48eb-9ae2-80ddaf289030",
                                                             new Date(1559288254261L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1559288260043L),
                                                             "5abac1ae-0085-4afa-97a2-5c4fdcf29659", 91,
                                                             "741ea87c-41f7-4e61-9c63-e7d163f8714e",
                                                             "cd39fa94-6710-443c-aa85-ee5745bbe284",
                                                             "a3ee707b-a534-436b-9ba2-cfe9470efe92",
                                                             "da013271-eba3-48eb-9ae2-80ddaf289030",
                                                             new Date(1559288254261L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2.hashCode(), firmwareimage1.hashCode());
            int hashCode = firmwareimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        FirmwareImage firmwareimage = new FirmwareImage(new Date(1559288258929L),
                                                        "f662f615-71c8-41b3-aebd-c5a0d8904d3f", -64,
                                                        "db9661b4-faaa-4ffa-8802-2ade712bda65",
                                                        "a337c4a2-f856-48d8-8eab-cc5998abc0ec",
                                                        "336f489e-dc14-4a60-b8d3-2e3508d65169",
                                                        "0cb78a86-99d5-4099-b334-48df5ffbc833",
                                                        new Date(1559288255703L));
        assertTrue(firmwareimage.isValid());
        FirmwareImage firmwareimageInvalid = new FirmwareImage(new Date(1559288259673L),
                                                               "35bdfe5f-f91a-4804-94b9-fcb58c542c6e", -18,
                                                               "5abba1c0-8094-410b-ae14-26adafd3a925",
                                                               "96fb158c-b3fc-4ba2-ac4c-abc924b07c877980f2ed-2b3e-4fb0-b721-ac42772812d1b9e8f3b0-9e4c-4cd5-b15a-a639958b740b530e107a-ccb9-4b50-ba21-1a4fc5d88dd2720a9c07-e723-438f-8bce-3966e23c1a4c5f3ffe39-fbe7-4636-a4d2-cdb01105120f94ad7411-e96c-4f03-bc41-3b20c07bc15229936e5d-7a32-4027-b7b2-376215cef582b38737a8-eada-4d03-9b0c-ffb26a4b719e13b4fc06-9c34-4141-a669-c539e375c120f2897097-b74e-47f5-8106-a86cf84d1967c399d386-bcce-4f5a-8103-79a7a376c96119340b4d-998b-4802-b2e8-49491a5848798633b279-aed1-4322-bce4-cbcfceb1051b338f3a7f-b673-4a8c-aa52-951c05bb51965487ebd4-fc79-45c3-8a57-01913446b5d73c5c83b5-5198-4982-b5eb-f1b0d89103a21cc455af-aab7-4463-b286-9dbed9d7f15baccd0e5f-da17-49b1-aad4-ef64ced20909f8a5a474-1dcd-4b54-b134-19f8f5b1487e157f9261-778c-476e-81e6-5111a97aef380f28a6d9-aaa1-48fd-a185-d9463fda7d3398e25dde-1ab8-49a9-9969-acd4b3796a50223ac991-4dc3-4858-9baf-9c766cfcf690bceba6a3-c42f-4bb5-8834-55541b26f947425e26d1-97ad-4e6f-b445-4eefa6a7f23cd03d884e-0260-4d61-9764-04ff900f07c1b762f57c-0410-4135-a7e7-67b324da176e1e085aea-d368-4c6f-b5ed-1d5e230b8ef5c848e3f6-540c-47ff-829e-98a3f828a27d3924c199-754e-4752-9888-9e013bae57819f69e472-08d7-45a7-83c1-4ad0eb4e7976e5bef517-b011-411f-8f09-e4721e1cc5865b0d3f5c-4a30-45ea-868f-3d4450cb8ba07ad47673-9c51-4006-b3c5-dcbf7cea3a5957806979-5b27-464f-9132-1f91cc5941a30e72a516-07b9-4ce5-b80a-88782d77847bedaeee95-f98e-4635-8bda-a41dcf15e2675b0230a0-c78b-4116-ac3c-1d8a872b349f96d4ed1e-2907-4038-9661-5e0d59e5a2bf583e9a80-42e0-4e8b-8a19-3ec3a8d8ee029d7f5af0-8ba0-4ebc-903d-9dbc9f0ee6c41ea12272-b4b4-4cb6-a69e-9baaf5c8131de74aa1bf-09d7-4ede-a0b7-5c20139ac7eaed05844c-d2c4-46e4-b9b9-06393e93971826c2d1cf-4e47-41db-97c8-3baad2502c10eae25970-1257-4212-bed8-d8786be7adcc932e9309-3bfd-4fc1-8df9-ff987f5752c991afcc84-7110-40d5-8b96-1c8ad922a27823531b1d-9ba8-4b2e-8098-da4c3cfe0ffe606e353a-93aa-492c-9c58-23ec26c2c318781b6369-8068-4514-a274-da626c4ce87d56da59a1-c613-4684-b82e-382357f635ffc7d0dd55-73c2-41d9-873e-d89c24939b64b1882b7b-f056-43bd-ab72-4f5f32cf6dc9bf52afa8-ba2b-4f6e-ae44-183d28196db9",
                                                               "4517cb68-67cf-4449-952a-686b17c658b8",
                                                               "fc399e0a-5b00-45a8-93cf-c7f94b05eb1956c695f5-0b5b-4e7c-b5bc-d26f80ffbbe3ad43a9f1-f972-46fd-b869-ca642b14f282b90d5a3c-e1b6-4ecf-82de-eb7c0fa8b1f8",
                                                               new Date(1559288258949L));
        assertFalse(firmwareimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1559288255278L),
                                                             "8e48c554-ad79-434f-ba39-0d3de42d0b0a", -53,
                                                             "3b318b06-9cda-45af-bdd0-4e8b8309a282",
                                                             "e7feb8bb-5b69-4646-b4fb-4b3aa6f21b05",
                                                             "7667f9bd-c39d-4d13-8ec7-218331033ae3",
                                                             "b0e498ff-58cc-4d80-b4c6-6b2cf125a52a",
                                                             new Date(1559288254690L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1559288255278L),
                                                             "8e48c554-ad79-434f-ba39-0d3de42d0b0a", -53,
                                                             "3b318b06-9cda-45af-bdd0-4e8b8309a282",
                                                             "e7feb8bb-5b69-4646-b4fb-4b3aa6f21b05",
                                                             "7667f9bd-c39d-4d13-8ec7-218331033ae3",
                                                             "b0e498ff-58cc-4d80-b4c6-6b2cf125a52a",
                                                             new Date(1559288254690L));
            FirmwareImage firmwareimage3 = new FirmwareImage(new Date(1559288262126L),
                                                             "7a159e66-eb4b-462e-a258-15f4c1a45f59", -82,
                                                             "5c1f9d21-1dc8-4942-89f5-2a53ce693db0",
                                                             "80969585-280d-4f80-8bff-df8ce5587b9e",
                                                             "5bc5feb9-0e1e-4492-9510-39ba6bdb4c56",
                                                             "b13bce7c-682a-4e8a-8764-5cfeda494894",
                                                             new Date(1559288259382L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotNull(firmwareimage3);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertNotSame(firmwareimage3, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage1, firmwareimage2);
            assertEquals(firmwareimage1, firmwareimage1);
            assertFalse(firmwareimage1.equals(null));
            assertNotEquals(firmwareimage3, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
