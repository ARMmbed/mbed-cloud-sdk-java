// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1559655028792L),
                                                             "cc7de4e5-367f-46e9-95a4-feb4e9fde447", -69,
                                                             "856f6d23-beff-4de8-988f-4a81177530c4",
                                                             "192f1615-982d-40b4-a2fd-3bc2c366ec5b",
                                                             "7ae82487-6ffa-4316-b4a2-62c53d9bd4ad",
                                                             "fdeb68d4-75c9-45e0-a386-3c3e26639b3b",
                                                             new Date(1559655035368L));
            FirmwareImage firmwareimage2 = firmwareimage1.clone();
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1559655036328L),
                                                             "18c19a88-4fa8-40b0-99a6-dc78756f5355", 15,
                                                             "055fa6cd-0082-492b-a020-8332a432fb7f",
                                                             "f57b77c5-318f-415f-b191-593a41185cac",
                                                             "eb9d0dd6-3976-48b2-9e42-597f385d497b",
                                                             "dbd592e7-5980-4ccb-b7e1-18ee8f67f2b8",
                                                             new Date(1559655032836L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1559655036328L),
                                                             "18c19a88-4fa8-40b0-99a6-dc78756f5355", 15,
                                                             "055fa6cd-0082-492b-a020-8332a432fb7f",
                                                             "f57b77c5-318f-415f-b191-593a41185cac",
                                                             "eb9d0dd6-3976-48b2-9e42-597f385d497b",
                                                             "dbd592e7-5980-4ccb-b7e1-18ee8f67f2b8",
                                                             new Date(1559655032836L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2.hashCode(), firmwareimage1.hashCode());
            int hashCode = firmwareimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        FirmwareImage firmwareimage = new FirmwareImage(new Date(1559655028121L),
                                                        "08937f93-f514-4dbb-aede-7f6f42d1e89b", -46,
                                                        "9c804fa4-77c7-43c1-b71a-d2468a14d465",
                                                        "b634c241-7b48-4e25-b5e8-db94012099a5",
                                                        "fce4ab25-701d-4ccb-a605-1508277821df",
                                                        "fcd939e4-6ad5-44f5-9432-f67b81f5f72e",
                                                        new Date(1559655034436L));
        assertTrue(firmwareimage.isValid());
        FirmwareImage firmwareimageInvalid = new FirmwareImage(new Date(1559655029442L),
                                                               "e9d59f07-601d-42e2-a403-bd0448595515", -94,
                                                               "14018d91-9b4d-416d-89c4-86dfc8b3e73e",
                                                               "a7653554-3266-41bc-9c38-2322818f539a6d12f5c1-d23b-488c-9bbd-3fee2b8414a2ce38276c-9ea9-4295-a200-c8a9812740136d7ec0fe-017f-412d-ba6a-e36b5a9a8c94005858fe-cd60-4526-bd0f-6db06aab19eaae593985-9694-42d7-a845-5a3f5bdc52d97f37c0bd-fa6e-4e92-a161-3e8fc577b38be669fc04-54c2-40b7-ad31-3862cf8b900d8ef8144d-52f3-44bc-b750-bb20a8826b681edf9c5b-10a1-4c13-aa7f-2884c7599fac4779c4bf-eb22-4f35-9ed0-0591185a8524a899aedf-c47a-43ca-ba89-2f1a8b51db31ee7f1f0a-58ec-4fdf-a045-db3006d375762ff35797-72ec-4b5c-a781-98ad202fe2f16ce461e4-467c-49ce-afae-3f04aeb7d7f9b0e5b46d-3051-4272-9d3c-bf3a37717ce02470ae5a-8fdc-4133-904d-1a955ca3287f669f9d2c-43cb-4127-83f5-e44300b24188e035c0c7-4e1c-4861-bd89-e58857fdd6403ba7d8e0-79fb-4b59-86ec-6f19cbcbf12f84e65df8-e889-4136-bb32-1bec0e21f43d28040df0-6391-40d0-9fc4-b7fdbb5cc517c5315b39-4ce7-4292-90fa-b0d044a1158ba54e230c-8469-4136-b92d-66417c6f24421896d47c-9e47-428d-8d5e-a473e123140cac33f721-72b1-4067-9131-567f469bddda6ba20a56-89b2-447f-a345-a48b4cd80a90735dfa6e-0fd9-435c-8197-7739b641e2a5f1f37bbb-19d7-4ffd-93e9-ce289cbb696771476a48-8591-413a-a7c4-c2292b636e109bcccc52-6ae2-4a24-a35d-10101affd4b8c666b337-9069-42f2-8fd4-4ef27432a276bf8d4a3f-468f-46dd-b12d-1b7864588ebbb52072c2-c4ac-449c-a7ce-70600c632980357ba3eb-84c1-418c-8b68-25d74d98f0213e518746-dfcb-4a59-9114-3d4af482ea631365f62d-3173-4398-b7d8-c75099f6b845d1c4806a-d9a1-492c-b479-103e60e093ff4cf172d4-4ca2-4ef9-a8b5-47516992c7d2069ff786-c703-483b-9ab6-50c8ae5fb9aad4b3823a-d44a-4208-9cca-e1fe885cc4e7bdb015d6-b15c-4546-8976-2d14d32585407b409372-eb7f-4a8b-88f7-b556490819c4409c1a19-6967-46c9-9eb3-53c7575a464d782296c6-6547-49ed-ad22-c35c2f5f6a20ce2695e0-3914-41b7-93b1-34816c27f2e75aa5aee9-aec6-4126-b63c-95f5e707576c130f432b-8a10-4c0c-be8d-aba6cfc6fb105309c4af-31ac-4f56-88ba-7df782efdafa4b3bec79-e26f-4bfe-9d38-dfa6345112c0f3cf4527-4dc7-4939-b16b-2219b4435dbe2b0a3f32-798b-4e78-8dad-89febf6638cdd0942980-50d3-45fc-91af-a2b4e12a27f198f7bcdc-ab6c-4b77-84c4-a858ba0b3f7879ef4562-9930-4bd8-b190-88ba26522331423a68ff-4b8d-4776-8b5c-e55f872e42d3",
                                                               "c1e94851-2b26-4b41-b572-8ee71acdc29d",
                                                               "4841fcc6-19db-424f-8f32-cdf102ad54f4df92bf89-c1c3-4978-88e4-e587f157034612dd9f6f-4725-4d3c-bae9-ca6e23a3353fa1792bbf-f44c-46d7-ba63-8545670ea3af",
                                                               new Date(1559655030384L));
        assertFalse(firmwareimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1559655032767L),
                                                             "0936432b-3851-4f9b-9eb0-54c7c6d88583", 51,
                                                             "dc8ef745-86af-44d2-83c8-c5d4f07ec75c",
                                                             "582ec725-eca4-4b1e-a1f9-c88a761ddec5",
                                                             "65b9c895-5a2c-483a-903a-f2a47822b3d4",
                                                             "ebfcb05b-0b77-4845-b1ca-1a231330488f",
                                                             new Date(1559655032671L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1559655032767L),
                                                             "0936432b-3851-4f9b-9eb0-54c7c6d88583", 51,
                                                             "dc8ef745-86af-44d2-83c8-c5d4f07ec75c",
                                                             "582ec725-eca4-4b1e-a1f9-c88a761ddec5",
                                                             "65b9c895-5a2c-483a-903a-f2a47822b3d4",
                                                             "ebfcb05b-0b77-4845-b1ca-1a231330488f",
                                                             new Date(1559655032671L));
            FirmwareImage firmwareimage3 = new FirmwareImage(new Date(1559655035765L),
                                                             "01e80dd2-95c3-400f-9710-fcd1dc03e234", 111,
                                                             "6700cd52-777f-4b23-8631-77170d154956",
                                                             "7439cc79-1591-41d1-b48f-d815bf65eb57",
                                                             "98b51065-8505-4b01-a10e-c68ce38cf421",
                                                             "e673735b-81aa-46ff-b25d-abd4b8e0e76a",
                                                             new Date(1559655031874L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotNull(firmwareimage3);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertNotSame(firmwareimage3, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage1, firmwareimage2);
            assertEquals(firmwareimage1, firmwareimage1);
            assertFalse(firmwareimage1.equals(null));
            assertNotEquals(firmwareimage3, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
