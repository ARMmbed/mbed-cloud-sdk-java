// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1559746945789L),
                                                             "32eaef97-63bd-45a6-b7e3-17eb0c38c8cf", -26,
                                                             "33552259-c8e0-4981-8534-903f90da4251",
                                                             "426d5ec4-838e-4c2e-9562-5ea3173a234c",
                                                             "b9d454f0-01f9-46ca-8277-b8dd35562da1",
                                                             "75eab78e-f159-4523-a85a-6fc3e7908601",
                                                             new Date(1559746949320L));
            FirmwareImage firmwareimage2 = firmwareimage1.clone();
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1559746945740L),
                                                             "18954589-6904-412a-b9c3-d68fa44fa893", 77,
                                                             "26058dca-b3b9-4021-9f8f-125e12cb8643",
                                                             "b3a48200-3e6e-4f31-8ed5-571b5e494718",
                                                             "399b4c1c-ec65-4185-9b5a-834917d9079b",
                                                             "3cd02027-b9bb-44fa-b8b2-27957722e957",
                                                             new Date(1559746949514L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1559746945740L),
                                                             "18954589-6904-412a-b9c3-d68fa44fa893", 77,
                                                             "26058dca-b3b9-4021-9f8f-125e12cb8643",
                                                             "b3a48200-3e6e-4f31-8ed5-571b5e494718",
                                                             "399b4c1c-ec65-4185-9b5a-834917d9079b",
                                                             "3cd02027-b9bb-44fa-b8b2-27957722e957",
                                                             new Date(1559746949514L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2.hashCode(), firmwareimage1.hashCode());
            int hashCode = firmwareimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        FirmwareImage firmwareimage = new FirmwareImage(new Date(1559746952526L),
                                                        "b5a9c0ae-cb42-4d3e-88fc-57545f79b41e", 103,
                                                        "b7841ffe-d104-430d-a2c1-c3476df5f3bf",
                                                        "841a318a-2e66-4474-97c5-c83c53dcb412",
                                                        "b76476f6-c0e2-4349-b1bc-2c5b96c9a961",
                                                        "a1500889-6263-47e1-8f19-7aca7c0c0c3c",
                                                        new Date(1559746947430L));
        assertTrue(firmwareimage.isValid());
        FirmwareImage firmwareimageInvalid = new FirmwareImage(new Date(1559746948787L),
                                                               "e25a08e0-0915-4457-b494-0abd989d334b", -43,
                                                               "e7f27637-8349-43f3-8db2-a6d0d399b711",
                                                               "b6ff31d0-9e8e-43c8-9302-954910ea87e77ba5125d-7557-4fd8-89db-30ae9ac39a578320d27e-6829-4702-8fcd-1b1ec72f9e29b045ad09-5db1-4ec4-9bd5-28e384ef3e51fc253ef2-772a-4a07-b49b-5da11e7879db4ffbfd27-5862-4029-8021-54eaaa91d2b237e528e2-141e-4db2-b441-8ccf16edfb269b265237-67a6-4f22-90ec-29a5d86e343ed9945d95-20ca-4140-9b6f-41d78d8235ab732f0e22-34bb-4fd6-bd53-ffa1f70594536bdb3b23-8dae-4451-9ad2-16f89a08c3ea40f036fd-e299-468a-a2ee-b343a042e226ae759916-eb42-482e-a737-3aaa0e9836f40895aab2-4736-4092-9bcf-8baca9b4ab6ea32ccd0d-3699-4482-a795-c5228939fe2a157940cb-f689-433d-afad-ac825370bf584559510a-c2d5-4aac-9989-6629c1c99e1219e69d99-d258-42df-96ac-8f182641e8df897bb2f2-5aeb-43d7-8fbd-83aed49d4f138dff89db-b82d-4e70-b0ea-2b5935cecd92651637dc-6be3-493f-99ec-ab7ee57959474ac0a802-f39e-4972-bdd8-c689f52558f799e46aff-4308-494c-b8bf-86e8ecac4db968dc21fb-8808-4ef4-a665-c1abddc8f94bb3353324-0354-4859-879d-ef098f59c03ec2aaadc3-7370-4a45-b3af-c03b83f4e6153917351e-7afa-4171-8e71-ea1e7e14a7bfaab912f9-9ab2-4c08-9b5d-3ac79e73e08b6382ac9e-ac28-4ac6-a5d5-357a0612193e5bc74fd6-d29f-4a18-8b05-9e142f3f55e385b1386d-7e26-45d5-9dab-5fc2125866290820be59-0d80-4f20-a4c5-c11d7a2355f2373b1d54-c002-4cf5-b4f4-c86babbe93b6f79e697f-f1e3-40ca-a6d4-e4d94e8a7d311daa631d-7c81-47f2-ae25-c61a1cd2203624fccbdf-6f20-489e-b5e9-5e6715e099c399dadeab-95a2-4cda-83d4-0fb7829d50677cf0e8be-ac6e-43b0-9796-8b5d8260edc861f4d507-1a26-4643-abdd-6990080330cdea29b048-92e1-49af-85f6-2b2c2dc394493e67c486-f0f7-46a8-bcad-fbce9ef585713641d088-cb6a-4727-ac6f-cbc480a8282dbfd10a0c-3f98-4690-a568-daae0e530f48a2bb2d7d-463b-44d1-80c5-e3c1b8127c62925f23bf-680e-4649-906c-4d3c0bbe939b245d250b-7991-4b2f-8c5f-6f4c2f6129b28bd9e76c-1a55-4810-963c-49e4e423523a2d82466c-c8d7-4b98-8347-2452dfacf682d0765d03-df8f-43c5-9ca2-248cd73c22296c7d654d-40dc-4b07-afd8-d987147a105a037a061d-6023-456b-a6e1-f2c6d5a23742657c1ab3-1442-481a-8948-38d4c1e55163cc06b048-01b8-4a3f-95ad-fd4b826796a4bfb165c6-f5a1-49bd-9f12-2b6c3c9118340ce71121-1629-40f0-85e4-d3862dcc31240ddff5ec-cef9-43a4-9dab-385879d27636",
                                                               "9f25b385-cc7e-4a42-9971-cc3b07264829",
                                                               "e9eb6cd9-1b2c-40eb-b2cb-559f3f4592196bae1f39-df97-4236-bcd1-1e2bfba26ec85e59529d-1e7c-4a97-aaf3-102324fb46d1075451a6-7ed7-44df-a43e-447eb462fe16",
                                                               new Date(1559746955555L));
        assertFalse(firmwareimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1559746950270L),
                                                             "b97d5d57-f727-4e13-8363-a47c4f5e5a14", 57,
                                                             "5069c58d-f051-4d2b-bf8e-39a0f24357cd",
                                                             "d6f04685-b94e-4c6f-a4ff-2f10ec5e2fc5",
                                                             "3a5c11fb-c097-4646-870a-2294a7edd80f",
                                                             "5ff17195-d90c-41b6-bb8f-8ba1e3d4b15b",
                                                             new Date(1559746950358L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1559746950270L),
                                                             "b97d5d57-f727-4e13-8363-a47c4f5e5a14", 57,
                                                             "5069c58d-f051-4d2b-bf8e-39a0f24357cd",
                                                             "d6f04685-b94e-4c6f-a4ff-2f10ec5e2fc5",
                                                             "3a5c11fb-c097-4646-870a-2294a7edd80f",
                                                             "5ff17195-d90c-41b6-bb8f-8ba1e3d4b15b",
                                                             new Date(1559746950358L));
            FirmwareImage firmwareimage3 = new FirmwareImage(new Date(1559746953132L),
                                                             "40ea14bc-f8de-420f-bdce-359d74a253ac", 98,
                                                             "6de23398-92d8-46af-8171-e9fc89059053",
                                                             "e47f535f-d38b-400e-8c7f-152b099a56df",
                                                             "fa49421d-5fe5-4df8-9b85-02da799ac25f",
                                                             "01a9ba9a-b6e3-49df-9fee-156640f32276",
                                                             new Date(1559746955484L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotNull(firmwareimage3);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertNotSame(firmwareimage3, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage1, firmwareimage2);
            assertEquals(firmwareimage1, firmwareimage1);
            assertFalse(firmwareimage1.equals(null));
            assertNotEquals(firmwareimage3, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
