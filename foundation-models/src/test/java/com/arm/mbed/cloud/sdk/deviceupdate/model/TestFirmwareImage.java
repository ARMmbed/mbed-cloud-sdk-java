// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1559833684665L),
                                                             "8770e426-0b57-418c-909c-ea5b898dc017", 54,
                                                             "78e7ed1f-a00c-45e0-bbf0-72630ec1882b",
                                                             "5c30ff1d-fa16-437b-86aa-9f17e2195d1f",
                                                             "1eebfdf2-05db-46ee-83f1-5e4c90728948",
                                                             "0c196ac5-a6e5-4de3-9403-d8b872d2209e",
                                                             new Date(1559833683909L));
            FirmwareImage firmwareimage2 = firmwareimage1.clone();
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1559833677040L),
                                                             "ac792bb5-52a8-43b9-8613-7ce46f69b987", 63,
                                                             "cabc00d5-97d2-4d10-b053-2b875da9df6c",
                                                             "ea31ef79-480b-4ac4-9207-1e840f320cd5",
                                                             "0a624362-c804-44de-9cd3-57fa6efe70e4",
                                                             "fd7eb058-f13e-474e-bc49-3939f1936a40",
                                                             new Date(1559833681088L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1559833677040L),
                                                             "ac792bb5-52a8-43b9-8613-7ce46f69b987", 63,
                                                             "cabc00d5-97d2-4d10-b053-2b875da9df6c",
                                                             "ea31ef79-480b-4ac4-9207-1e840f320cd5",
                                                             "0a624362-c804-44de-9cd3-57fa6efe70e4",
                                                             "fd7eb058-f13e-474e-bc49-3939f1936a40",
                                                             new Date(1559833681088L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2.hashCode(), firmwareimage1.hashCode());
            int hashCode = firmwareimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        FirmwareImage firmwareimage = new FirmwareImage(new Date(1559833679900L),
                                                        "3f105e16-c2bb-42f0-b339-75e27ef544e4", -13,
                                                        "1f2ebb39-fbd5-4aca-a742-0f4e8bbde639",
                                                        "3a5f3b67-7ed4-4759-a4bc-f6729f98a282",
                                                        "03a7fc69-4d1f-448f-aae3-1de04b992845",
                                                        "8963577f-ed26-4199-9622-c4235415db9e",
                                                        new Date(1559833681354L));
        assertTrue(firmwareimage.isValid());
        FirmwareImage firmwareimageInvalid = new FirmwareImage(new Date(1559833677120L),
                                                               "efdc7e93-deab-4026-90d0-1a948d185553", -61,
                                                               "460692e7-28a0-4175-a7d3-76a8a0b66f1f",
                                                               "4172bbe4-4286-4e53-bc75-95ec3991c7f03d0e2fa1-7863-4ecd-a49e-17ab45b3b647fb5ae52f-362f-43ea-9f4c-032867280cf5029b9e16-5671-4a8d-9c9d-4f2ea74dd4d468619c3d-430f-4080-a322-85b1cfde6d04ac9c7c75-ea44-4306-9cc4-af8b8214f7f0bf524494-a475-4387-998f-ebae2cb2f6ad6a0c13bb-6601-419b-a915-f376e540c64b436d2ec3-b135-4364-b289-4adaf244d6f75339476a-e080-4972-9674-4a71f3c893f82d1a9e18-61db-44f8-88cf-496bf77558fb85c9e5b6-faab-4ebd-91ca-547fe3cce8c918f5b967-3989-4883-916d-967fbec02c074e4ff973-491f-4ca9-addd-e498161a9f2742cf63a7-68ab-4f3b-8f65-48810321334518fcc7d4-cc50-4286-aa3f-9e282f3fe40f603ce274-f9d5-491e-94ec-a481260a1434d58b5e52-fe18-4798-89a2-8e8a99d395531d9413c9-b76c-46b7-afd3-9910ea4a66a2920c94f6-c0de-42f8-bb8a-91226d982b4e69d9cc2c-12e8-4aa6-aa77-5d5da5b7a4af72f4e545-e7c9-49a4-be34-340bdcb03373cf761c22-3244-4760-a110-0bcb270f57850a0bb70f-fb1e-41af-8bbd-ff2bf2a25016faf203bf-1dd2-4ff8-8105-33c3b9e3fcd2664d9d81-f1b6-4c09-8d82-d032978977d419106615-eb65-4922-b474-80f72fd8d9ff291a34c0-285b-431f-8f3b-6adb96c686f2b19753f9-e35a-481e-be99-a540d1cdd026619c940f-466b-4dfd-9c16-f9d06d98a57ddc09abdf-ce4b-4642-8179-9cbe3456d603259b5f31-949f-4e15-96b7-97f835aa2ae6574c5b5e-98fd-4158-885c-f98e981cad5d5c3cd6e2-a0fd-4713-b717-4c04adf6cf264d806c0f-fa20-4a52-93a8-281b0dd95a13fd3aee8b-e846-435e-9824-ec9f756960d92e7fd53a-ad03-40ee-beb0-183603022fb6e10b08bf-9174-47d4-8f4f-91c5a029f75005cf528c-a1f4-4e30-8e29-6ee6ca98b818fcaee9fd-b6bb-45fb-8eb7-94f6b475dac1065af3d5-9186-4a93-8c5e-7c6ca76d9666327ec4ce-9bb9-4a0c-bcbf-ef4b1aca139d23c02e7b-3c92-4cdb-97c1-26f4eae041d2c4a8d8c8-901b-4b2f-bf4c-03f3f881c2837eba71a9-c197-4c43-8530-2548f5b1c5eb8e8854ab-324b-4564-954d-67301412d1fcb9cd40a2-98e9-4782-ab82-dc618483de3b52c09fb8-e9db-441a-ae49-60b5b504399d0243de00-0d58-4567-bab0-c26f80ead29f28a3a032-5573-4702-8297-b358d06a8b8e17fcaa68-b973-40b7-bb1b-0b262defa66b71006069-ddee-43ba-9b23-3567e9f79774e804d41e-cef5-4401-b586-0e5c7b9fb9966364ed7e-18c9-44ca-84aa-b0b501889eeb39400378-d076-4313-93cf-4b1d312a9cfa7ffbbd34-cf9e-4fd9-9106-aa0f7f2161b8",
                                                               "f33fa5e3-38c1-4023-89ad-9788864cf90a",
                                                               "be845278-115d-48b9-9d6a-80da0d4a24c3f8c3c273-5d23-4dcb-bf84-adc17467017b62d47a68-8fe8-4cb9-a99c-7a99a669f5b83c0f06de-96a9-4a5c-b890-bba8ec5edfac",
                                                               new Date(1559833678383L));
        assertFalse(firmwareimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1559833686073L),
                                                             "d79e135a-862e-49c5-bee8-ee8ba80e37fc", -16,
                                                             "cc1ee1b9-2e37-4f35-96f6-a4d849b591e4",
                                                             "60f79637-d5d7-45d7-bf8e-b12e9fb9be81",
                                                             "4e4c3e30-a1b5-4b01-9441-2f247cb67601",
                                                             "e815d916-6541-41ac-ba87-44a65cdb49f9",
                                                             new Date(1559833681304L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1559833686073L),
                                                             "d79e135a-862e-49c5-bee8-ee8ba80e37fc", -16,
                                                             "cc1ee1b9-2e37-4f35-96f6-a4d849b591e4",
                                                             "60f79637-d5d7-45d7-bf8e-b12e9fb9be81",
                                                             "4e4c3e30-a1b5-4b01-9441-2f247cb67601",
                                                             "e815d916-6541-41ac-ba87-44a65cdb49f9",
                                                             new Date(1559833681304L));
            FirmwareImage firmwareimage3 = new FirmwareImage(new Date(1559833681015L),
                                                             "49f5b853-34eb-4081-acd9-23bf9e5e20c6", -88,
                                                             "5e42fafb-f34a-47ac-8716-794326f30861",
                                                             "ce55a62d-6152-44fb-86dc-3d671870e59d",
                                                             "3ac5a0e8-03e4-4b82-b23c-e7cac5a95555",
                                                             "75f8b9e1-1e29-408d-815a-847ed791cada",
                                                             new Date(1559833683356L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotNull(firmwareimage3);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertNotSame(firmwareimage3, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage1, firmwareimage2);
            assertEquals(firmwareimage1, firmwareimage1);
            assertFalse(firmwareimage1.equals(null));
            assertNotEquals(firmwareimage3, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
