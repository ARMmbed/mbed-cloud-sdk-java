// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1559300097940L),
                                                             "7f10a1be-cdf8-485f-b1be-c462c33b1635", 103,
                                                             "9284c2ee-744f-4334-bc69-e12aaf326f84",
                                                             "f3a58a18-4765-43b9-9411-98ba67e23b2f",
                                                             "b2df9c39-4991-4cec-b99b-464c8eba21e6",
                                                             "1e21ada3-e38c-4d86-9f22-9625ad972cbf",
                                                             new Date(1559300105850L));
            FirmwareImage firmwareimage2 = firmwareimage1.clone();
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1559300099612L),
                                                             "29d59579-580e-4157-846d-2172e3fcd570", -118,
                                                             "19f379d7-ef78-46d9-9dbd-85e390a94887",
                                                             "f938960f-afd6-4d34-8949-3e853b2b7be1",
                                                             "d7778144-ee3b-456a-97d7-95e9489cd8f2",
                                                             "9e7cc368-24d1-483b-8c8b-854cce053005",
                                                             new Date(1559300103281L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1559300099612L),
                                                             "29d59579-580e-4157-846d-2172e3fcd570", -118,
                                                             "19f379d7-ef78-46d9-9dbd-85e390a94887",
                                                             "f938960f-afd6-4d34-8949-3e853b2b7be1",
                                                             "d7778144-ee3b-456a-97d7-95e9489cd8f2",
                                                             "9e7cc368-24d1-483b-8c8b-854cce053005",
                                                             new Date(1559300103281L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2.hashCode(), firmwareimage1.hashCode());
            int hashCode = firmwareimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        FirmwareImage firmwareimage = new FirmwareImage(new Date(1559300106895L),
                                                        "85ff7c1a-b28c-49cf-9f8d-408bb18b3535", 89,
                                                        "92f6bd25-00ec-4a94-8c5d-99baaddd394c",
                                                        "57e19bb3-20fb-4e5e-9755-6b17b1aaaef0",
                                                        "8850667a-127e-4b72-8390-ff38bb9d2479",
                                                        "de6383e0-0002-40da-812e-5a143a0a556c",
                                                        new Date(1559300106055L));
        assertTrue(firmwareimage.isValid());
        FirmwareImage firmwareimageInvalid = new FirmwareImage(new Date(1559300099482L),
                                                               "935ae20b-42e2-43f3-824c-536d0da13d1b", 33,
                                                               "61293e20-5b6d-40d4-8947-66bb5984617f",
                                                               "1296d0b6-cc13-47ea-9a3a-bef2e682ad53999ef662-2045-4638-b72d-de643f75bed8bb63c01d-5b08-44a9-b8a7-d052e09da12b6dfdce28-f9bc-483c-84c0-effa538916844dff3f86-675d-4f76-a350-f1bcb58071bfce5eb19d-f0c7-4a4b-93e5-2658ef576c7f638f7b46-47f1-4528-8bea-147c386f1dbababfe4ac-e37d-4775-b343-2f6d812a4e1b3d4238c7-cf29-43b0-8e11-ab72a08cfe0942922dad-bb3a-4d5d-8ddb-53c2cc71710a3d616a57-636c-4435-beb5-32627d2fb4ddff360601-57d5-457b-ad0b-14f8bc5afe50bd5f29b1-28ad-49a7-820b-bf8432aed1b61ea84d07-b6c2-46ff-9b33-03dc9eafb10d6fcd2b2b-c83c-401a-9130-b14d6e08e41aea2812ee-8238-4f0b-9c71-9676ec2092412fa718ee-5980-44df-ab7c-978006ee63898d7ccafc-8e2f-40fd-a885-1dfbb6e1459f96152e91-8243-4c16-8f15-c47cfe11dff102dc6768-bb22-439b-95eb-262017b2ff01b481ce3c-34ed-4aab-ac13-9e46972780c1a71cb26a-8235-4e1c-84ab-427580c49a4f58524145-619e-4786-b17b-7b4e964c42ad24e0b750-1c8b-4498-bbfb-6c497158172992551e8d-c6be-42dc-9ae9-65500403d3d8768a3be3-d7df-4622-ad72-ab07250b465aed16c18d-1233-413d-a9b6-84a0b5586bee9b600bcd-4807-4b7e-aeb0-25e5c113cccbc29a7621-2074-4f6a-95a7-50c6819891db9dcf6aa2-22e7-46f7-a687-02f479497b0e38779d77-4029-4c8b-b179-e5b0e5cb60682d25b7d6-2211-4524-a0ec-599d1e50eb0aee4a8adb-c403-4375-a24f-f23562571990f15c4d43-4e4f-4e73-87ae-36e3643bec15c83a8197-e987-47b8-ad25-49a84cdb929c38c6ee7e-7d8c-45ee-b7cd-78027415af5902fada71-a934-4767-8a8a-888d258d8094a80afe1e-3b6f-4e80-a336-454067f714a28ad9432b-d5cc-4220-b34a-ed29fff68a7d6a88b939-b0d3-47d8-9b85-5befd29bd49e063ee71c-f3b3-4e7d-961c-8ae7610436d67b399be2-834e-4a1e-b4aa-367a656025ec75531058-77a2-41c2-8678-2461adc8d1818f1a7d66-c89c-49af-b885-1a8e14e060b14a648360-c224-41fd-9f98-70a5929be5ef993184b7-bed8-4977-b8e0-631a0eaf7cd63c15795f-c81d-430e-b035-9589d86bca569b8f7325-e985-41e6-8fc3-0dd5f993437af6af23a8-f5d8-445c-b551-03c15ac7f993083d4139-1fd4-4622-8914-5cd308c5b96a31ce3190-ec6f-48ad-bd7d-d1ecb943776d381811af-2627-4f75-9afc-e3e2c0725d2b2b7a268b-ae38-4243-b85e-b4614857c8524c95f81a-8d87-4df0-b103-10b50b2f08cf51c373fa-683f-4626-aa5c-9684f28ac54e9bc021e1-a1b7-453b-9499-ed67f68b541f",
                                                               "dff85c66-0c8c-4f04-ba43-fd9704f32825",
                                                               "0fa414cc-7c20-4ef8-8fdc-c6c070b2142c337475b6-6288-4bd3-b4d2-652918c86ad0ac6fcba4-67a0-4973-94b0-fe8c8035004216a24083-9af0-47da-9105-87186d654303",
                                                               new Date(1559300103414L));
        assertFalse(firmwareimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1559300106793L),
                                                             "fe29d07d-1c66-459d-bb45-e80c97c4ea2e", 8,
                                                             "d14c5bbc-f28d-43d7-a64f-158b1aa56028",
                                                             "d6fa0f7e-5b7a-47a3-98f8-4d6fe4ffe7d9",
                                                             "f149bcfa-0b98-46dd-915d-6d7f9abb1fd6",
                                                             "a67d4bc0-f912-49e2-a4ef-ac5faa50190a",
                                                             new Date(1559300098151L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1559300106793L),
                                                             "fe29d07d-1c66-459d-bb45-e80c97c4ea2e", 8,
                                                             "d14c5bbc-f28d-43d7-a64f-158b1aa56028",
                                                             "d6fa0f7e-5b7a-47a3-98f8-4d6fe4ffe7d9",
                                                             "f149bcfa-0b98-46dd-915d-6d7f9abb1fd6",
                                                             "a67d4bc0-f912-49e2-a4ef-ac5faa50190a",
                                                             new Date(1559300098151L));
            FirmwareImage firmwareimage3 = new FirmwareImage(new Date(1559300105467L),
                                                             "e7fc13c1-6383-4a5d-8000-bcc303441521", 112,
                                                             "9535bf34-c1c0-4792-b984-e338027a2eec",
                                                             "442a8a51-e349-4d5c-a90a-50a58c6ee99b",
                                                             "5c92eb85-f36b-4ab5-b5d7-04db0e76fd49",
                                                             "dd30e67a-cc71-4654-9ccd-42c51ab221ce",
                                                             new Date(1559300104021L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotNull(firmwareimage3);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertNotSame(firmwareimage3, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage1, firmwareimage2);
            assertEquals(firmwareimage1, firmwareimage1);
            assertFalse(firmwareimage1.equals(null));
            assertNotEquals(firmwareimage3, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
