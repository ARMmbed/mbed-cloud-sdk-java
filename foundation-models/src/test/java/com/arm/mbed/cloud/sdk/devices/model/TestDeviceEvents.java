// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559754639917L), null,
                                                          new Date(1559754637998L),
                                                          "b179ff4a-8e06-42d8-a4c1-37856e252584",
                                                          "37857da3-009f-4fa8-8582-ca26db2ac007",
                                                          "b0f4fe50-4be2-4577-909f-13d7f7683414",
                                                          "9510f506-fa12-4703-ad44-47e9cc13ba79",
                                                          "72b1ea8d-a2ca-4954-983d-f38bbddc0783",
                                                          "9fda1935-9f68-4a52-8b0b-32cfd4edfc84", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559754643245L), null,
                                                          new Date(1559754642379L),
                                                          "6c144b32-55a1-4105-b931-52a81c498ee1",
                                                          "224b6108-4d99-4e48-aa56-2f81d88c062b",
                                                          "22c200bf-f0fc-43b9-9c3c-b0c5fd0b9723",
                                                          "7be0d74d-b513-4947-8714-b71fe960215d",
                                                          "3510dc7f-9882-4466-b1ec-788212d0cb21",
                                                          "a7a6b3dd-df46-4c3c-b8e5-54d0f23f17ce", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559754643245L), null,
                                                          new Date(1559754642379L),
                                                          "6c144b32-55a1-4105-b931-52a81c498ee1",
                                                          "224b6108-4d99-4e48-aa56-2f81d88c062b",
                                                          "22c200bf-f0fc-43b9-9c3c-b0c5fd0b9723",
                                                          "7be0d74d-b513-4947-8714-b71fe960215d",
                                                          "3510dc7f-9882-4466-b1ec-788212d0cb21",
                                                          "a7a6b3dd-df46-4c3c-b8e5-54d0f23f17ce", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1559754643181L), null, new Date(1559754640683L),
                                                     "4982bffc-ccf5-4390-b830-54ce69d9bee7",
                                                     "36f0acfc-4db9-4595-b5ce-9c2a2f0e1197",
                                                     "b629a9b7-c80c-4e8e-b22f-80534ea32c0e",
                                                     "cf0e592f-3de9-48db-bcc5-9e3dd4b2bb68",
                                                     "3e8d6df2-b1b4-40b7-a771-6e32082d1bc8",
                                                     "ba8a0bd1-bd92-4285-9b79-0436f264de4e", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559754639783L), null,
                                                          new Date(1559754639176L),
                                                          "b8b64b80-6821-4a7b-a43d-88ad82bf58ad",
                                                          "d15b50f2-5258-4b71-8f26-4f0b0d8701d6",
                                                          "c29a87c7-2eca-4870-ba19-d1bc3787538a",
                                                          "2ebe803a-aa08-4d53-80a1-025cc2e6d8d6",
                                                          "9986ce30-262b-4654-aa4b-03606da36bc5",
                                                          "04d12edb-24b1-43ce-abab-dafd3a51b4a2", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559754639783L), null,
                                                          new Date(1559754639176L),
                                                          "b8b64b80-6821-4a7b-a43d-88ad82bf58ad",
                                                          "d15b50f2-5258-4b71-8f26-4f0b0d8701d6",
                                                          "c29a87c7-2eca-4870-ba19-d1bc3787538a",
                                                          "2ebe803a-aa08-4d53-80a1-025cc2e6d8d6",
                                                          "9986ce30-262b-4654-aa4b-03606da36bc5",
                                                          "04d12edb-24b1-43ce-abab-dafd3a51b4a2", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1559754644342L), null,
                                                          new Date(1559754637330L),
                                                          "8368910c-bc42-4a16-a13c-4a5ff660de69",
                                                          "e0a5af7b-226a-414a-a4e9-375bdf4243f4",
                                                          "08785448-aa23-4943-a8b4-8fb119208d35",
                                                          "293a194a-6953-4016-889e-bbbde6cde861",
                                                          "4cd39e28-2663-4c4f-8585-df680f9749c4",
                                                          "2255397b-3656-4d91-9e38-3ac392d18e19", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
