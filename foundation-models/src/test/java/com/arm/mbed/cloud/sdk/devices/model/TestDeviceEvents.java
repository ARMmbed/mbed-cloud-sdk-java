// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559662778682L), null,
                                                          new Date(1559662776646L),
                                                          "134e6336-d1b2-4377-8fed-dd06aa434938",
                                                          "9bfca817-63a0-4477-b384-d3ae5634335e",
                                                          "7d5dda0d-d6c1-4c5f-a7df-b69613f098ae",
                                                          "1aeeb4b4-275d-4e73-afd6-a4f670e1889b",
                                                          "fdc58993-3c4d-4636-9d8b-5f499846b56a",
                                                          "9fc5dde6-fb30-44c7-923b-51d84a4603e0", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559662776785L), null,
                                                          new Date(1559662782547L),
                                                          "676843b3-307d-439c-8dba-a68bf3ff3d23",
                                                          "321ab2b1-0f05-4f8a-a67f-b4b777bda0a7",
                                                          "c34f76b9-0515-4494-91fb-c390018b9fba",
                                                          "5562c3ab-ad3d-4d1b-87e1-a2eaefdded8d",
                                                          "c22e4917-9c1e-4568-bb2e-926bd92d0de8",
                                                          "7da6be41-fc7d-4dc7-b45f-d23f212fdc89", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559662776785L), null,
                                                          new Date(1559662782547L),
                                                          "676843b3-307d-439c-8dba-a68bf3ff3d23",
                                                          "321ab2b1-0f05-4f8a-a67f-b4b777bda0a7",
                                                          "c34f76b9-0515-4494-91fb-c390018b9fba",
                                                          "5562c3ab-ad3d-4d1b-87e1-a2eaefdded8d",
                                                          "c22e4917-9c1e-4568-bb2e-926bd92d0de8",
                                                          "7da6be41-fc7d-4dc7-b45f-d23f212fdc89", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1559662784074L), null, new Date(1559662779525L),
                                                     "f7e0b74e-5658-4538-a6cc-56126c6288e7",
                                                     "ad00b0cd-7910-4be9-9197-41068a403930",
                                                     "f640935b-415d-4e70-be32-714f5223330e",
                                                     "3d7a6efe-9430-467b-8907-0307ccdadb25",
                                                     "f26d0921-98a1-45ea-8a11-93bc547eb746",
                                                     "59b57ec3-6072-458c-b777-9ba07c33af8c", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559662778046L), null,
                                                          new Date(1559662778663L),
                                                          "fbe2b266-f239-4fc2-8d24-fc3bf2b36969",
                                                          "45cfe92a-b006-4c45-be03-ddd6b9ba7eca",
                                                          "36dc9816-b29a-4632-8622-4a0b45d2c450",
                                                          "dce98c2b-aad5-4ecc-bb33-298e926ddf3b",
                                                          "04217ff6-0b79-47e4-a0f1-0ec1995e65c3",
                                                          "de0f9a2c-3708-40e5-85fc-3d232bebb33e", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559662778046L), null,
                                                          new Date(1559662778663L),
                                                          "fbe2b266-f239-4fc2-8d24-fc3bf2b36969",
                                                          "45cfe92a-b006-4c45-be03-ddd6b9ba7eca",
                                                          "36dc9816-b29a-4632-8622-4a0b45d2c450",
                                                          "dce98c2b-aad5-4ecc-bb33-298e926ddf3b",
                                                          "04217ff6-0b79-47e4-a0f1-0ec1995e65c3",
                                                          "de0f9a2c-3708-40e5-85fc-3d232bebb33e", true);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1559662779684L), null,
                                                          new Date(1559662782736L),
                                                          "43d5a0e5-370d-4764-9c0c-1c24ccaac9d7",
                                                          "09ac5e97-a579-485b-9fa3-751de24cb309",
                                                          "2c81d8dc-f47c-41f2-a8e3-73c5b93277d0",
                                                          "9247974d-626f-425c-a989-8e982e80d797",
                                                          "a0ab5265-c30b-4cd3-8c67-9f2445909a12",
                                                          "97325778-fd4f-43fe-a4d9-9e32c8d080cc", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
