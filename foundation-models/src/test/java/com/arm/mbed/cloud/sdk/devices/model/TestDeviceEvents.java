// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new java.util.Date(1546622514912L), null,
                                                          new java.util.Date(1546622513390L),
                                                          "7410a806-0e56-4498-a2ae-f0f561499243",
                                                          "2ca7b849-cc43-43d6-9e5b-30337970e929",
                                                          "6ed534ac-2017-4cce-a471-e975c3d93094",
                                                          "d5971b06-4d5b-41ff-be2d-8753bb7e1f91",
                                                          "854eea28-1280-4392-b3d3-f456c309bebe",
                                                          "8c493283-e3e3-4573-8d34-c3ba332500e4", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new java.util.Date(1546622517838L), null,
                                                          new java.util.Date(1546622517059L),
                                                          "0c23d53d-4e0a-46df-98f0-c7abad25ab12",
                                                          "c52180ee-fba9-4be5-bcfd-cb52cdcec206",
                                                          "768270b7-c122-4a94-bdb8-ebbc1b9aab3f",
                                                          "a14e8323-8652-48b5-a19c-5a917dcaac9b",
                                                          "1095de1d-9d65-41f0-94e1-dee8a4a43b3c",
                                                          "1bcf1585-321e-4b3a-a065-3a8b3ba33dfd", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new java.util.Date(1546622517838L), null,
                                                          new java.util.Date(1546622517059L),
                                                          "0c23d53d-4e0a-46df-98f0-c7abad25ab12",
                                                          "c52180ee-fba9-4be5-bcfd-cb52cdcec206",
                                                          "768270b7-c122-4a94-bdb8-ebbc1b9aab3f",
                                                          "a14e8323-8652-48b5-a19c-5a917dcaac9b",
                                                          "1095de1d-9d65-41f0-94e1-dee8a4a43b3c",
                                                          "1bcf1585-321e-4b3a-a065-3a8b3ba33dfd", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new java.util.Date(1546622511568L), null,
                                                     new java.util.Date(1546622512835L),
                                                     "b88fd91d-ca37-4610-93f0-519022f1ed87",
                                                     "8138beef-4713-4f5c-a22b-d07d41271e78",
                                                     "e9612b10-c9e9-4a83-9066-f0a7ec408eaf",
                                                     "bad9627c-4de6-46d4-94c0-75f5c4aa04e1",
                                                     "e43e684a-4d11-42c7-b972-66d830779300",
                                                     "32a45e67-c701-49fc-bfa9-28c3eeb4f2a9", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new java.util.Date(1546622513216L), null,
                                                          new java.util.Date(1546622514360L),
                                                          "3cb4114d-8eed-44fb-8bae-b9720996e9b5",
                                                          "13ffde0c-1d1d-4008-8d9a-614b31c349fd",
                                                          "7f1c084f-6738-4dba-9856-968d1c1fd544",
                                                          "891d88f8-bb47-46de-bebc-b263d39ee576",
                                                          "938315d8-2101-4773-8fed-fb28cd5d4ad3",
                                                          "4d3fcdc7-67d8-4cc2-8ef9-889612b70685", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new java.util.Date(1546622513216L), null,
                                                          new java.util.Date(1546622514360L),
                                                          "3cb4114d-8eed-44fb-8bae-b9720996e9b5",
                                                          "13ffde0c-1d1d-4008-8d9a-614b31c349fd",
                                                          "7f1c084f-6738-4dba-9856-968d1c1fd544",
                                                          "891d88f8-bb47-46de-bebc-b263d39ee576",
                                                          "938315d8-2101-4773-8fed-fb28cd5d4ad3",
                                                          "4d3fcdc7-67d8-4cc2-8ef9-889612b70685", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new java.util.Date(1546622509289L), null,
                                                          new java.util.Date(1546622512865L),
                                                          "15afb61c-eeb8-4dd9-8e29-454200429ba3",
                                                          "cf097f58-399b-45b6-8ae2-6d243aaa17b4",
                                                          "21e32d5b-7227-4b47-a6c4-c78c0a8918f9",
                                                          "4d51f14b-79dd-4871-85bf-c4731b122eb2",
                                                          "67f09458-709c-4638-9cab-9d08e1de4d7e",
                                                          "0975f1ad-5078-460b-b91c-23a0e641a276", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
