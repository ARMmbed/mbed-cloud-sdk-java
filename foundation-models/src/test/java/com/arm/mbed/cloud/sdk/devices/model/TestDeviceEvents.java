// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559300103323L), null,
                                                          new Date(1559300101822L),
                                                          "e89902ac-c9d3-427d-b5d3-8be746d77abd",
                                                          "ffb753e9-20ae-4326-9a53-881d6fb55e63",
                                                          "3671cc77-f980-4baf-b2f4-d83ae5139bb3",
                                                          "ab98ac92-240b-48e4-93c9-f8d8d23c8be0",
                                                          "b3c3fcbb-7cdf-4405-b256-480c74baf178",
                                                          "9194ff47-2745-46ca-8b7c-e67f49398839", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559300103188L), null,
                                                          new Date(1559300100480L),
                                                          "eded2713-e342-4e68-994f-2517381f0568",
                                                          "ebf7f362-3a91-48d6-baaf-ae743aac68d5",
                                                          "95026449-929f-46ac-a40e-dd6420818b23",
                                                          "42d1234d-6c36-411b-bccd-b072bdd2c5a6",
                                                          "153d9e95-684c-4526-8009-af48e26b2f43",
                                                          "317022b5-d948-4189-8748-6318b48b3c06", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559300103188L), null,
                                                          new Date(1559300100480L),
                                                          "eded2713-e342-4e68-994f-2517381f0568",
                                                          "ebf7f362-3a91-48d6-baaf-ae743aac68d5",
                                                          "95026449-929f-46ac-a40e-dd6420818b23",
                                                          "42d1234d-6c36-411b-bccd-b072bdd2c5a6",
                                                          "153d9e95-684c-4526-8009-af48e26b2f43",
                                                          "317022b5-d948-4189-8748-6318b48b3c06", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1559300104943L), null, new Date(1559300104919L),
                                                     "158f22a7-5aee-438c-8bb2-4eecc15c1cb5",
                                                     "7184481b-e209-4905-976f-89e6685358dd",
                                                     "ac1c1ed8-9a41-4867-a64e-ab286eaa4bcd",
                                                     "0b0ab6e3-a988-487f-916c-8b9c26d28175",
                                                     "1cab7db2-bf6e-477e-af5d-9516abc5e261",
                                                     "22613efd-8dd1-4247-94cd-998df8aa94bc", true);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559300105599L), null,
                                                          new Date(1559300101134L),
                                                          "8f2bf0cc-b652-45da-9a2b-55ee03833c75",
                                                          "10d0619d-effe-44d3-a76b-3e09842c6aad",
                                                          "0bbe9dad-9cab-484b-866c-5cf2b48ce25d",
                                                          "e9f11aec-c851-4bbd-bbd7-c6b36371eab2",
                                                          "001fd1e5-39d6-4847-bd95-aeaf070de110",
                                                          "8e0ba350-c9b1-4d77-a516-1600a8b1fe3e", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559300105599L), null,
                                                          new Date(1559300101134L),
                                                          "8f2bf0cc-b652-45da-9a2b-55ee03833c75",
                                                          "10d0619d-effe-44d3-a76b-3e09842c6aad",
                                                          "0bbe9dad-9cab-484b-866c-5cf2b48ce25d",
                                                          "e9f11aec-c851-4bbd-bbd7-c6b36371eab2",
                                                          "001fd1e5-39d6-4847-bd95-aeaf070de110",
                                                          "8e0ba350-c9b1-4d77-a516-1600a8b1fe3e", true);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1559300099519L), null,
                                                          new Date(1559300098018L),
                                                          "6c6e20f5-b481-400e-9bb5-56be5ed0a6e4",
                                                          "c1f5b9da-08ef-4880-8bb6-24e7d40bcaf9",
                                                          "4d0fa581-925f-44aa-a3ac-2388790066e9",
                                                          "fced76e3-c1c4-4b07-9ca3-498c6700daf5",
                                                          "95dfcf12-c5a4-4d79-aa1a-77c9f6925d9b",
                                                          "5eb54c8e-7f33-4471-ae91-4a0e67d78bf3", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
