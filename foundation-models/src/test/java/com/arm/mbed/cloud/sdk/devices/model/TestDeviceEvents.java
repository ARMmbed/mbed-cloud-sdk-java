// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559655027931L), null,
                                                          new Date(1559655033298L),
                                                          "4d9bb369-efac-4edd-afef-b2abb1b820d5",
                                                          "1d2ed7d7-bb47-46c9-a79a-62d832d6e494",
                                                          "59bf4eb2-e4c7-45b4-9ab1-517cd1fd65bb",
                                                          "5d657603-93ce-4e1b-bb2c-5599a5c31bac",
                                                          "ee3e3f8d-7968-4a20-bae5-c570eac620fa",
                                                          "74115e31-55b3-463b-a318-7a0da78b3031", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559655036634L), null,
                                                          new Date(1559655028566L),
                                                          "f1ff0dd3-d947-43d8-afef-3a14473cf175",
                                                          "5d0db959-e9b0-47fd-82e3-8a9537949bba",
                                                          "e59fb9c4-f696-4172-b7e7-90d49264a034",
                                                          "64fe78ad-fa85-4057-892f-49c621b51f45",
                                                          "45f43e5c-5618-4ca5-b9d9-118de0d97b13",
                                                          "654fcbef-ab04-465a-955b-71fa6e780f1d", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559655036634L), null,
                                                          new Date(1559655028566L),
                                                          "f1ff0dd3-d947-43d8-afef-3a14473cf175",
                                                          "5d0db959-e9b0-47fd-82e3-8a9537949bba",
                                                          "e59fb9c4-f696-4172-b7e7-90d49264a034",
                                                          "64fe78ad-fa85-4057-892f-49c621b51f45",
                                                          "45f43e5c-5618-4ca5-b9d9-118de0d97b13",
                                                          "654fcbef-ab04-465a-955b-71fa6e780f1d", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1559655027922L), null, new Date(1559655035993L),
                                                     "1ca84350-d6ed-4fee-90b1-164e6cb53ae6",
                                                     "db8c30ab-71d1-4e9d-9492-ddb2ad3e667d",
                                                     "8718c0d4-e298-45b6-ac4b-038921e3e245",
                                                     "50fcac56-329e-421c-ab19-c1b88e4377a6",
                                                     "862875e0-1427-40f5-beff-f498734f913b",
                                                     "e6a91caa-27bf-4433-8bbe-770a0a48d13f", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559655034518L), null,
                                                          new Date(1559655028070L),
                                                          "575be1a6-1ab5-42af-aa42-a6ae0ee152ec",
                                                          "027f8922-5a53-425f-86cc-eccb811818d0",
                                                          "2d567586-3af0-4d3f-8082-6a012c020a39",
                                                          "fc3b82c1-fc4e-4d97-b876-bfbe6904276d",
                                                          "e24e7e6c-022c-4206-a080-f0bbd6d428de",
                                                          "044e2919-eeef-44e4-84ab-d741294335c5", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559655034518L), null,
                                                          new Date(1559655028070L),
                                                          "575be1a6-1ab5-42af-aa42-a6ae0ee152ec",
                                                          "027f8922-5a53-425f-86cc-eccb811818d0",
                                                          "2d567586-3af0-4d3f-8082-6a012c020a39",
                                                          "fc3b82c1-fc4e-4d97-b876-bfbe6904276d",
                                                          "e24e7e6c-022c-4206-a080-f0bbd6d428de",
                                                          "044e2919-eeef-44e4-84ab-d741294335c5", true);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1559655033176L), null,
                                                          new Date(1559655033175L),
                                                          "c0b5a313-5ab5-4e4d-b414-39104b539e05",
                                                          "3924dcb9-c78a-421c-85c7-13eeb2a9dbee",
                                                          "48d64ab6-4b4b-46c3-a76e-e37542ddcb13",
                                                          "9f7bbd9a-879b-4b1a-be51-75bb232bc768",
                                                          "46edd06e-843c-4090-afa2-4c82629b4b16",
                                                          "f05c2220-2396-4699-ad69-73921d064205", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
