// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559747929998L), null,
                                                          new Date(1559747932446L),
                                                          "ce2ab0ce-9aeb-41b0-9ed5-d39a541bdb25",
                                                          "f59ac4c7-afe0-4367-9a3b-b567c910e224",
                                                          "ef854762-3342-44e5-8462-850b3f3eb7a8",
                                                          "9dcbbe81-3487-43b0-bf4c-6a301afa1c86",
                                                          "6b7956c8-c4f8-4f08-96a1-54cb92c5b38a",
                                                          "bcee86fc-e543-4f69-b46c-c1c18815a079", false);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559747929231L), null,
                                                          new Date(1559747934418L),
                                                          "e82b92e8-0646-4644-9cf9-4ad5621d16b9",
                                                          "af175d15-648f-4317-ac40-fa1a5f51208f",
                                                          "adace737-4378-4c60-a598-ed5a4fcb04bb",
                                                          "31c68f0c-1910-4891-a8f8-0eb34437cff4",
                                                          "036b3ab4-db34-4c34-bccb-68a6bd3ba0ce",
                                                          "e21bcbdf-bd05-45ee-afa0-eeaa131fcaf7", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559747929231L), null,
                                                          new Date(1559747934418L),
                                                          "e82b92e8-0646-4644-9cf9-4ad5621d16b9",
                                                          "af175d15-648f-4317-ac40-fa1a5f51208f",
                                                          "adace737-4378-4c60-a598-ed5a4fcb04bb",
                                                          "31c68f0c-1910-4891-a8f8-0eb34437cff4",
                                                          "036b3ab4-db34-4c34-bccb-68a6bd3ba0ce",
                                                          "e21bcbdf-bd05-45ee-afa0-eeaa131fcaf7", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1559747931503L), null, new Date(1559747933483L),
                                                     "c13bc119-259a-4cba-b64c-010946f7e8dc",
                                                     "336a4600-2fc2-408d-9914-00db599d4074",
                                                     "ecd85478-4c73-48ca-a757-0f08036d8d04",
                                                     "912a38da-321b-4f46-8dd7-901bc4ab6112",
                                                     "a409390d-47d6-454a-a7ef-f0dd13e28641",
                                                     "8f0df5b4-e6c7-43b5-b7a3-6866c82a8d02", true);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559747928903L), null,
                                                          new Date(1559747933779L),
                                                          "80655210-70d4-4aa6-84a1-63842748d034",
                                                          "64120bde-1c2b-4858-94b8-7f9bafb58c50",
                                                          "2fac7a72-8c5d-4e82-b64c-17b496257774",
                                                          "89c0888d-b1e5-40fb-94fe-b0258e733f5f",
                                                          "990462d0-c49f-49ae-9c4b-23910da87e6c",
                                                          "e5a63566-ce2f-45cb-8bbc-e6d81c730ec0", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559747928903L), null,
                                                          new Date(1559747933779L),
                                                          "80655210-70d4-4aa6-84a1-63842748d034",
                                                          "64120bde-1c2b-4858-94b8-7f9bafb58c50",
                                                          "2fac7a72-8c5d-4e82-b64c-17b496257774",
                                                          "89c0888d-b1e5-40fb-94fe-b0258e733f5f",
                                                          "990462d0-c49f-49ae-9c4b-23910da87e6c",
                                                          "e5a63566-ce2f-45cb-8bbc-e6d81c730ec0", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1559747930570L), null,
                                                          new Date(1559747928812L),
                                                          "398181cc-4613-44a2-bdc8-0dbe559e9ef7",
                                                          "e83a2a63-84f3-4251-8e38-fab3ef4412d8",
                                                          "44c7285f-0408-450b-a519-cd7a8dbc5f54",
                                                          "79f18a6f-dd83-4c96-857e-9a660d1d72a4",
                                                          "1a0c2c3d-1b94-40c3-bbae-b69163fbabe4",
                                                          "a6efd464-8a90-4d80-8038-bc1098de9ed9", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
