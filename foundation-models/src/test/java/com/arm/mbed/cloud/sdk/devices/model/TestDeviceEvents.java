// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559560664916L), null,
                                                          new Date(1559560669550L),
                                                          "ddc1bafa-88b7-4677-9627-b3e7ded852e5",
                                                          "72ce08b4-7a2b-4bbd-bff2-9da22ab4f8af",
                                                          "fc129bf5-8e9d-4abe-8305-e80d3047f972",
                                                          "351236ff-d8d1-4115-b01b-b3136943de00",
                                                          "70c1def2-d286-4057-8b1c-3eb08fc3fbd1",
                                                          "907a2e12-4a29-4d87-8990-b1bb0ad2c24d", false);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559560665471L), null,
                                                          new Date(1559560668519L),
                                                          "e26e27b4-2986-4df6-9891-2b3304cd610d",
                                                          "8402515e-3bdd-48d8-8c62-410429ae4691",
                                                          "f627d8b5-e688-4052-b4ee-d3ae99d7af1d",
                                                          "d59b7e41-a4bd-487c-bd69-a0b432dc4063",
                                                          "956a32af-0e86-4be6-b4b3-a3433932556b",
                                                          "72800cb0-cc8d-4422-9f7f-cfb35b8aa0f9", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559560665471L), null,
                                                          new Date(1559560668519L),
                                                          "e26e27b4-2986-4df6-9891-2b3304cd610d",
                                                          "8402515e-3bdd-48d8-8c62-410429ae4691",
                                                          "f627d8b5-e688-4052-b4ee-d3ae99d7af1d",
                                                          "d59b7e41-a4bd-487c-bd69-a0b432dc4063",
                                                          "956a32af-0e86-4be6-b4b3-a3433932556b",
                                                          "72800cb0-cc8d-4422-9f7f-cfb35b8aa0f9", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1559560666579L), null, new Date(1559560668446L),
                                                     "7c647b15-af7e-415d-9b42-f92dfa6c42e8",
                                                     "d85d9bae-f8c3-4abb-a47f-13cd92298f75",
                                                     "af93609e-9054-4ce9-bfca-f581bb8407c2",
                                                     "5deabada-939a-45f8-b36f-ff1e1aa43f3e",
                                                     "b18c36a8-e2c3-4b04-ae8a-a2c3a3255c1e",
                                                     "6abcca4f-b2ec-4e1d-a764-72e2a56664a4", true);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559560669520L), null,
                                                          new Date(1559560673359L),
                                                          "98728572-557d-46ef-bb77-03cb2c6bf1ba",
                                                          "4e2e955d-1026-4ba9-ad0a-2938aaac8a05",
                                                          "1843ecd1-3b46-402f-a168-fa45fe5b5f64",
                                                          "4e8ae609-7c88-4d42-a434-26912c661384",
                                                          "c874958d-108e-4757-9796-0b80bd99a3d1",
                                                          "6957b987-c0e8-4df7-87a9-81406d84816a", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559560669520L), null,
                                                          new Date(1559560673359L),
                                                          "98728572-557d-46ef-bb77-03cb2c6bf1ba",
                                                          "4e2e955d-1026-4ba9-ad0a-2938aaac8a05",
                                                          "1843ecd1-3b46-402f-a168-fa45fe5b5f64",
                                                          "4e8ae609-7c88-4d42-a434-26912c661384",
                                                          "c874958d-108e-4757-9796-0b80bd99a3d1",
                                                          "6957b987-c0e8-4df7-87a9-81406d84816a", true);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1559560671723L), null,
                                                          new Date(1559560667628L),
                                                          "6914340b-08f2-4521-a616-5666159905c7",
                                                          "b997bd69-65e9-499f-aeda-4c343d60c8be",
                                                          "5f13aef4-89af-43c1-b597-0d57fb95f7f0",
                                                          "4e635179-6dbf-4452-9a29-badadb969e1d",
                                                          "313bf58f-8b27-4c78-9a12-5c49d8b2a52f",
                                                          "c11228bb-acab-4345-87b1-b49d4ae6c04b", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
