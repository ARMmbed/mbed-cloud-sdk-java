// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559752152292L), null,
                                                          new Date(1559752153130L),
                                                          "6f2d03a8-a2a3-4955-b6c0-790328df4c7b",
                                                          "f23f5028-5107-460a-88af-355b10578041",
                                                          "a7040f9d-7298-4b43-8167-92e0d98dff3a",
                                                          "bd4323ab-1371-4725-981c-85b2e5effbc8",
                                                          "a48c1efe-2688-4be2-8558-a4ce8fd60c26",
                                                          "9522fc8b-6785-43a3-85ea-b5a67cf6be0c", false);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559752152250L), null,
                                                          new Date(1559752147254L),
                                                          "2d796740-7386-4037-8f98-fc3f9da53051",
                                                          "995a370f-024d-41f0-bc59-30d79cf773d9",
                                                          "82d0798a-73e0-48e1-ad82-19ea9c3a32e6",
                                                          "93429017-f660-4d78-8f5d-56e0996cb6b5",
                                                          "391a6f22-36f6-4273-b659-395d185faccc",
                                                          "b263a493-ad2c-4219-92fb-90b69d580862", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559752152250L), null,
                                                          new Date(1559752147254L),
                                                          "2d796740-7386-4037-8f98-fc3f9da53051",
                                                          "995a370f-024d-41f0-bc59-30d79cf773d9",
                                                          "82d0798a-73e0-48e1-ad82-19ea9c3a32e6",
                                                          "93429017-f660-4d78-8f5d-56e0996cb6b5",
                                                          "391a6f22-36f6-4273-b659-395d185faccc",
                                                          "b263a493-ad2c-4219-92fb-90b69d580862", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1559752152568L), null, new Date(1559752151779L),
                                                     "c8cebd2a-f5a8-4115-9260-9f8f18d6ee71",
                                                     "81d689d4-4696-41cd-abe5-79c27850c13b",
                                                     "5dc252f9-3a24-42ce-a38f-0ff6f636f8e8",
                                                     "a7494d8f-71fd-4c09-a244-0465c5a3280a",
                                                     "009635e8-cc16-4a48-af0f-b54401d80b23",
                                                     "035bbecf-43b4-4b74-9fe3-9f03aedc2c9a", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559752148699L), null,
                                                          new Date(1559752151418L),
                                                          "ad1db7a8-3ad7-45ce-91fd-0e068101a636",
                                                          "1484097c-a71c-437d-9e17-8a25d864383b",
                                                          "8bde57cb-954a-4123-baba-fe7a03b7b9dd",
                                                          "f8d20422-e0f3-4cbd-ad34-bc69ab865adb",
                                                          "9b4f1ba4-a08a-4a8a-8d18-48f88d1e73cc",
                                                          "9d225e98-5e4c-41d3-b26a-074a41bbf354", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559752148699L), null,
                                                          new Date(1559752151418L),
                                                          "ad1db7a8-3ad7-45ce-91fd-0e068101a636",
                                                          "1484097c-a71c-437d-9e17-8a25d864383b",
                                                          "8bde57cb-954a-4123-baba-fe7a03b7b9dd",
                                                          "f8d20422-e0f3-4cbd-ad34-bc69ab865adb",
                                                          "9b4f1ba4-a08a-4a8a-8d18-48f88d1e73cc",
                                                          "9d225e98-5e4c-41d3-b26a-074a41bbf354", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1559752147670L), null,
                                                          new Date(1559752151680L),
                                                          "49554019-f71f-4e25-90d9-b833dbc1c3e5",
                                                          "5e6465eb-c67b-46dd-8216-4bbf3421eb88",
                                                          "fbe77689-2f87-4757-a85a-a4725503e55b",
                                                          "9f1579cc-ddfc-49c1-8f2c-680e102d1559",
                                                          "bc8ea887-e362-48b3-afc1-0030ee078b18",
                                                          "b3d2be17-e600-4646-9192-3b2da9ae4417", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
