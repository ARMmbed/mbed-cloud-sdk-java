// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559288255872L), null,
                                                          new Date(1559288257644L),
                                                          "20d12a3c-ec92-4978-a620-dcea8ec3720d",
                                                          "2d4d431b-ee30-42a2-ad61-ba4cb21c63b8",
                                                          "233a5050-e2c9-472e-b327-1f75fcbbe8c3",
                                                          "8dd034ae-edb2-414c-ae8c-4adf44bb724d",
                                                          "de36014c-fec3-49fb-8206-1a733587c392",
                                                          "a55fb04f-dc41-4148-b050-d965af611e0f", false);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559288257961L), null,
                                                          new Date(1559288254466L),
                                                          "e1d07e80-5284-469a-8e30-755a1abda95e",
                                                          "6eb26f5e-0e33-4801-835a-1a6910c6f99a",
                                                          "dc80f4bc-ce07-4fa0-b6fe-dec342a09d3b",
                                                          "7ca7b220-718b-4b7d-bf15-4e2822c7cbcf",
                                                          "b8dcb355-acdb-4304-94cc-35d1f401720b",
                                                          "870506ad-11e5-4cf2-9b23-c999ab0e5746", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559288257961L), null,
                                                          new Date(1559288254466L),
                                                          "e1d07e80-5284-469a-8e30-755a1abda95e",
                                                          "6eb26f5e-0e33-4801-835a-1a6910c6f99a",
                                                          "dc80f4bc-ce07-4fa0-b6fe-dec342a09d3b",
                                                          "7ca7b220-718b-4b7d-bf15-4e2822c7cbcf",
                                                          "b8dcb355-acdb-4304-94cc-35d1f401720b",
                                                          "870506ad-11e5-4cf2-9b23-c999ab0e5746", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1559288255915L), null, new Date(1559288253865L),
                                                     "e9bbb4c6-9971-4cc3-86ae-f6524fd857cb",
                                                     "e9164d8c-f3ab-4602-9a7a-cc12ba92a4a4",
                                                     "b25fe4d5-e7fc-4da8-b373-14e0aadae1fd",
                                                     "12efb2ba-a622-4fdd-99bb-e76589f9a1b5",
                                                     "8b05daec-1bad-4e9b-8ca5-bb569a1924c9",
                                                     "6bb8171e-5fa5-4ede-8fbd-4e9c680d4977", true);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559288257666L), null,
                                                          new Date(1559288259068L),
                                                          "b168908c-3185-408c-ab50-3fbcef6877ff",
                                                          "2b73019e-c401-40ce-ae08-47b2a7eabec7",
                                                          "08a832a3-94b6-4044-8daf-2245fbeaa978",
                                                          "bb2f0a11-605f-4ea5-a532-f24f8ccafa18",
                                                          "5190d4f5-1398-4d68-a82e-bef64244e6ad",
                                                          "040ff73a-fd43-415a-9486-30ffe5ecb21f", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559288257666L), null,
                                                          new Date(1559288259068L),
                                                          "b168908c-3185-408c-ab50-3fbcef6877ff",
                                                          "2b73019e-c401-40ce-ae08-47b2a7eabec7",
                                                          "08a832a3-94b6-4044-8daf-2245fbeaa978",
                                                          "bb2f0a11-605f-4ea5-a532-f24f8ccafa18",
                                                          "5190d4f5-1398-4d68-a82e-bef64244e6ad",
                                                          "040ff73a-fd43-415a-9486-30ffe5ecb21f", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1559288262086L), null,
                                                          new Date(1559288256494L),
                                                          "f3206238-5271-4e5e-8f67-1a4efd4e70f4",
                                                          "24fea326-3e3f-4cad-9abf-b5084badb77d",
                                                          "b1383660-54fb-4ecb-9250-08eb1f010e65",
                                                          "3473c1b9-44b0-4729-89a8-8d660d13487d",
                                                          "658b1c48-18ba-4a54-8621-0749b9a266b5",
                                                          "2dcd31e7-81d3-49a7-b85c-4492833ff5f7", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
