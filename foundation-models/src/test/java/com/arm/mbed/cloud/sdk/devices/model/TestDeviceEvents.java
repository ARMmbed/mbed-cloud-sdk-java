// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559745301287L), null,
                                                          new Date(1559745300248L),
                                                          "7ff22186-5f68-4f5c-b788-426f1f4910dc",
                                                          "2dccedd4-fb5d-40c5-b0d9-130899b09e34",
                                                          "7a9444bc-50c4-44e5-bbe6-35dfd590e499",
                                                          "bf37b8cf-9e8b-49af-ba5d-2be1090ff401",
                                                          "cd1c0f87-0774-4a8e-9272-d2a7348c350d",
                                                          "c266de49-e3c4-415b-bc45-a925f6d910c3", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559745295813L), null,
                                                          new Date(1559745301335L),
                                                          "5bf8a0b8-6c0d-49db-b68c-cf6c53e34b30",
                                                          "7d10a361-ad77-44ec-b69e-a660928fdbbd",
                                                          "712b4392-9b8a-4da9-8765-b85f5dd7acdc",
                                                          "b753348a-14c7-47f4-9bca-d0496c69c5ff",
                                                          "c7ac79db-7e95-47ad-93af-8002d4511f1e",
                                                          "7f6f28b1-3e8e-4012-9947-19e730b33d60", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559745295813L), null,
                                                          new Date(1559745301335L),
                                                          "5bf8a0b8-6c0d-49db-b68c-cf6c53e34b30",
                                                          "7d10a361-ad77-44ec-b69e-a660928fdbbd",
                                                          "712b4392-9b8a-4da9-8765-b85f5dd7acdc",
                                                          "b753348a-14c7-47f4-9bca-d0496c69c5ff",
                                                          "c7ac79db-7e95-47ad-93af-8002d4511f1e",
                                                          "7f6f28b1-3e8e-4012-9947-19e730b33d60", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1559745298866L), null, new Date(1559745300181L),
                                                     "6ac0acbf-c290-4cc7-b0e4-182a9fc239c9",
                                                     "79718c0d-ba3c-469c-96d0-ca85fb714779",
                                                     "ade38989-3ed1-4b51-9859-8a0bdb24bc24",
                                                     "2cd5d77e-485b-49d4-809f-42e1d7301df9",
                                                     "d8e856c4-52f4-48bd-9042-fcedcc1df452",
                                                     "829bda18-3d1b-47d6-a358-243dc783cc46", true);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559745298527L), null,
                                                          new Date(1559745295151L),
                                                          "3fced2a5-d685-4632-bbc3-34dcd9b78894",
                                                          "aa3fa88b-5b2c-4acc-9eac-34db713dd69f",
                                                          "82e83d13-ae3a-4f54-b386-7fa35f6a3b0b",
                                                          "7af26f32-06cd-4ec1-be4f-a536c666349d",
                                                          "a0a5893a-3071-4ef7-8dc8-3b81d48866f6",
                                                          "d242f7d5-db08-42e4-8dfc-92fd0cdd3047", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559745298527L), null,
                                                          new Date(1559745295151L),
                                                          "3fced2a5-d685-4632-bbc3-34dcd9b78894",
                                                          "aa3fa88b-5b2c-4acc-9eac-34db713dd69f",
                                                          "82e83d13-ae3a-4f54-b386-7fa35f6a3b0b",
                                                          "7af26f32-06cd-4ec1-be4f-a536c666349d",
                                                          "a0a5893a-3071-4ef7-8dc8-3b81d48866f6",
                                                          "d242f7d5-db08-42e4-8dfc-92fd0cdd3047", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1559745299668L), null,
                                                          new Date(1559745295254L),
                                                          "0222938c-b18e-44a8-b15b-92d1a781113b",
                                                          "7a26cf87-6065-4f52-ae0b-e5ec7522c4c6",
                                                          "0640c417-1866-4c86-8d58-5ffb98bc148c",
                                                          "a27ce7b3-ff39-4eff-8860-90009d22ae5a",
                                                          "080bf56b-7d06-4eac-bbc5-a0a9eb1982fe",
                                                          "98666501-5034-4d97-bb8d-f1b9449b316c", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
