// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559313342269L), null,
                                                          new Date(1559313345114L),
                                                          "5e66fdb4-a0a8-4072-a9eb-66e4229c16ef",
                                                          "be9cea74-936a-4f91-8db3-71b8ab633ee6",
                                                          "80f9c1d1-9942-49ce-bfcc-6aca8a87ed80",
                                                          "2e082493-0ce1-4ab2-ab30-91d55fdb9dcf",
                                                          "eba865a0-4cee-4d77-a514-f41f30bbe0b0",
                                                          "bce2010c-bc30-43cf-aae2-f7a1d800a83d", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559313343293L), null,
                                                          new Date(1559313342533L),
                                                          "a917f166-32a9-4d91-a39e-cafead2c2d5a",
                                                          "d5919d0b-90d2-4393-8efd-2b92d96294e9",
                                                          "9177d548-8cbe-4d2b-8838-6774722a2378",
                                                          "e2ca1c8c-420d-43e2-9caa-9a94458a95dd",
                                                          "7bc48fa2-04fb-4391-8b36-1cfdb9f9aec8",
                                                          "f08ffda1-4d98-4ffc-83d4-000dd6da26b8", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559313343293L), null,
                                                          new Date(1559313342533L),
                                                          "a917f166-32a9-4d91-a39e-cafead2c2d5a",
                                                          "d5919d0b-90d2-4393-8efd-2b92d96294e9",
                                                          "9177d548-8cbe-4d2b-8838-6774722a2378",
                                                          "e2ca1c8c-420d-43e2-9caa-9a94458a95dd",
                                                          "7bc48fa2-04fb-4391-8b36-1cfdb9f9aec8",
                                                          "f08ffda1-4d98-4ffc-83d4-000dd6da26b8", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1559313340425L), null, new Date(1559313340456L),
                                                     "11dd9b67-c2cc-46f8-84d0-a227fd7091c1",
                                                     "44f58fd0-dd6f-4928-a9ae-c2a8ca8ef0cb",
                                                     "95daf9cb-eeb3-49fe-9b42-a45462ab0434",
                                                     "50ae6ea8-830b-463c-ad50-354c29b34ecc",
                                                     "c7bac91b-d763-45dc-b92d-d2e905557c7c",
                                                     "784e059b-b6aa-4570-a455-37ac10d1e202", true);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559313339170L), null,
                                                          new Date(1559313345094L),
                                                          "c8551f54-af0b-4ee8-881e-08851625a8d9",
                                                          "4291d5eb-83c8-4284-95a0-39f59453ac54",
                                                          "cbf77371-3e3a-4f6a-a14b-d18f5cb54680",
                                                          "6030cb87-108d-476c-bcc6-17d04bbef75d",
                                                          "d5c71329-eeaa-456a-8864-d83a2853db65",
                                                          "0c360023-8dc6-4ff9-ba02-5afaf78b1feb", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559313339170L), null,
                                                          new Date(1559313345094L),
                                                          "c8551f54-af0b-4ee8-881e-08851625a8d9",
                                                          "4291d5eb-83c8-4284-95a0-39f59453ac54",
                                                          "cbf77371-3e3a-4f6a-a14b-d18f5cb54680",
                                                          "6030cb87-108d-476c-bcc6-17d04bbef75d",
                                                          "d5c71329-eeaa-456a-8864-d83a2853db65",
                                                          "0c360023-8dc6-4ff9-ba02-5afaf78b1feb", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1559313348098L), null,
                                                          new Date(1559313344676L),
                                                          "d3c951d4-4a70-4cfb-b48e-98ecf20c760b",
                                                          "98099f4c-3d9b-4bc0-bc9f-a87f8073492d",
                                                          "114ea243-273d-42bb-9508-bb94172b9a80",
                                                          "cb72e030-4852-4390-96c2-2530d9efb214",
                                                          "fe4100e2-06d8-459c-80bb-448e582e1d3c",
                                                          "930b7616-ab93-4efd-9835-bd2a94a9fbb2", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
