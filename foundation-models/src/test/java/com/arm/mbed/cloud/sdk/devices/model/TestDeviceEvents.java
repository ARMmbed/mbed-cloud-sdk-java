// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559746952850L), null,
                                                          new Date(1559746953081L),
                                                          "48efaa71-1fb8-4d2e-b51b-c9047cca7ce4",
                                                          "f1735374-8f4a-41ab-8262-d060d9050623",
                                                          "9d1e68f4-a6f5-4747-88d7-06f1f196a213",
                                                          "ff64d6fe-6304-447c-af02-235a0842bb4d",
                                                          "92e86d1e-c504-43cd-b7d8-c021144f7077",
                                                          "47d4b446-9f67-49db-a5ef-dc36c760531c", false);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559746948224L), null,
                                                          new Date(1559746950628L),
                                                          "00df371c-8e24-47ec-ad29-717cd29949dc",
                                                          "516ffb8d-63a6-45a5-922c-3a37a1a8b084",
                                                          "6f4c04bf-91ec-4e5e-9f45-86b165625f30",
                                                          "142b170e-d499-4f08-8401-5870498fe382",
                                                          "061990e4-2196-4dbc-a0de-35bca3bbbb75",
                                                          "04361b9f-da64-4124-89f2-3414c79f467e", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559746948224L), null,
                                                          new Date(1559746950628L),
                                                          "00df371c-8e24-47ec-ad29-717cd29949dc",
                                                          "516ffb8d-63a6-45a5-922c-3a37a1a8b084",
                                                          "6f4c04bf-91ec-4e5e-9f45-86b165625f30",
                                                          "142b170e-d499-4f08-8401-5870498fe382",
                                                          "061990e4-2196-4dbc-a0de-35bca3bbbb75",
                                                          "04361b9f-da64-4124-89f2-3414c79f467e", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1559746948423L), null, new Date(1559746947275L),
                                                     "3c9cb12e-73a2-4134-8d75-d9d9220e1c4f",
                                                     "91f78cf3-7ae1-4599-8c65-eed88a8650a5",
                                                     "ff060f0d-d9f9-49c6-be8d-e6c5f6170576",
                                                     "099a37de-b1b6-4530-ac5f-9b29b1d3589d",
                                                     "353e79d2-485c-4f45-9a3a-8d529ceea052",
                                                     "95ef9b78-38e6-4cd5-a19e-b62e8c64be3c", true);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559746952056L), null,
                                                          new Date(1559746945884L),
                                                          "489d2a24-f3b7-4151-9ec9-a1e4eafdc2a5",
                                                          "49eb29bb-f242-435a-97fb-a180282a35f3",
                                                          "5e7841e2-6fee-4ed3-b6cb-50baa2eabfed",
                                                          "8c526b5b-9ffc-4c6a-992e-2577676c1973",
                                                          "9c9ee02c-2e91-4d8b-8d77-0c44b78ed7ef",
                                                          "90ed9443-cdd2-4d9a-bb59-25ded66fff65", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559746952056L), null,
                                                          new Date(1559746945884L),
                                                          "489d2a24-f3b7-4151-9ec9-a1e4eafdc2a5",
                                                          "49eb29bb-f242-435a-97fb-a180282a35f3",
                                                          "5e7841e2-6fee-4ed3-b6cb-50baa2eabfed",
                                                          "8c526b5b-9ffc-4c6a-992e-2577676c1973",
                                                          "9c9ee02c-2e91-4d8b-8d77-0c44b78ed7ef",
                                                          "90ed9443-cdd2-4d9a-bb59-25ded66fff65", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1559746947365L), null,
                                                          new Date(1559746946459L),
                                                          "22a423eb-7155-4361-b4f1-a07572864a08",
                                                          "0d654a49-af4e-49c3-817e-9e3bd32a0870",
                                                          "3a469b22-0945-44d2-aacf-09a953fa5273",
                                                          "3ea82819-305d-482c-b252-2c862c816a7b",
                                                          "ce04dab0-3582-4214-90e3-f03f305a7739",
                                                          "708509b4-2a43-4b29-b55c-d8ec1821961c", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
