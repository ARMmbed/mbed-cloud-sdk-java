// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559758610683L), null,
                                                          new Date(1559758608209L),
                                                          "ffd5847e-c1f2-4d33-b801-734d989a99d3",
                                                          "e48f463b-7a88-4408-8421-d20b2ef24002",
                                                          "55473306-42b5-4561-99f3-9b11f4cda3fc",
                                                          "bdefccac-9064-434d-b5fe-05de94d2c8d2",
                                                          "45c25faa-62c7-47fc-835b-cad1444ac074",
                                                          "9ca87afd-566b-4c31-9c8d-2036cc5c0a53", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559758613023L), null,
                                                          new Date(1559758605964L),
                                                          "ff3c730d-c744-4bf4-bace-3feb0ded2b6e",
                                                          "455b3e53-af03-4268-82d7-f9ab18dd094d",
                                                          "ce914dec-0d45-43ac-a9a3-58bc0bee96a3",
                                                          "e7230e26-6bad-4465-ac64-d76258867a87",
                                                          "ae3bf4ea-859e-4e6c-bab9-94d4f6028d52",
                                                          "4aea1391-cb32-422d-a1e9-017e937fa578", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559758613023L), null,
                                                          new Date(1559758605964L),
                                                          "ff3c730d-c744-4bf4-bace-3feb0ded2b6e",
                                                          "455b3e53-af03-4268-82d7-f9ab18dd094d",
                                                          "ce914dec-0d45-43ac-a9a3-58bc0bee96a3",
                                                          "e7230e26-6bad-4465-ac64-d76258867a87",
                                                          "ae3bf4ea-859e-4e6c-bab9-94d4f6028d52",
                                                          "4aea1391-cb32-422d-a1e9-017e937fa578", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1559758606915L), null, new Date(1559758608715L),
                                                     "04861e4c-52c8-4bbb-8a31-b6119efc4e05",
                                                     "3bec6a7f-a97d-4b11-84c4-f8e0b57f1d68",
                                                     "06d4a3d8-43e5-4ba0-908e-1410ca9e733a",
                                                     "92701027-7275-4f54-bc85-b1436d9ff49c",
                                                     "878a3351-3b4d-40ec-95fb-5344f7e55c01",
                                                     "5a32beb8-00a1-432c-86b4-a2cac6e01f55", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559758612445L), null,
                                                          new Date(1559758612551L),
                                                          "023e0e24-dd37-446c-82e4-a0dbfec9dbc1",
                                                          "3c7455af-64b0-414a-b872-ce8a0567ef09",
                                                          "9cfa32d4-c478-4d5b-8956-db30a9198dcd",
                                                          "87b977ed-7f17-4f0d-9dab-67bf4d607b7a",
                                                          "d5df744e-b1ec-4f7d-add6-596f66396809",
                                                          "53dfbdaf-9d20-496a-a0fd-2103ca16ae43", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559758612445L), null,
                                                          new Date(1559758612551L),
                                                          "023e0e24-dd37-446c-82e4-a0dbfec9dbc1",
                                                          "3c7455af-64b0-414a-b872-ce8a0567ef09",
                                                          "9cfa32d4-c478-4d5b-8956-db30a9198dcd",
                                                          "87b977ed-7f17-4f0d-9dab-67bf4d607b7a",
                                                          "d5df744e-b1ec-4f7d-add6-596f66396809",
                                                          "53dfbdaf-9d20-496a-a0fd-2103ca16ae43", true);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1559758606025L), null,
                                                          new Date(1559758604399L),
                                                          "f4acac2c-bb7d-4e71-819e-65cbbd3d3134",
                                                          "a9e0536d-6021-4262-95b6-6f21d2f2dff7",
                                                          "2674aa10-357b-4140-9b39-44419705a4ca",
                                                          "9d6ccd75-db50-4518-8620-1768d08fd2fc",
                                                          "9d352b32-06f7-4678-9319-6b8548789ffc",
                                                          "386f1ab6-641e-4478-9c6f-7d63112ccb1b", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
