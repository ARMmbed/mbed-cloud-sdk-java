// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1558096042020L), null,
                                                          new Date(1558096040186L),
                                                          "9f725306-65cb-461f-bc43-48a43b1f34f1",
                                                          "5c2e9641-ce6f-4844-b847-29ffbec01457",
                                                          "a0b63eae-5f0a-4382-a380-4dac91dee67b",
                                                          "7ba80ae6-38e8-4841-a9fc-c143ab96eae4",
                                                          "954713d6-f5fc-4905-965b-5840a8763606",
                                                          "361ad2ba-8584-4758-a288-9142fc945cac", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1558096041843L), null,
                                                          new Date(1558096041779L),
                                                          "66f44241-da34-46c2-b7af-3100c5f5d27a",
                                                          "3fd22d91-6f90-4ec0-a63c-01bd2689f687",
                                                          "d710b12b-b609-4f37-9a20-810e3339fa40",
                                                          "3f49d63a-cd1f-4452-9b7d-4d914e252fde",
                                                          "1587047a-613a-4214-a8cc-87ce5635743a",
                                                          "e61aabb8-cb1c-4c93-afe2-27b466c6b01b", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1558096041843L), null,
                                                          new Date(1558096041779L),
                                                          "66f44241-da34-46c2-b7af-3100c5f5d27a",
                                                          "3fd22d91-6f90-4ec0-a63c-01bd2689f687",
                                                          "d710b12b-b609-4f37-9a20-810e3339fa40",
                                                          "3f49d63a-cd1f-4452-9b7d-4d914e252fde",
                                                          "1587047a-613a-4214-a8cc-87ce5635743a",
                                                          "e61aabb8-cb1c-4c93-afe2-27b466c6b01b", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1558096040512L), null, new Date(1558096043221L),
                                                     "818a5b1c-23c2-4e2c-8c84-29bcb582e357",
                                                     "c2c4a63c-cfcc-478c-a764-1462d01e988c",
                                                     "d576b1d8-419d-44b7-a1b7-0723fe1d801c",
                                                     "76481a19-2bf7-4f43-bd7e-f6338bdfce39",
                                                     "0c8ec636-d0fa-48f4-84e4-7286ff1022e6",
                                                     "1cb87825-769a-417e-9b52-ad307bfd3472", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1558096036577L), null,
                                                          new Date(1558096040151L),
                                                          "53a400ce-def5-452a-b205-17f0028363bf",
                                                          "3b2af2e8-5d84-4693-b688-8221511dec1c",
                                                          "051f2e37-3e1c-4ea5-ba7a-e922cf1b556b",
                                                          "ffc70d3d-de28-409e-9565-7c26bc505bc9",
                                                          "ff40af95-8270-4618-915a-e85ab0b0da2e",
                                                          "b1828777-a1d4-4646-bdef-3772be9c3673", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1558096036577L), null,
                                                          new Date(1558096040151L),
                                                          "53a400ce-def5-452a-b205-17f0028363bf",
                                                          "3b2af2e8-5d84-4693-b688-8221511dec1c",
                                                          "051f2e37-3e1c-4ea5-ba7a-e922cf1b556b",
                                                          "ffc70d3d-de28-409e-9565-7c26bc505bc9",
                                                          "ff40af95-8270-4618-915a-e85ab0b0da2e",
                                                          "b1828777-a1d4-4646-bdef-3772be9c3673", true);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1558096037747L), null,
                                                          new Date(1558096041950L),
                                                          "cce02299-1885-49bf-91e1-cce11ba7d4b8",
                                                          "85e6c6ec-5769-40be-86fc-37645881c43d",
                                                          "c38abc46-3530-4eb7-bbe1-423d64f3666a",
                                                          "b8f3aab9-79e4-4c81-8ddd-e02922b1c0de",
                                                          "c7aa5011-0815-4c77-a705-70b7064594dd",
                                                          "53add15d-7a94-47f3-bc59-ef5021c357de", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
