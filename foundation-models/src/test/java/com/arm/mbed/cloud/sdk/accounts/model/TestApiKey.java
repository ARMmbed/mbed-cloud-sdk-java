// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("15fbdbaa9ee5ecc56b4386fd4e63b84a", new Date(1547164364248L), -118,
                                        "aeabf923-6aa6-472b-868a-0dac9333d32d", "64a4c8dc-876c-4bbc-bf5b-3c59946f3bce",
                                        -110, "2cd7d369-b3e6-490d-8a2b-17a37b3a01f3",
                                        "64dd1f65-b6a8-42b3-8e59-5ae736ca6842", ApiKeyStatus.getDefault(),
                                        new Date(1547164363587L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("23dae84d0b4fdbae1963f3a9cedffd3d", new Date(1547164358879L), 113,
                                        "1248fb3d-9729-4f6b-843f-02446843d77d", "e329f84c-92e1-4ade-8f2a-66146e1faa07",
                                        -52, "d06ba853-7906-453b-b99b-0e68e7255596",
                                        "8bf11422-a188-41a7-a126-db69550c5ca1", ApiKeyStatus.getDefault(),
                                        new Date(1547164358086L));
            ApiKey apikey2 = new ApiKey("23dae84d0b4fdbae1963f3a9cedffd3d", new Date(1547164358879L), 113,
                                        "1248fb3d-9729-4f6b-843f-02446843d77d", "e329f84c-92e1-4ade-8f2a-66146e1faa07",
                                        -52, "d06ba853-7906-453b-b99b-0e68e7255596",
                                        "8bf11422-a188-41a7-a126-db69550c5ca1", ApiKeyStatus.getDefault(),
                                        new Date(1547164358086L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("8eec9752a1ebfdf7efbcc828b1dd94c2", new Date(1547164360494L), -103,
                                   "ae19c5dd-7a85-4b05-a275-359d3a4468db", "d9375425-753b-47b4-8461-681e0f8e5792", 62,
                                   "804d64ab-dd50-4b93-beea-2e31120e2558", "ae37f895-a2a2-43ce-af4c-be8bde7d7b71",
                                   ApiKeyStatus.getDefault(), new Date(1547164357331L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("K*ãŒ™ë­‘\u0016ç¨—â¯‹]GLHíŒ¢DíŠ°\u001e\u0001\u0002-\u0003\u0014ä…©\u0001\u0016è·­è½›\u001e\u0012S_'/\u000fì°§Cå?¥æ† ^é§…K=FãœŠá’ \u000eì?±]î·¾\u0004\b\u001f\b\u000b\u001e\u001fîŒ£\u001bè‚?íŸ…T^Nçƒ J",
                                          new Date(1547164359779L), 90, null, "1d432912-0755-42ef-ba95-36df3cdb5986",
                                          -93, null, "c15fb762-5660-46ba-9b2a-625ddc148479", ApiKeyStatus.getDefault(),
                                          new Date(1547164358300L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("14d727adfebad0be5bddbca25f66cc6e", new Date(1547164361308L), -112,
                                        "f2765402-4ee5-410b-8bd4-8717b97fdb9f", "121c7cd7-1f4a-4940-ae75-6f2f1df445fb",
                                        57, "ae5b17ed-0a9c-451e-baa0-5058ba42d396",
                                        "4c30acfb-04ed-4628-a418-b5d9a9803124", ApiKeyStatus.getDefault(),
                                        new Date(1547164363866L));
            ApiKey apikey2 = new ApiKey("14d727adfebad0be5bddbca25f66cc6e", new Date(1547164361308L), -112,
                                        "f2765402-4ee5-410b-8bd4-8717b97fdb9f", "121c7cd7-1f4a-4940-ae75-6f2f1df445fb",
                                        57, "ae5b17ed-0a9c-451e-baa0-5058ba42d396",
                                        "4c30acfb-04ed-4628-a418-b5d9a9803124", ApiKeyStatus.getDefault(),
                                        new Date(1547164363866L));
            ApiKey apikey3 = new ApiKey("b237fad4b29623f12f9cd7d84a0fdbf3", new Date(1547164361979L), -75,
                                        "0507f4e3-831e-49e1-9e20-dfedf56df73e", "2c2bfefa-5311-4010-9436-b02514510f16",
                                        -45, "184df40a-38db-471d-9fc7-17c936c93cad",
                                        "40f4345c-03b3-4eec-898a-4aa4a0eb268f", ApiKeyStatus.getDefault(),
                                        new Date(1547164366840L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
