// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("1de8ff1c1a9cfccfc0cc95ab28e64f3b", new Date(1547489767606L), 68,
                                        "a611bce3-a5ee-4986-875e-af34d3be2cf9", "bf75a502-89fb-4583-a246-5a34788d924d",
                                        72, "314242ec-9a79-43ed-b27a-80c8978bdade",
                                        "bb3d56d0-3dce-47b3-a164-824e2b7fad2a", ApiKeyStatus.getDefault(),
                                        new Date(1547489771246L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("e93e4f32bfb4deb61db043300effc5b0", new Date(1547489765139L), 79,
                                        "66aaf009-3c6c-499b-9e7f-bc6369aa4feb", "6319976f-60fd-4b10-9701-20809fbfef20",
                                        76, "11e9d367-75c3-4cee-8128-baebf003f5f7",
                                        "ea91190c-201c-41e3-bc66-4eb1f4a3a140", ApiKeyStatus.getDefault(),
                                        new Date(1547489762385L));
            ApiKey apikey2 = new ApiKey("e93e4f32bfb4deb61db043300effc5b0", new Date(1547489765139L), 79,
                                        "66aaf009-3c6c-499b-9e7f-bc6369aa4feb", "6319976f-60fd-4b10-9701-20809fbfef20",
                                        76, "11e9d367-75c3-4cee-8128-baebf003f5f7",
                                        "ea91190c-201c-41e3-bc66-4eb1f4a3a140", ApiKeyStatus.getDefault(),
                                        new Date(1547489762385L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("759f56fdc3c20f23e795797f5f8af99f", new Date(1547489768683L), 72,
                                   "b54679a1-da6c-461a-8fc2-66346e1d68df", "48d78e1d-771d-4464-ae42-0bb0383bcf21", 116,
                                   "dd47186a-65db-4fff-ab88-4878bd80d1c0", "9970f998-b0ae-4b3a-9c68-8533ea24e6ac",
                                   ApiKeyStatus.getDefault(), new Date(1547489765829L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("[?м\u0000@U\u0010NﱑML뺞?\u0012F;E<V྄B;\u0015ZI)떒Ѹ凯(⳹\u0010ꉢ\u0011\u0007;\u001eᄶG>]FNS?਻\u0010TG\u0002\u0014ᢞ많㥼領^\u0013V컢)訥",
                                          new Date(1547489763053L), 123, "457e02c5-fe63-4dd3-8f86-c31b309cdd4b",
                                          "7d4b69b8-4e01-44a9-9866-a7d554634843", -66, null,
                                          "955ec632-6f73-4b30-a59d-b7d33c3fad7e", ApiKeyStatus.getDefault(),
                                          new Date(1547489768473L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("ed4cc5fbe98a70d58ce2043d700f8fff", new Date(1547489766857L), -64,
                                        "c80e5077-597e-4acc-8a97-7a4ae17c8c9d", "97e62d80-9347-4a31-9965-4d401eac2f56",
                                        37, "e3db5708-00e1-4bc4-b127-ac7e3b0ce8b3",
                                        "db870c2c-d70f-436b-bebe-920a3a09faef", ApiKeyStatus.getDefault(),
                                        new Date(1547489762227L));
            ApiKey apikey2 = new ApiKey("ed4cc5fbe98a70d58ce2043d700f8fff", new Date(1547489766857L), -64,
                                        "c80e5077-597e-4acc-8a97-7a4ae17c8c9d", "97e62d80-9347-4a31-9965-4d401eac2f56",
                                        37, "e3db5708-00e1-4bc4-b127-ac7e3b0ce8b3",
                                        "db870c2c-d70f-436b-bebe-920a3a09faef", ApiKeyStatus.getDefault(),
                                        new Date(1547489762227L));
            ApiKey apikey3 = new ApiKey("92f466266bd040a989dbcea3c8d380ef", new Date(1547489763599L), 72,
                                        "aad56958-e3c3-48fa-8439-d971545a10db", "49b3e925-473b-4c68-8aac-8ed8d3690e5a",
                                        19, "9c4a9086-3c32-43aa-8018-a698f142f746",
                                        "9b8ccfa5-728b-4259-946b-d9ffe816dfc7", ApiKeyStatus.getDefault(),
                                        new Date(1547489771713L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
