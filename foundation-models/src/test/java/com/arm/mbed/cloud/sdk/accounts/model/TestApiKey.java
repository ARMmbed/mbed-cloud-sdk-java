// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("12d6edccd380ae8fe0b1161a6c661b89", new Date(1547225900604L), 12,
                                        "264ad5a4-d2b4-457a-9da4-174e31058f05", "15db668c-cd30-4a2b-8bf6-8bf637ab3486",
                                        20, "f1dc984a-e0dd-47f9-902b-e04d891a95be",
                                        "03971f3b-a996-487f-9942-37e072e90540", ApiKeyStatus.getDefault(),
                                        new Date(1547225899005L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("761dba95ff411d026fd4f76060eeaa5c", new Date(1547225896613L), -125,
                                        "19cf3e91-48c9-4a70-8725-19b1bb903d1e", "a44269f5-4762-4177-b860-d33c9f01f69b",
                                        -113, "dd763900-e854-49cf-a865-eaaadcfa63c0",
                                        "dc1e5f3f-0d8a-444b-b40f-0998d0c50f3d", ApiKeyStatus.getDefault(),
                                        new Date(1547225902513L));
            ApiKey apikey2 = new ApiKey("761dba95ff411d026fd4f76060eeaa5c", new Date(1547225896613L), -125,
                                        "19cf3e91-48c9-4a70-8725-19b1bb903d1e", "a44269f5-4762-4177-b860-d33c9f01f69b",
                                        -113, "dd763900-e854-49cf-a865-eaaadcfa63c0",
                                        "dc1e5f3f-0d8a-444b-b40f-0998d0c50f3d", ApiKeyStatus.getDefault(),
                                        new Date(1547225902513L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("d72cfde2c5dded28f5c06b8b3dd96983", new Date(1547225894844L), 124,
                                   "2fe7ffcc-8308-4342-834a-5b4bbdd3f641", "04804c67-f440-431c-8766-05983faf51b4", 120,
                                   "eec44394-3f43-40ac-bcbf-40a04429427b", "44b6cbd6-516d-4fa8-ac4b-b662ac666590",
                                   ApiKeyStatus.getDefault(), new Date(1547225903533L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("ì¥Šì¦›3ä¥?\u0019V\u001cì° î¿°;ì…šV\u0015Z\u001bå£¡;ï¶¹33\u0012\u0011V:']3?å§¯\u001bèº½ê–ª>î¯Žë‡¬â–»3\u00103\u0018?N/\b]33ï¸¯ì—«æ”«ë ›'ê®¦3ç¶¾@\u00183+*3#",
                                          new Date(1547225898009L), -99, "f50e2085-72d5-4f41-94ac-bc559d118d36",
                                          "2997741c-09d4-45b3-bfd2-9b82eacf986a", -50, null,
                                          "a2cc27a7-e69d-4ce0-96b6-26c42d224d02", ApiKeyStatus.getDefault(),
                                          new Date(1547225897979L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("c9ad657cfe0e5bf5236e358232a4ebea", new Date(1547225899964L), -16,
                                        "7cf5cb15-9b87-41da-aeeb-4bc539010bf6", "9a9c5f73-420d-46fb-b71d-02e9b9d62131",
                                        81, "4d4b791c-3e48-4c85-8ad9-d8628f0bbc80",
                                        "ae16831e-964d-4462-8536-2fdf721a5f61", ApiKeyStatus.getDefault(),
                                        new Date(1547225903339L));
            ApiKey apikey2 = new ApiKey("c9ad657cfe0e5bf5236e358232a4ebea", new Date(1547225899964L), -16,
                                        "7cf5cb15-9b87-41da-aeeb-4bc539010bf6", "9a9c5f73-420d-46fb-b71d-02e9b9d62131",
                                        81, "4d4b791c-3e48-4c85-8ad9-d8628f0bbc80",
                                        "ae16831e-964d-4462-8536-2fdf721a5f61", ApiKeyStatus.getDefault(),
                                        new Date(1547225903339L));
            ApiKey apikey3 = new ApiKey("114bde1bae007da4decf0ddbab0edce0", new Date(1547225895043L), -121,
                                        "146b77fa-bca0-4565-a8d0-919b6d8e0244", "90a1c3f7-97b1-49ed-89cb-fc3985a748ab",
                                        -114, "be4decc0-074d-413f-8a85-b7749b72ed8b",
                                        "72960035-82c6-49bc-9cb9-ee283bbe65ea", ApiKeyStatus.getDefault(),
                                        new Date(1547225894977L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
