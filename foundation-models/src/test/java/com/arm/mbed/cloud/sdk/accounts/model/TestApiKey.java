// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("f2d9fbfcd640352941c7abadb87e0d5b", new Date(1551867947725L), 84,
                                        "2be5d565-263b-4f42-bc96-dbe8403e52f7", "170472d2-f8e7-4754-8313-68bb0d2afa97",
                                        41, "c78ea440-81dc-4d3b-ad81-f052ec1c51fd",
                                        "73ea41da-f1d8-45d6-a081-163ff097afa2", ApiKeyStatus.getDefault(),
                                        new Date(1551867952690L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("aee3cff6fd6909d8fabfdbcb84fdb2b7", new Date(1551867948242L), 76,
                                        "0350cc95-1d5d-4a05-ae2d-457952c0ed67", "f5dc42e9-7edf-4c25-95b1-17eea5382e3d",
                                        -128, "0a8ab31a-3381-4628-9c0b-531965059074",
                                        "b80751b9-89d6-4855-a6d6-bff91250f4a0", ApiKeyStatus.getDefault(),
                                        new Date(1551867949419L));
            ApiKey apikey2 = new ApiKey("aee3cff6fd6909d8fabfdbcb84fdb2b7", new Date(1551867948242L), 76,
                                        "0350cc95-1d5d-4a05-ae2d-457952c0ed67", "f5dc42e9-7edf-4c25-95b1-17eea5382e3d",
                                        -128, "0a8ab31a-3381-4628-9c0b-531965059074",
                                        "b80751b9-89d6-4855-a6d6-bff91250f4a0", ApiKeyStatus.getDefault(),
                                        new Date(1551867949419L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("c0d6186bbfb5d9a33baa2befe012b64b", new Date(1551867950813L), -78,
                                   "014fc668-9e2b-485e-8b23-a9f4fbce5b06", "9751e3c4-d2bd-4d0e-889d-5f9d104930a7", -70,
                                   "0ca844b7-32fb-471c-a777-9cdb30f2eaa7", "fa72f89d-96aa-4b99-acbc-b63784a8e4cb",
                                   ApiKeyStatus.getDefault(), new Date(1551867951017L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("?\u0014e\u001de\u000bVeæ «ì€¯\u0001\bï”?\u0017\u0019Z^á‹„\u0003eYDK\u0014\u0001Ëƒee[@eè•‚Má»¬\u0018eSN`äª„e\bÏ¾Q:\u0017\u0011å?¬eã˜ˆå¦¹eeZ\u0006eee]^ä¬šâžŒe",
                                          new Date(1551867948316L), 77, "3fd446d8-0566-4a63-904c-70170c13921f",
                                          "2ce0e482-30e4-4c50-a28e-e870be7e2a0f", -95, null,
                                          "aa679940-493c-4cb5-b496-fea56b8dc1f3", ApiKeyStatus.getDefault(),
                                          new Date(1551867950280L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("cf3ab3dcfeae1fd5d5a3ca83ceef8ec2", new Date(1551867950634L), -40,
                                        "d36cfe72-6471-442d-a40e-e641a79ac85c", "7fda27b6-8372-43f4-a1fb-13b538588245",
                                        55, "7c8b98e5-5b1e-46b8-b0f6-654350602150",
                                        "59e5b0de-20de-4008-83ee-06ae3af43697", ApiKeyStatus.getDefault(),
                                        new Date(1551867950578L));
            ApiKey apikey2 = new ApiKey("cf3ab3dcfeae1fd5d5a3ca83ceef8ec2", new Date(1551867950634L), -40,
                                        "d36cfe72-6471-442d-a40e-e641a79ac85c", "7fda27b6-8372-43f4-a1fb-13b538588245",
                                        55, "7c8b98e5-5b1e-46b8-b0f6-654350602150",
                                        "59e5b0de-20de-4008-83ee-06ae3af43697", ApiKeyStatus.getDefault(),
                                        new Date(1551867950578L));
            ApiKey apikey3 = new ApiKey("cf82f71dec4c3ecd452c83d0aec29ead", new Date(1551867950514L), 24,
                                        "18979243-9d31-438f-b877-d842108b0fe7", "efc8fa78-cc6b-4c6f-a821-343dca9c1712",
                                        89, "e414572c-3275-4e18-85b7-e9d28d9e59c7",
                                        "4d2b73f7-8a4d-4774-a190-1fafbd99186d", ApiKeyStatus.getDefault(),
                                        new Date(1551867951822L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
