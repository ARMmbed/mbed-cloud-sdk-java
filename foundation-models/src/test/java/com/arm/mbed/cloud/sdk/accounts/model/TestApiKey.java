// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("f7f9edc2df1fd9afea87465e2109cb51", new Date(1559655035070L), -17,
                                        "f7f9edc2df1fd9afea87465e2109cb51", "cdca7882-a7f8-45a9-9c1e-173461acb1d6",
                                        -111, "02dea675-607c-4178-86f1-1c3fa7566a10",
                                        "f7f9edc2df1fd9afea87465e2109cb51", ApiKeyStatus.getDefault(),
                                        new Date(1559655029360L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("f7f9edc2df1fd9afea87465e2109cb51", new Date(1559655032162L), 35,
                                        "f7f9edc2df1fd9afea87465e2109cb51", "9f18877b-ca4f-425a-bfc0-87099974ccd6", 10,
                                        "d2b65f56-c096-4669-b1e0-c86455ff19de", "f7f9edc2df1fd9afea87465e2109cb51",
                                        ApiKeyStatus.getDefault(), new Date(1559655036467L));
            ApiKey apikey2 = new ApiKey("f7f9edc2df1fd9afea87465e2109cb51", new Date(1559655032162L), 35,
                                        "f7f9edc2df1fd9afea87465e2109cb51", "9f18877b-ca4f-425a-bfc0-87099974ccd6", 10,
                                        "d2b65f56-c096-4669-b1e0-c86455ff19de", "f7f9edc2df1fd9afea87465e2109cb51",
                                        ApiKeyStatus.getDefault(), new Date(1559655036467L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("f7f9edc2df1fd9afea87465e2109cb51", new Date(1559655034764L), 112,
                                   "f7f9edc2df1fd9afea87465e2109cb51", "ba2e3194-061b-49d9-b7a4-000c2c106a58", -72,
                                   "4266e31b-3d20-4bec-873b-7def7bad4bc5", "f7f9edc2df1fd9afea87465e2109cb51",
                                   ApiKeyStatus.getDefault(), new Date(1559655036629L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("ä»‚+K\u001aé¦¥ëŸ‡\u00103\bá­?L33.3C\u0000\u000e\u001bQ3Uç¨£3ä¯³CS\u0016Mï‹˜\fë¼™Q'3A.ï»¸Y3ã¯²\u0001[3 ì“¶333333J3æ¸—éºƒÊ£)\u00153ì?¼ä…Žà«”3",
                                          new Date(1559655036374L), 72,
                                          "ä»‚+K\u001aé¦¥ëŸ‡\u00103\bá­?L33.3C\u0000\u000e\u001bQ3Uç¨£3ä¯³CS\u0016Mï‹˜\fë¼™Q'3A.ï»¸Y3ã¯²\u0001[3 ì“¶333333J3æ¸—éºƒÊ£)\u00153ì?¼ä…Žà«”3",
                                          "2df85cd1-2c40-4d31-b60e-47a4bee25614", -9, null,
                                          "ä»‚+K\u001aé¦¥ëŸ‡\u00103\bá­?L33.3C\u0000\u000e\u001bQ3Uç¨£3ä¯³CS\u0016Mï‹˜\fë¼™Q'3A.ï»¸Y3ã¯²\u0001[3 ì“¶333333J3æ¸—éºƒÊ£)\u00153ì?¼ä…Žà«”3",
                                          ApiKeyStatus.getDefault(), new Date(1559655028848L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("f7f9edc2df1fd9afea87465e2109cb51", new Date(1559655035142L), -60,
                                        "f7f9edc2df1fd9afea87465e2109cb51", "7420ead9-2871-493a-afbd-eda78b7a2719", 32,
                                        "0a01fed1-8e12-4c5a-b300-7fdd2bcb6a47", "f7f9edc2df1fd9afea87465e2109cb51",
                                        ApiKeyStatus.getDefault(), new Date(1559655036638L));
            ApiKey apikey2 = new ApiKey("f7f9edc2df1fd9afea87465e2109cb51", new Date(1559655035142L), -60,
                                        "f7f9edc2df1fd9afea87465e2109cb51", "7420ead9-2871-493a-afbd-eda78b7a2719", 32,
                                        "0a01fed1-8e12-4c5a-b300-7fdd2bcb6a47", "f7f9edc2df1fd9afea87465e2109cb51",
                                        ApiKeyStatus.getDefault(), new Date(1559655036638L));
            ApiKey apikey3 = new ApiKey("f7f9edc2df1fd9afea87465e2109cb51", new Date(1559655033301L), 64,
                                        "f7f9edc2df1fd9afea87465e2109cb51", "257d9f43-0b3a-4dcc-ad57-519b2e524934", -5,
                                        "8d5487db-f4f7-46e3-8263-2e20da227810", "f7f9edc2df1fd9afea87465e2109cb51",
                                        ApiKeyStatus.getDefault(), new Date(1559655029224L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
