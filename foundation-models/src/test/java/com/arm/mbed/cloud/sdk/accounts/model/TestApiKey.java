// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("bedebcaf929fb64c74860f9a9cc41c0c", new Date(1559833685024L), -18,
                                        "bedebcaf929fb64c74860f9a9cc41c0c", "a99449e7-f21f-4a2f-a1ae-f5c4beebb44f", -88,
                                        "8c989979-d62f-43bc-bf4f-01bf530051e9", "bedebcaf929fb64c74860f9a9cc41c0c",
                                        ApiKeyStatus.getDefault(), new Date(1559833681172L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("bedebcaf929fb64c74860f9a9cc41c0c", new Date(1559833685934L), 67,
                                        "bedebcaf929fb64c74860f9a9cc41c0c", "4046a755-df2c-4436-ac00-1d16f174c5b8", 69,
                                        "1c8b7f89-a716-4b2a-8af9-0c6832cd4b18", "bedebcaf929fb64c74860f9a9cc41c0c",
                                        ApiKeyStatus.getDefault(), new Date(1559833682027L));
            ApiKey apikey2 = new ApiKey("bedebcaf929fb64c74860f9a9cc41c0c", new Date(1559833685934L), 67,
                                        "bedebcaf929fb64c74860f9a9cc41c0c", "4046a755-df2c-4436-ac00-1d16f174c5b8", 69,
                                        "1c8b7f89-a716-4b2a-8af9-0c6832cd4b18", "bedebcaf929fb64c74860f9a9cc41c0c",
                                        ApiKeyStatus.getDefault(), new Date(1559833682027L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("bedebcaf929fb64c74860f9a9cc41c0c", new Date(1559833680927L), 8,
                                   "bedebcaf929fb64c74860f9a9cc41c0c", "0241dadb-93a3-469b-9878-5d698ed0deed", 104,
                                   "5b17bf5c-78c3-4fd1-9e0e-744f38b23309", "bedebcaf929fb64c74860f9a9cc41c0c",
                                   ApiKeyStatus.getDefault(), new Date(1559833680224L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("D3\u0001\u0002\u001c53,àº£Gêž?*]\u001e.H555\u0016æ¬?Å¢3Z533ê§ˆâ?ƒ33è­µâ”ŒçŒ‘\b\u001f5ã†ŒG3T)\u001fï¸¬âŠ©àµ¾3H535(35í?º5è˜ Í¡Y333\u0007",
                                          new Date(1559833678834L), -104,
                                          "D3\u0001\u0002\u001c53,àº£Gêž?*]\u001e.H555\u0016æ¬?Å¢3Z533ê§ˆâ?ƒ33è­µâ”ŒçŒ‘\b\u001f5ã†ŒG3T)\u001fï¸¬âŠ©àµ¾3H535(35í?º5è˜ Í¡Y333\u0007",
                                          "bf067836-ba4e-4326-a5c1-e3b38acfdfe5", -99, null,
                                          "D3\u0001\u0002\u001c53,àº£Gêž?*]\u001e.H555\u0016æ¬?Å¢3Z533ê§ˆâ?ƒ33è­µâ”ŒçŒ‘\b\u001f5ã†ŒG3T)\u001fï¸¬âŠ©àµ¾3H535(35í?º5è˜ Í¡Y333\u0007",
                                          ApiKeyStatus.getDefault(), new Date(1559833678607L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("bedebcaf929fb64c74860f9a9cc41c0c", new Date(1559833683509L), -22,
                                        "bedebcaf929fb64c74860f9a9cc41c0c", "29ae4ff9-92c2-49fa-8046-1e751f105128", 125,
                                        "b13ec438-3fb3-462b-8c08-f8daa35d0999", "bedebcaf929fb64c74860f9a9cc41c0c",
                                        ApiKeyStatus.getDefault(), new Date(1559833681573L));
            ApiKey apikey2 = new ApiKey("bedebcaf929fb64c74860f9a9cc41c0c", new Date(1559833683509L), -22,
                                        "bedebcaf929fb64c74860f9a9cc41c0c", "29ae4ff9-92c2-49fa-8046-1e751f105128", 125,
                                        "b13ec438-3fb3-462b-8c08-f8daa35d0999", "bedebcaf929fb64c74860f9a9cc41c0c",
                                        ApiKeyStatus.getDefault(), new Date(1559833681573L));
            ApiKey apikey3 = new ApiKey("bedebcaf929fb64c74860f9a9cc41c0c", new Date(1559833677091L), -105,
                                        "bedebcaf929fb64c74860f9a9cc41c0c", "1011ca02-31b3-4c2f-a100-8d6bdbf70f0b", 110,
                                        "bfd92dd7-1513-4b61-a865-b653ac3e41f6", "bedebcaf929fb64c74860f9a9cc41c0c",
                                        ApiKeyStatus.getDefault(), new Date(1559833680987L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
