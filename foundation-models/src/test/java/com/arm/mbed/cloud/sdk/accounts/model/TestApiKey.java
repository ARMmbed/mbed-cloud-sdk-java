// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("3f3bfa45b47fdcef3cd0baefcc7b4d9a", new Date(1559560664801L), 20,
                                        "3f3bfa45b47fdcef3cd0baefcc7b4d9a", "d8189e1c-606c-469a-86c5-53c7f87fcd83", 120,
                                        "ef472f49-c512-45dc-a31c-c8b8ec81abc9", "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                        ApiKeyStatus.getDefault(), new Date(1559560665563L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("3f3bfa45b47fdcef3cd0baefcc7b4d9a", new Date(1559560670351L), 48,
                                        "3f3bfa45b47fdcef3cd0baefcc7b4d9a", "b748f5aa-3635-4144-84d4-3ae144cd35e4", 17,
                                        "752c78d1-3efa-44fc-9607-710b0916d845", "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                        ApiKeyStatus.getDefault(), new Date(1559560666846L));
            ApiKey apikey2 = new ApiKey("3f3bfa45b47fdcef3cd0baefcc7b4d9a", new Date(1559560670351L), 48,
                                        "3f3bfa45b47fdcef3cd0baefcc7b4d9a", "b748f5aa-3635-4144-84d4-3ae144cd35e4", 17,
                                        "752c78d1-3efa-44fc-9607-710b0916d845", "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                        ApiKeyStatus.getDefault(), new Date(1559560666846L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("3f3bfa45b47fdcef3cd0baefcc7b4d9a", new Date(1559560665061L), 34,
                                   "3f3bfa45b47fdcef3cd0baefcc7b4d9a", "ed2ec0fa-04d2-4eec-b6ce-913d7ea5b27c", 50,
                                   "4170e1c6-c42d-4b1f-83e5-73370b2174a1", "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                   ApiKeyStatus.getDefault(), new Date(1559560664932L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("å‚¿!6ç¢šâ«”2'>\tæ ¦\u001c6Y8\u001dä³?8\u001f\u00176à¤Ÿ22æ¢‹)8é¥¦B?ç¿“[6é½­ä?¬8821\u001aM\u001588\u0011ÙŽ6+6_88F1\u0004666[86ë§±I1_",
                                          new Date(1559560669353L), -11,
                                          "å‚¿!6ç¢šâ«”2'>\tæ ¦\u001c6Y8\u001dä³?8\u001f\u00176à¤Ÿ22æ¢‹)8é¥¦B?ç¿“[6é½­ä?¬8821\u001aM\u001588\u0011ÙŽ6+6_88F1\u0004666[86ë§±I1_",
                                          "95f1e63a-47f6-4ab1-a46f-ef00c9185415", 34, null,
                                          "å‚¿!6ç¢šâ«”2'>\tæ ¦\u001c6Y8\u001dä³?8\u001f\u00176à¤Ÿ22æ¢‹)8é¥¦B?ç¿“[6é½­ä?¬8821\u001aM\u001588\u0011ÙŽ6+6_88F1\u0004666[86ë§±I1_",
                                          ApiKeyStatus.getDefault(), new Date(1559560670534L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("3f3bfa45b47fdcef3cd0baefcc7b4d9a", new Date(1559560670046L), 59,
                                        "3f3bfa45b47fdcef3cd0baefcc7b4d9a", "35919c16-1dfa-4a4e-af5a-7a70a6e8fe13", 85,
                                        "cac85dd4-a2dd-4f7f-a23c-4e4391b07fc9", "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                        ApiKeyStatus.getDefault(), new Date(1559560663383L));
            ApiKey apikey2 = new ApiKey("3f3bfa45b47fdcef3cd0baefcc7b4d9a", new Date(1559560670046L), 59,
                                        "3f3bfa45b47fdcef3cd0baefcc7b4d9a", "35919c16-1dfa-4a4e-af5a-7a70a6e8fe13", 85,
                                        "cac85dd4-a2dd-4f7f-a23c-4e4391b07fc9", "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                        ApiKeyStatus.getDefault(), new Date(1559560663383L));
            ApiKey apikey3 = new ApiKey("3f3bfa45b47fdcef3cd0baefcc7b4d9a", new Date(1559560669326L), -42,
                                        "3f3bfa45b47fdcef3cd0baefcc7b4d9a", "739e76b5-83e7-4283-9c9f-78262f8d6081", 126,
                                        "f31d8003-305e-4c20-9356-0de2617f1aa0", "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                        ApiKeyStatus.getDefault(), new Date(1559560667908L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
