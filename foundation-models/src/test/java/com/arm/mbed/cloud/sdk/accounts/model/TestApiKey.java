// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("71fdba82137d3d88b328e27f0b30ef6d", new Date(1559754640760L), -33,
                                        "71fdba82137d3d88b328e27f0b30ef6d", "0cfcf587-6e76-4ed6-adf3-5d7485bc05bd", 21,
                                        "f4fe74a8-5fbf-4ad4-833e-d486811bdc44", "71fdba82137d3d88b328e27f0b30ef6d",
                                        ApiKeyStatus.getDefault(), new Date(1559754641982L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("71fdba82137d3d88b328e27f0b30ef6d", new Date(1559754641825L), 97,
                                        "71fdba82137d3d88b328e27f0b30ef6d", "d5b25c12-fc13-4f51-b33b-c1dc724edcfa", 37,
                                        "832455c1-cca8-4d7e-82ba-439be90d0572", "71fdba82137d3d88b328e27f0b30ef6d",
                                        ApiKeyStatus.getDefault(), new Date(1559754642026L));
            ApiKey apikey2 = new ApiKey("71fdba82137d3d88b328e27f0b30ef6d", new Date(1559754641825L), 97,
                                        "71fdba82137d3d88b328e27f0b30ef6d", "d5b25c12-fc13-4f51-b33b-c1dc724edcfa", 37,
                                        "832455c1-cca8-4d7e-82ba-439be90d0572", "71fdba82137d3d88b328e27f0b30ef6d",
                                        ApiKeyStatus.getDefault(), new Date(1559754642026L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("71fdba82137d3d88b328e27f0b30ef6d", new Date(1559754635303L), 2,
                                   "71fdba82137d3d88b328e27f0b30ef6d", "056d088f-5fd8-459f-84eb-550c59bd9a32", -65,
                                   "12d7454d-e09f-4202-a12c-8b249f22636e", "71fdba82137d3d88b328e27f0b30ef6d",
                                   ApiKeyStatus.getDefault(), new Date(1559754640778L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey(";\u000b\u0007å±¨&\u0007H_c5Y\u0005íˆµ44ã—‘\u00165cc)4câˆ³ë…”cc4\u000fë‰¢4ížš54æ£ž4cë€‡c\bcà¦Œ5í?¾?F\táŒ·Tcï‚›céŽ»ëŒ®\u0013$$c:c\u0017F-îŒ¯\u0018",
                                          new Date(1559754638843L), 82,
                                          ";\u000b\u0007å±¨&\u0007H_c5Y\u0005íˆµ44ã—‘\u00165cc)4câˆ³ë…”cc4\u000fë‰¢4ížš54æ£ž4cë€‡c\bcà¦Œ5í?¾?F\táŒ·Tcï‚›céŽ»ëŒ®\u0013$$c:c\u0017F-îŒ¯\u0018",
                                          "04ff6a25-a536-407e-aed5-e09649696788", -33, null,
                                          ";\u000b\u0007å±¨&\u0007H_c5Y\u0005íˆµ44ã—‘\u00165cc)4câˆ³ë…”cc4\u000fë‰¢4ížš54æ£ž4cë€‡c\bcà¦Œ5í?¾?F\táŒ·Tcï‚›céŽ»ëŒ®\u0013$$c:c\u0017F-îŒ¯\u0018",
                                          ApiKeyStatus.getDefault(), new Date(1559754640785L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("71fdba82137d3d88b328e27f0b30ef6d", new Date(1559754643593L), 56,
                                        "71fdba82137d3d88b328e27f0b30ef6d", "b7c4fa5a-5bca-4ed3-af57-325a8ae3ec2b", -96,
                                        "0463ba4e-2afa-46d2-a96f-345b4419030c", "71fdba82137d3d88b328e27f0b30ef6d",
                                        ApiKeyStatus.getDefault(), new Date(1559754637791L));
            ApiKey apikey2 = new ApiKey("71fdba82137d3d88b328e27f0b30ef6d", new Date(1559754643593L), 56,
                                        "71fdba82137d3d88b328e27f0b30ef6d", "b7c4fa5a-5bca-4ed3-af57-325a8ae3ec2b", -96,
                                        "0463ba4e-2afa-46d2-a96f-345b4419030c", "71fdba82137d3d88b328e27f0b30ef6d",
                                        ApiKeyStatus.getDefault(), new Date(1559754637791L));
            ApiKey apikey3 = new ApiKey("71fdba82137d3d88b328e27f0b30ef6d", new Date(1559754638885L), -104,
                                        "71fdba82137d3d88b328e27f0b30ef6d", "8a5b6375-bddf-4f47-a4df-8fa5787e5004", 34,
                                        "439ba548-8571-431b-ae2f-e5f5b61cde27", "71fdba82137d3d88b328e27f0b30ef6d",
                                        ApiKeyStatus.getDefault(), new Date(1559754640308L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
