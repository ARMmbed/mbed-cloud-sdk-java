// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("acbf655bdeac77c770ad4964fcb1f81f", new Date(1559747930263L), 76,
                                        "acbf655bdeac77c770ad4964fcb1f81f", "e8e1a43b-8bf3-4076-96eb-bc4638e93eb7", 51,
                                        "a280cb50-8e4c-4e93-ba52-004cf253fbad", "acbf655bdeac77c770ad4964fcb1f81f",
                                        ApiKeyStatus.getDefault(), new Date(1559747925993L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("acbf655bdeac77c770ad4964fcb1f81f", new Date(1559747931992L), 122,
                                        "acbf655bdeac77c770ad4964fcb1f81f", "abbb6b23-de6c-4af4-8705-8d27af1e12da", -4,
                                        "b85c38cb-c403-4456-afe3-a30f355dda65", "acbf655bdeac77c770ad4964fcb1f81f",
                                        ApiKeyStatus.getDefault(), new Date(1559747929571L));
            ApiKey apikey2 = new ApiKey("acbf655bdeac77c770ad4964fcb1f81f", new Date(1559747931992L), 122,
                                        "acbf655bdeac77c770ad4964fcb1f81f", "abbb6b23-de6c-4af4-8705-8d27af1e12da", -4,
                                        "b85c38cb-c403-4456-afe3-a30f355dda65", "acbf655bdeac77c770ad4964fcb1f81f",
                                        ApiKeyStatus.getDefault(), new Date(1559747929571L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("acbf655bdeac77c770ad4964fcb1f81f", new Date(1559747929249L), -117,
                                   "acbf655bdeac77c770ad4964fcb1f81f", "b6addd66-e6ae-4589-ace4-4e90ce01fdc4", 81,
                                   "3b5e192b-baa9-4743-87cd-605c355f3daa", "acbf655bdeac77c770ad4964fcb1f81f",
                                   ApiKeyStatus.getDefault(), new Date(1559747932090L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("ê€Š+(è¤‘32\f3X\u0005;\\\\2\u001aAä£½îµ‰-2á—œN22&\\\\X\u00023\u00023OJ3\u00012Z*\u000f2\u0007Iä³?3V3ì Ž3'\u00142Î£ë›„\b<XNç£€ë¾†)3.ï¦¢",
                                          new Date(1559747926690L), 88,
                                          "ê€Š+(è¤‘32\f3X\u0005;\\\\2\u001aAä£½îµ‰-2á—œN22&\\\\X\u00023\u00023OJ3\u00012Z*\u000f2\u0007Iä³?3V3ì Ž3'\u00142Î£ë›„\b<XNç£€ë¾†)3.ï¦¢",
                                          "ecafa77c-e6e5-4066-bf98-4c4c2e4ada69", -79, null,
                                          "ê€Š+(è¤‘32\f3X\u0005;\\\\2\u001aAä£½îµ‰-2á—œN22&\\\\X\u00023\u00023OJ3\u00012Z*\u000f2\u0007Iä³?3V3ì Ž3'\u00142Î£ë›„\b<XNç£€ë¾†)3.ï¦¢",
                                          ApiKeyStatus.getDefault(), new Date(1559747935195L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("acbf655bdeac77c770ad4964fcb1f81f", new Date(1559747925922L), 105,
                                        "acbf655bdeac77c770ad4964fcb1f81f", "22922a6b-6aca-4bf9-9ec7-f1e9d57d9dec", 75,
                                        "fd078479-8d80-42ca-bae2-78c3f5eef1d8", "acbf655bdeac77c770ad4964fcb1f81f",
                                        ApiKeyStatus.getDefault(), new Date(1559747930054L));
            ApiKey apikey2 = new ApiKey("acbf655bdeac77c770ad4964fcb1f81f", new Date(1559747925922L), 105,
                                        "acbf655bdeac77c770ad4964fcb1f81f", "22922a6b-6aca-4bf9-9ec7-f1e9d57d9dec", 75,
                                        "fd078479-8d80-42ca-bae2-78c3f5eef1d8", "acbf655bdeac77c770ad4964fcb1f81f",
                                        ApiKeyStatus.getDefault(), new Date(1559747930054L));
            ApiKey apikey3 = new ApiKey("acbf655bdeac77c770ad4964fcb1f81f", new Date(1559747934910L), 41,
                                        "acbf655bdeac77c770ad4964fcb1f81f", "f7ae9f52-575f-47da-9418-ad3e1956d24a", 20,
                                        "3f7e1611-effe-4984-9050-cd4fcb83fa92", "acbf655bdeac77c770ad4964fcb1f81f",
                                        ApiKeyStatus.getDefault(), new Date(1559747935046L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
