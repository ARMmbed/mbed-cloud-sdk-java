// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("8f790df8b03da9b1dd914e7ecab2ad3f", new Date(1559752152052L), 1,
                                        "8f790df8b03da9b1dd914e7ecab2ad3f", "b0a009d7-c104-4e91-bbfb-a4bf6048e24a", 14,
                                        "6f5e5832-18cd-400b-a788-a6353fba46cf", "8f790df8b03da9b1dd914e7ecab2ad3f",
                                        ApiKeyStatus.getDefault(), new Date(1559752152809L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("8f790df8b03da9b1dd914e7ecab2ad3f", new Date(1559752147805L), 121,
                                        "8f790df8b03da9b1dd914e7ecab2ad3f", "c27f0952-3af0-44b3-8697-fc69209c52c1", 112,
                                        "31694a50-e94e-408a-b4c4-62e0efbd5d60", "8f790df8b03da9b1dd914e7ecab2ad3f",
                                        ApiKeyStatus.getDefault(), new Date(1559752144707L));
            ApiKey apikey2 = new ApiKey("8f790df8b03da9b1dd914e7ecab2ad3f", new Date(1559752147805L), 121,
                                        "8f790df8b03da9b1dd914e7ecab2ad3f", "c27f0952-3af0-44b3-8697-fc69209c52c1", 112,
                                        "31694a50-e94e-408a-b4c4-62e0efbd5d60", "8f790df8b03da9b1dd914e7ecab2ad3f",
                                        ApiKeyStatus.getDefault(), new Date(1559752144707L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("8f790df8b03da9b1dd914e7ecab2ad3f", new Date(1559752152121L), -107,
                                   "8f790df8b03da9b1dd914e7ecab2ad3f", "190973b2-a242-46da-940d-0aa4d11d9a78", 62,
                                   "39492cbc-cf5f-4c97-bc92-a1cbc030f61a", "8f790df8b03da9b1dd914e7ecab2ad3f",
                                   ApiKeyStatus.getDefault(), new Date(1559752143881L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("/\u000eä‹¯65\u000eä¯¯\u0005<å¸ˆ66'\u0016)á¾‰5çˆ€ç–¸\u0019äš–\u001e6èµ«65\u0014%\b\u0005ä?ª-\u001e5\u0011V\\\\ë?ž5îšŠ55\u0012\u0012]#56Xè¤³WO?5\b\u001båƒ¤\u000e6\u0007Vå†Œç²¸X",
                                          new Date(1559752151869L), 39,
                                          "/\u000eä‹¯65\u000eä¯¯\u0005<å¸ˆ66'\u0016)á¾‰5çˆ€ç–¸\u0019äš–\u001e6èµ«65\u0014%\b\u0005ä?ª-\u001e5\u0011V\\\\ë?ž5îšŠ55\u0012\u0012]#56Xè¤³WO?5\b\u001båƒ¤\u000e6\u0007Vå†Œç²¸X",
                                          "5a10784c-ed3a-4eca-b625-b271da3e8096", -92, null,
                                          "/\u000eä‹¯65\u000eä¯¯\u0005<å¸ˆ66'\u0016)á¾‰5çˆ€ç–¸\u0019äš–\u001e6èµ«65\u0014%\b\u0005ä?ª-\u001e5\u0011V\\\\ë?ž5îšŠ55\u0012\u0012]#56Xè¤³WO?5\b\u001båƒ¤\u000e6\u0007Vå†Œç²¸X",
                                          ApiKeyStatus.getDefault(), new Date(1559752148693L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("8f790df8b03da9b1dd914e7ecab2ad3f", new Date(1559752147664L), -96,
                                        "8f790df8b03da9b1dd914e7ecab2ad3f", "17f1cd34-d1ce-4862-b061-b8cba8eacee5", 52,
                                        "39d9bb87-d9c8-4e0d-9f79-496a6637a247", "8f790df8b03da9b1dd914e7ecab2ad3f",
                                        ApiKeyStatus.getDefault(), new Date(1559752145937L));
            ApiKey apikey2 = new ApiKey("8f790df8b03da9b1dd914e7ecab2ad3f", new Date(1559752147664L), -96,
                                        "8f790df8b03da9b1dd914e7ecab2ad3f", "17f1cd34-d1ce-4862-b061-b8cba8eacee5", 52,
                                        "39d9bb87-d9c8-4e0d-9f79-496a6637a247", "8f790df8b03da9b1dd914e7ecab2ad3f",
                                        ApiKeyStatus.getDefault(), new Date(1559752145937L));
            ApiKey apikey3 = new ApiKey("8f790df8b03da9b1dd914e7ecab2ad3f", new Date(1559752145610L), 68,
                                        "8f790df8b03da9b1dd914e7ecab2ad3f", "be309db9-7b8e-43f5-8b03-d1a65ba312b8",
                                        -100, "8346999d-5b3e-4136-88ed-ac90cdccd10d",
                                        "8f790df8b03da9b1dd914e7ecab2ad3f", ApiKeyStatus.getDefault(),
                                        new Date(1559752150229L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
