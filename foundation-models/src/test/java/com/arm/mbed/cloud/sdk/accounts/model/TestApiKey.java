// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("12fd2fdde032e3d8c8ae351f238b3fab", new Date(1547159629476L), 58,
                                        "2cd0c053-7da1-4828-bb01-a1311f64b7a3", "ee27b278-aa31-4947-857f-355517ef2886",
                                        -37, "b06c8978-d3bf-4636-a7cf-8439c3d52a98",
                                        "19685c70-5bc8-493b-b8f7-f0d35d5ccb5b", ApiKeyStatus.getDefault(),
                                        new Date(1547159628137L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("cfc332b6e81c18dfc2a5dbf8bfb6290e", new Date(1547159627863L), 112,
                                        "50c18231-2039-4dc3-bd40-e262a55ccdc6", "3f2b320d-fa17-4f5e-9fdd-a54d84fe311f",
                                        -123, "3ab34d68-8669-47b9-8805-2c0c585c05cc",
                                        "880c5b5a-8fdc-48f7-9afc-f2e24d02b9fe", ApiKeyStatus.getDefault(),
                                        new Date(1547159629316L));
            ApiKey apikey2 = new ApiKey("cfc332b6e81c18dfc2a5dbf8bfb6290e", new Date(1547159627863L), 112,
                                        "50c18231-2039-4dc3-bd40-e262a55ccdc6", "3f2b320d-fa17-4f5e-9fdd-a54d84fe311f",
                                        -123, "3ab34d68-8669-47b9-8805-2c0c585c05cc",
                                        "880c5b5a-8fdc-48f7-9afc-f2e24d02b9fe", ApiKeyStatus.getDefault(),
                                        new Date(1547159629316L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("88fc91d62350c4a7dc3aeb416c3bfdec", new Date(1547159624800L), 99,
                                   "865f524d-6273-495d-a775-55df8a8e43f4", "8ea0d5e5-fc45-4559-ba85-2830bafdfa8f", 21,
                                   "302b2a3d-09fe-446a-9432-2c0dd90e19e3", "5492e86e-4b94-4ec0-b4aa-55c83a7eda3a",
                                   ApiKeyStatus.getDefault(), new Date(1547159621464L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("\u0017@íšªì?½*â…”CBç?…JR\u0004æ¸‰\fJë‚²M\u000bï‘¬*>ï¢·\u001e$$\u0014æ¶¬\u0018\u0011\u0001â·®[æ¿‘Í»ä¯‰Ê¨M\u0013@\u000fG\u0015&\u000b?aí?‘?ï¬‰\u001aFWUä‰‘çˆ›â¸³Kç¸¼æº½ä¸Ž%\u0004V_",
                                          new Date(1547159620560L), -77, null, "21d6fae3-f8eb-43ff-be2b-ff099764fbd2",
                                          91, null, "65d0ab32-6726-4045-8dd2-3dd2f3bc6653", ApiKeyStatus.getDefault(),
                                          new Date(1547159623226L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("efd3840eaac52ccbfdf11fbd1795f9be", new Date(1547159622905L), 11,
                                        "82524271-2d6d-4139-91ee-116ed3f69a5b", "d12b034d-5938-4da8-b10c-89d6351a0b97",
                                        3, "c8cf16b9-4bee-4046-8f15-b71fc185deae",
                                        "08a67033-2500-4079-b127-2d5fbd67f044", ApiKeyStatus.getDefault(),
                                        new Date(1547159620600L));
            ApiKey apikey2 = new ApiKey("efd3840eaac52ccbfdf11fbd1795f9be", new Date(1547159622905L), 11,
                                        "82524271-2d6d-4139-91ee-116ed3f69a5b", "d12b034d-5938-4da8-b10c-89d6351a0b97",
                                        3, "c8cf16b9-4bee-4046-8f15-b71fc185deae",
                                        "08a67033-2500-4079-b127-2d5fbd67f044", ApiKeyStatus.getDefault(),
                                        new Date(1547159620600L));
            ApiKey apikey3 = new ApiKey("b5ddd1ecbfb6b13d22740dadc3beb47e", new Date(1547159624329L), -83,
                                        "6295e956-3009-4d68-800f-1c0a61a0b1d0", "ae517259-9e81-4616-b9b7-3f7614fe60f5",
                                        -71, "633c4815-c6ef-45d1-85ee-81facd876f3c",
                                        "a8607241-881b-4d4b-8afc-b24fc2f1803a", ApiKeyStatus.getDefault(),
                                        new Date(1547159624663L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
