// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("3bfc9cdfe313bbd7bcb627c7a4f35e1e", new Date(1559288260641L), -78,
                                        "3bfc9cdfe313bbd7bcb627c7a4f35e1e", "e452b582-4d51-4065-837c-fe24e35ccdb9", -36,
                                        "2d115a28-f94c-4689-a87b-81813c281ebe", "3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                        ApiKeyStatus.getDefault(), new Date(1559288257770L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("3bfc9cdfe313bbd7bcb627c7a4f35e1e", new Date(1559288258256L), 94,
                                        "3bfc9cdfe313bbd7bcb627c7a4f35e1e", "374bd638-d331-4421-a577-e9f618a5c35f", -28,
                                        "c191103e-b8d7-4c2d-a200-dd85aeed780c", "3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                        ApiKeyStatus.getDefault(), new Date(1559288261267L));
            ApiKey apikey2 = new ApiKey("3bfc9cdfe313bbd7bcb627c7a4f35e1e", new Date(1559288258256L), 94,
                                        "3bfc9cdfe313bbd7bcb627c7a4f35e1e", "374bd638-d331-4421-a577-e9f618a5c35f", -28,
                                        "c191103e-b8d7-4c2d-a200-dd85aeed780c", "3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                        ApiKeyStatus.getDefault(), new Date(1559288261267L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("3bfc9cdfe313bbd7bcb627c7a4f35e1e", new Date(1559288253518L), -42,
                                   "3bfc9cdfe313bbd7bcb627c7a4f35e1e", "4118ccfc-5517-494d-917a-d2c781149fcd", 82,
                                   "3183c64e-e9c7-44ea-8b32-58a6817f812d", "3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                   ApiKeyStatus.getDefault(), new Date(1559288253610L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("\u0012&æ…†\t`ì½µîˆ¶888^8á®§M\u0003K\u00108\\\\\u000eè°–8P&8)$$8L;8ã³ªî?¥î¸š\u0011L8âšŠ\u000f\u0014ê?¨88YKKéŽ¨F\u0013^Ú¥8ë¦?!\u001008FZèŸ›ë‚œ8^E",
                                          new Date(1559288255069L), 40,
                                          "\u0012&æ…†\t`ì½µîˆ¶888^8á®§M\u0003K\u00108\\\\\u000eè°–8P&8)$$8L;8ã³ªî?¥î¸š\u0011L8âšŠ\u000f\u0014ê?¨88YKKéŽ¨F\u0013^Ú¥8ë¦?!\u001008FZèŸ›ë‚œ8^E",
                                          "6f3628b3-ee45-4737-920c-4a789cd40df5", 93, null,
                                          "\u0012&æ…†\t`ì½µîˆ¶888^8á®§M\u0003K\u00108\\\\\u000eè°–8P&8)$$8L;8ã³ªî?¥î¸š\u0011L8âšŠ\u000f\u0014ê?¨88YKKéŽ¨F\u0013^Ú¥8ë¦?!\u001008FZèŸ›ë‚œ8^E",
                                          ApiKeyStatus.getDefault(), new Date(1559288259259L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("3bfc9cdfe313bbd7bcb627c7a4f35e1e", new Date(1559288255588L), -51,
                                        "3bfc9cdfe313bbd7bcb627c7a4f35e1e", "b75ca69d-8901-4a51-a040-4ef69ddec1e6", 105,
                                        "1802de0e-68d6-4d3f-9cef-bfdfd0aadfa5", "3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                        ApiKeyStatus.getDefault(), new Date(1559288261773L));
            ApiKey apikey2 = new ApiKey("3bfc9cdfe313bbd7bcb627c7a4f35e1e", new Date(1559288255588L), -51,
                                        "3bfc9cdfe313bbd7bcb627c7a4f35e1e", "b75ca69d-8901-4a51-a040-4ef69ddec1e6", 105,
                                        "1802de0e-68d6-4d3f-9cef-bfdfd0aadfa5", "3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                        ApiKeyStatus.getDefault(), new Date(1559288261773L));
            ApiKey apikey3 = new ApiKey("3bfc9cdfe313bbd7bcb627c7a4f35e1e", new Date(1559288253846L), 118,
                                        "3bfc9cdfe313bbd7bcb627c7a4f35e1e", "c41a4d69-973c-4f59-93d7-697a553af365", 116,
                                        "031d9472-524f-4702-8cd2-57a00f47407f", "3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                        ApiKeyStatus.getDefault(), new Date(1559288258365L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
