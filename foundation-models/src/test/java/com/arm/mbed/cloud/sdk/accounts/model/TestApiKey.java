// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("acc8cb178a5cea59a0ac26cbc2e1911d", new Date(1559746949258L), -97,
                                        "acc8cb178a5cea59a0ac26cbc2e1911d", "26e543c6-1b5d-418a-b7f2-19b78b407eda", -67,
                                        "ce16e021-7529-45d1-818b-7b0ecf521872", "acc8cb178a5cea59a0ac26cbc2e1911d",
                                        ApiKeyStatus.getDefault(), new Date(1559746953669L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("acc8cb178a5cea59a0ac26cbc2e1911d", new Date(1559746949723L), -16,
                                        "acc8cb178a5cea59a0ac26cbc2e1911d", "cbef4b00-0699-4768-9c33-14ff8a2009da", -21,
                                        "cc4f2a1a-89c3-407d-b83a-76adc1775aa9", "acc8cb178a5cea59a0ac26cbc2e1911d",
                                        ApiKeyStatus.getDefault(), new Date(1559746953116L));
            ApiKey apikey2 = new ApiKey("acc8cb178a5cea59a0ac26cbc2e1911d", new Date(1559746949723L), -16,
                                        "acc8cb178a5cea59a0ac26cbc2e1911d", "cbef4b00-0699-4768-9c33-14ff8a2009da", -21,
                                        "cc4f2a1a-89c3-407d-b83a-76adc1775aa9", "acc8cb178a5cea59a0ac26cbc2e1911d",
                                        ApiKeyStatus.getDefault(), new Date(1559746953116L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("acc8cb178a5cea59a0ac26cbc2e1911d", new Date(1559746948079L), 49,
                                   "acc8cb178a5cea59a0ac26cbc2e1911d", "9f79e90d-4409-44ef-806e-fb96217db7ee", 77,
                                   "22f1f37e-7818-4908-9006-73055aa68a8e", "acc8cb178a5cea59a0ac26cbc2e1911d",
                                   ApiKeyStatus.getDefault(), new Date(1559746949613L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("î®·4 4ä£›4\f4O434è†—Aè†¶3æ?µâ ¿3VB+3\u0011íœˆ/æ—º)4ï¾¾)4K?î‡‚\u0014*Ná½¯>ã™¥Mæ«‰à¤»U4>P3\\\\é²„íž°44'33æ¢°\u0017í•­T]E",
                                          new Date(1559746953283L), 94,
                                          "î®·4 4ä£›4\f4O434è†—Aè†¶3æ?µâ ¿3VB+3\u0011íœˆ/æ—º)4ï¾¾)4K?î‡‚\u0014*Ná½¯>ã™¥Mæ«‰à¤»U4>P3\\\\é²„íž°44'33æ¢°\u0017í•­T]E",
                                          "9e68413d-9954-4713-bebb-da87a2d5b7ce", -19, null,
                                          "î®·4 4ä£›4\f4O434è†—Aè†¶3æ?µâ ¿3VB+3\u0011íœˆ/æ—º)4ï¾¾)4K?î‡‚\u0014*Ná½¯>ã™¥Mæ«‰à¤»U4>P3\\\\é²„íž°44'33æ¢°\u0017í•­T]E",
                                          ApiKeyStatus.getDefault(), new Date(1559746947525L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("acc8cb178a5cea59a0ac26cbc2e1911d", new Date(1559746954924L), -104,
                                        "acc8cb178a5cea59a0ac26cbc2e1911d", "608f88ae-6062-466a-b238-b92f5579cec4", 0,
                                        "74eb6f1c-db40-4a7c-b4bb-b8337fef56a9", "acc8cb178a5cea59a0ac26cbc2e1911d",
                                        ApiKeyStatus.getDefault(), new Date(1559746951371L));
            ApiKey apikey2 = new ApiKey("acc8cb178a5cea59a0ac26cbc2e1911d", new Date(1559746954924L), -104,
                                        "acc8cb178a5cea59a0ac26cbc2e1911d", "608f88ae-6062-466a-b238-b92f5579cec4", 0,
                                        "74eb6f1c-db40-4a7c-b4bb-b8337fef56a9", "acc8cb178a5cea59a0ac26cbc2e1911d",
                                        ApiKeyStatus.getDefault(), new Date(1559746951371L));
            ApiKey apikey3 = new ApiKey("acc8cb178a5cea59a0ac26cbc2e1911d", new Date(1559746955402L), 35,
                                        "acc8cb178a5cea59a0ac26cbc2e1911d", "3e6f1dc4-09fc-4d25-af19-5258b4e880d6",
                                        -106, "95177592-f4ce-4876-84c9-8a63520fc897",
                                        "acc8cb178a5cea59a0ac26cbc2e1911d", ApiKeyStatus.getDefault(),
                                        new Date(1559746947222L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
