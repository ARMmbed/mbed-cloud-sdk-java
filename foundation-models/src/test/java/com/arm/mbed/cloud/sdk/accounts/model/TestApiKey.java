// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("afbdeea60718ef43acbc07ccc8d8b7ff", new Date(1558096035951L), 126,
                                        "afbdeea60718ef43acbc07ccc8d8b7ff", "f6147dec-a346-439a-b254-5c1193ae812b", 67,
                                        "558250e6-a5c5-40cf-9260-b755613761e8", "afbdeea60718ef43acbc07ccc8d8b7ff",
                                        ApiKeyStatus.getDefault(), new Date(1558096041537L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("afbdeea60718ef43acbc07ccc8d8b7ff", new Date(1558096042081L), -115,
                                        "afbdeea60718ef43acbc07ccc8d8b7ff", "bb1e827a-8734-46e8-bd40-c864d5320e77", 67,
                                        "614e6ceb-cdd4-489d-ba05-caa733b68c9e", "afbdeea60718ef43acbc07ccc8d8b7ff",
                                        ApiKeyStatus.getDefault(), new Date(1558096037000L));
            ApiKey apikey2 = new ApiKey("afbdeea60718ef43acbc07ccc8d8b7ff", new Date(1558096042081L), -115,
                                        "afbdeea60718ef43acbc07ccc8d8b7ff", "bb1e827a-8734-46e8-bd40-c864d5320e77", 67,
                                        "614e6ceb-cdd4-489d-ba05-caa733b68c9e", "afbdeea60718ef43acbc07ccc8d8b7ff",
                                        ApiKeyStatus.getDefault(), new Date(1558096037000L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("afbdeea60718ef43acbc07ccc8d8b7ff", new Date(1558096040854L), -22,
                                   "afbdeea60718ef43acbc07ccc8d8b7ff", "fd7ace70-2ae7-4dc7-8f23-7b9a60704341", -82,
                                   "fff34750-707b-4d09-acee-2773740d90cf", "afbdeea60718ef43acbc07ccc8d8b7ff",
                                   ApiKeyStatus.getDefault(), new Date(1558096040392L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("2FXì¯†52\u0007R5ë™£\u0000ï´µ2552Séº“åŠ¼ä—´22/æ±µî«¾5î?º25!ë?©5,2\b22\u000725%î¤ 2`è‹…5\u001a)ê–Ÿ2B2\u0013îŸª52ì¦?5\u001c)\u0013",
                                          new Date(1558096035825L), 63,
                                          "2FXì¯†52\u0007R5ë™£\u0000ï´µ2552Séº“åŠ¼ä—´22/æ±µî«¾5î?º25!ë?©5,2\b22\u000725%î¤ 2`è‹…5\u001a)ê–Ÿ2B2\u0013îŸª52ì¦?5\u001c)\u0013",
                                          "cb77fe31-4e16-4684-a415-cac60b39d2b8", -32, null,
                                          "2FXì¯†52\u0007R5ë™£\u0000ï´µ2552Séº“åŠ¼ä—´22/æ±µî«¾5î?º25!ë?©5,2\b22\u000725%î¤ 2`è‹…5\u001a)ê–Ÿ2B2\u0013îŸª52ì¦?5\u001c)\u0013",
                                          ApiKeyStatus.getDefault(), new Date(1558096044850L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("afbdeea60718ef43acbc07ccc8d8b7ff", new Date(1558096039071L), 41,
                                        "afbdeea60718ef43acbc07ccc8d8b7ff", "61d9ff38-0ed8-4067-a408-6b01f868a604", 76,
                                        "d65632e0-9e31-453d-b70a-c58d69447358", "afbdeea60718ef43acbc07ccc8d8b7ff",
                                        ApiKeyStatus.getDefault(), new Date(1558096038544L));
            ApiKey apikey2 = new ApiKey("afbdeea60718ef43acbc07ccc8d8b7ff", new Date(1558096039071L), 41,
                                        "afbdeea60718ef43acbc07ccc8d8b7ff", "61d9ff38-0ed8-4067-a408-6b01f868a604", 76,
                                        "d65632e0-9e31-453d-b70a-c58d69447358", "afbdeea60718ef43acbc07ccc8d8b7ff",
                                        ApiKeyStatus.getDefault(), new Date(1558096038544L));
            ApiKey apikey3 = new ApiKey("afbdeea60718ef43acbc07ccc8d8b7ff", new Date(1558096035244L), -30,
                                        "afbdeea60718ef43acbc07ccc8d8b7ff", "e9e0e208-bf0a-4a2d-881c-e010d7bdd7f3", 103,
                                        "8cc0b630-ea2b-4cfe-ac6d-a27c474213eb", "afbdeea60718ef43acbc07ccc8d8b7ff",
                                        ApiKeyStatus.getDefault(), new Date(1558096038958L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
