// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                        new Date(1558096042170L),
                                                                                        "bb292bb6-0a6b-4658-b45b-a3878b313a0e",
                                                                                        "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                        "afbdeea60718ef43acbc07ccc8d8b7ff");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                        new Date(1558096037633L),
                                                                                        "a2c1b1db-40d6-46ed-a270-892e424b2d52",
                                                                                        "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                        "afbdeea60718ef43acbc07ccc8d8b7ff");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                        new Date(1558096037633L),
                                                                                        "a2c1b1db-40d6-46ed-a270-892e424b2d52",
                                                                                        "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                        "afbdeea60718ef43acbc07ccc8d8b7ff");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                   new Date(1558096038947L),
                                                                                   "a12ff96e-a5f9-432b-b163-c6aaf4995fc8",
                                                                                   "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                   "afbdeea60718ef43acbc07ccc8d8b7ff");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("2FXì¯†52\u0007R5ë™£\u0000ï´µ2552Séº“åŠ¼ä—´22/æ±µî«¾5î?º25!ë?©5,2\b22\u000725%î¤ 2`è‹…5\u001a)ê–Ÿ2B2\u0013îŸª52ì¦?5\u001c)\u0013",
                                                                                          new Date(1558096040768L),
                                                                                          "3483fff5-bf41-4f7c-bd1c-025105e50a17",
                                                                                          "2FXì¯†52\u0007R5ë™£\u0000ï´µ2552Séº“åŠ¼ä—´22/æ±µî«¾5î?º25!ë?©5,2\b22\u000725%î¤ 2`è‹…5\u001a)ê–Ÿ2B2\u0013îŸª52ì¦?5\u001c)\u0013",
                                                                                          "2FXì¯†52\u0007R5ë™£\u0000ï´µ2552Séº“åŠ¼ä—´22/æ±µî«¾5î?º25!ë?©5,2\b22\u000725%î¤ 2`è‹…5\u001a)ê–Ÿ2B2\u0013îŸª52ì¦?5\u001c)\u0013");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                        new Date(1558096037555L),
                                                                                        "95c3bc7d-2e64-4ddd-990c-c8fba634eee9",
                                                                                        "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                        "afbdeea60718ef43acbc07ccc8d8b7ff");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                        new Date(1558096037555L),
                                                                                        "95c3bc7d-2e64-4ddd-990c-c8fba634eee9",
                                                                                        "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                        "afbdeea60718ef43acbc07ccc8d8b7ff");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                        new Date(1558096041563L),
                                                                                        "c0fa2d95-68d7-4007-ab43-a9e0d5fb109a",
                                                                                        "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                        "afbdeea60718ef43acbc07ccc8d8b7ff");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
