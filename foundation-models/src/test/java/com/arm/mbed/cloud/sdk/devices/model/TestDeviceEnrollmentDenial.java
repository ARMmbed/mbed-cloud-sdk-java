// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                        new Date(1559833683568L),
                                                                                        "c5a8e957-b3bc-4440-bd0a-6e92c8e66957",
                                                                                        "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                        "bedebcaf929fb64c74860f9a9cc41c0c");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                        new Date(1559833677447L),
                                                                                        "64f51b26-f438-45fd-8ffe-689885fe7aef",
                                                                                        "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                        "bedebcaf929fb64c74860f9a9cc41c0c");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                        new Date(1559833677447L),
                                                                                        "64f51b26-f438-45fd-8ffe-689885fe7aef",
                                                                                        "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                        "bedebcaf929fb64c74860f9a9cc41c0c");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                   new Date(1559833679288L),
                                                                                   "09cd66f4-5f94-49d9-b7aa-bfbc7bfcf72e",
                                                                                   "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                   "bedebcaf929fb64c74860f9a9cc41c0c");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("D3\u0001\u0002\u001c53,àº£Gêž?*]\u001e.H555\u0016æ¬?Å¢3Z533ê§ˆâ?ƒ33è­µâ”ŒçŒ‘\b\u001f5ã†ŒG3T)\u001fï¸¬âŠ©àµ¾3H535(35í?º5è˜ Í¡Y333\u0007",
                                                                                          new Date(1559833684565L),
                                                                                          "81f7b876-f0ae-43f1-862e-c5b6578e6b93",
                                                                                          "D3\u0001\u0002\u001c53,àº£Gêž?*]\u001e.H555\u0016æ¬?Å¢3Z533ê§ˆâ?ƒ33è­µâ”ŒçŒ‘\b\u001f5ã†ŒG3T)\u001fï¸¬âŠ©àµ¾3H535(35í?º5è˜ Í¡Y333\u0007",
                                                                                          "D3\u0001\u0002\u001c53,àº£Gêž?*]\u001e.H555\u0016æ¬?Å¢3Z533ê§ˆâ?ƒ33è­µâ”ŒçŒ‘\b\u001f5ã†ŒG3T)\u001fï¸¬âŠ©àµ¾3H535(35í?º5è˜ Í¡Y333\u0007");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                        new Date(1559833677963L),
                                                                                        "0312ecd8-87d9-4b84-be9b-ba689d036723",
                                                                                        "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                        "bedebcaf929fb64c74860f9a9cc41c0c");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                        new Date(1559833677963L),
                                                                                        "0312ecd8-87d9-4b84-be9b-ba689d036723",
                                                                                        "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                        "bedebcaf929fb64c74860f9a9cc41c0c");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                        new Date(1559833683450L),
                                                                                        "e79342bb-76fd-460f-982f-bd5181c5d41f",
                                                                                        "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                        "bedebcaf929fb64c74860f9a9cc41c0c");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
