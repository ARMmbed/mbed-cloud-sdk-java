// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                                        new Date(1559313341770L),
                                                                                        "5dcd6a87-bd55-42a3-a555-0b5e5c78038f",
                                                                                        "c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                                        "c26ebd108cbc6d2e0e403ca038b7faa6");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                                        new Date(1559313346941L),
                                                                                        "9613b529-f86e-4cb0-9d1a-fabbac4e1f75",
                                                                                        "c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                                        "c26ebd108cbc6d2e0e403ca038b7faa6");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                                        new Date(1559313346941L),
                                                                                        "9613b529-f86e-4cb0-9d1a-fabbac4e1f75",
                                                                                        "c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                                        "c26ebd108cbc6d2e0e403ca038b7faa6");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                                   new Date(1559313339757L),
                                                                                   "9b5dd2d9-83eb-4e58-9d9a-c0f57bce465f",
                                                                                   "c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                                   "c26ebd108cbc6d2e0e403ca038b7faa6");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("5â¬³U\u0013\u0005PJä›¹â©ŽGWWë˜‚)ì“µ55?\u0012'ì¶Œ55\u0018ÏŸPä™˜ç¤¹)5\u0000Z?\bã·?\u0007>5ë¾¹á˜„\u001b\u001c555G5î—Š,ä“¯ç¶´Xï€œ\f5H×¤ê‰±]\u000eAè“œ",
                                                                                          new Date(1559313348741L),
                                                                                          "a9886cef-0f59-421f-9dd7-cceba68f497c",
                                                                                          "5â¬³U\u0013\u0005PJä›¹â©ŽGWWë˜‚)ì“µ55?\u0012'ì¶Œ55\u0018ÏŸPä™˜ç¤¹)5\u0000Z?\bã·?\u0007>5ë¾¹á˜„\u001b\u001c555G5î—Š,ä“¯ç¶´Xï€œ\f5H×¤ê‰±]\u000eAè“œ",
                                                                                          "5â¬³U\u0013\u0005PJä›¹â©ŽGWWë˜‚)ì“µ55?\u0012'ì¶Œ55\u0018ÏŸPä™˜ç¤¹)5\u0000Z?\bã·?\u0007>5ë¾¹á˜„\u001b\u001c555G5î—Š,ä“¯ç¶´Xï€œ\f5H×¤ê‰±]\u000eAè“œ");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                                        new Date(1559313344274L),
                                                                                        "96d74f3e-9424-4ad6-9261-9232c36c793e",
                                                                                        "c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                                        "c26ebd108cbc6d2e0e403ca038b7faa6");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                                        new Date(1559313344274L),
                                                                                        "96d74f3e-9424-4ad6-9261-9232c36c793e",
                                                                                        "c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                                        "c26ebd108cbc6d2e0e403ca038b7faa6");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                                        new Date(1559313347596L),
                                                                                        "03d05432-ef33-4582-bbe2-4baa62dd9151",
                                                                                        "c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                                        "c26ebd108cbc6d2e0e403ca038b7faa6");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
