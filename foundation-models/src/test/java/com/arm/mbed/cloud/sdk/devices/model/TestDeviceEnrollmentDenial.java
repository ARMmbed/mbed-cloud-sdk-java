// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("71fdba82137d3d88b328e27f0b30ef6d",
                                                                                        new Date(1559754642324L),
                                                                                        "32d2a2ca-189f-46f9-9f84-97e6016dc621",
                                                                                        "71fdba82137d3d88b328e27f0b30ef6d",
                                                                                        "71fdba82137d3d88b328e27f0b30ef6d");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("71fdba82137d3d88b328e27f0b30ef6d",
                                                                                        new Date(1559754637234L),
                                                                                        "03c18e80-c5b4-4a11-9c17-e77be418beaf",
                                                                                        "71fdba82137d3d88b328e27f0b30ef6d",
                                                                                        "71fdba82137d3d88b328e27f0b30ef6d");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("71fdba82137d3d88b328e27f0b30ef6d",
                                                                                        new Date(1559754637234L),
                                                                                        "03c18e80-c5b4-4a11-9c17-e77be418beaf",
                                                                                        "71fdba82137d3d88b328e27f0b30ef6d",
                                                                                        "71fdba82137d3d88b328e27f0b30ef6d");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("71fdba82137d3d88b328e27f0b30ef6d",
                                                                                   new Date(1559754644419L),
                                                                                   "07b493b5-44e4-4889-a611-0af6034d380b",
                                                                                   "71fdba82137d3d88b328e27f0b30ef6d",
                                                                                   "71fdba82137d3d88b328e27f0b30ef6d");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial(";\u000b\u0007å±¨&\u0007H_c5Y\u0005íˆµ44ã—‘\u00165cc)4câˆ³ë…”cc4\u000fë‰¢4ížš54æ£ž4cë€‡c\bcà¦Œ5í?¾?F\táŒ·Tcï‚›céŽ»ëŒ®\u0013$$c:c\u0017F-îŒ¯\u0018",
                                                                                          new Date(1559754639652L),
                                                                                          "38830970-5590-4e3f-a84a-288dc919c2bd",
                                                                                          ";\u000b\u0007å±¨&\u0007H_c5Y\u0005íˆµ44ã—‘\u00165cc)4câˆ³ë…”cc4\u000fë‰¢4ížš54æ£ž4cë€‡c\bcà¦Œ5í?¾?F\táŒ·Tcï‚›céŽ»ëŒ®\u0013$$c:c\u0017F-îŒ¯\u0018",
                                                                                          ";\u000b\u0007å±¨&\u0007H_c5Y\u0005íˆµ44ã—‘\u00165cc)4câˆ³ë…”cc4\u000fë‰¢4ížš54æ£ž4cë€‡c\bcà¦Œ5í?¾?F\táŒ·Tcï‚›céŽ»ëŒ®\u0013$$c:c\u0017F-îŒ¯\u0018");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("71fdba82137d3d88b328e27f0b30ef6d",
                                                                                        new Date(1559754635665L),
                                                                                        "61f70028-8070-4ddb-a9f3-d39f7c700c76",
                                                                                        "71fdba82137d3d88b328e27f0b30ef6d",
                                                                                        "71fdba82137d3d88b328e27f0b30ef6d");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("71fdba82137d3d88b328e27f0b30ef6d",
                                                                                        new Date(1559754635665L),
                                                                                        "61f70028-8070-4ddb-a9f3-d39f7c700c76",
                                                                                        "71fdba82137d3d88b328e27f0b30ef6d",
                                                                                        "71fdba82137d3d88b328e27f0b30ef6d");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("71fdba82137d3d88b328e27f0b30ef6d",
                                                                                        new Date(1559754639533L),
                                                                                        "2323058f-1e7c-4a96-a198-cddf3e285982",
                                                                                        "71fdba82137d3d88b328e27f0b30ef6d",
                                                                                        "71fdba82137d3d88b328e27f0b30ef6d");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
