// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                                        new Date(1559746949090L),
                                                                                        "1d019894-6947-468c-9d45-2fffa1bff49a",
                                                                                        "acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                                        "acc8cb178a5cea59a0ac26cbc2e1911d");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                                        new Date(1559746955529L),
                                                                                        "8d84f96e-c083-41ba-a880-4dfb334a191a",
                                                                                        "acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                                        "acc8cb178a5cea59a0ac26cbc2e1911d");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                                        new Date(1559746955529L),
                                                                                        "8d84f96e-c083-41ba-a880-4dfb334a191a",
                                                                                        "acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                                        "acc8cb178a5cea59a0ac26cbc2e1911d");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                                   new Date(1559746952950L),
                                                                                   "3c021cef-4bbb-4e09-b051-69dc2f887ccf",
                                                                                   "acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                                   "acc8cb178a5cea59a0ac26cbc2e1911d");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("î®·4 4ä£›4\f4O434è†—Aè†¶3æ?µâ ¿3VB+3\u0011íœˆ/æ—º)4ï¾¾)4K?î‡‚\u0014*Ná½¯>ã™¥Mæ«‰à¤»U4>P3\\\\é²„íž°44'33æ¢°\u0017í•­T]E",
                                                                                          new Date(1559746945985L),
                                                                                          "35a4ed7c-671d-4081-a1fa-19e76726bc05",
                                                                                          "î®·4 4ä£›4\f4O434è†—Aè†¶3æ?µâ ¿3VB+3\u0011íœˆ/æ—º)4ï¾¾)4K?î‡‚\u0014*Ná½¯>ã™¥Mæ«‰à¤»U4>P3\\\\é²„íž°44'33æ¢°\u0017í•­T]E",
                                                                                          "î®·4 4ä£›4\f4O434è†—Aè†¶3æ?µâ ¿3VB+3\u0011íœˆ/æ—º)4ï¾¾)4K?î‡‚\u0014*Ná½¯>ã™¥Mæ«‰à¤»U4>P3\\\\é²„íž°44'33æ¢°\u0017í•­T]E");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                                        new Date(1559746948565L),
                                                                                        "6640c2d3-9090-4eef-abaf-9d8c6d0f8e71",
                                                                                        "acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                                        "acc8cb178a5cea59a0ac26cbc2e1911d");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                                        new Date(1559746948565L),
                                                                                        "6640c2d3-9090-4eef-abaf-9d8c6d0f8e71",
                                                                                        "acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                                        "acc8cb178a5cea59a0ac26cbc2e1911d");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                                        new Date(1559746946139L),
                                                                                        "cc887d58-9d43-4099-bb6c-35076c514cd4",
                                                                                        "acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                                        "acc8cb178a5cea59a0ac26cbc2e1911d");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
