// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("360efa29edf1702da7045dd46bf2c0ee",
                                                                                        new Date(1559758610945L),
                                                                                        "6df1f704-12d0-45f2-8a0b-356dae565d9d",
                                                                                        "360efa29edf1702da7045dd46bf2c0ee",
                                                                                        "360efa29edf1702da7045dd46bf2c0ee");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("360efa29edf1702da7045dd46bf2c0ee",
                                                                                        new Date(1559758611646L),
                                                                                        "a2c90d6d-7862-4981-aab7-941236f785a8",
                                                                                        "360efa29edf1702da7045dd46bf2c0ee",
                                                                                        "360efa29edf1702da7045dd46bf2c0ee");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("360efa29edf1702da7045dd46bf2c0ee",
                                                                                        new Date(1559758611646L),
                                                                                        "a2c90d6d-7862-4981-aab7-941236f785a8",
                                                                                        "360efa29edf1702da7045dd46bf2c0ee",
                                                                                        "360efa29edf1702da7045dd46bf2c0ee");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("360efa29edf1702da7045dd46bf2c0ee",
                                                                                   new Date(1559758604165L),
                                                                                   "d87c3956-3122-418b-b7b1-1ffa14df2cd4",
                                                                                   "360efa29edf1702da7045dd46bf2c0ee",
                                                                                   "360efa29edf1702da7045dd46bf2c0ee");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("TU8ã½…\u0019ZDDâ¬?ê²…8êˆ›è½?*8ç¾‚_\u000e\t\u0013W8Tí‘¼åµ…,\u0001. 8ê?¢8è¡¾\u0001é†€ 8î¢˜\u001bç¶’Sç‚¤ê·ˆ\bëŸ¬\u0011L8\u0010K?î¶¥8ï‚•è‰­ë§¦\u000eG*êµ­8Q8",
                                                                                          new Date(1559758604480L),
                                                                                          "e7a83d31-b472-4986-9eb1-d125557d9df3",
                                                                                          "TU8ã½…\u0019ZDDâ¬?ê²…8êˆ›è½?*8ç¾‚_\u000e\t\u0013W8Tí‘¼åµ…,\u0001. 8ê?¢8è¡¾\u0001é†€ 8î¢˜\u001bç¶’Sç‚¤ê·ˆ\bëŸ¬\u0011L8\u0010K?î¶¥8ï‚•è‰­ë§¦\u000eG*êµ­8Q8",
                                                                                          "TU8ã½…\u0019ZDDâ¬?ê²…8êˆ›è½?*8ç¾‚_\u000e\t\u0013W8Tí‘¼åµ…,\u0001. 8ê?¢8è¡¾\u0001é†€ 8î¢˜\u001bç¶’Sç‚¤ê·ˆ\bëŸ¬\u0011L8\u0010K?î¶¥8ï‚•è‰­ë§¦\u000eG*êµ­8Q8");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("360efa29edf1702da7045dd46bf2c0ee",
                                                                                        new Date(1559758612154L),
                                                                                        "cec1cf92-25f4-4843-bb84-22930d3ef157",
                                                                                        "360efa29edf1702da7045dd46bf2c0ee",
                                                                                        "360efa29edf1702da7045dd46bf2c0ee");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("360efa29edf1702da7045dd46bf2c0ee",
                                                                                        new Date(1559758612154L),
                                                                                        "cec1cf92-25f4-4843-bb84-22930d3ef157",
                                                                                        "360efa29edf1702da7045dd46bf2c0ee",
                                                                                        "360efa29edf1702da7045dd46bf2c0ee");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("360efa29edf1702da7045dd46bf2c0ee",
                                                                                        new Date(1559758605592L),
                                                                                        "164f0c84-555b-4b17-b1d0-43c249d53303",
                                                                                        "360efa29edf1702da7045dd46bf2c0ee",
                                                                                        "360efa29edf1702da7045dd46bf2c0ee");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
