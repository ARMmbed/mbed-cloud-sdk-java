// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                        new Date(1559662781645L),
                                                                                        "f0d2ff86-a1ef-4e66-ba11-562d1a67ef28",
                                                                                        "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                        "f33f4df6191a3d432ba4b4ea8fd5906b");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                        new Date(1559662781785L),
                                                                                        "b4e0c2eb-10ac-4b8e-abd2-9c81e9589e50",
                                                                                        "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                        "f33f4df6191a3d432ba4b4ea8fd5906b");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                        new Date(1559662781785L),
                                                                                        "b4e0c2eb-10ac-4b8e-abd2-9c81e9589e50",
                                                                                        "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                        "f33f4df6191a3d432ba4b4ea8fd5906b");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                   new Date(1559662777267L),
                                                                                   "e3fcbea4-1111-4aa6-8d3a-6385910351a2",
                                                                                   "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                   "f33f4df6191a3d432ba4b4ea8fd5906b");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("7ã??cccUî‡±c7ä¨§\u0003îŒ¾æ­œ7c^Tæ·¨c`è–¯ä•§7cD7äž¾c\u0006\u00117ST-7K-cé§ƒ7cë¼¯ãŠ¯\t\t7cÕ¶cã²ŽâŸ¢\u00177 ;í?½cã½Œ%æ¿´B?7",
                                                                                          new Date(1559662779034L),
                                                                                          "9fc881ae-d020-4ee9-88eb-dd3de79b5360",
                                                                                          "7ã??cccUî‡±c7ä¨§\u0003îŒ¾æ­œ7c^Tæ·¨c`è–¯ä•§7cD7äž¾c\u0006\u00117ST-7K-cé§ƒ7cë¼¯ãŠ¯\t\t7cÕ¶cã²ŽâŸ¢\u00177 ;í?½cã½Œ%æ¿´B?7",
                                                                                          "7ã??cccUî‡±c7ä¨§\u0003îŒ¾æ­œ7c^Tæ·¨c`è–¯ä•§7cD7äž¾c\u0006\u00117ST-7K-cé§ƒ7cë¼¯ãŠ¯\t\t7cÕ¶cã²ŽâŸ¢\u00177 ;í?½cã½Œ%æ¿´B?7");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                        new Date(1559662786213L),
                                                                                        "508de039-18b3-4d6e-92db-1a4a7cfc4bbb",
                                                                                        "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                        "f33f4df6191a3d432ba4b4ea8fd5906b");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                        new Date(1559662786213L),
                                                                                        "508de039-18b3-4d6e-92db-1a4a7cfc4bbb",
                                                                                        "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                        "f33f4df6191a3d432ba4b4ea8fd5906b");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                        new Date(1559662778010L),
                                                                                        "e6cdadc9-bf0a-4f79-b220-ec950242eb4c",
                                                                                        "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                        "f33f4df6191a3d432ba4b4ea8fd5906b");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
