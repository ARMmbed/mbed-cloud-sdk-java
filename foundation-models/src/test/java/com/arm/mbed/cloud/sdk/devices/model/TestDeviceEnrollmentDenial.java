// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("acbf655bdeac77c770ad4964fcb1f81f",
                                                                                        new Date(1559747935288L),
                                                                                        "31ef6a41-b909-4903-9813-d70d3c8916a3",
                                                                                        "acbf655bdeac77c770ad4964fcb1f81f",
                                                                                        "acbf655bdeac77c770ad4964fcb1f81f");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("acbf655bdeac77c770ad4964fcb1f81f",
                                                                                        new Date(1559747930126L),
                                                                                        "ce4c41b5-92df-49b3-b4c6-9c6015f990ae",
                                                                                        "acbf655bdeac77c770ad4964fcb1f81f",
                                                                                        "acbf655bdeac77c770ad4964fcb1f81f");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("acbf655bdeac77c770ad4964fcb1f81f",
                                                                                        new Date(1559747930126L),
                                                                                        "ce4c41b5-92df-49b3-b4c6-9c6015f990ae",
                                                                                        "acbf655bdeac77c770ad4964fcb1f81f",
                                                                                        "acbf655bdeac77c770ad4964fcb1f81f");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("acbf655bdeac77c770ad4964fcb1f81f",
                                                                                   new Date(1559747930346L),
                                                                                   "6d9553f5-585f-4e9e-b7ef-fd76fd0dbda0",
                                                                                   "acbf655bdeac77c770ad4964fcb1f81f",
                                                                                   "acbf655bdeac77c770ad4964fcb1f81f");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("ê€Š+(è¤‘32\f3X\u0005;\\\\2\u001aAä£½îµ‰-2á—œN22&\\\\X\u00023\u00023OJ3\u00012Z*\u000f2\u0007Iä³?3V3ì Ž3'\u00142Î£ë›„\b<XNç£€ë¾†)3.ï¦¢",
                                                                                          new Date(1559747932062L),
                                                                                          "c190a6fe-a5d7-4000-8c0c-228000e4286a",
                                                                                          "ê€Š+(è¤‘32\f3X\u0005;\\\\2\u001aAä£½îµ‰-2á—œN22&\\\\X\u00023\u00023OJ3\u00012Z*\u000f2\u0007Iä³?3V3ì Ž3'\u00142Î£ë›„\b<XNç£€ë¾†)3.ï¦¢",
                                                                                          "ê€Š+(è¤‘32\f3X\u0005;\\\\2\u001aAä£½îµ‰-2á—œN22&\\\\X\u00023\u00023OJ3\u00012Z*\u000f2\u0007Iä³?3V3ì Ž3'\u00142Î£ë›„\b<XNç£€ë¾†)3.ï¦¢");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("acbf655bdeac77c770ad4964fcb1f81f",
                                                                                        new Date(1559747932194L),
                                                                                        "2cd874db-8db3-48b6-87d2-05a559558f6c",
                                                                                        "acbf655bdeac77c770ad4964fcb1f81f",
                                                                                        "acbf655bdeac77c770ad4964fcb1f81f");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("acbf655bdeac77c770ad4964fcb1f81f",
                                                                                        new Date(1559747932194L),
                                                                                        "2cd874db-8db3-48b6-87d2-05a559558f6c",
                                                                                        "acbf655bdeac77c770ad4964fcb1f81f",
                                                                                        "acbf655bdeac77c770ad4964fcb1f81f");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("acbf655bdeac77c770ad4964fcb1f81f",
                                                                                        new Date(1559747934149L),
                                                                                        "ef2c37c0-94d3-4feb-868b-5f1b529f58ee",
                                                                                        "acbf655bdeac77c770ad4964fcb1f81f",
                                                                                        "acbf655bdeac77c770ad4964fcb1f81f");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
