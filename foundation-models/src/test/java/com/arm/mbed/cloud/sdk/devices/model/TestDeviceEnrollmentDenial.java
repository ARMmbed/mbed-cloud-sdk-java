// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("f7f9edc2df1fd9afea87465e2109cb51",
                                                                                        new Date(1559655028166L),
                                                                                        "714e1950-4039-4f4e-b11a-0f501a22a067",
                                                                                        "f7f9edc2df1fd9afea87465e2109cb51",
                                                                                        "f7f9edc2df1fd9afea87465e2109cb51");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("f7f9edc2df1fd9afea87465e2109cb51",
                                                                                        new Date(1559655035716L),
                                                                                        "f9f138c2-b160-498f-bf87-10e1abb53fb2",
                                                                                        "f7f9edc2df1fd9afea87465e2109cb51",
                                                                                        "f7f9edc2df1fd9afea87465e2109cb51");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("f7f9edc2df1fd9afea87465e2109cb51",
                                                                                        new Date(1559655035716L),
                                                                                        "f9f138c2-b160-498f-bf87-10e1abb53fb2",
                                                                                        "f7f9edc2df1fd9afea87465e2109cb51",
                                                                                        "f7f9edc2df1fd9afea87465e2109cb51");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("f7f9edc2df1fd9afea87465e2109cb51",
                                                                                   new Date(1559655032935L),
                                                                                   "bcf52ba0-1163-478e-b2f1-b4fe06b4dc7e",
                                                                                   "f7f9edc2df1fd9afea87465e2109cb51",
                                                                                   "f7f9edc2df1fd9afea87465e2109cb51");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("ä»‚+K\u001aé¦¥ëŸ‡\u00103\bá­?L33.3C\u0000\u000e\u001bQ3Uç¨£3ä¯³CS\u0016Mï‹˜\fë¼™Q'3A.ï»¸Y3ã¯²\u0001[3 ì“¶333333J3æ¸—éºƒÊ£)\u00153ì?¼ä…Žà«”3",
                                                                                          new Date(1559655030422L),
                                                                                          "f086d35a-daa0-41ca-9fc1-7a7f48c073cd",
                                                                                          "ä»‚+K\u001aé¦¥ëŸ‡\u00103\bá­?L33.3C\u0000\u000e\u001bQ3Uç¨£3ä¯³CS\u0016Mï‹˜\fë¼™Q'3A.ï»¸Y3ã¯²\u0001[3 ì“¶333333J3æ¸—éºƒÊ£)\u00153ì?¼ä…Žà«”3",
                                                                                          "ä»‚+K\u001aé¦¥ëŸ‡\u00103\bá­?L33.3C\u0000\u000e\u001bQ3Uç¨£3ä¯³CS\u0016Mï‹˜\fë¼™Q'3A.ï»¸Y3ã¯²\u0001[3 ì“¶333333J3æ¸—éºƒÊ£)\u00153ì?¼ä…Žà«”3");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("f7f9edc2df1fd9afea87465e2109cb51",
                                                                                        new Date(1559655028712L),
                                                                                        "603b464d-b4fa-485f-9771-ab4fafb624f0",
                                                                                        "f7f9edc2df1fd9afea87465e2109cb51",
                                                                                        "f7f9edc2df1fd9afea87465e2109cb51");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("f7f9edc2df1fd9afea87465e2109cb51",
                                                                                        new Date(1559655028712L),
                                                                                        "603b464d-b4fa-485f-9771-ab4fafb624f0",
                                                                                        "f7f9edc2df1fd9afea87465e2109cb51",
                                                                                        "f7f9edc2df1fd9afea87465e2109cb51");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("f7f9edc2df1fd9afea87465e2109cb51",
                                                                                        new Date(1559655036447L),
                                                                                        "a3f5b982-f5dd-49ed-b70d-0c97545e1012",
                                                                                        "f7f9edc2df1fd9afea87465e2109cb51",
                                                                                        "f7f9edc2df1fd9afea87465e2109cb51");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
