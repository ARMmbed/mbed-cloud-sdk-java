// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("ed0eb63a-7f62-410b-8431-ded6e3e0a67c",
                                                             "07225361-db12-42e3-af71-f9e885e8fe25",
                                                             new Date(1547225121069L), 22,
                                                             "3b6cb22a-140e-4908-9519-caa8eb07e47d", true,
                                                             "799a2062-7db9-4468-830a-34950f81b27c",
                                                             "ac57c433-ecaa-40e4-b9aa-675f69cce7ad", 56, null, null,
                                                             true, "e29b59ed-3067-4b6c-9751-3f30a899be0c", -6,
                                                             "57a262e0-7598-4923-acb0-283e32255c96",
                                                             SubtenantUserStatus.getDefault(), false, true,
                                                             new Date(1547225121043L),
                                                             "34fe862a-3ab7-47d9-97ae-b26e6a724a50");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("967308f5-d7b8-402a-858f-c057cd603854",
                                                             "6eb196dd-e9be-4f49-9d67-8f4de5abaad9",
                                                             new Date(1547225123848L), -82,
                                                             "d81e7757-d7f4-46de-a433-689973866776", true,
                                                             "58593e81-4750-4c18-bafc-8f4fc9b4d97a",
                                                             "c21b8a3d-2f32-4a2d-9a82-450db0a38d86", -54, null, null,
                                                             false, "07826901-43b4-40ac-8463-7b518f89291b", -114,
                                                             "cc6ebd7a-cab8-44c4-9750-798d9b4e3d3b",
                                                             SubtenantUserStatus.getDefault(), false, false,
                                                             new Date(1547225115822L),
                                                             "610082c1-aeb4-4f31-8dd9-25b8dbaab660");
            SubtenantUser subtenantuser2 = new SubtenantUser("967308f5-d7b8-402a-858f-c057cd603854",
                                                             "6eb196dd-e9be-4f49-9d67-8f4de5abaad9",
                                                             new Date(1547225123848L), -82,
                                                             "d81e7757-d7f4-46de-a433-689973866776", true,
                                                             "58593e81-4750-4c18-bafc-8f4fc9b4d97a",
                                                             "c21b8a3d-2f32-4a2d-9a82-450db0a38d86", -54, null, null,
                                                             false, "07826901-43b4-40ac-8463-7b518f89291b", -114,
                                                             "cc6ebd7a-cab8-44c4-9750-798d9b4e3d3b",
                                                             SubtenantUserStatus.getDefault(), false, false,
                                                             new Date(1547225115822L),
                                                             "610082c1-aeb4-4f31-8dd9-25b8dbaab660");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("e9ae3abe-707e-4873-a567-53a95aabdfb6",
                                                        "e2a14f0d-4561-45cc-b111-4ad7680c583a",
                                                        new Date(1547225121551L), 44,
                                                        "48705f4b-2581-46f8-9162-b26d43ffc600", true,
                                                        "5361c85c-90c4-461a-9200-6debed1b2b60",
                                                        "03007625-d335-44fd-bb66-e4664744d548", -111, null, null, true,
                                                        "c3b86fb8-f711-49d5-bac7-f69572b6ab85", 111,
                                                        "1e1bc354-095c-4972-a61e-acc75d967079",
                                                        SubtenantUserStatus.getDefault(), true, false,
                                                        new Date(1547225120288L),
                                                        "cd4f5dae-39d7-4f9a-ae93-f513fbc456b7");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, "3552741e-893b-4f14-93f1-9518dbe628c5",
                                                               new Date(1547225122920L), 51, null, true,
                                                               "fdf3b3c5-20fc-49af-bf07-c075ce3e1374",
                                                               "b8687d48-abc7-4422-8eee-49919613115c", -54, null, null,
                                                               true, "f6457c70-d7f8-413f-aca3-0442f3397280", -13,
                                                               "541d1a96-58d9-4031-affd-132895241481",
                                                               SubtenantUserStatus.getDefault(), false, true,
                                                               new Date(1547225118570L),
                                                               "9bec354f-2554-46b6-8d18-6fda0cc98efd");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("f88b0b6a-7d98-48d2-96ae-e464e1905e8a",
                                                             "d73d735c-3619-42a0-bdb8-70a7fadbeb76",
                                                             new Date(1547225120066L), -85,
                                                             "0b6e7da3-4b5e-4338-8cea-e815a53c8b56", false,
                                                             "f670ae7d-43db-4c07-b1ed-159a5c0d639f",
                                                             "a5f36a6c-9346-4690-8e7b-4df60d2f276e", -16, null, null,
                                                             false, "54ec7a77-f414-43bf-a853-71e8d49b5c71", -19,
                                                             "a94e0ee8-2348-4b1f-ae3f-c798ba149332",
                                                             SubtenantUserStatus.getDefault(), true, false,
                                                             new Date(1547225122131L),
                                                             "dca4a640-e7fd-46b7-8af2-df649f153faa");
            SubtenantUser subtenantuser2 = new SubtenantUser("f88b0b6a-7d98-48d2-96ae-e464e1905e8a",
                                                             "d73d735c-3619-42a0-bdb8-70a7fadbeb76",
                                                             new Date(1547225120066L), -85,
                                                             "0b6e7da3-4b5e-4338-8cea-e815a53c8b56", false,
                                                             "f670ae7d-43db-4c07-b1ed-159a5c0d639f",
                                                             "a5f36a6c-9346-4690-8e7b-4df60d2f276e", -16, null, null,
                                                             false, "54ec7a77-f414-43bf-a853-71e8d49b5c71", -19,
                                                             "a94e0ee8-2348-4b1f-ae3f-c798ba149332",
                                                             SubtenantUserStatus.getDefault(), true, false,
                                                             new Date(1547225122131L),
                                                             "dca4a640-e7fd-46b7-8af2-df649f153faa");
            SubtenantUser subtenantuser3 = new SubtenantUser("2126ceff-920f-4086-ad25-2e90525e5800",
                                                             "8c84365a-44e2-4a88-88c8-56f42be47ee9",
                                                             new Date(1547225116038L), 114,
                                                             "243fa152-6cfd-48b5-bbf5-96cfba014dd9", false,
                                                             "ae104d07-df9f-46d8-8129-88b8ae702c06",
                                                             "4341a37c-bf5b-4e94-866a-1886fb584dd3", -51, null, null,
                                                             false, "5cfd5ed8-309b-4560-b9cf-9f1c518b7077", 24,
                                                             "6cd4b5e4-b86c-4bb3-9917-c4c05827b317",
                                                             SubtenantUserStatus.getDefault(), true, false,
                                                             new Date(1547225124098L),
                                                             "d8c19ba0-a35c-4427-8f6c-e01b07c0fc1d");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
