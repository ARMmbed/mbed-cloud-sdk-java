// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("c26ebd108cbc6d2e0e403ca038b7faa6", null,
                                                             "2a3d9b72-17a4-4ee5-822b-122d2c02c45d",
                                                             new Date(1559313346587L), 124, null,
                                                             "583eb.aac63@a7272.fr", true,
                                                             "bbd73c38-ead6-4ff9-b53d-0ee3531e6e52",
                                                             "c26ebd108cbc6d2e0e403ca038b7faa6", true, false, false, 0,
                                                             null, null, "73bb0556-7b6f-4aa5-9481-5fcc701d0b4d", 13,
                                                             "dee8cb1a-4bac-427f-8e24-862cebf0e9f0",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559313346388L), "z=_,gJK-");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("c26ebd108cbc6d2e0e403ca038b7faa6", null,
                                                             "afb30e7f-bd21-4ce1-a0b4-2cd431d3ed1a",
                                                             new Date(1559313346898L), -100, null,
                                                             "bce4a.db5cc@39db6.fr", true,
                                                             "157cdd47-16df-4189-9a00-51843800fdda",
                                                             "c26ebd108cbc6d2e0e403ca038b7faa6", true, true, false, 123,
                                                             null, null, "04b407a8-7d34-4d24-85d1-87d3f92656d5", 95,
                                                             "953e6aa9-f84d-4234-b209-104f4ae12048",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559313348956L), "z=_,gJK-");
            SubtenantUser subtenantuser2 = new SubtenantUser("c26ebd108cbc6d2e0e403ca038b7faa6", null,
                                                             "afb30e7f-bd21-4ce1-a0b4-2cd431d3ed1a",
                                                             new Date(1559313346898L), -100, null,
                                                             "bce4a.db5cc@39db6.fr", true,
                                                             "157cdd47-16df-4189-9a00-51843800fdda",
                                                             "c26ebd108cbc6d2e0e403ca038b7faa6", true, true, false, 123,
                                                             null, null, "04b407a8-7d34-4d24-85d1-87d3f92656d5", 95,
                                                             "953e6aa9-f84d-4234-b209-104f4ae12048",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559313348956L), "z=_,gJK-");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("c26ebd108cbc6d2e0e403ca038b7faa6", null,
                                                        "3fed91fc-f6b6-4e43-a456-436ba090ba29",
                                                        new Date(1559313342319L), -48, null, "2c784.bccc5@70324.fr",
                                                        false, "933a7d42-bfed-4c5c-a982-b87aafc1a166",
                                                        "c26ebd108cbc6d2e0e403ca038b7faa6", true, true, true, 28, null,
                                                        null, "2105a691-c101-4e7d-8b88-e4ee5be7e4c1", 62,
                                                        "965e2415-6ba9-4a57-83f8-3787cc228e65",
                                                        SubtenantUserStatus.getDefault(), null,
                                                        new Date(1559313339917L), "z=_,gJK-");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "576c7490-4aeb-46f4-99e9-d43ac9662de8",
                                                               new Date(1559313348757L), -60, null, null, false,
                                                               "79408e21-475f-4bd8-a91f-ee5b429d166ff0dd0626-273e-4e26-9562-3c0c1ab11775d4f9d3ee-9d1a-4e34-b1fe-f0a07f546689",
                                                               "5â¬³U\u0013\u0005PJä›¹â©ŽGWWë˜‚)ì“µ55?\u0012'ì¶Œ55\u0018ÏŸPä™˜ç¤¹)5\u0000Z?\bã·?\u0007>5ë¾¹á˜„\u001b\u001c555G5î—Š,ä“¯ç¶´Xï€œ\f5H×¤ê‰±]\u000eAè“œ",
                                                               false, true, false, -5, null, null,
                                                               "18b1bd46-f5ad-4b1c-a65e-5915fe12795c", 10,
                                                               "9cfc03ef-3c5e-4778-b4f1-2c2a983ab228a4b51816-1bf2-46ec-b784-616c425308242d963ad4-9fd4-438f-9561-8e443c8f9885",
                                                               SubtenantUserStatus.getDefault(), null,
                                                               new Date(1559313343497L),
                                                               "ì¾–ëµ‘W]0kæ„?tkCN[?Rá—”c5ä«¨2SaDèƒ‘\u001cHC`/9lXxT`uGçµµbLå˜®\u0011f5FLc'\u00128\u000bthe/W/2dU\u001b`c");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("c26ebd108cbc6d2e0e403ca038b7faa6", null,
                                                             "d47f1226-ef88-4098-ab3b-4a9342ee123c",
                                                             new Date(1559313341907L), 14, null, "29056.b456f@1bca6.me",
                                                             false, "e1680c1a-6967-48c6-9f5b-a19a689580e7",
                                                             "c26ebd108cbc6d2e0e403ca038b7faa6", true, true, true, 48,
                                                             null, null, "eed01e99-70d7-40c2-93b0-e1271da295d0", -19,
                                                             "b3f0bf51-db2c-4f1f-aeaf-0e117a07d6ce",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559313343201L), "z=_,gJK-");
            SubtenantUser subtenantuser2 = new SubtenantUser("c26ebd108cbc6d2e0e403ca038b7faa6", null,
                                                             "d47f1226-ef88-4098-ab3b-4a9342ee123c",
                                                             new Date(1559313341907L), 14, null, "29056.b456f@1bca6.me",
                                                             false, "e1680c1a-6967-48c6-9f5b-a19a689580e7",
                                                             "c26ebd108cbc6d2e0e403ca038b7faa6", true, true, true, 48,
                                                             null, null, "eed01e99-70d7-40c2-93b0-e1271da295d0", -19,
                                                             "b3f0bf51-db2c-4f1f-aeaf-0e117a07d6ce",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559313343201L), "z=_,gJK-");
            SubtenantUser subtenantuser3 = new SubtenantUser("c26ebd108cbc6d2e0e403ca038b7faa6", null,
                                                             "fe9de9bc-a6ff-4c85-8b1a-47d404af3add",
                                                             new Date(1559313348975L), 45, null, "df487.f480e@44cec.me",
                                                             false, "72c7ec0f-eafa-4b72-8370-1e96abb1101e",
                                                             "c26ebd108cbc6d2e0e403ca038b7faa6", true, true, true, -76,
                                                             null, null, "784a9bd3-9328-4779-91f1-ed641531fe69", 113,
                                                             "b639fa74-5871-466a-813c-effb98bb0637",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559313340162L), "z=_,gJK-");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
