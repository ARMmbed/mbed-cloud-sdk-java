// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("8f790df8b03da9b1dd914e7ecab2ad3f", null,
                                                             "fa629497-bfb6-4d1f-a002-175dd91d2d44",
                                                             new Date(1559752149844L), 67, null, "75263.7fd11@fcec5.fr",
                                                             true, "557c42eb-6f7d-4c02-a967-afacf64206cb",
                                                             "8f790df8b03da9b1dd914e7ecab2ad3f", false, true, false, 97,
                                                             null, null, "082fcebc-63f6-414b-a515-7911f7f24cdd", 29,
                                                             "651dca38-da48-43b2-96a5-f0f6d9f75c69",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559752144554L), "Dy7XZv_");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("8f790df8b03da9b1dd914e7ecab2ad3f", null,
                                                             "a6c1dcf8-7827-4ff3-80a4-1a61eff61957",
                                                             new Date(1559752147746L), -101, null,
                                                             "52339.3e9cf@8125d.me", false,
                                                             "c609cade-fcb2-4c46-887e-21caa7fae439",
                                                             "8f790df8b03da9b1dd914e7ecab2ad3f", true, false, true, -64,
                                                             null, null, "ae3da85e-8240-403d-83fd-d4c9ca355713", 113,
                                                             "addb7ee6-1e91-4824-93ef-b5afe7d994c7",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559752146925L), "Dy7XZv_");
            SubtenantUser subtenantuser2 = new SubtenantUser("8f790df8b03da9b1dd914e7ecab2ad3f", null,
                                                             "a6c1dcf8-7827-4ff3-80a4-1a61eff61957",
                                                             new Date(1559752147746L), -101, null,
                                                             "52339.3e9cf@8125d.me", false,
                                                             "c609cade-fcb2-4c46-887e-21caa7fae439",
                                                             "8f790df8b03da9b1dd914e7ecab2ad3f", true, false, true, -64,
                                                             null, null, "ae3da85e-8240-403d-83fd-d4c9ca355713", 113,
                                                             "addb7ee6-1e91-4824-93ef-b5afe7d994c7",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559752146925L), "Dy7XZv_");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("8f790df8b03da9b1dd914e7ecab2ad3f", null,
                                                        "c9af4205-ac12-44dc-a26d-77ed24ef6b38",
                                                        new Date(1559752147649L), -27, null, "858fb.49ead@637c2.me",
                                                        true, "639dd457-f37c-4b89-9119-e302a76b076c",
                                                        "8f790df8b03da9b1dd914e7ecab2ad3f", true, true, true, -26, null,
                                                        null, "db5bfa92-37ac-4e1c-9b2f-d8a3a7aa3581", 89,
                                                        "4f0a7f11-efe7-4b05-a446-2eac7f085d4a",
                                                        SubtenantUserStatus.getDefault(), null,
                                                        new Date(1559752150655L), "Dy7XZv_");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "cd638c67-2f71-4465-b462-ffadc4bcbb0c",
                                                               new Date(1559752152972L), 91, null, null, true,
                                                               "9c621b03-6daa-4565-a0a4-9f2ae892cc9d3aefb751-04f2-46b0-9cae-f37636769ae6e3efb55f-65a7-4cc5-8122-19d90cd66814",
                                                               "/\u000eä‹¯65\u000eä¯¯\u0005<å¸ˆ66'\u0016)á¾‰5çˆ€ç–¸\u0019äš–\u001e6èµ«65\u0014%\b\u0005ä?ª-\u001e5\u0011V\\\\ë?ž5îšŠ55\u0012\u0012]#56Xè¤³WO?5\b\u001båƒ¤\u000e6\u0007Vå†Œç²¸X",
                                                               false, false, true, 122, null, null,
                                                               "bf4a923b-520d-4238-b680-8268eff0c022", 42,
                                                               "5a289f05-bf30-491e-8553-48e47369ecd3be8ce659-f2b0-4534-8ca6-64a833114fad8144d551-4926-4532-9b49-d9fbbe94d6bc",
                                                               SubtenantUserStatus.getDefault(), null,
                                                               new Date(1559752147357L),
                                                               "Y\\\\w[\u0007c^YYY]Né«®^ì¿™^,î …xê¶—\u001bå«¢ç¿Š>9]^\\\\n:\u000e\u001fx\\\\Ux\\\\Yw!Y=Yo'^x8Y\u0010Yê´•\u0017w8=9ê¥½\u0005tV\\\\êšŸ");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("8f790df8b03da9b1dd914e7ecab2ad3f", null,
                                                             "fbe839ae-d04e-4e2c-ad1f-854a9e13e583",
                                                             new Date(1559752144130L), 40, null, "4ceb4.478bf@9a2b5.fr",
                                                             false, "ae01a801-e867-405f-baba-3ca783568c98",
                                                             "8f790df8b03da9b1dd914e7ecab2ad3f", false, true, false, 99,
                                                             null, null, "643a8bf7-e67f-4c88-a3ad-75f913673944", -35,
                                                             "7b3945c9-429d-4590-acd6-deac50b69f49",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559752153411L), "Dy7XZv_");
            SubtenantUser subtenantuser2 = new SubtenantUser("8f790df8b03da9b1dd914e7ecab2ad3f", null,
                                                             "fbe839ae-d04e-4e2c-ad1f-854a9e13e583",
                                                             new Date(1559752144130L), 40, null, "4ceb4.478bf@9a2b5.fr",
                                                             false, "ae01a801-e867-405f-baba-3ca783568c98",
                                                             "8f790df8b03da9b1dd914e7ecab2ad3f", false, true, false, 99,
                                                             null, null, "643a8bf7-e67f-4c88-a3ad-75f913673944", -35,
                                                             "7b3945c9-429d-4590-acd6-deac50b69f49",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559752153411L), "Dy7XZv_");
            SubtenantUser subtenantuser3 = new SubtenantUser("8f790df8b03da9b1dd914e7ecab2ad3f", null,
                                                             "ae4f00b3-3bb4-458e-b119-b1aeaffe7912",
                                                             new Date(1559752150769L), 108, null,
                                                             "2835d.a4492@846e1.me", false,
                                                             "b7904089-0b9f-4411-83ec-c11d5ae61de5",
                                                             "8f790df8b03da9b1dd914e7ecab2ad3f", false, true, false,
                                                             -121, null, null, "37ed829d-cb47-43de-bf3e-9dc939a1d7fe",
                                                             -25, "b2341691-77b4-4ad6-8c4d-f64360e5a66e",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559752150611L), "Dy7XZv_");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
