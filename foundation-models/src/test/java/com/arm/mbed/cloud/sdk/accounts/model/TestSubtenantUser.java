// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("6b2a5820-f4a1-4a3f-8ae8-1cb7e695dc1a",
                                                             "d752b32b-0eaa-434d-8400-829aaed12f90",
                                                             new Date(1547489765748L), 105,
                                                             "d1c07d52-9882-45a0-8e40-7566a2ed08cc", false,
                                                             "3ec29ecd-b7ff-4d30-9be0-486fb838c585",
                                                             "b5dea0c9-b8d0-4b31-a29d-1100be8cdf18", -53, null, null,
                                                             true, "aff61bf0-17e9-4948-97b6-7aa12a57e646", -107,
                                                             "2942d1f0-aabf-4db1-9289-551b31e5d6f4",
                                                             SubtenantUserStatus.getDefault(), true, false,
                                                             new Date(1547489768031L),
                                                             "b36c98e2-613e-4119-afd8-db1aa163fcc8");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("60591bad-8444-472c-a9d4-48ab99edac8b",
                                                             "5eb410a7-49e8-4093-b853-d7f25461332c",
                                                             new Date(1547489768684L), -98,
                                                             "736d6f3c-5674-4c6b-92ba-d24996f487f5", false,
                                                             "57d985e2-d3f9-4514-af3f-f51119f58e8c",
                                                             "52794cb9-9c4c-4a5e-a12c-c2dd1f7ac74a", -8, null, null,
                                                             false, "19b3f50a-812c-4001-9f8b-367110453b41", -46,
                                                             "107fc178-b16f-4b94-935e-c75c01066051",
                                                             SubtenantUserStatus.getDefault(), true, true,
                                                             new Date(1547489766051L),
                                                             "d4548674-3349-4abc-a0a6-5ee80a2801b6");
            SubtenantUser subtenantuser2 = new SubtenantUser("60591bad-8444-472c-a9d4-48ab99edac8b",
                                                             "5eb410a7-49e8-4093-b853-d7f25461332c",
                                                             new Date(1547489768684L), -98,
                                                             "736d6f3c-5674-4c6b-92ba-d24996f487f5", false,
                                                             "57d985e2-d3f9-4514-af3f-f51119f58e8c",
                                                             "52794cb9-9c4c-4a5e-a12c-c2dd1f7ac74a", -8, null, null,
                                                             false, "19b3f50a-812c-4001-9f8b-367110453b41", -46,
                                                             "107fc178-b16f-4b94-935e-c75c01066051",
                                                             SubtenantUserStatus.getDefault(), true, true,
                                                             new Date(1547489766051L),
                                                             "d4548674-3349-4abc-a0a6-5ee80a2801b6");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("d20e80ab-b6e5-43b4-8d34-5534440c6d8d",
                                                        "ceb6ddbf-cb73-41cb-8981-e6a58fdb994f",
                                                        new Date(1547489769004L), -17,
                                                        "6fc65695-45f8-4698-bbce-c4b4c7510322", false,
                                                        "3da65cb1-bd9c-43fa-9f5a-adf99982af9e",
                                                        "1fcf4c00-5912-49d4-888e-2f50205e1caa", 40, null, null, false,
                                                        "874db607-7fd9-4e3e-ab40-d68591e23c68", 120,
                                                        "97e136c4-b379-427b-af98-06520b2516a6",
                                                        SubtenantUserStatus.getDefault(), true, false,
                                                        new Date(1547489769474L),
                                                        "c56940ec-c1a9-4f31-af1d-72eb827be6d8");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, "2e75e054-656d-430f-9595-0f21cf57cc25",
                                                               new Date(1547489770826L), 77, null, true,
                                                               "53431916-88aa-467d-b68d-63f3386aff46",
                                                               "4347a8b8-d32b-46fc-8712-cf61f3dda5ee", 99, null, null,
                                                               true, "9c462077-7933-4633-be94-ab041c8592ba", 123,
                                                               "47e548f7-aeeb-4094-b27b-ab63ef206207",
                                                               SubtenantUserStatus.getDefault(), true, true,
                                                               new Date(1547489771379L),
                                                               "557429de-52bf-4280-b5f6-0e07a4e9c8ba");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("4c4b606e-dee4-47c5-999e-3303d87f0259",
                                                             "39bc9f2c-1e4d-4394-8610-1b9e75d55327",
                                                             new Date(1547489769873L), 29,
                                                             "69cddfa0-600c-4a58-861c-ca08a9f40452", false,
                                                             "11e10793-1876-420c-944b-7257f4e369e7",
                                                             "25892dee-c4f5-4b60-8843-87966025c957", -96, null, null,
                                                             true, "b2050ca3-ba68-4d1e-b369-ffdee098ab86", 35,
                                                             "b0bbebf6-d153-499c-bf7f-31f39ade42ee",
                                                             SubtenantUserStatus.getDefault(), false, true,
                                                             new Date(1547489767019L),
                                                             "652663f6-fc2a-441b-970d-e181e682bacc");
            SubtenantUser subtenantuser2 = new SubtenantUser("4c4b606e-dee4-47c5-999e-3303d87f0259",
                                                             "39bc9f2c-1e4d-4394-8610-1b9e75d55327",
                                                             new Date(1547489769873L), 29,
                                                             "69cddfa0-600c-4a58-861c-ca08a9f40452", false,
                                                             "11e10793-1876-420c-944b-7257f4e369e7",
                                                             "25892dee-c4f5-4b60-8843-87966025c957", -96, null, null,
                                                             true, "b2050ca3-ba68-4d1e-b369-ffdee098ab86", 35,
                                                             "b0bbebf6-d153-499c-bf7f-31f39ade42ee",
                                                             SubtenantUserStatus.getDefault(), false, true,
                                                             new Date(1547489767019L),
                                                             "652663f6-fc2a-441b-970d-e181e682bacc");
            SubtenantUser subtenantuser3 = new SubtenantUser("15a86da4-d897-44cf-8fc0-d0a53b256531",
                                                             "15e7de26-c3fe-4da7-b4a6-d18ec8a5c8c3",
                                                             new Date(1547489767885L), 103,
                                                             "45783d11-ca0d-4e4c-a73a-61faff205d39", false,
                                                             "fe35e768-84a9-43a5-9577-e578ddf9c4bb",
                                                             "a42c225a-5e0f-4578-bd83-e2a8af2b9500", 117, null, null,
                                                             true, "18538ae4-7859-484b-8700-6d0e48163d37", 106,
                                                             "9d6ed3df-34dc-445f-9041-c8287c756939",
                                                             SubtenantUserStatus.getDefault(), false, true,
                                                             new Date(1547489773798L),
                                                             "6941bab6-56ff-4f3e-9019-a90347559fdc");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
