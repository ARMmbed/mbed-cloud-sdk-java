// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("8cb8e286-285a-42f7-b0e4-f1304f4b7f0d",
                                                             "b3c9b51f-37dd-44ed-9604-3ebc6d51b7fb",
                                                             new Date(1547164365119L), -88,
                                                             "967f2f82-dd39-4629-9f80-6f3e0e65f95c", false,
                                                             "bee6ad36-b440-4856-902e-eb44eed596f0",
                                                             "fbf899d7-31b1-4738-a18d-421d57cc2984", 44, null, null,
                                                             false, "f765d692-dba3-4818-973a-d823f2968883", 82,
                                                             "36d1084b-7eb2-4777-9fde-de4b63583fd4",
                                                             SubtenantUserStatus.getDefault(), false, true,
                                                             new Date(1547164362954L),
                                                             "df88451e-2330-43c1-9648-6cafc7540880");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("4210dad9-1c88-479f-a226-2262ad215d94",
                                                             "15d788fe-c18f-413a-bac7-284eb39e5c71",
                                                             new Date(1547164365616L), -79,
                                                             "5812996b-422d-475c-b6ab-bd90cd97fb14", true,
                                                             "6b7ade5c-2936-437d-9849-57f1e2e9e8ec",
                                                             "54d15c10-ded4-4bb4-8a75-b77b9aa0633d", 25, null, null,
                                                             false, "f135c939-0e27-486d-a61d-87a14e52ca88", 125,
                                                             "b9ebee0c-dd0e-41eb-bdb7-5e339e597191",
                                                             SubtenantUserStatus.getDefault(), true, false,
                                                             new Date(1547164366356L),
                                                             "2ec22f14-c8fb-496b-bbb8-e7f608a7f1dc");
            SubtenantUser subtenantuser2 = new SubtenantUser("4210dad9-1c88-479f-a226-2262ad215d94",
                                                             "15d788fe-c18f-413a-bac7-284eb39e5c71",
                                                             new Date(1547164365616L), -79,
                                                             "5812996b-422d-475c-b6ab-bd90cd97fb14", true,
                                                             "6b7ade5c-2936-437d-9849-57f1e2e9e8ec",
                                                             "54d15c10-ded4-4bb4-8a75-b77b9aa0633d", 25, null, null,
                                                             false, "f135c939-0e27-486d-a61d-87a14e52ca88", 125,
                                                             "b9ebee0c-dd0e-41eb-bdb7-5e339e597191",
                                                             SubtenantUserStatus.getDefault(), true, false,
                                                             new Date(1547164366356L),
                                                             "2ec22f14-c8fb-496b-bbb8-e7f608a7f1dc");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("157e556d-4f77-43a0-9133-64dfdedd3b5d",
                                                        "43e384e1-76b2-421a-ac6d-4237b3002758",
                                                        new Date(1547164365681L), 6,
                                                        "17776dd7-3d34-4b8c-8a6c-0d046ca8952f", false,
                                                        "dcd3da67-f812-4cef-89c8-522821aa84a3",
                                                        "9a6c8bb7-7d2c-4c74-9f51-4c5abf82983d", -40, null, null, false,
                                                        "5decbbe3-525b-4702-b506-8b2b6c6c0538", -40,
                                                        "2808617d-2670-4d7d-b98a-2b5d931bf20a",
                                                        SubtenantUserStatus.getDefault(), false, true,
                                                        new Date(1547164366010L),
                                                        "4d3f86f3-a6b1-41fb-9523-505017870ba4");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, "fca5681b-c151-4a62-9dce-21c22fa8f735",
                                                               new Date(1547164359560L), 15, null, true,
                                                               "554c8fd0-6014-4267-8d6c-bb4290a47c2e", null, -102, null,
                                                               null, true, "4f63b1e8-9ca0-4770-918b-543f44c3fb5d", -125,
                                                               "c352b56c-b38b-40c4-8758-39bc0cdde71e",
                                                               SubtenantUserStatus.getDefault(), true, false,
                                                               new Date(1547164367453L),
                                                               "dbf08cd6-ae06-4a5d-851c-e3187a9f90a5");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("bcae0bf9-02c9-49dc-864d-e880fb770766",
                                                             "6c70eb2e-b506-4f8f-88c7-b0f4f3ce51ea",
                                                             new Date(1547164365387L), -18,
                                                             "2738431f-02e1-41a6-b998-be275f7982b2", false,
                                                             "b3860d7d-0421-4791-94ab-590b251f84f6",
                                                             "9105bf1f-83e9-4d5d-a956-b9eaa44aa1ec", 79, null, null,
                                                             true, "43e52e4f-26ed-4b44-b26b-26e7a006ad55", 21,
                                                             "20e3c5af-3ff0-4e36-9d6a-1baad87e7c8c",
                                                             SubtenantUserStatus.getDefault(), true, true,
                                                             new Date(1547164363852L),
                                                             "94d8f3cc-d17a-4129-8faa-5619faccf29a");
            SubtenantUser subtenantuser2 = new SubtenantUser("bcae0bf9-02c9-49dc-864d-e880fb770766",
                                                             "6c70eb2e-b506-4f8f-88c7-b0f4f3ce51ea",
                                                             new Date(1547164365387L), -18,
                                                             "2738431f-02e1-41a6-b998-be275f7982b2", false,
                                                             "b3860d7d-0421-4791-94ab-590b251f84f6",
                                                             "9105bf1f-83e9-4d5d-a956-b9eaa44aa1ec", 79, null, null,
                                                             true, "43e52e4f-26ed-4b44-b26b-26e7a006ad55", 21,
                                                             "20e3c5af-3ff0-4e36-9d6a-1baad87e7c8c",
                                                             SubtenantUserStatus.getDefault(), true, true,
                                                             new Date(1547164363852L),
                                                             "94d8f3cc-d17a-4129-8faa-5619faccf29a");
            SubtenantUser subtenantuser3 = new SubtenantUser("97e58944-5eea-4503-b85e-04414e0eb6b5",
                                                             "c632c0cd-eaba-4afa-9695-7f239855d01d",
                                                             new Date(1547164364035L), 83,
                                                             "10fc9d1b-65df-4e8c-aad7-858040ca7c81", false,
                                                             "a9d33c62-6c94-4fbb-9f8d-d4151bf7ed54",
                                                             "7e9e8716-9c0e-452e-926a-32f48c678a65", -73, null, null,
                                                             true, "2bd0e99f-feb5-422a-94de-58d6cde52515", 40,
                                                             "92b3637c-cb4e-4e8d-8fef-312604d03d19",
                                                             SubtenantUserStatus.getDefault(), true, true,
                                                             new Date(1547164367501L),
                                                             "1895c732-2c53-444f-9a08-cef9708b4785");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
