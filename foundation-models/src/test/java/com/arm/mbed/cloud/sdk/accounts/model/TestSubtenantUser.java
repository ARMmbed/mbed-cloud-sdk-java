// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("2ae4f002-fe65-41cc-a29c-0e63b99b2d6a",
                                                             "c9554793-80fd-4d67-9349-7d4828826c0c",
                                                             new Date(1548165447894L), 17,
                                                             "ccaf92dd-92ca-497d-9968-fa887b3d1b0e", false,
                                                             "355b7101-232c-42ec-856a-16584ca9f127",
                                                             "16c79cf0-539a-4fd8-b58a-29fe275ddc67", 67, null, null,
                                                             true, "623e5f75-a301-410c-acc6-759f3e1471c8", 88,
                                                             "9c3015eb-c53c-4eb3-afee-110f5e052e1d",
                                                             SubtenantUserStatus.getDefault(), true, true,
                                                             new Date(1548165441726L),
                                                             "325f3077-22ff-4aa7-9418-e7e1be6effda");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("bd41962b-bfd7-4ed6-aa56-03c82ceea910",
                                                             "e8503a5e-b521-4b97-85bc-f53015fdeb83",
                                                             new Date(1548165441860L), 87,
                                                             "2aa81ebc-e912-4578-9561-2f2f45c9f1ed", false,
                                                             "a65da0c4-933f-4ac5-9b50-59c087c07aef",
                                                             "8b50126a-a8d6-40a4-8cab-68d078810f9d", -113, null, null,
                                                             false, "de16a3ac-572d-4691-b65c-412958a3770e", 19,
                                                             "df806136-4e08-4969-be35-f582adffdf89",
                                                             SubtenantUserStatus.getDefault(), false, false,
                                                             new Date(1548165446901L),
                                                             "4e39ed69-5830-4a53-82a8-2ac37be1b73f");
            SubtenantUser subtenantuser2 = new SubtenantUser("bd41962b-bfd7-4ed6-aa56-03c82ceea910",
                                                             "e8503a5e-b521-4b97-85bc-f53015fdeb83",
                                                             new Date(1548165441860L), 87,
                                                             "2aa81ebc-e912-4578-9561-2f2f45c9f1ed", false,
                                                             "a65da0c4-933f-4ac5-9b50-59c087c07aef",
                                                             "8b50126a-a8d6-40a4-8cab-68d078810f9d", -113, null, null,
                                                             false, "de16a3ac-572d-4691-b65c-412958a3770e", 19,
                                                             "df806136-4e08-4969-be35-f582adffdf89",
                                                             SubtenantUserStatus.getDefault(), false, false,
                                                             new Date(1548165446901L),
                                                             "4e39ed69-5830-4a53-82a8-2ac37be1b73f");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("4311dc4a-6ef2-4321-9026-c18f81f076f0",
                                                        "67cc1626-985f-44df-858b-1271639c9c31",
                                                        new Date(1548165446658L), -97,
                                                        "c2a2480c-ac66-43f7-9bf5-da2bbd16bee4", false,
                                                        "6ad903a1-834a-4bbe-82f0-c7bd29f9fd06",
                                                        "efb9b615-68ef-43b0-ad36-a8e2e7e64ccd", -44, null, null, false,
                                                        "3169ca51-7015-4b7c-a006-1b5ec2fe71ce", 55,
                                                        "5801faba-8f52-4fb1-849d-475ed8c4f391",
                                                        SubtenantUserStatus.getDefault(), true, true,
                                                        new Date(1548165439614L),
                                                        "da1efa73-8b0a-412d-bfee-7174a16a3435");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, "ca70c1d8-ab34-424d-9d22-288fa976b0f2",
                                                               new Date(1548165440352L), 74, null, false,
                                                               "6fd283e1-e75a-45b5-b9a4-4ef0aaac0234",
                                                               "3d4f98f2-d8fe-48eb-addb-d14acec8faa9", 96, null, null,
                                                               false, "02ca04e8-0879-4356-832b-1575d5a1b17f", 28,
                                                               "42b3c2dd-ab90-4aed-8f52-010df0ae8eff",
                                                               SubtenantUserStatus.getDefault(), true, false,
                                                               new Date(1548165447053L),
                                                               "770bf09b-b058-4829-b3a6-77bc042df056");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("d6cfc1ad-8509-4aad-99cc-fb5c9d18fe17",
                                                             "466352a8-acee-4717-8fce-5f83ae472cb8",
                                                             new Date(1548165444742L), -7,
                                                             "c905a840-d957-49e6-a958-0bcb1369c63f", true,
                                                             "9458c770-ee1f-42fd-9de7-7977cf58c8cf",
                                                             "1ee54c7d-2412-43df-bf19-5bd1098f195a", 22, null, null,
                                                             false, "8b0080c2-4770-4670-8ec2-102a096c6b3e", 18,
                                                             "9d874c3e-1579-4a83-a582-049f7bc924fc",
                                                             SubtenantUserStatus.getDefault(), false, false,
                                                             new Date(1548165445663L),
                                                             "d27bbd15-a0d2-4f4c-bc80-c3de7ecc875b");
            SubtenantUser subtenantuser2 = new SubtenantUser("d6cfc1ad-8509-4aad-99cc-fb5c9d18fe17",
                                                             "466352a8-acee-4717-8fce-5f83ae472cb8",
                                                             new Date(1548165444742L), -7,
                                                             "c905a840-d957-49e6-a958-0bcb1369c63f", true,
                                                             "9458c770-ee1f-42fd-9de7-7977cf58c8cf",
                                                             "1ee54c7d-2412-43df-bf19-5bd1098f195a", 22, null, null,
                                                             false, "8b0080c2-4770-4670-8ec2-102a096c6b3e", 18,
                                                             "9d874c3e-1579-4a83-a582-049f7bc924fc",
                                                             SubtenantUserStatus.getDefault(), false, false,
                                                             new Date(1548165445663L),
                                                             "d27bbd15-a0d2-4f4c-bc80-c3de7ecc875b");
            SubtenantUser subtenantuser3 = new SubtenantUser("91ae6d33-7d5b-4860-85ad-e9dddd420469",
                                                             "dab16c03-272d-4c09-85b3-b5b765ccb536",
                                                             new Date(1548165446445L), -47,
                                                             "097bcebb-dfa7-45e5-8fad-7a48c59dc100", true,
                                                             "20dd66df-7ea9-4506-9d02-79876d5f8fb9",
                                                             "2a27e77d-4ab3-432f-962f-fecd36e1edb7", 67, null, null,
                                                             false, "a041603d-4a9f-4b09-b0dc-51ce2f55314e", 5,
                                                             "1bfbd647-2806-465c-8ae8-d9ab3fea16bc",
                                                             SubtenantUserStatus.getDefault(), false, false,
                                                             new Date(1548165445273L),
                                                             "2183185b-5f41-45cd-babe-942953442cbf");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
