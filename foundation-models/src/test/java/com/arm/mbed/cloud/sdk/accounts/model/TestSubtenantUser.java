// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("3f3bfa45b47fdcef3cd0baefcc7b4d9a", null,
                                                             "18c5b489-b48a-4853-a34d-dc6f493dc3f5",
                                                             new Date(1559560666528L), 30, null, "24a83.a5135@fc2ed.me",
                                                             false, "3f418f81-5fdb-4d2a-8f43-da85de2c8df9",
                                                             "3f3bfa45b47fdcef3cd0baefcc7b4d9a", false, false, true,
                                                             126, null, null, "7188786f-c8d8-4d56-b291-3097c1f92f73",
                                                             100, "b9cef4d7-7cba-47b5-806f-55f875514d89",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559560672222L), "__2=7U");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("3f3bfa45b47fdcef3cd0baefcc7b4d9a", null,
                                                             "66933f29-9901-4f1e-8b74-24125c859a73",
                                                             new Date(1559560670194L), 48, null, "2f3c8.88c30@aade6.fr",
                                                             false, "51871b52-9a4b-4f54-b64d-eb4f87bfc48d",
                                                             "3f3bfa45b47fdcef3cd0baefcc7b4d9a", false, false, true, 55,
                                                             null, null, "d6c7493c-8521-432a-9168-c3b5424652e3", -109,
                                                             "4a9bf169-e48c-41a4-836f-1ea82664f382",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559560673333L), "__2=7U");
            SubtenantUser subtenantuser2 = new SubtenantUser("3f3bfa45b47fdcef3cd0baefcc7b4d9a", null,
                                                             "66933f29-9901-4f1e-8b74-24125c859a73",
                                                             new Date(1559560670194L), 48, null, "2f3c8.88c30@aade6.fr",
                                                             false, "51871b52-9a4b-4f54-b64d-eb4f87bfc48d",
                                                             "3f3bfa45b47fdcef3cd0baefcc7b4d9a", false, false, true, 55,
                                                             null, null, "d6c7493c-8521-432a-9168-c3b5424652e3", -109,
                                                             "4a9bf169-e48c-41a4-836f-1ea82664f382",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559560673333L), "__2=7U");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("3f3bfa45b47fdcef3cd0baefcc7b4d9a", null,
                                                        "5e91f6c9-6434-4eed-a7a8-ae2a1a097b25",
                                                        new Date(1559560665075L), 53, null, "fd63c.b82f9@11822.me",
                                                        true, "e8943416-0a7e-4b42-8c4a-9db20ecb2dbf",
                                                        "3f3bfa45b47fdcef3cd0baefcc7b4d9a", true, false, false, 109,
                                                        null, null, "df7148ca-b64f-41fa-816f-b351f4ad7be5", -104,
                                                        "4cfa879b-6738-4d2d-8203-cdbbc2df33e9",
                                                        SubtenantUserStatus.getDefault(), null,
                                                        new Date(1559560672160L), "__2=7U");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "0fe5e452-6988-48ed-aa0b-7ed76125b74a",
                                                               new Date(1559560669198L), -71, null, null, false,
                                                               "3f6b13b9-242a-43e8-93df-13a0999f8c538b2796ad-e1d1-4489-b48e-6b90d52a13f5b28a064b-ed4a-4899-bc42-f64dcb6bb246",
                                                               "å‚¿!6ç¢šâ«”2'>\tæ ¦\u001c6Y8\u001dä³?8\u001f\u00176à¤Ÿ22æ¢‹)8é¥¦B?ç¿“[6é½­ä?¬8821\u001aM\u001588\u0011ÙŽ6+6_88F1\u0004666[86ë§±I1_",
                                                               false, true, true, 109, null, null,
                                                               "62186727-12a4-4591-9c4a-14f2942b56b0", 19,
                                                               "8747f76b-57ee-4e35-b490-792064b231f092b86ddb-7873-468a-946e-4d40fa3f96c5905d7500-5c2a-4fb6-8b22-d5bb119d8f4e",
                                                               SubtenantUserStatus.getDefault(), null,
                                                               new Date(1559560664689L),
                                                               "?ë¿­ZC:4ë«¯W^\u000495é®³:éœ¥'ç…?4á½™834;6(#\u001eLÏ¿ä³š/Y1;Z^\u00125;DO9ä°¡G6M\u000b^\u0003D<ê°¹6á·®T<9[Jé—³\u001bF^3");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("3f3bfa45b47fdcef3cd0baefcc7b4d9a", null,
                                                             "a62fbf37-82fc-4e2e-8f62-c633dcdfcd86",
                                                             new Date(1559560666998L), -80, null,
                                                             "0a332.2e7a7@21194.me", false,
                                                             "3e9b2833-9c5f-418f-9629-cb2ee75e2573",
                                                             "3f3bfa45b47fdcef3cd0baefcc7b4d9a", true, false, false, 22,
                                                             null, null, "db9917f0-fdc6-440f-a0ea-e94f1ec005f2", 73,
                                                             "0a29d30f-c6f7-4a5e-970b-ea15dfdda445",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559560664109L), "__2=7U");
            SubtenantUser subtenantuser2 = new SubtenantUser("3f3bfa45b47fdcef3cd0baefcc7b4d9a", null,
                                                             "a62fbf37-82fc-4e2e-8f62-c633dcdfcd86",
                                                             new Date(1559560666998L), -80, null,
                                                             "0a332.2e7a7@21194.me", false,
                                                             "3e9b2833-9c5f-418f-9629-cb2ee75e2573",
                                                             "3f3bfa45b47fdcef3cd0baefcc7b4d9a", true, false, false, 22,
                                                             null, null, "db9917f0-fdc6-440f-a0ea-e94f1ec005f2", 73,
                                                             "0a29d30f-c6f7-4a5e-970b-ea15dfdda445",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559560664109L), "__2=7U");
            SubtenantUser subtenantuser3 = new SubtenantUser("3f3bfa45b47fdcef3cd0baefcc7b4d9a", null,
                                                             "dcc692d8-2e19-4fba-8536-bd9c0b06b47f",
                                                             new Date(1559560671739L), 78, null, "d8143.925ac@e72c7.fr",
                                                             false, "6ff79c1f-6dda-4ee6-a94b-556dffe1ba29",
                                                             "3f3bfa45b47fdcef3cd0baefcc7b4d9a", true, false, false,
                                                             -18, null, null, "a7a2c1e3-c126-4259-99b4-45ad53b0851b",
                                                             -28, "16d585a4-3655-46c4-ad5a-bffe9e6ff65f",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559560666983L), "__2=7U");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
