// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("bedebcaf929fb64c74860f9a9cc41c0c", null,
                                                             "4ab922d4-0cd4-4293-90e9-dea17f75a2df",
                                                             new Date(1559833678408L), -15, null,
                                                             "d1617.29cf9@6ce71.me", true,
                                                             "e26e6e5a-70e3-4b21-ac94-9afb36f6fba6",
                                                             "bedebcaf929fb64c74860f9a9cc41c0c", false, true, false,
                                                             -15, null, null, "61dc69c3-e260-45f7-a868-4c8ec4e17dfa",
                                                             -117, "5ee85b81-221e-4049-8431-ca0df3a38407",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559833680659L), ",9l=");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("bedebcaf929fb64c74860f9a9cc41c0c", null,
                                                             "dcd01374-ad99-49c8-b148-b1e12309bca0",
                                                             new Date(1559833681627L), -36, null,
                                                             "9b3c7.4148a@2ab1f.fr", true,
                                                             "6ea7c7e8-139a-4ea3-850d-924a4c158f7c",
                                                             "bedebcaf929fb64c74860f9a9cc41c0c", false, true, false,
                                                             102, null, null, "4fa136de-e203-4b1d-a9b1-ad78712d367a",
                                                             12, "cb979ce6-6634-484b-b043-f845bbf1f99d",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559833681113L), ",9l=");
            SubtenantUser subtenantuser2 = new SubtenantUser("bedebcaf929fb64c74860f9a9cc41c0c", null,
                                                             "dcd01374-ad99-49c8-b148-b1e12309bca0",
                                                             new Date(1559833681627L), -36, null,
                                                             "9b3c7.4148a@2ab1f.fr", true,
                                                             "6ea7c7e8-139a-4ea3-850d-924a4c158f7c",
                                                             "bedebcaf929fb64c74860f9a9cc41c0c", false, true, false,
                                                             102, null, null, "4fa136de-e203-4b1d-a9b1-ad78712d367a",
                                                             12, "cb979ce6-6634-484b-b043-f845bbf1f99d",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559833681113L), ",9l=");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("bedebcaf929fb64c74860f9a9cc41c0c", null,
                                                        "104f7305-f500-4efe-8feb-7157108e6aa4",
                                                        new Date(1559833686673L), -91, null, "fe485.09286@d3483.me",
                                                        true, "1421dbaf-e362-4cc3-aef3-a560bc35a6b4",
                                                        "bedebcaf929fb64c74860f9a9cc41c0c", true, true, false, 81, null,
                                                        null, "6dbbe360-a63f-4713-9672-949b3fba1ba6", -39,
                                                        "ed23ecfd-28f2-4f8d-8f4f-5abd90c8a0b0",
                                                        SubtenantUserStatus.getDefault(), null,
                                                        new Date(1559833685897L), ",9l=");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "ceb9f9f9-1f3a-4b75-8852-24602a447dfc",
                                                               new Date(1559833677281L), 81, null, null, true,
                                                               "8318c4ef-e57c-4bdd-9956-d6256cfa31ff06bf2980-183a-4838-9eec-7547bafb0868acc30297-83df-4cce-84e9-cf3f05217ec4",
                                                               "D3\u0001\u0002\u001c53,àº£Gêž?*]\u001e.H555\u0016æ¬?Å¢3Z533ê§ˆâ?ƒ33è­µâ”ŒçŒ‘\b\u001f5ã†ŒG3T)\u001fï¸¬âŠ©àµ¾3H535(35í?º5è˜ Í¡Y333\u0007",
                                                               true, false, true, 92, null, null,
                                                               "1fba0ba4-a98d-4d71-9591-8a585cda81ef", 50,
                                                               "42142383-cb60-44d9-9919-1fd6a4bf2c84e301d446-a172-4755-99ef-b36ef499769263ae28a9-d2a8-4f8d-9a59-e205d32ee967",
                                                               SubtenantUserStatus.getDefault(), null,
                                                               new Date(1559833681464L),
                                                               "\u0016\f#:ï€›*\u0007\\\\;8B>)ï?º8!Z;ë¥†8\u000b\u000e\u0011/è±ª:%.é®¹ç¡ˆ\u0017\u000e:â£—\f<je(-2ç‚¼1;\u000b.åª¶J<\f3]1d1\u000eh;h&");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("bedebcaf929fb64c74860f9a9cc41c0c", null,
                                                             "cdce353a-75b2-4f71-8d77-edb34c803935",
                                                             new Date(1559833683192L), -53, null,
                                                             "13b05.87234@5af9f.me", true,
                                                             "e4981fa2-1757-445b-9441-9b005f08034e",
                                                             "bedebcaf929fb64c74860f9a9cc41c0c", true, false, true, -55,
                                                             null, null, "f9a38f44-1a75-49b9-a880-59e5d5e9d25f", 87,
                                                             "33027d75-69b5-41af-8109-c4cd2984e1b9",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559833678688L), ",9l=");
            SubtenantUser subtenantuser2 = new SubtenantUser("bedebcaf929fb64c74860f9a9cc41c0c", null,
                                                             "cdce353a-75b2-4f71-8d77-edb34c803935",
                                                             new Date(1559833683192L), -53, null,
                                                             "13b05.87234@5af9f.me", true,
                                                             "e4981fa2-1757-445b-9441-9b005f08034e",
                                                             "bedebcaf929fb64c74860f9a9cc41c0c", true, false, true, -55,
                                                             null, null, "f9a38f44-1a75-49b9-a880-59e5d5e9d25f", 87,
                                                             "33027d75-69b5-41af-8109-c4cd2984e1b9",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559833678688L), ",9l=");
            SubtenantUser subtenantuser3 = new SubtenantUser("bedebcaf929fb64c74860f9a9cc41c0c", null,
                                                             "110ef231-e020-484a-beb2-c04f260a5ffb",
                                                             new Date(1559833682362L), 86, null, "b2055.8892f@1d049.me",
                                                             true, "c0b3967c-945f-4be8-94e1-8bd5d7548188",
                                                             "bedebcaf929fb64c74860f9a9cc41c0c", true, false, true, 7,
                                                             null, null, "7e52ba50-7273-4925-a8cd-a26b7240fecf", 120,
                                                             "aa71f9ab-ced1-4f59-a435-d865ff734d86",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559833683365L), ",9l=");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
