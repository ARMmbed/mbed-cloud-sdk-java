// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("afbdeea60718ef43acbc07ccc8d8b7ff", null,
                                                             "f53dfa33-8cd4-4bb8-b856-233008785a5d",
                                                             new Date(1558096041225L), -92, null,
                                                             "d2b18.860da@32b22.me", true,
                                                             "ef7a08cf-c071-4980-a439-39dea18fd35d",
                                                             "afbdeea60718ef43acbc07ccc8d8b7ff", true, false, false,
                                                             105, null, null, "910e5d34-cdf1-4264-991d-20717393d935",
                                                             102, "ff6d3d18-1f70-4cce-b447-e2f6e66cbce2",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1558096037985L), "==_LU=");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("afbdeea60718ef43acbc07ccc8d8b7ff", null,
                                                             "fc2bd902-9683-47f2-a3bb-12ed28431976",
                                                             new Date(1558096045070L), -59, null,
                                                             "4ebe5.d0465@63f36.me", true,
                                                             "28464622-f754-4eab-92df-c3c6fc362edf",
                                                             "afbdeea60718ef43acbc07ccc8d8b7ff", true, true, true, 29,
                                                             null, null, "a8732b06-37ff-4cc5-b151-aa64f0505884", 124,
                                                             "45fba768-db49-4a41-bed0-2e16e588beaf",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1558096036511L), "==_LU=");
            SubtenantUser subtenantuser2 = new SubtenantUser("afbdeea60718ef43acbc07ccc8d8b7ff", null,
                                                             "fc2bd902-9683-47f2-a3bb-12ed28431976",
                                                             new Date(1558096045070L), -59, null,
                                                             "4ebe5.d0465@63f36.me", true,
                                                             "28464622-f754-4eab-92df-c3c6fc362edf",
                                                             "afbdeea60718ef43acbc07ccc8d8b7ff", true, true, true, 29,
                                                             null, null, "a8732b06-37ff-4cc5-b151-aa64f0505884", 124,
                                                             "45fba768-db49-4a41-bed0-2e16e588beaf",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1558096036511L), "==_LU=");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("afbdeea60718ef43acbc07ccc8d8b7ff", null,
                                                        "cd2343a0-4b73-4391-b425-536be4aa7a3c",
                                                        new Date(1558096040034L), 33, null, "40305.b255b@31b26.me",
                                                        true, "438b3775-d760-4107-9d9b-66329fe125e7",
                                                        "afbdeea60718ef43acbc07ccc8d8b7ff", false, true, false, 89,
                                                        null, null, "5e906a71-fe0b-464e-b4b2-75ecad0b0219", 12,
                                                        "a6ceceb4-ca35-483d-9786-663461a61de8",
                                                        SubtenantUserStatus.getDefault(), null,
                                                        new Date(1558096040224L), "==_LU=");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "d65c117f-6edf-41bf-a958-86be6c62f78e",
                                                               new Date(1558096042423L), -79, null, null, false,
                                                               "3cef2661-67c5-4bd8-b83e-fdf765c0b6308f8d5dda-b058-4d0f-ad85-d545b2bbc6b75053b4ca-d5be-4dc3-bd11-c1c642de1f82",
                                                               "2FXì¯†52\u0007R5ë™£\u0000ï´µ2552Séº“åŠ¼ä—´22/æ±µî«¾5î?º25!ë?©5,2\b22\u000725%î¤ 2`è‹…5\u001a)ê–Ÿ2B2\u0013îŸª52ì¦?5\u001c)\u0013",
                                                               false, false, false, 119, null, null,
                                                               "bdaed2ec-5948-4e65-9395-bf0ad0f9a032", -4,
                                                               "23142acc-5979-47ea-aeaf-00762a721e685705d6d1-ae8a-4454-ae0e-ad69db07bf7a32abfd75-f607-421c-a58e-fc8453e062e5",
                                                               SubtenantUserStatus.getDefault(), null,
                                                               new Date(1558096042061L),
                                                               "ìš¢æ§ŽO;Yâ™š\u0019\u0015\u0012YZ\u0000â…‚OAF6\\\\Né³‚\u0014(\u000b-J*^æ´†[[]8á¦?ZÂ¸ì ?á …A?T\u0011,JW'Tè¨›\u001d\\\\EJ\u0005>D\u001dçŸ«Oå­?XOâˆ­QX");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("afbdeea60718ef43acbc07ccc8d8b7ff", null,
                                                             "a25a46b7-9a4a-4588-be18-20074da39c85",
                                                             new Date(1558096039965L), -10, null,
                                                             "9dfce.20ef5@5c365.fr", false,
                                                             "cb910b38-81ef-45d9-849d-74ed133bbbc4",
                                                             "afbdeea60718ef43acbc07ccc8d8b7ff", false, false, true,
                                                             -121, null, null, "f1b24fe7-826c-455b-a912-de35baea1442",
                                                             119, "6689f424-4026-4a40-aaef-d849b55144bc",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1558096037243L), "==_LU=");
            SubtenantUser subtenantuser2 = new SubtenantUser("afbdeea60718ef43acbc07ccc8d8b7ff", null,
                                                             "a25a46b7-9a4a-4588-be18-20074da39c85",
                                                             new Date(1558096039965L), -10, null,
                                                             "9dfce.20ef5@5c365.fr", false,
                                                             "cb910b38-81ef-45d9-849d-74ed133bbbc4",
                                                             "afbdeea60718ef43acbc07ccc8d8b7ff", false, false, true,
                                                             -121, null, null, "f1b24fe7-826c-455b-a912-de35baea1442",
                                                             119, "6689f424-4026-4a40-aaef-d849b55144bc",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1558096037243L), "==_LU=");
            SubtenantUser subtenantuser3 = new SubtenantUser("afbdeea60718ef43acbc07ccc8d8b7ff", null,
                                                             "17914d91-06dc-4813-b9e0-b0a0dd2b628f",
                                                             new Date(1558096042434L), -128, null,
                                                             "cc3f1.ae748@1cdd4.fr", false,
                                                             "bba75fc4-3b49-4e56-9c75-86e9c36ce30f",
                                                             "afbdeea60718ef43acbc07ccc8d8b7ff", false, false, true,
                                                             -36, null, null, "f890fe42-fae4-4d97-8a4a-150f94074d78",
                                                             11, "4839ef4e-763e-4d6c-aa02-43fcc12eba03",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1558096042112L), "==_LU=");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
