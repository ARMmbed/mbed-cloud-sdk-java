// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("71fdba82137d3d88b328e27f0b30ef6d", null,
                                                             "8fa65b3d-4630-4bfe-9b1d-a55a171f303f",
                                                             new Date(1559754640339L), 122, null,
                                                             "f0fa3.4e70c@488e5.fr", true,
                                                             "fc452c35-8058-4d05-aafd-599dd4b5680d",
                                                             "71fdba82137d3d88b328e27f0b30ef6d", false, true, false,
                                                             -86, null, null, "d6e3ff75-188a-48fe-9f8c-d85ff1a46cb9",
                                                             51, "ede4ccdf-070d-4a72-834d-8c6b07b0627c",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559754637405L), "V-Y,T");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("71fdba82137d3d88b328e27f0b30ef6d", null,
                                                             "fe892e8c-fcf4-499a-a020-61b169e9d4f1",
                                                             new Date(1559754636529L), -32, null,
                                                             "3d9d7.576f9@be6dc.fr", true,
                                                             "3286756c-fa90-4aa8-9c0d-4362491dfe8c",
                                                             "71fdba82137d3d88b328e27f0b30ef6d", true, true, false, 34,
                                                             null, null, "56d8b531-dc19-44d4-9a42-62158e3bb2c4", 14,
                                                             "a2006318-6415-445f-8975-a214c88b3b3e",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559754643082L), "V-Y,T");
            SubtenantUser subtenantuser2 = new SubtenantUser("71fdba82137d3d88b328e27f0b30ef6d", null,
                                                             "fe892e8c-fcf4-499a-a020-61b169e9d4f1",
                                                             new Date(1559754636529L), -32, null,
                                                             "3d9d7.576f9@be6dc.fr", true,
                                                             "3286756c-fa90-4aa8-9c0d-4362491dfe8c",
                                                             "71fdba82137d3d88b328e27f0b30ef6d", true, true, false, 34,
                                                             null, null, "56d8b531-dc19-44d4-9a42-62158e3bb2c4", 14,
                                                             "a2006318-6415-445f-8975-a214c88b3b3e",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559754643082L), "V-Y,T");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("71fdba82137d3d88b328e27f0b30ef6d", null,
                                                        "620abcdf-b336-4ce5-beca-a26a88ab19c6",
                                                        new Date(1559754643137L), 121, null, "fda59.29723@6e99d.fr",
                                                        true, "11b37c08-32a6-4783-831e-29136b67b4b9",
                                                        "71fdba82137d3d88b328e27f0b30ef6d", true, false, false, 49,
                                                        null, null, "099245a5-ba1c-443c-90b3-1f0ce88b6cdf", 65,
                                                        "56fcbab1-e402-4dbf-9e67-a66fe8904af3",
                                                        SubtenantUserStatus.getDefault(), null,
                                                        new Date(1559754636203L), "V-Y,T");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "c339459a-11ab-4493-a674-7e9bcb9c04a9",
                                                               new Date(1559754644602L), 45, null, null, false,
                                                               "e9fa7d4a-40bb-4a43-bb50-df5cd677e3f380b4f8f0-5fc4-4fbc-9844-ee5c46b78891f1082f3e-0a4b-4d5e-8526-862f77a24907",
                                                               ";\u000b\u0007å±¨&\u0007H_c5Y\u0005íˆµ44ã—‘\u00165cc)4câˆ³ë…”cc4\u000fë‰¢4ížš54æ£ž4cë€‡c\bcà¦Œ5í?¾?F\táŒ·Tcï‚›céŽ»ëŒ®\u0013$$c:c\u0017F-îŒ¯\u0018",
                                                               true, true, false, 6, null, null,
                                                               "0a109e37-a1d2-43f8-b26f-535db797a315", 115,
                                                               "81078dc0-2f8f-4cae-a6fa-0c427fb21d5a1ca5ba98-4bc1-43fa-9c33-36e3289b234d04dfd583-c96c-4532-a015-fcdf4b672d18",
                                                               SubtenantUserStatus.getDefault(), null,
                                                               new Date(1559754637116L),
                                                               "W!í?ˆ=\u0012í?»ä–ª\u000b?*Wà»?UXå¥šXî™”R\u001dUWUWU4X\u0016ì¹€\u001dWUî—‡Uæš‘UI\u0015\u0015å›?UUX\u001f2UXUXC)JXUXæƒ½UUæ«¿WWUUU)");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("71fdba82137d3d88b328e27f0b30ef6d", null,
                                                             "5f91d899-4cd2-412b-b80d-aa58c7a766be",
                                                             new Date(1559754636883L), -64, null,
                                                             "c14ae.7ee03@954da.fr", true,
                                                             "97a2f8e4-8be6-4c9c-8379-01e7d7e57d37",
                                                             "71fdba82137d3d88b328e27f0b30ef6d", false, true, false,
                                                             -62, null, null, "05db8eb5-4384-47a4-9157-981f25271d15",
                                                             -50, "7f90740d-a182-46d0-806e-f51ff013a68c",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559754638023L), "V-Y,T");
            SubtenantUser subtenantuser2 = new SubtenantUser("71fdba82137d3d88b328e27f0b30ef6d", null,
                                                             "5f91d899-4cd2-412b-b80d-aa58c7a766be",
                                                             new Date(1559754636883L), -64, null,
                                                             "c14ae.7ee03@954da.fr", true,
                                                             "97a2f8e4-8be6-4c9c-8379-01e7d7e57d37",
                                                             "71fdba82137d3d88b328e27f0b30ef6d", false, true, false,
                                                             -62, null, null, "05db8eb5-4384-47a4-9157-981f25271d15",
                                                             -50, "7f90740d-a182-46d0-806e-f51ff013a68c",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559754638023L), "V-Y,T");
            SubtenantUser subtenantuser3 = new SubtenantUser("71fdba82137d3d88b328e27f0b30ef6d", null,
                                                             "f4840f59-7ca1-4864-a2a3-4a80fd8538da",
                                                             new Date(1559754642000L), 89, null, "bc7d7.525c4@6462b.fr",
                                                             true, "e9135649-036d-4918-9b22-81fe9d34c378",
                                                             "71fdba82137d3d88b328e27f0b30ef6d", false, true, false, -9,
                                                             null, null, "d7439e99-01ba-4ed8-9dea-668736d3f905", -85,
                                                             "ea79ec72-da1d-47c6-9998-85150243487a",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559754639534L), "V-Y,T");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
