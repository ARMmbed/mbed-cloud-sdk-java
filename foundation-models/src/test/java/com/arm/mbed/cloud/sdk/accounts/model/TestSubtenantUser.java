// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("83f5196b-a11b-42b0-aa2e-b7415eb7d2b4",
                                                             "a0fad1e7-249f-401f-b421-6768bf3fff48",
                                                             new Date(1547730055836L), -25,
                                                             "2fa9957a-c59f-4f92-a8be-b69166c63397", true,
                                                             "6b216504-3d40-40e2-b0c7-42cd3cf673ed",
                                                             "909e2e6e-5ca2-4ef0-980b-a347fc335973", 79, null, null,
                                                             false, "c4e862d5-ef52-4986-8459-e01c07d66534", -17,
                                                             "1391c312-ffc7-41e6-adf5-6f9e03ff5f93",
                                                             SubtenantUserStatus.getDefault(), false, true,
                                                             new Date(1547730051894L),
                                                             "5bfa35b7-d357-4d41-8dc1-caa573085468");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("6e7ab866-d094-47d8-8a5a-20a087242a37",
                                                             "52cd14c3-d88a-4588-963d-ce2504cbec87",
                                                             new Date(1547730056435L), -15,
                                                             "c24e8812-9377-4871-8177-b493c46ad30a", true,
                                                             "7e02a7ed-2961-41d8-b1fe-6565ef150976",
                                                             "cd69669a-6f40-4598-a722-97139836180d", -29, null, null,
                                                             true, "e8dfcf24-a63e-4a6f-9d5e-fa27fa0a69c4", 17,
                                                             "999699c0-33e6-4c96-903d-f0c501f775f1",
                                                             SubtenantUserStatus.getDefault(), true, true,
                                                             new Date(1547730055671L),
                                                             "935b9ed8-c15e-4e47-8f1d-1472c47861ca");
            SubtenantUser subtenantuser2 = new SubtenantUser("6e7ab866-d094-47d8-8a5a-20a087242a37",
                                                             "52cd14c3-d88a-4588-963d-ce2504cbec87",
                                                             new Date(1547730056435L), -15,
                                                             "c24e8812-9377-4871-8177-b493c46ad30a", true,
                                                             "7e02a7ed-2961-41d8-b1fe-6565ef150976",
                                                             "cd69669a-6f40-4598-a722-97139836180d", -29, null, null,
                                                             true, "e8dfcf24-a63e-4a6f-9d5e-fa27fa0a69c4", 17,
                                                             "999699c0-33e6-4c96-903d-f0c501f775f1",
                                                             SubtenantUserStatus.getDefault(), true, true,
                                                             new Date(1547730055671L),
                                                             "935b9ed8-c15e-4e47-8f1d-1472c47861ca");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("00bbd5fc-a06e-4535-a225-8591296faec2",
                                                        "12f66d2b-1e46-4dc9-9895-c58e5671be2e",
                                                        new Date(1547730058293L), -81,
                                                        "abbdcb3e-381b-42c0-8e24-870b6f88449b", false,
                                                        "0e5c1d0d-b794-409a-aa51-a7dcca785084",
                                                        "aedbf83c-8dd8-4a78-9bc7-a33b5141cb76", -124, null, null, true,
                                                        "4b0cb48d-8d07-40dc-bf94-5055b75d3ca9", 33,
                                                        "1c6ec9db-5944-4778-8d2b-17bb2fcb2e73",
                                                        SubtenantUserStatus.getDefault(), true, false,
                                                        new Date(1547730050215L),
                                                        "fdc26de4-4e08-4dab-81e0-7ed16f0740c3");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, "f394a2e4-2532-4e56-90a2-a863900fe8e3",
                                                               new Date(1547730053356L), -53, null, false,
                                                               "93faadc3-ca8b-49d7-8c96-46a67e13d140",
                                                               "d7254eb2-42a6-467d-95fe-e4f54a7a2730", 45, null, null,
                                                               false, "12eb7a06-345e-462d-a44b-6183226b23a6", -24,
                                                               "1ed82aab-ee08-471b-87e0-9321a088a7c5",
                                                               SubtenantUserStatus.getDefault(), false, true,
                                                               new Date(1547730057144L),
                                                               "5bb27fc3-dfce-49f0-98aa-5f0ec0e632af");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("aa50ac3c-0086-4f46-9fd4-5ff566622710",
                                                             "7d8d0ed2-f768-48d6-a842-babacb1a1475",
                                                             new Date(1547730056872L), 17,
                                                             "41dacb41-69dd-4686-bd13-6f303409e9e5", false,
                                                             "8e935c77-3ce5-4a43-8cb6-fa1f3916867e",
                                                             "2aec1301-f3c9-4cda-9d33-0468f0153303", -108, null, null,
                                                             false, "75917c12-c3aa-433b-aada-22281b1dfb24", -72,
                                                             "e157e473-39e3-4b24-b212-6d15408cd60b",
                                                             SubtenantUserStatus.getDefault(), true, true,
                                                             new Date(1547730058959L),
                                                             "c54fb650-334b-4ec3-bc2d-291279a3c329");
            SubtenantUser subtenantuser2 = new SubtenantUser("aa50ac3c-0086-4f46-9fd4-5ff566622710",
                                                             "7d8d0ed2-f768-48d6-a842-babacb1a1475",
                                                             new Date(1547730056872L), 17,
                                                             "41dacb41-69dd-4686-bd13-6f303409e9e5", false,
                                                             "8e935c77-3ce5-4a43-8cb6-fa1f3916867e",
                                                             "2aec1301-f3c9-4cda-9d33-0468f0153303", -108, null, null,
                                                             false, "75917c12-c3aa-433b-aada-22281b1dfb24", -72,
                                                             "e157e473-39e3-4b24-b212-6d15408cd60b",
                                                             SubtenantUserStatus.getDefault(), true, true,
                                                             new Date(1547730058959L),
                                                             "c54fb650-334b-4ec3-bc2d-291279a3c329");
            SubtenantUser subtenantuser3 = new SubtenantUser("5ac6d70c-8451-47a2-b536-6c74c12cd29e",
                                                             "07842e34-8ad1-4c33-af62-97a097c8b168",
                                                             new Date(1547730057211L), -13,
                                                             "62b1a3d5-c7a2-498b-9680-06c7a1aadc66", false,
                                                             "28a37f4b-ffe3-4ebb-a569-4d8e00e56827",
                                                             "c80ff99d-577e-475a-bda4-77dc0a4f1387", 70, null, null,
                                                             false, "4b5e2f60-9a5d-49ee-8b16-b331bba1e777", 32,
                                                             "ca72d4a7-61f4-486a-ba58-1b64f33bf02b",
                                                             SubtenantUserStatus.getDefault(), true, true,
                                                             new Date(1547730051594L),
                                                             "a0c0fd97-95d4-446e-b3d6-fa0914d3bbd8");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
