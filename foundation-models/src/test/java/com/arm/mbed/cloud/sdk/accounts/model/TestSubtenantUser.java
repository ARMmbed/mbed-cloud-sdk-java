// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("5d6e68a6-1286-4b98-ac51-aa4b1587eb47",
                                                             "defa6c00-4dd9-48e0-b932-16311cc947a4",
                                                             new Date(1547225901888L), -18,
                                                             "b9ddb16f-7a6e-4a39-82cb-618089fedf64", false,
                                                             "761d25cd-3944-434a-8039-3b784c8ba409",
                                                             "ce8fad2a-5a39-4918-8224-54c7d2890472", 12, null, null,
                                                             true, "c64d5dfc-5d6d-4858-ab6b-4497c0e25304", -43,
                                                             "776aab77-595e-4cf1-8528-b5524c827fc1",
                                                             SubtenantUserStatus.getDefault(), false, false,
                                                             new Date(1547225903454L),
                                                             "f940c002-310a-4776-bdd0-f662c847a24f");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("b26f626f-59b2-40c3-ba67-934333787861",
                                                             "67dc2e79-b1a5-4c15-a86a-b714c4edd07e",
                                                             new Date(1547225900839L), -19,
                                                             "9c6b2b08-a093-4be4-9627-5babbaf8bd9d", true,
                                                             "9b02123b-140e-424d-8eee-f0cdbf7cb8b3",
                                                             "97c6d9f6-385a-4e71-8078-f9f01cbe6237", -35, null, null,
                                                             false, "462860d8-5a9d-4d6b-be68-2ece9e826faa", 15,
                                                             "042f8d47-b231-48c8-8142-8736b16aafc4",
                                                             SubtenantUserStatus.getDefault(), false, false,
                                                             new Date(1547225903357L),
                                                             "29d9ff58-7ff0-401d-87bf-226d36214d31");
            SubtenantUser subtenantuser2 = new SubtenantUser("b26f626f-59b2-40c3-ba67-934333787861",
                                                             "67dc2e79-b1a5-4c15-a86a-b714c4edd07e",
                                                             new Date(1547225900839L), -19,
                                                             "9c6b2b08-a093-4be4-9627-5babbaf8bd9d", true,
                                                             "9b02123b-140e-424d-8eee-f0cdbf7cb8b3",
                                                             "97c6d9f6-385a-4e71-8078-f9f01cbe6237", -35, null, null,
                                                             false, "462860d8-5a9d-4d6b-be68-2ece9e826faa", 15,
                                                             "042f8d47-b231-48c8-8142-8736b16aafc4",
                                                             SubtenantUserStatus.getDefault(), false, false,
                                                             new Date(1547225903357L),
                                                             "29d9ff58-7ff0-401d-87bf-226d36214d31");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("6d8ccfe5-ccaf-4be7-9db1-2444fa230751",
                                                        "2dc16b68-33c2-4651-98c6-65e1d2d40b57",
                                                        new Date(1547225895915L), -88,
                                                        "0e97dd03-df6c-43f5-bdb2-09e09faf5075", true,
                                                        "296bc287-9062-47b0-90d5-1fe7bd629c1d",
                                                        "b68a06eb-9bdb-4c0f-818f-e20b782681ef", 108, null, null, true,
                                                        "d966285f-45f6-441a-8765-1fc1d81060b7", -56,
                                                        "a7ab1250-2fe7-4592-a288-bd5e8557ef57",
                                                        SubtenantUserStatus.getDefault(), true, false,
                                                        new Date(1547225905139L),
                                                        "0408025a-a9f9-4646-8bff-ed4973562419");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, "151c12bd-649e-4821-a891-4d2c7c24bb33",
                                                               new Date(1547225897166L), 70, null, true,
                                                               "b3525119-f764-4a66-b2bf-10d017cb203a",
                                                               "dc6e2889-56e9-4b93-9112-cb1545405374", 47, null, null,
                                                               true, "97882ee0-d9f9-42d5-a2c4-9bbd3ff8454c", -24,
                                                               "71cc696d-194c-428d-a255-d7c5035ebea8",
                                                               SubtenantUserStatus.getDefault(), false, true,
                                                               new Date(1547225898112L),
                                                               "2ae69628-cc9e-40f9-b243-5bba428cb8fe");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("bd328a63-2f5f-4200-a8fe-9f8bfbe6c2d3",
                                                             "6abaf34c-0389-4741-b572-ba1350caa3b0",
                                                             new Date(1547225905562L), -93,
                                                             "4e160d66-7f81-4028-944e-d6b7583f2220", false,
                                                             "cf2b68bf-f8e6-4a6f-bed3-89084f429a5b",
                                                             "9a718c70-9bb1-413a-918b-81a8f3b943d0", 74, null, null,
                                                             false, "8c23d3fb-2467-4229-abab-687a58479beb", -94,
                                                             "67a5cbb6-4eac-41db-966d-867c16a5bddd",
                                                             SubtenantUserStatus.getDefault(), false, false,
                                                             new Date(1547225896588L),
                                                             "31b52325-6a22-45f0-a77a-13cd3defe4bc");
            SubtenantUser subtenantuser2 = new SubtenantUser("bd328a63-2f5f-4200-a8fe-9f8bfbe6c2d3",
                                                             "6abaf34c-0389-4741-b572-ba1350caa3b0",
                                                             new Date(1547225905562L), -93,
                                                             "4e160d66-7f81-4028-944e-d6b7583f2220", false,
                                                             "cf2b68bf-f8e6-4a6f-bed3-89084f429a5b",
                                                             "9a718c70-9bb1-413a-918b-81a8f3b943d0", 74, null, null,
                                                             false, "8c23d3fb-2467-4229-abab-687a58479beb", -94,
                                                             "67a5cbb6-4eac-41db-966d-867c16a5bddd",
                                                             SubtenantUserStatus.getDefault(), false, false,
                                                             new Date(1547225896588L),
                                                             "31b52325-6a22-45f0-a77a-13cd3defe4bc");
            SubtenantUser subtenantuser3 = new SubtenantUser("bb2051be-07f0-4aa4-be32-b79b5c838208",
                                                             "17169466-b2d8-4b69-93dc-dfa02637078d",
                                                             new Date(1547225901155L), -21,
                                                             "e150ae44-b961-4c36-bef7-e0966053b54d", false,
                                                             "437848f6-9694-4790-89d8-d68a8dc285c9",
                                                             "9e4bdc30-085d-4142-9d1c-a3d98a724357", -127, null, null,
                                                             false, "b5526188-fc0a-4749-8291-99e36ca3dfa4", 121,
                                                             "4fc3d8bf-6d02-4a95-9bbe-87c2eb015e1f",
                                                             SubtenantUserStatus.getDefault(), false, false,
                                                             new Date(1547225897305L),
                                                             "c8d3cebe-8c18-4a34-91ab-2e76c2be1021");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
