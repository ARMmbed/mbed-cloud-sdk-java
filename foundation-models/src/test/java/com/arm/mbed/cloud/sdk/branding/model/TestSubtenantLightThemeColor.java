// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.branding.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantLightThemeColor.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantLightThemeColor {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantLightThemeColor subtenantlightthemecolor1 = new SubtenantLightThemeColor("73d15176-8f5e-45da-bdba-82732c763374",
                                                                                              SubtenantLightThemeColorReference.getDefault(),
                                                                                              new Date(1559754644975L));
            SubtenantLightThemeColor subtenantlightthemecolor2 = subtenantlightthemecolor1.clone();
            assertNotNull(subtenantlightthemecolor1);
            assertNotNull(subtenantlightthemecolor2);
            assertNotSame(subtenantlightthemecolor2, subtenantlightthemecolor1);
            assertEquals(subtenantlightthemecolor2, subtenantlightthemecolor1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantLightThemeColor subtenantlightthemecolor1 = new SubtenantLightThemeColor("db5a22ba-a14c-4c67-a771-6c0302a768ec",
                                                                                              SubtenantLightThemeColorReference.getDefault(),
                                                                                              new Date(1559754635627L));
            SubtenantLightThemeColor subtenantlightthemecolor2 = new SubtenantLightThemeColor("db5a22ba-a14c-4c67-a771-6c0302a768ec",
                                                                                              SubtenantLightThemeColorReference.getDefault(),
                                                                                              new Date(1559754635627L));
            assertNotNull(subtenantlightthemecolor1);
            assertNotNull(subtenantlightthemecolor2);
            assertNotSame(subtenantlightthemecolor2, subtenantlightthemecolor1);
            assertEquals(subtenantlightthemecolor2, subtenantlightthemecolor1);
            assertEquals(subtenantlightthemecolor2.hashCode(), subtenantlightthemecolor1.hashCode());
            int hashCode = subtenantlightthemecolor1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantlightthemecolor1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantLightThemeColor subtenantlightthemecolor = new SubtenantLightThemeColor("a3c8e445-7c7e-4933-b668-c1cb37f2e1a9",
                                                                                         SubtenantLightThemeColorReference.getDefault(),
                                                                                         new Date(1559754644721L));
        assertTrue(subtenantlightthemecolor.isValid());
        SubtenantLightThemeColor subtenantlightthemecolorInvalid = new SubtenantLightThemeColor("dbe0f790-e77c-4e9b-9798-4eb9767eba94",
                                                                                                null,
                                                                                                new Date(1559754639436L));
        assertFalse(subtenantlightthemecolorInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantLightThemeColor subtenantlightthemecolor1 = new SubtenantLightThemeColor("05e9400e-7350-4462-97ca-1c474b61d166",
                                                                                              SubtenantLightThemeColorReference.getDefault(),
                                                                                              new Date(1559754641289L));
            SubtenantLightThemeColor subtenantlightthemecolor2 = new SubtenantLightThemeColor("05e9400e-7350-4462-97ca-1c474b61d166",
                                                                                              SubtenantLightThemeColorReference.getDefault(),
                                                                                              new Date(1559754641289L));
            SubtenantLightThemeColor subtenantlightthemecolor3 = new SubtenantLightThemeColor("adfa663c-7458-4eaa-96a9-f462d53ff445",
                                                                                              SubtenantLightThemeColorReference.getDefault(),
                                                                                              new Date(1559754635574L));
            assertNotNull(subtenantlightthemecolor1);
            assertNotNull(subtenantlightthemecolor2);
            assertNotNull(subtenantlightthemecolor3);
            assertNotSame(subtenantlightthemecolor2, subtenantlightthemecolor1);
            assertNotSame(subtenantlightthemecolor3, subtenantlightthemecolor1);
            assertEquals(subtenantlightthemecolor2, subtenantlightthemecolor1);
            assertEquals(subtenantlightthemecolor2, subtenantlightthemecolor1);
            assertEquals(subtenantlightthemecolor1, subtenantlightthemecolor2);
            assertEquals(subtenantlightthemecolor1, subtenantlightthemecolor1);
            assertFalse(subtenantlightthemecolor1.equals(null));
            assertNotEquals(subtenantlightthemecolor3, subtenantlightthemecolor1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
