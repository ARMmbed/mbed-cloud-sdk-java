// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.branding.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantLightThemeColor.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantLightThemeColor {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantLightThemeColor subtenantlightthemecolor1 = new SubtenantLightThemeColor("e892497e-40c5-4ade-be91-6510fea9c445",
                                                                                              SubtenantLightThemeColorReference.getDefault(),
                                                                                              new Date(1559752151662L));
            SubtenantLightThemeColor subtenantlightthemecolor2 = subtenantlightthemecolor1.clone();
            assertNotNull(subtenantlightthemecolor1);
            assertNotNull(subtenantlightthemecolor2);
            assertNotSame(subtenantlightthemecolor2, subtenantlightthemecolor1);
            assertEquals(subtenantlightthemecolor2, subtenantlightthemecolor1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantLightThemeColor subtenantlightthemecolor1 = new SubtenantLightThemeColor("e2142b8d-65d7-4854-8d56-c4060051196c",
                                                                                              SubtenantLightThemeColorReference.getDefault(),
                                                                                              new Date(1559752153329L));
            SubtenantLightThemeColor subtenantlightthemecolor2 = new SubtenantLightThemeColor("e2142b8d-65d7-4854-8d56-c4060051196c",
                                                                                              SubtenantLightThemeColorReference.getDefault(),
                                                                                              new Date(1559752153329L));
            assertNotNull(subtenantlightthemecolor1);
            assertNotNull(subtenantlightthemecolor2);
            assertNotSame(subtenantlightthemecolor2, subtenantlightthemecolor1);
            assertEquals(subtenantlightthemecolor2, subtenantlightthemecolor1);
            assertEquals(subtenantlightthemecolor2.hashCode(), subtenantlightthemecolor1.hashCode());
            int hashCode = subtenantlightthemecolor1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantlightthemecolor1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantLightThemeColor subtenantlightthemecolor = new SubtenantLightThemeColor("dc87d0a1-9e0d-49ee-8122-f0c2e624d7e7",
                                                                                         SubtenantLightThemeColorReference.getDefault(),
                                                                                         new Date(1559752148113L));
        assertTrue(subtenantlightthemecolor.isValid());
        SubtenantLightThemeColor subtenantlightthemecolorInvalid = new SubtenantLightThemeColor("689f11ef-7488-4f66-80e0-daa8230edd69",
                                                                                                SubtenantLightThemeColorReference.getDefault(),
                                                                                                new Date(1559752153682L));
        assertFalse(subtenantlightthemecolorInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantLightThemeColor subtenantlightthemecolor1 = new SubtenantLightThemeColor("662e40f8-a8eb-4a12-96a2-215146b366bb",
                                                                                              SubtenantLightThemeColorReference.getDefault(),
                                                                                              new Date(1559752146311L));
            SubtenantLightThemeColor subtenantlightthemecolor2 = new SubtenantLightThemeColor("662e40f8-a8eb-4a12-96a2-215146b366bb",
                                                                                              SubtenantLightThemeColorReference.getDefault(),
                                                                                              new Date(1559752146311L));
            SubtenantLightThemeColor subtenantlightthemecolor3 = new SubtenantLightThemeColor("bf74f469-cc3f-4270-bfd7-f66fc3120a0d",
                                                                                              SubtenantLightThemeColorReference.getDefault(),
                                                                                              new Date(1559752152182L));
            assertNotNull(subtenantlightthemecolor1);
            assertNotNull(subtenantlightthemecolor2);
            assertNotNull(subtenantlightthemecolor3);
            assertNotSame(subtenantlightthemecolor2, subtenantlightthemecolor1);
            assertNotSame(subtenantlightthemecolor3, subtenantlightthemecolor1);
            assertEquals(subtenantlightthemecolor2, subtenantlightthemecolor1);
            assertEquals(subtenantlightthemecolor2, subtenantlightthemecolor1);
            assertEquals(subtenantlightthemecolor1, subtenantlightthemecolor2);
            assertEquals(subtenantlightthemecolor1, subtenantlightthemecolor1);
            assertFalse(subtenantlightthemecolor1.equals(null));
            assertNotEquals(subtenantlightthemecolor3, subtenantlightthemecolor1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
