// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model CertificateIssuer.
 */
public class TestCertificateIssuer {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1547164358856L),
                                                                         "73079351-641b-4ae0-b5dd-253d8c52b4fe",
                                                                         "ff029208-e33a-4b19-a4d6-904a65a97386", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "9a71bdbb-fa76-4887-a380-eee1bb2b96a7");
            CertificateIssuer certificateissuer2 = certificateissuer1.clone();
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1547164364685L),
                                                                         "daf02101-91f9-4d7c-8a6f-fdf63116fdca",
                                                                         "c4c69f80-477e-4aee-8aff-c4b6b38d1e0a", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "20a8a78b-1d4a-474b-82ea-0035bb783a22");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new Date(1547164364685L),
                                                                         "daf02101-91f9-4d7c-8a6f-fdf63116fdca",
                                                                         "c4c69f80-477e-4aee-8aff-c4b6b38d1e0a", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "20a8a78b-1d4a-474b-82ea-0035bb783a22");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2.hashCode(), certificateissuer1.hashCode());
            int hashCode = certificateissuer1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, certificateissuer1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        CertificateIssuer certificateissuer = new CertificateIssuer(new Date(1547164359404L),
                                                                    "0f970234-1307-4217-afd5-25e65a9dd968",
                                                                    "7827e057-ed9f-46b4-acef-be5b692f59c7", null,
                                                                    CertificateIssuerType.getDefault(),
                                                                    "8536d410-ad83-426e-b881-528c73730ce9");
        assertTrue(certificateissuer.isValid());
        CertificateIssuer certificateissuerInvalid = new CertificateIssuer(new Date(1547164367234L),
                                                                           "ebe44fa7-5abd-41fb-9205-5bc8edafc799", null,
                                                                           null, CertificateIssuerType.getDefault(),
                                                                           null);
        assertFalse(certificateissuerInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1547164365169L),
                                                                         "0e1930dc-fe98-43c5-94e2-5e8d1bc5d546",
                                                                         "56e5d4f2-994f-4a8b-9b63-73b45c4d5764", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "62457910-a328-466e-8a2e-2827692b160c");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new Date(1547164365169L),
                                                                         "0e1930dc-fe98-43c5-94e2-5e8d1bc5d546",
                                                                         "56e5d4f2-994f-4a8b-9b63-73b45c4d5764", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "62457910-a328-466e-8a2e-2827692b160c");
            CertificateIssuer certificateissuer3 = new CertificateIssuer(new Date(1547164365616L),
                                                                         "2496edef-8240-4d2e-a22b-4cb6ac53e598",
                                                                         "9c11fad6-6027-480d-a4e2-e78442a69c19", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "63ae5b64-8765-4636-bbb5-cb1a02b05660");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotNull(certificateissuer3);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertNotSame(certificateissuer3, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer1, certificateissuer2);
            assertEquals(certificateissuer1, certificateissuer1);
            assertFalse(certificateissuer1.equals(null));
            assertNotEquals(certificateissuer3, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
