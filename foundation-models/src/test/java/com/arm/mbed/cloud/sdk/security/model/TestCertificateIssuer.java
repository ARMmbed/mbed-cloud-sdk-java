// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model CertificateIssuer.
 */
public class TestCertificateIssuer {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1547730057363L),
                                                                         "41f206db-aaf9-4774-aba2-0857b2a20b8f",
                                                                         "3d191acf-80e9-4ca4-97dc-a67d00eed64b", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "2c537392-a5ca-4d99-a650-ae14587b6a18");
            CertificateIssuer certificateissuer2 = certificateissuer1.clone();
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1547730054256L),
                                                                         "1108e17d-6f4c-4d41-9cb7-8a1e2d905984",
                                                                         "d31b2728-5a84-4cbf-9f2d-85d62b198046", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "fc40159c-c64f-442a-9568-c091dd434342");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new Date(1547730054256L),
                                                                         "1108e17d-6f4c-4d41-9cb7-8a1e2d905984",
                                                                         "d31b2728-5a84-4cbf-9f2d-85d62b198046", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "fc40159c-c64f-442a-9568-c091dd434342");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2.hashCode(), certificateissuer1.hashCode());
            int hashCode = certificateissuer1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, certificateissuer1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        CertificateIssuer certificateissuer = new CertificateIssuer(new Date(1547730051714L),
                                                                    "904a468f-6271-4159-8855-a4da8a3d6710",
                                                                    "439017c4-7c76-4fa3-93e8-cf5b2b23eed3", null,
                                                                    CertificateIssuerType.getDefault(),
                                                                    "07137e14-27c6-4865-aee8-a3b17e7490f4");
        assertTrue(certificateissuer.isValid());
        CertificateIssuer certificateissuerInvalid = new CertificateIssuer(new Date(1547730057551L),
                                                                           "df8c2173-20e6-4382-9a54-17e29ef809d1",
                                                                           "47efde51-bc6c-4a0e-9497-8a2925569ffc", null,
                                                                           CertificateIssuerType.getDefault(), null);
        assertFalse(certificateissuerInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1547730048994L),
                                                                         "4bd2cf54-41e9-4a96-9161-f9c31a07e9be",
                                                                         "3e1c9901-3a61-47ac-aab0-887d5f379a88", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "18ab7a1b-b087-41cb-964b-07228da8f96b");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new Date(1547730048994L),
                                                                         "4bd2cf54-41e9-4a96-9161-f9c31a07e9be",
                                                                         "3e1c9901-3a61-47ac-aab0-887d5f379a88", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "18ab7a1b-b087-41cb-964b-07228da8f96b");
            CertificateIssuer certificateissuer3 = new CertificateIssuer(new Date(1547730056087L),
                                                                         "05c22a4b-a634-48b6-adca-4f29dc21360a",
                                                                         "102867ef-689f-42e7-af5c-22df6cb2c8f8", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "4880033c-46da-497c-97c7-57439170da52");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotNull(certificateissuer3);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertNotSame(certificateissuer3, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer1, certificateissuer2);
            assertEquals(certificateissuer1, certificateissuer1);
            assertFalse(certificateissuer1.equals(null));
            assertNotEquals(certificateissuer3, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
