// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model CertificateIssuer. */
public class TestCertificateIssuer {
  /**
   * Tests the clone method.
   */
  @Test
  public void testClone() {
    CertificateIssuer certificateissuer1 = new CertificateIssuer(new java.util.Date(1545929350745L),
        "5a2cc0e9-fb1e-477b-9f4c-cd3c244da919",
        "17b8becc-e72b-4e62-a686-bf23e251b713",
        null,
        com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
        "a157066e-6799-423a-bd91-ebf4798ec345",
        true);
    CertificateIssuer certificateissuer2 = certificateissuer1.clone();
    assertNotNull(certificateissuer1);
    assertNotNull(certificateissuer2);
    assertNotSame(certificateissuer2, certificateissuer1);
    assertEquals(certificateissuer2, certificateissuer1);
  }

  /**
   * Tests the isvalid method.
   */
  @Test
  public void testIsvalid() {
    CertificateIssuer certificateissuer = new CertificateIssuer(new java.util.Date(1545929353820L),
        "84e8cb74-822a-40e4-a68b-afd5d6ded09a",
        "98f788e6-8a2e-4a47-864d-312e7c2b7a81",
        null,
        com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
        "c368f7d1-1858-47d7-8935-b81bef887b85",
        true);
    assertTrue(certificateissuer.isValid());
  }

  /**
   * Tests the hashcode method.
   */
  @Test
  public void testHashcode() {
    CertificateIssuer certificateissuer1 = new CertificateIssuer(new java.util.Date(1545929355071L),
        "d81eac4b-f111-484f-b2ff-1608eb9c7a10",
        "6e19359e-0320-45bf-b640-15383f561bdf",
        null,
        com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
        "16591edf-4629-44b3-bf4b-ae8139017fb2",
        false);
    CertificateIssuer certificateissuer2 = new CertificateIssuer(new java.util.Date(1545929355071L),
        "d81eac4b-f111-484f-b2ff-1608eb9c7a10",
        "6e19359e-0320-45bf-b640-15383f561bdf",
        null,
        com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
        "16591edf-4629-44b3-bf4b-ae8139017fb2",
        false);
    assertNotNull(certificateissuer1);
    assertNotNull(certificateissuer2);
    assertNotSame(certificateissuer2, certificateissuer1);
    assertEquals(certificateissuer2, certificateissuer1);
    assertEquals(certificateissuer2.hashCode(), certificateissuer1.hashCode());
    int hashCode = certificateissuer1.hashCode();
    for (int i = 0; i < 5 ; i++) {
      assertEquals(hashCode, certificateissuer1.hashCode());
    }
  }

  /**
   * Tests the equals method.
   */
  @Test
  public void testEquals() {
    CertificateIssuer certificateissuer1 = new CertificateIssuer(new java.util.Date(1545929356967L),
        "9b24036e-85c0-4941-811f-b3033fe9e7c1",
        "8fc9842f-fd9a-4029-92fb-1b2f3d048734",
        null,
        com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
        "c19df36c-dea1-452c-b353-c4dc4f5a0ede",
        false);
    CertificateIssuer certificateissuer2 = new CertificateIssuer(new java.util.Date(1545929356967L),
        "9b24036e-85c0-4941-811f-b3033fe9e7c1",
        "8fc9842f-fd9a-4029-92fb-1b2f3d048734",
        null,
        com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
        "c19df36c-dea1-452c-b353-c4dc4f5a0ede",
        false);
    CertificateIssuer certificateissuer3 = new CertificateIssuer(new java.util.Date(1545929353844L),
        "33e7f661-344c-4797-9657-bebcc28641db",
        "8cac52bc-79d7-46ba-b994-5f4e4963cdc4",
        null,
        com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
        "4739d329-3455-4857-9ff7-1cd61c064d21",
        false);
    assertNotNull(certificateissuer1);
    assertNotNull(certificateissuer2);
    assertNotNull(certificateissuer3);
    assertNotSame(certificateissuer2, certificateissuer1);
    assertNotSame(certificateissuer3, certificateissuer1);
    assertEquals(certificateissuer2, certificateissuer1);
    assertEquals(certificateissuer2, certificateissuer1);
    assertEquals(certificateissuer1, certificateissuer2);
    assertEquals(certificateissuer1, certificateissuer1);
    assertFalse(certificateissuer1.equals(null));
    assertNotEquals(certificateissuer3, certificateissuer1);
  }
}
