// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model CertificateIssuer.
 */
public class TestCertificateIssuer {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        CertificateIssuer certificateissuer1 = new CertificateIssuer(new java.util.Date(1546014234120L),
                                                                     "cbb53a9b-e838-4817-967a-f549ed2edf89",
                                                                     "1b4b4961-b583-4ff2-b321-cf12b570e9ad", null,
                                                                     com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
                                                                     "4896ab1f-c50f-4938-9cb2-9961a15dfeaf", false);
        CertificateIssuer certificateissuer2 = certificateissuer1.clone();
        assertNotNull(certificateissuer1);
        assertNotNull(certificateissuer2);
        assertNotSame(certificateissuer2, certificateissuer1);
        assertEquals(certificateissuer2, certificateissuer1);
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsvalid() {
        CertificateIssuer certificateissuer = new CertificateIssuer(new java.util.Date(1546014239474L),
                                                                    "99815d4e-d9b2-47bf-b260-bef875adb7f9",
                                                                    "e06e76e3-9060-42ad-883d-0bac9286370e", null,
                                                                    com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
                                                                    "9a0f2932-fc14-467b-b20e-3d4e64811c17", false);
        assertTrue(certificateissuer.isValid());
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashcode() {
        CertificateIssuer certificateissuer1 = new CertificateIssuer(new java.util.Date(1546014238782L),
                                                                     "3bca8391-a5ae-42a5-9c5f-c25112760c73",
                                                                     "2e1cae50-60fc-4067-b489-684c48ae7f67", null,
                                                                     com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
                                                                     "aaea02ea-8ca5-418d-b54e-a9624963dd06", false);
        CertificateIssuer certificateissuer2 = new CertificateIssuer(new java.util.Date(1546014238782L),
                                                                     "3bca8391-a5ae-42a5-9c5f-c25112760c73",
                                                                     "2e1cae50-60fc-4067-b489-684c48ae7f67", null,
                                                                     com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
                                                                     "aaea02ea-8ca5-418d-b54e-a9624963dd06", false);
        assertNotNull(certificateissuer1);
        assertNotNull(certificateissuer2);
        assertNotSame(certificateissuer2, certificateissuer1);
        assertEquals(certificateissuer2, certificateissuer1);
        assertEquals(certificateissuer2.hashCode(), certificateissuer1.hashCode());
        int hashCode = certificateissuer1.hashCode();
        for (int i = 0; i < 5; i++) {
            assertEquals(hashCode, certificateissuer1.hashCode());
        }
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        CertificateIssuer certificateissuer1 = new CertificateIssuer(new java.util.Date(1546014239595L),
                                                                     "a1baa8cf-b2d6-43ea-8aba-673d88e8081a",
                                                                     "478c725c-065a-4dd8-b4e1-4b0ea7038386", null,
                                                                     com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
                                                                     "7585c6b0-6635-443e-8d0d-73c38185db90", false);
        CertificateIssuer certificateissuer2 = new CertificateIssuer(new java.util.Date(1546014239595L),
                                                                     "a1baa8cf-b2d6-43ea-8aba-673d88e8081a",
                                                                     "478c725c-065a-4dd8-b4e1-4b0ea7038386", null,
                                                                     com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
                                                                     "7585c6b0-6635-443e-8d0d-73c38185db90", false);
        CertificateIssuer certificateissuer3 = new CertificateIssuer(new java.util.Date(1546014232282L),
                                                                     "cacc4701-f668-43b6-97f4-8a155f0aa967",
                                                                     "a371ff36-ea80-48c7-a432-8283a4bcddf5", null,
                                                                     com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
                                                                     "ffa01626-7e69-40f9-b28d-6eccefe6981c", false);
        assertNotNull(certificateissuer1);
        assertNotNull(certificateissuer2);
        assertNotNull(certificateissuer3);
        assertNotSame(certificateissuer2, certificateissuer1);
        assertNotSame(certificateissuer3, certificateissuer1);
        assertEquals(certificateissuer2, certificateissuer1);
        assertEquals(certificateissuer2, certificateissuer1);
        assertEquals(certificateissuer1, certificateissuer2);
        assertEquals(certificateissuer1, certificateissuer1);
        assertFalse(certificateissuer1.equals(null));
        assertNotEquals(certificateissuer3, certificateissuer1);
    }
}
