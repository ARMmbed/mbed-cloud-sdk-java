// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model CertificateIssuer.
 */
public class TestCertificateIssuer {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new java.util.Date(1546622511721L),
                                                                         "17a734ad-dba6-4386-8975-6a2a4150c963",
                                                                         "bed26b12-7518-473c-a2a4-ba778ab76f03", null,
                                                                         com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
                                                                         "7ef53bfb-daac-437a-9d93-78ba37359f32");
            CertificateIssuer certificateissuer2 = certificateissuer1.clone();
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new java.util.Date(1546622510883L),
                                                                         "13ecd0e8-6bba-4981-a4cc-e4b7368500cc",
                                                                         "8081dd84-0272-4d5b-a466-149e20ff49e8", null,
                                                                         com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
                                                                         "97f3da8e-b944-4ff8-837e-ca88a03f0da2");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new java.util.Date(1546622510883L),
                                                                         "13ecd0e8-6bba-4981-a4cc-e4b7368500cc",
                                                                         "8081dd84-0272-4d5b-a466-149e20ff49e8", null,
                                                                         com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
                                                                         "97f3da8e-b944-4ff8-837e-ca88a03f0da2");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2.hashCode(), certificateissuer1.hashCode());
            int hashCode = certificateissuer1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, certificateissuer1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        CertificateIssuer certificateissuer = new CertificateIssuer(new java.util.Date(1546622516831L),
                                                                    "31935666-8213-4e75-a58f-2244f1a20287",
                                                                    "a3b61102-89d5-4659-b2be-9427e10bc666", null,
                                                                    com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
                                                                    "14418ac9-0b05-4a62-8d43-8554a0a346bd");
        assertTrue(certificateissuer.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new java.util.Date(1546622514580L),
                                                                         "95d82a62-0d90-4724-8a0f-9d4c67fdfb8b",
                                                                         "b48f56e8-bdcf-4f67-a37e-133942f947e7", null,
                                                                         com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
                                                                         "a19f8a10-e628-4857-93b5-09eef76646b2");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new java.util.Date(1546622514580L),
                                                                         "95d82a62-0d90-4724-8a0f-9d4c67fdfb8b",
                                                                         "b48f56e8-bdcf-4f67-a37e-133942f947e7", null,
                                                                         com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
                                                                         "a19f8a10-e628-4857-93b5-09eef76646b2");
            CertificateIssuer certificateissuer3 = new CertificateIssuer(new java.util.Date(1546622508011L),
                                                                         "2caa455a-9363-4aa5-aba9-fc80db544ac1",
                                                                         "38f8aa03-56da-44b8-a0eb-22830dd16cd1", null,
                                                                         com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
                                                                         "6a5a0f27-bd93-43a1-bfe0-7eff40734606");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotNull(certificateissuer3);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertNotSame(certificateissuer3, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer1, certificateissuer2);
            assertEquals(certificateissuer1, certificateissuer1);
            assertFalse(certificateissuer1.equals(null));
            assertNotEquals(certificateissuer3, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
