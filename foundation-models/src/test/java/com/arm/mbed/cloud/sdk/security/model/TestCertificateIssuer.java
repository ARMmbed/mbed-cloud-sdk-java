// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model CertificateIssuer.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestCertificateIssuer {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1559560663913L),
                                                                         "c818dfa6-31ba-45d0-94eb-1d1730779102",
                                                                         "f152a12a-5c99-4855-a1fa-ad39330eee28", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "7ec82f63-3c0a-461a-a762-3dff56f82ab7");
            CertificateIssuer certificateissuer2 = certificateissuer1.clone();
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1559560668603L),
                                                                         "850d7c14-9366-4a6c-b7ff-186ac038ea08",
                                                                         "199af80c-f027-4e79-a871-9d4835b5ff67", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "41c42d84-72b7-417a-b68e-a68657d01a05");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new Date(1559560668603L),
                                                                         "850d7c14-9366-4a6c-b7ff-186ac038ea08",
                                                                         "199af80c-f027-4e79-a871-9d4835b5ff67", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "41c42d84-72b7-417a-b68e-a68657d01a05");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2.hashCode(), certificateissuer1.hashCode());
            int hashCode = certificateissuer1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, certificateissuer1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        CertificateIssuer certificateissuer = new CertificateIssuer(new Date(1559560664047L),
                                                                    "03e259bc-2bdb-436e-ade6-241d60760af5",
                                                                    "18f2cc52-a3ef-4a49-9326-0159a64e0dd0", null,
                                                                    CertificateIssuerType.getDefault(),
                                                                    "642d6d0c-1ff8-4274-85b6-0327372129d0");
        assertTrue(certificateissuer.isValid());
        CertificateIssuer certificateissuerInvalid = new CertificateIssuer(new Date(1559560665677L),
                                                                           "a121538c-2ee6-4893-9209-6c230f992d84457d31d0-98b5-4bc4-85cf-888c10e341f29b04e76a-d8f0-4e94-8191-a8f6813ba4ae",
                                                                           "2f0629eb-f7e6-4cab-b277-99f9b91ea85e", null,
                                                                           CertificateIssuerType.getDefault(), null);
        assertFalse(certificateissuerInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1559560669296L),
                                                                         "e897d8b0-7da0-42ad-ad4b-77fb62aa06bc",
                                                                         "01fdf5e1-4570-46e6-8c73-821b63367f46", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "6152139d-c97d-4796-af78-6a62748065ee");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new Date(1559560669296L),
                                                                         "e897d8b0-7da0-42ad-ad4b-77fb62aa06bc",
                                                                         "01fdf5e1-4570-46e6-8c73-821b63367f46", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "6152139d-c97d-4796-af78-6a62748065ee");
            CertificateIssuer certificateissuer3 = new CertificateIssuer(new Date(1559560666951L),
                                                                         "84c10695-1643-4b7f-a846-31c1f1d9658d",
                                                                         "d48d3c7c-3d75-4d5f-9f09-008651f4c02a", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "87ce4a05-ebb0-4ce4-9721-685dc6720061");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotNull(certificateissuer3);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertNotSame(certificateissuer3, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer1, certificateissuer2);
            assertEquals(certificateissuer1, certificateissuer1);
            assertFalse(certificateissuer1.equals(null));
            assertNotEquals(certificateissuer3, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
