// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model CertificateIssuer.
 */
public class TestCertificateIssuer {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1547573355445L),
                                                                         "ff69cb47-be5a-4180-897b-56b51dad297c",
                                                                         "8273b73e-59fb-445e-9a7c-d2c1ea57bf89", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "d566c1e6-160e-476f-878c-1d9976c6bb0d");
            CertificateIssuer certificateissuer2 = certificateissuer1.clone();
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1547573360696L),
                                                                         "3d410d1b-4bf9-4872-93e8-6ecc317e3275",
                                                                         "d7734477-a2b3-4bda-9a8a-95d9500320ed", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "b063d21d-4607-4d12-9ef7-837b2840db8e");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new Date(1547573360696L),
                                                                         "3d410d1b-4bf9-4872-93e8-6ecc317e3275",
                                                                         "d7734477-a2b3-4bda-9a8a-95d9500320ed", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "b063d21d-4607-4d12-9ef7-837b2840db8e");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2.hashCode(), certificateissuer1.hashCode());
            int hashCode = certificateissuer1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, certificateissuer1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        CertificateIssuer certificateissuer = new CertificateIssuer(new Date(1547573358568L),
                                                                    "9cfd6e9e-bc54-47b2-b6dc-c06e9ecf22e6",
                                                                    "be4e75e3-fd2d-4712-985d-fa34b0677cf1", null,
                                                                    CertificateIssuerType.getDefault(),
                                                                    "ec4c471c-97a6-45a1-95aa-67ad469cb9d0");
        assertTrue(certificateissuer.isValid());
        CertificateIssuer certificateissuerInvalid = new CertificateIssuer(new Date(1547573362335L),
                                                                           "1b4c3dea-7448-48e1-a329-74a50eeba717",
                                                                           "a1e79753-5b32-4c95-a846-777276a16615", null,
                                                                           CertificateIssuerType.getDefault(), null);
        assertFalse(certificateissuerInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1547573361759L),
                                                                         "2f4d45b0-e346-435d-a9fe-b19aa69341e8",
                                                                         "38b3e9bd-2650-4ab1-8e0e-93095f5074f8", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "1ff018d6-54e3-402e-bfdf-7ccda381be7f");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new Date(1547573361759L),
                                                                         "2f4d45b0-e346-435d-a9fe-b19aa69341e8",
                                                                         "38b3e9bd-2650-4ab1-8e0e-93095f5074f8", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "1ff018d6-54e3-402e-bfdf-7ccda381be7f");
            CertificateIssuer certificateissuer3 = new CertificateIssuer(new Date(1547573359329L),
                                                                         "8847d0b6-e89e-4a6b-87ce-7a982ce384ed",
                                                                         "d38c9c4e-6415-4b4f-a12d-7a55c8a6ad14", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "5371ce22-93b3-4eb8-9a28-3fdba956e852");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotNull(certificateissuer3);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertNotSame(certificateissuer3, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer1, certificateissuer2);
            assertEquals(certificateissuer1, certificateissuer1);
            assertFalse(certificateissuer1.equals(null));
            assertNotEquals(certificateissuer3, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
