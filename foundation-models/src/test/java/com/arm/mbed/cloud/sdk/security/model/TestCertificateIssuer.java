// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model CertificateIssuer.
 */
public class TestCertificateIssuer {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1547489764097L),
                                                                         "fa327c6e-635e-49cb-afa1-5fc0b42d6efa",
                                                                         "91592755-291a-490b-b139-d176275b9ec4", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "0b755ccd-dd2e-442c-b18c-124d4c4d642c");
            CertificateIssuer certificateissuer2 = certificateissuer1.clone();
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1547489770634L),
                                                                         "7f3c0bae-c7ea-4824-873b-6e75dfdee008",
                                                                         "32af7380-c1a0-4fa3-8b1a-762e5651b4da", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "6c9cb309-552c-4b99-80af-15dafa78897c");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new Date(1547489770634L),
                                                                         "7f3c0bae-c7ea-4824-873b-6e75dfdee008",
                                                                         "32af7380-c1a0-4fa3-8b1a-762e5651b4da", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "6c9cb309-552c-4b99-80af-15dafa78897c");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2.hashCode(), certificateissuer1.hashCode());
            int hashCode = certificateissuer1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, certificateissuer1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        CertificateIssuer certificateissuer = new CertificateIssuer(new Date(1547489769309L),
                                                                    "4b995e63-ef21-4e9b-a72f-858b068a0bf3",
                                                                    "0519218d-0ac1-46cf-bfcc-5a820fc8a2c0", null,
                                                                    CertificateIssuerType.getDefault(),
                                                                    "5110635f-35d5-4ba1-9aa8-70f8a5eecd1b");
        assertTrue(certificateissuer.isValid());
        CertificateIssuer certificateissuerInvalid = new CertificateIssuer(new Date(1547489764445L),
                                                                           "ebb9c770-658a-4c6c-83b2-7901532d4d66",
                                                                           "a1b7c4e1-1c89-484c-84d1-d5bb33608ea7", null,
                                                                           CertificateIssuerType.getDefault(), null);
        assertFalse(certificateissuerInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1547489763347L),
                                                                         "1e189d12-c2bc-48be-a699-4dc931838b02",
                                                                         "13d37b68-2133-4d7b-ace6-65f78c428871", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "2381b42f-32fc-4cfb-be60-7049bc830c76");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new Date(1547489763347L),
                                                                         "1e189d12-c2bc-48be-a699-4dc931838b02",
                                                                         "13d37b68-2133-4d7b-ace6-65f78c428871", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "2381b42f-32fc-4cfb-be60-7049bc830c76");
            CertificateIssuer certificateissuer3 = new CertificateIssuer(new Date(1547489771147L),
                                                                         "7ef14eda-e863-44fd-9c09-84f516648dbf",
                                                                         "542f68ac-225e-4fc0-8cb3-d96ac7a2815d", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "e6a5ea11-5fd1-4c3c-b4e8-c73121cc0963");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotNull(certificateissuer3);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertNotSame(certificateissuer3, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer1, certificateissuer2);
            assertEquals(certificateissuer1, certificateissuer1);
            assertFalse(certificateissuer1.equals(null));
            assertNotEquals(certificateissuer3, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
