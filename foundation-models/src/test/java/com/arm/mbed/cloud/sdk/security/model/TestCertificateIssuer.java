// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model CertificateIssuer.
 */
public class TestCertificateIssuer {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1548165440325L),
                                                                         "3a47dd2f-bf23-4b34-8d8f-8cee2cd562e7",
                                                                         "44de7cbf-e5c3-434a-9e7e-49a78502bfcf", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "effcd1ca-223e-4786-b491-4098aac97035");
            CertificateIssuer certificateissuer2 = certificateissuer1.clone();
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1548165441953L),
                                                                         "f24bdbe7-0eee-486e-bcd4-39760a6b0dd1",
                                                                         "7509643a-2ccf-402a-b500-38a5de64cb05", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "4c398632-7aa4-44bd-afe2-b283c7fe3cd8");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new Date(1548165441953L),
                                                                         "f24bdbe7-0eee-486e-bcd4-39760a6b0dd1",
                                                                         "7509643a-2ccf-402a-b500-38a5de64cb05", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "4c398632-7aa4-44bd-afe2-b283c7fe3cd8");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2.hashCode(), certificateissuer1.hashCode());
            int hashCode = certificateissuer1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, certificateissuer1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        CertificateIssuer certificateissuer = new CertificateIssuer(new Date(1548165439461L),
                                                                    "0400c2ba-d4f2-4f2e-b16a-c2f4a4721d00",
                                                                    "4947d3fa-c6af-4d9b-90c9-7ce7d22a3fdc", null,
                                                                    CertificateIssuerType.getDefault(),
                                                                    "cdc9f64b-24d2-497c-99cf-cbcb180aee7e");
        assertTrue(certificateissuer.isValid());
        CertificateIssuer certificateissuerInvalid = new CertificateIssuer(new Date(1548165439027L),
                                                                           "c238025c-2a18-4b36-b5c1-16b907cc6ef0",
                                                                           "f2aeaf3b-7483-4acc-9d30-7325eef0a59d", null,
                                                                           CertificateIssuerType.getDefault(), null);
        assertFalse(certificateissuerInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1548165441774L),
                                                                         "abe8e85a-5bbd-4785-82d5-0a660e1f0006",
                                                                         "a94678d3-06f7-4cca-bdb0-cd08050b7eff", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "c1d4cbb1-900f-486d-85f7-ffeb77d8be33");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new Date(1548165441774L),
                                                                         "abe8e85a-5bbd-4785-82d5-0a660e1f0006",
                                                                         "a94678d3-06f7-4cca-bdb0-cd08050b7eff", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "c1d4cbb1-900f-486d-85f7-ffeb77d8be33");
            CertificateIssuer certificateissuer3 = new CertificateIssuer(new Date(1548165447860L),
                                                                         "7b1887c1-030d-4a84-8f9a-a99472cbbfc6",
                                                                         "b31149bf-83b0-4dd7-bbe6-a9b1428bc828", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "82326658-49e7-4844-a4cc-dce1a5d1500e");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotNull(certificateissuer3);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertNotSame(certificateissuer3, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer1, certificateissuer2);
            assertEquals(certificateissuer1, certificateissuer1);
            assertFalse(certificateissuer1.equals(null));
            assertNotEquals(certificateissuer3, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
