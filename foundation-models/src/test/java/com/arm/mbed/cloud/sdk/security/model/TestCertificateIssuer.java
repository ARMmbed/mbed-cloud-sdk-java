// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model CertificateIssuer.
 */
public class TestCertificateIssuer {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        CertificateIssuer certificateissuer1 = new CertificateIssuer(new java.util.Date(1546003507560L),
                                                                     "d1d58672-12d9-4a74-87ee-f7c9ce63a73e",
                                                                     "707051b9-9d46-4e78-a5a3-2a385b7e76e5", null,
                                                                     com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
                                                                     "ecc8aa8c-ad48-4dd2-a069-19ea4e052dc7", false);
        CertificateIssuer certificateissuer2 = certificateissuer1.clone();
        assertNotNull(certificateissuer1);
        assertNotNull(certificateissuer2);
        assertNotSame(certificateissuer2, certificateissuer1);
        assertEquals(certificateissuer2, certificateissuer1);
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsvalid() {
        CertificateIssuer certificateissuer = new CertificateIssuer(new java.util.Date(1546003510880L),
                                                                    "d7e1b56b-2433-49e0-8474-a4438a1835e1",
                                                                    "85c59178-22ce-4081-a7a5-9b5a10fcc85a", null,
                                                                    com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
                                                                    "3453f560-7d0b-4d52-bd43-5e1437de5da4", true);
        assertTrue(certificateissuer.isValid());
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashcode() {
        CertificateIssuer certificateissuer1 = new CertificateIssuer(new java.util.Date(1546003513361L),
                                                                     "953fcc80-4fda-48b8-b6bc-3844a40f4865",
                                                                     "ef3b548c-ab41-4bc8-adc4-f8562083f2a1", null,
                                                                     com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
                                                                     "a085d414-3acf-4461-9204-4bc83ac212bf", false);
        CertificateIssuer certificateissuer2 = new CertificateIssuer(new java.util.Date(1546003513361L),
                                                                     "953fcc80-4fda-48b8-b6bc-3844a40f4865",
                                                                     "ef3b548c-ab41-4bc8-adc4-f8562083f2a1", null,
                                                                     com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
                                                                     "a085d414-3acf-4461-9204-4bc83ac212bf", false);
        assertNotNull(certificateissuer1);
        assertNotNull(certificateissuer2);
        assertNotSame(certificateissuer2, certificateissuer1);
        assertEquals(certificateissuer2, certificateissuer1);
        assertEquals(certificateissuer2.hashCode(), certificateissuer1.hashCode());
        int hashCode = certificateissuer1.hashCode();
        for (int i = 0; i < 5; i++) {
            assertEquals(hashCode, certificateissuer1.hashCode());
        }
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        CertificateIssuer certificateissuer1 = new CertificateIssuer(new java.util.Date(1546003510844L),
                                                                     "232b367e-38e7-49df-853a-453cec7d6bb8",
                                                                     "c58e94f3-596c-42db-a9a5-6be059ea3adf", null,
                                                                     com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
                                                                     "346e73a4-9156-48bf-8b38-16a22f8c130c", true);
        CertificateIssuer certificateissuer2 = new CertificateIssuer(new java.util.Date(1546003510844L),
                                                                     "232b367e-38e7-49df-853a-453cec7d6bb8",
                                                                     "c58e94f3-596c-42db-a9a5-6be059ea3adf", null,
                                                                     com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
                                                                     "346e73a4-9156-48bf-8b38-16a22f8c130c", true);
        CertificateIssuer certificateissuer3 = new CertificateIssuer(new java.util.Date(1546003509337L),
                                                                     "c934267a-5d9a-451a-a139-d34baaf5bd7d",
                                                                     "a7f6ad37-a24e-431a-8493-7c9714c6493b", null,
                                                                     com.arm.mbed.cloud.sdk.security.model.CertificateIssuerIssuerType.getDefault(),
                                                                     "1f78498a-8d42-4330-bc00-1a9dba43ed74", false);
        assertNotNull(certificateissuer1);
        assertNotNull(certificateissuer2);
        assertNotNull(certificateissuer3);
        assertNotSame(certificateissuer2, certificateissuer1);
        assertNotSame(certificateissuer3, certificateissuer1);
        assertEquals(certificateissuer2, certificateissuer1);
        assertEquals(certificateissuer2, certificateissuer1);
        assertEquals(certificateissuer1, certificateissuer2);
        assertEquals(certificateissuer1, certificateissuer1);
        assertFalse(certificateissuer1.equals(null));
        assertNotEquals(certificateissuer3, certificateissuer1);
    }
}
