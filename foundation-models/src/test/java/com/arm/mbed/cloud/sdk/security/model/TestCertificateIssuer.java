// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model CertificateIssuer.
 */
public class TestCertificateIssuer {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1547159625189L),
                                                                         "9484783c-bf44-45fa-9fdd-3b8b5bd86ae8",
                                                                         "b77b8584-869f-4811-afc9-3c59f85284c1", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "ab55996d-6e7d-4487-8053-548708cb58aa");
            CertificateIssuer certificateissuer2 = certificateissuer1.clone();
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1547159627066L),
                                                                         "e4d21d74-56d4-450b-99fd-b405b6ddd0d3",
                                                                         "42999883-0d95-414e-a33d-470e207f1561", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "c66836e9-6df1-4435-896f-188ae59229b8");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new Date(1547159627066L),
                                                                         "e4d21d74-56d4-450b-99fd-b405b6ddd0d3",
                                                                         "42999883-0d95-414e-a33d-470e207f1561", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "c66836e9-6df1-4435-896f-188ae59229b8");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2.hashCode(), certificateissuer1.hashCode());
            int hashCode = certificateissuer1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, certificateissuer1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        CertificateIssuer certificateissuer = new CertificateIssuer(new Date(1547159621172L),
                                                                    "83ff3c6c-dafb-4f29-9b66-522dd0839c77",
                                                                    "5ee2df5e-61f6-4608-8b30-97c2572709b7", null,
                                                                    CertificateIssuerType.getDefault(),
                                                                    "f7ebbd80-0438-4b5f-bad0-9192fee51110");
        assertTrue(certificateissuer.isValid());
        CertificateIssuer certificateissuerInvalid = new CertificateIssuer(new Date(1547159627735L),
                                                                           "9187439c-f0e8-42e4-8484-a0e5626fc9cc", null,
                                                                           null, CertificateIssuerType.getDefault(),
                                                                           null);
        assertFalse(certificateissuerInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1547159627528L),
                                                                         "1121b464-187a-48fe-b618-37924c4a8dec",
                                                                         "4b214a0c-9d10-40f1-87a2-8d21ed124362", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "b4cc4349-fbe0-4332-9744-ad1c88b3c4f4");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new Date(1547159627528L),
                                                                         "1121b464-187a-48fe-b618-37924c4a8dec",
                                                                         "4b214a0c-9d10-40f1-87a2-8d21ed124362", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "b4cc4349-fbe0-4332-9744-ad1c88b3c4f4");
            CertificateIssuer certificateissuer3 = new CertificateIssuer(new Date(1547159629463L),
                                                                         "4fe711ab-d5b8-44a4-8617-c5283044e77b",
                                                                         "0e962b96-5d74-4317-a6a7-84aebfa53dd2", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "3957e354-6af0-4b8b-a21e-c54b169acfd6");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotNull(certificateissuer3);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertNotSame(certificateissuer3, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer1, certificateissuer2);
            assertEquals(certificateissuer1, certificateissuer1);
            assertFalse(certificateissuer1.equals(null));
            assertNotEquals(certificateissuer3, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
