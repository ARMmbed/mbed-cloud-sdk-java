// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model CertificateIssuer.
 */
public class TestCertificateIssuer {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1547225897480L),
                                                                         "84633ad9-c003-4118-8a55-0a355f9c6f1b",
                                                                         "ee09701c-1f70-4279-8de6-0dae55ead66e", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "525c5fea-2f97-449b-b079-f8371e91f4b3");
            CertificateIssuer certificateissuer2 = certificateissuer1.clone();
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1547225899889L),
                                                                         "0c543503-a330-4dbd-ab77-766328899c17",
                                                                         "9e1529c0-4096-41a3-a7a9-43b3f0f50100", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "cca3a423-5b1b-4d95-8c2c-fc1b40b85b53");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new Date(1547225899889L),
                                                                         "0c543503-a330-4dbd-ab77-766328899c17",
                                                                         "9e1529c0-4096-41a3-a7a9-43b3f0f50100", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "cca3a423-5b1b-4d95-8c2c-fc1b40b85b53");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2.hashCode(), certificateissuer1.hashCode());
            int hashCode = certificateissuer1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, certificateissuer1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        CertificateIssuer certificateissuer = new CertificateIssuer(new Date(1547225895076L),
                                                                    "8f7bd816-62ed-4f02-bed4-cbb5921c7aa3",
                                                                    "011e08b6-81e9-4b91-869f-f73b8069a30e", null,
                                                                    CertificateIssuerType.getDefault(),
                                                                    "73296ed9-85e3-4bab-909a-4f6738f50857");
        assertTrue(certificateissuer.isValid());
        CertificateIssuer certificateissuerInvalid = new CertificateIssuer(new Date(1547225894726L),
                                                                           "2013c3a9-c28b-4715-9950-a12f15240b4b",
                                                                           "1c5fa3ac-fc7a-41fd-919c-f9fd076e9aac", null,
                                                                           CertificateIssuerType.getDefault(), null);
        assertFalse(certificateissuerInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1547225895590L),
                                                                         "f907a14c-598a-4ff2-a827-5c64bc62825b",
                                                                         "c1243ef5-92ff-456b-bd08-1c8ce6d1caa4", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "31775160-b99a-474a-b7be-85c7c5783a17");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new Date(1547225895590L),
                                                                         "f907a14c-598a-4ff2-a827-5c64bc62825b",
                                                                         "c1243ef5-92ff-456b-bd08-1c8ce6d1caa4", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "31775160-b99a-474a-b7be-85c7c5783a17");
            CertificateIssuer certificateissuer3 = new CertificateIssuer(new Date(1547225900974L),
                                                                         "4107f4e5-af42-4f99-80e7-744e6d511cfc",
                                                                         "f9cbdbb5-2655-4a47-b9ca-f0c8a793f84c", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "ba9a58e6-bcac-4bd7-9be0-296329b10ae1");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotNull(certificateissuer3);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertNotSame(certificateissuer3, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer1, certificateissuer2);
            assertEquals(certificateissuer1, certificateissuer1);
            assertFalse(certificateissuer1.equals(null));
            assertNotEquals(certificateissuer3, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
