// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model CertificateIssuer.
 */
public class TestCertificateIssuer {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1551867948800L),
                                                                         "4b7b1294-5afc-4d78-a056-a5514e1998db",
                                                                         "e7298871-f85a-4cfd-93bd-ce00df824d56", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "616b6c4f-72d7-4852-a7a9-7489f4b97e66");
            CertificateIssuer certificateissuer2 = certificateissuer1.clone();
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1551867947334L),
                                                                         "ecd43fe3-ffc9-40e1-971f-81dbb2412267",
                                                                         "ec26ee7a-651a-4941-902f-5348f9923b4f", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "a25be109-3495-4077-825c-dbc39ac3ba2a");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new Date(1551867947334L),
                                                                         "ecd43fe3-ffc9-40e1-971f-81dbb2412267",
                                                                         "ec26ee7a-651a-4941-902f-5348f9923b4f", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "a25be109-3495-4077-825c-dbc39ac3ba2a");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2.hashCode(), certificateissuer1.hashCode());
            int hashCode = certificateissuer1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, certificateissuer1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        CertificateIssuer certificateissuer = new CertificateIssuer(new Date(1551867944739L),
                                                                    "6e4d0226-7889-4592-9b70-4613c306448a",
                                                                    "18f4cb1e-1708-4c28-8bb0-6368c66ade9e", null,
                                                                    CertificateIssuerType.getDefault(),
                                                                    "5941b584-49c7-4c90-9b72-9c5d28a26d4c");
        assertTrue(certificateissuer.isValid());
        CertificateIssuer certificateissuerInvalid = new CertificateIssuer(new Date(1551867949241L),
                                                                           "8f932d58-1463-4368-abc2-ac37035e5c8a",
                                                                           "da28f689-560b-4c6f-b07b-a4ecd5f93e40", null,
                                                                           CertificateIssuerType.getDefault(), null);
        assertFalse(certificateissuerInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1551867948279L),
                                                                         "4f2f2bfd-b67c-49b3-bc24-b94d2222abc1",
                                                                         "677633ec-fa13-4d32-aa84-5ccfc9a02596", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "b09fc1d9-806c-46b1-9f73-d401fc279542");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new Date(1551867948279L),
                                                                         "4f2f2bfd-b67c-49b3-bc24-b94d2222abc1",
                                                                         "677633ec-fa13-4d32-aa84-5ccfc9a02596", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "b09fc1d9-806c-46b1-9f73-d401fc279542");
            CertificateIssuer certificateissuer3 = new CertificateIssuer(new Date(1551867947490L),
                                                                         "cca69678-cf57-4d53-82d5-96858ca19b88",
                                                                         "7a7b5e63-5056-4874-ac5b-3387dfef965d", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "9794c9f3-ff89-49f4-ad47-672985d9c5e8");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotNull(certificateissuer3);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertNotSame(certificateissuer3, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer1, certificateissuer2);
            assertEquals(certificateissuer1, certificateissuer1);
            assertFalse(certificateissuer1.equals(null));
            assertNotEquals(certificateissuer3, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
