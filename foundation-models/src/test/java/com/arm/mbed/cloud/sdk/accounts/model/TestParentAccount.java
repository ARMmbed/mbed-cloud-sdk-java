// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("4408d.9b902@6e968.me",
                                                             "84bfb32a-bf41-4749-8b1c-f60768493fc3",
                                                             "f7f9edc2df1fd9afea87465e2109cb51");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("e58d4.cad46@c2567.me",
                                                             "f68652ea-0d78-4a71-9b47-354f6db3788c",
                                                             "f7f9edc2df1fd9afea87465e2109cb51");
            ParentAccount parentaccount2 = new ParentAccount("e58d4.cad46@c2567.me",
                                                             "f68652ea-0d78-4a71-9b47-354f6db3788c",
                                                             "f7f9edc2df1fd9afea87465e2109cb51");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("a493a.10cd2@8a9ae.fr", "3e2dad15-8e77-49b3-a0ad-e8156d534d8f",
                                                        "f7f9edc2df1fd9afea87465e2109cb51");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount(">ë‹¸ã§¥Ä›)\u0019#é?€Ì˜ë¦‹/é›ª8í†©æ™ƒ!é’ é° \u0013é?´é˜¹ì™¢é©¤î¥³à¼™Ò¨\u001dï»¥ï¶·ì°¿ê©ˆè®ŸèŠ¢>ì•²çž?!\u0000ìšŠ\u0007êŒ†ï¥ ï‰³íŠªæ„žé—ž\u001cé™¦ï“¨\u0000í‘Ÿà«‡é¯°é›¹>ï£°é©Ÿæ–žì´¶ë¾¨\u0019\u0000\u0000\u001a",
                                                               "2f61fede-cb3e-420a-a868-a0ee4ea5d19858a2bbae-5b63-4605-a5a1-69620d9829a8c09229d8-43d0-48a3-83d6-485d20889136",
                                                               "ä»‚+K\u001aé¦¥ëŸ‡\u00103\bá­?L33.3C\u0000\u000e\u001bQ3Uç¨£3ä¯³CS\u0016Mï‹˜\fë¼™Q'3A.ï»¸Y3ã¯²\u0001[3 ì“¶333333J3æ¸—éºƒÊ£)\u00153ì?¼ä…Žà«”3");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("c372f.7137b@a47d2.me",
                                                             "fa4b2d0e-4ffa-4694-ac19-1da93dffd431",
                                                             "f7f9edc2df1fd9afea87465e2109cb51");
            ParentAccount parentaccount2 = new ParentAccount("c372f.7137b@a47d2.me",
                                                             "fa4b2d0e-4ffa-4694-ac19-1da93dffd431",
                                                             "f7f9edc2df1fd9afea87465e2109cb51");
            ParentAccount parentaccount3 = new ParentAccount("77cdf.ac51a@8383e.me",
                                                             "085c06b0-4383-42c9-9d02-36f2e4b67329",
                                                             "f7f9edc2df1fd9afea87465e2109cb51");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
