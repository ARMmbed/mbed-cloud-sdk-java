// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("f9d29.eaf61@2636c.me",
                                                             "34277bb6-d719-4975-a0e7-bd088ddbd587",
                                                             "3bfc9cdfe313bbd7bcb627c7a4f35e1e");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("fed29.4944c@55b5b.me",
                                                             "24e0c6be-00e2-4a1b-b2b3-aa8e507b8d6b",
                                                             "3bfc9cdfe313bbd7bcb627c7a4f35e1e");
            ParentAccount parentaccount2 = new ParentAccount("fed29.4944c@55b5b.me",
                                                             "24e0c6be-00e2-4a1b-b2b3-aa8e507b8d6b",
                                                             "3bfc9cdfe313bbd7bcb627c7a4f35e1e");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("2d8d0.f020f@cf032.me", "f8251755-f1c3-4f59-9bc0-51556a63b6b5",
                                                        "3bfc9cdfe313bbd7bcb627c7a4f35e1e");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("%\u001fï£’é?œâ¾’ì½ºï®‘ï?‰(âž?ã¨†ì¿Šî–³ä…‚×†é·–\u0018ç?µï·?\u001cí’ºî”šé£¤?ã£ªíš—ã‹€â¿†ï†›î»¼å¥Š\u0018ïŽ¹\u001cî·™ç¶Œ*\u001eî¢–ïšƒï·´#>ë«³?ï¸ î†?>ïºªí—§î¯žã¸¼ï±¤ì¸¹ä–?èš?äŸ¾\u001aá€¬ã³¬ï¿•ç¤°+â?³",
                                                               "d2f0de90-44bb-46f3-80a9-fd637d8786b9b0669d0c-4096-4839-97c7-46ca6b66ba2ab95d363b-5c40-4877-8b78-f0b05954f6d6",
                                                               "\u0012&æ…†\t`ì½µîˆ¶888^8á®§M\u0003K\u00108\\\\\u000eè°–8P&8)$$8L;8ã³ªî?¥î¸š\u0011L8âšŠ\u000f\u0014ê?¨88YKKéŽ¨F\u0013^Ú¥8ë¦?!\u001008FZèŸ›ë‚œ8^E");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("f901d.471e0@4c200.fr",
                                                             "339a2c14-491d-4555-b15f-d2e41c960722",
                                                             "3bfc9cdfe313bbd7bcb627c7a4f35e1e");
            ParentAccount parentaccount2 = new ParentAccount("f901d.471e0@4c200.fr",
                                                             "339a2c14-491d-4555-b15f-d2e41c960722",
                                                             "3bfc9cdfe313bbd7bcb627c7a4f35e1e");
            ParentAccount parentaccount3 = new ParentAccount("45b32.0842b@75939.fr",
                                                             "53526e80-99c7-4501-a0ae-7d6ab2bdc30b",
                                                             "3bfc9cdfe313bbd7bcb627c7a4f35e1e");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
