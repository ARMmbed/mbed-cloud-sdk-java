// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("f18da.75d18@5d5f0.fr",
                                                             "fa8b5705-a639-40ee-ad39-6bd01163b0df",
                                                             "afbdeea60718ef43acbc07ccc8d8b7ff");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("b24d0.c9aec@164f3.me",
                                                             "0e55da92-3ca0-4f75-946f-0fdb16baf9a4",
                                                             "afbdeea60718ef43acbc07ccc8d8b7ff");
            ParentAccount parentaccount2 = new ParentAccount("b24d0.c9aec@164f3.me",
                                                             "0e55da92-3ca0-4f75-946f-0fdb16baf9a4",
                                                             "afbdeea60718ef43acbc07ccc8d8b7ff");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("228c2.08680@bc7f3.me", "2851fbec-c630-4df6-b4cd-e9399531dd33",
                                                        "afbdeea60718ef43acbc07ccc8d8b7ff");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("âŽ…0?á£¨à¤¾î©¬áª†æ¥‡ë ¤>è’ƒä’“à·­\u001dîŸƒæ?¬-ç¤Ÿá•¼å‚°7ç‚™ë©¸>ä‚¤>ê‘¼ä•?>4è˜¼ë„Œî??\u0017î¶€?ë–«ç–¥4>?,èž?\u0002ãˆ¼ä©‹ïµ´>;>9è¸Œå¹‰\u0015çŠ¾ì´´9î• ç˜Šï»¥\u0013>î¿™>",
                                                               "b474515b-0c43-48b2-b16d-c766a277893417cf5cc5-81b1-4ef3-afb3-ea1112af391b12be4092-d43d-41ee-ac3e-4fb91975cd55",
                                                               "2FXì¯†52\u0007R5ë™£\u0000ï´µ2552Séº“åŠ¼ä—´22/æ±µî«¾5î?º25!ë?©5,2\b22\u000725%î¤ 2`è‹…5\u001a)ê–Ÿ2B2\u0013îŸª52ì¦?5\u001c)\u0013");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("b96f4.d9800@ddb0c.me",
                                                             "1850f1a3-abd9-4e77-a4b7-0044328abd0d",
                                                             "afbdeea60718ef43acbc07ccc8d8b7ff");
            ParentAccount parentaccount2 = new ParentAccount("b96f4.d9800@ddb0c.me",
                                                             "1850f1a3-abd9-4e77-a4b7-0044328abd0d",
                                                             "afbdeea60718ef43acbc07ccc8d8b7ff");
            ParentAccount parentaccount3 = new ParentAccount("87957.58087@2192c.me",
                                                             "98f86d19-12d7-4254-8f2c-6d4d425b83bf",
                                                             "afbdeea60718ef43acbc07ccc8d8b7ff");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
