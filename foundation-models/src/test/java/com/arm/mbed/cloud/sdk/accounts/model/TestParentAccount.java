// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("8b74c.d5780@a9172.me",
                                                             "fb4f99e5-c834-4d79-872e-d253ce620d8a",
                                                             "c26ebd108cbc6d2e0e403ca038b7faa6");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("9c5e7.f8a91@9d4e8.me",
                                                             "d4aa362f-c53c-43e7-b498-9b0482191d2c",
                                                             "c26ebd108cbc6d2e0e403ca038b7faa6");
            ParentAccount parentaccount2 = new ParentAccount("9c5e7.f8a91@9d4e8.me",
                                                             "d4aa362f-c53c-43e7-b498-9b0482191d2c",
                                                             "c26ebd108cbc6d2e0e403ca038b7faa6");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("b2732.8d41e@66709.me", "58a655db-8a35-493d-a656-a5bb4a752d95",
                                                        "c26ebd108cbc6d2e0e403ca038b7faa6");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("âŠ™á‹¾â£»ê°ˆé©¯êœŠì°‡1ê†±î°„\u0001è˜?ã¸®\u0005å¬œ>ì’¢â²‰>á”¼å‰’\u0007ê«¼í…©ç£–é¾?á´˜å¾³\u001dîž?ê†?ëˆ¬êª½,á•©â®ˆlì„†êƒ¥?ê½“ë‡œèº‘î¾‚/â?®â²®\bç€‚â¹ªâ”²à¢ƒ\u001eï„ªì?”à¸»áŠªç¹—ä‚¬á…²Õµ",
                                                               "97d239ab-1024-47e0-921c-05dcd2043e979be0d050-f662-4ad0-8b4a-56c6929d134dac9fe4c1-1d08-486c-b932-13b1e06f1599",
                                                               "5â¬³U\u0013\u0005PJä›¹â©ŽGWWë˜‚)ì“µ55?\u0012'ì¶Œ55\u0018ÏŸPä™˜ç¤¹)5\u0000Z?\bã·?\u0007>5ë¾¹á˜„\u001b\u001c555G5î—Š,ä“¯ç¶´Xï€œ\f5H×¤ê‰±]\u000eAè“œ");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("87ce6.45f4d@14ddf.me",
                                                             "1343b54b-bb60-4c36-a50d-58ce311b13c3",
                                                             "c26ebd108cbc6d2e0e403ca038b7faa6");
            ParentAccount parentaccount2 = new ParentAccount("87ce6.45f4d@14ddf.me",
                                                             "1343b54b-bb60-4c36-a50d-58ce311b13c3",
                                                             "c26ebd108cbc6d2e0e403ca038b7faa6");
            ParentAccount parentaccount3 = new ParentAccount("e74e3.a499e@ffae3.me",
                                                             "cfe6ea01-db6f-446b-bf97-a1efbfe301ed",
                                                             "c26ebd108cbc6d2e0e403ca038b7faa6");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
