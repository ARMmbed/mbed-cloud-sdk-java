// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("f41da.54e10@1712d.me",
                                                             "b21dcadb-3ce3-4a1e-9ab8-be2a19d04ba4",
                                                             "8f790df8b03da9b1dd914e7ecab2ad3f");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("6761d.dca75@42874.fr",
                                                             "14d42482-f7f2-4b5c-95f0-ce6ab7c467cf",
                                                             "8f790df8b03da9b1dd914e7ecab2ad3f");
            ParentAccount parentaccount2 = new ParentAccount("6761d.dca75@42874.fr",
                                                             "14d42482-f7f2-4b5c-95f0-ce6ab7c467cf",
                                                             "8f790df8b03da9b1dd914e7ecab2ad3f");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("66d28.cdfb3@00f3a.me", "05ae1423-665e-4a4c-b7fe-4c0ddd5ee77a",
                                                        "8f790df8b03da9b1dd914e7ecab2ad3f");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("åˆ?ï ƒ9-â±’\u0002â’”>?å³Šã›ªã?Ÿî…?ä½™í?­á­§ä—½ï¥†?î®¾ë£?à±ƒæ……?ï‘ºã¤‹ã?¸ï¢Šà³Žã?ƒï¬†â¿¤à»¶ïš?ï»¬ã‡Šë?¨\u0003â¾?ì‘¼ïºž>å½?î¾œè¹¿Å²é¶­>ïª¦ã¤¢ïª”ï¥Šã¥©éž·ï¨·å‹°?#ìŠ¹Ø£í” í‡Œ\u001bê¸?",
                                                               "08c94ffc-e7ca-4254-88b6-282aa4536a1d2a7f0d32-a7f4-4102-8cff-25583ac8ee42fd3bf872-2908-4c3b-b2ac-d0dd1f44a1e5",
                                                               "/\u000eä‹¯65\u000eä¯¯\u0005<å¸ˆ66'\u0016)á¾‰5çˆ€ç–¸\u0019äš–\u001e6èµ«65\u0014%\b\u0005ä?ª-\u001e5\u0011V\\\\ë?ž5îšŠ55\u0012\u0012]#56Xè¤³WO?5\b\u001båƒ¤\u000e6\u0007Vå†Œç²¸X");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("e9297.27dd9@94802.fr",
                                                             "49d4f485-2e18-4de0-b03a-2c8b1cbf825a",
                                                             "8f790df8b03da9b1dd914e7ecab2ad3f");
            ParentAccount parentaccount2 = new ParentAccount("e9297.27dd9@94802.fr",
                                                             "49d4f485-2e18-4de0-b03a-2c8b1cbf825a",
                                                             "8f790df8b03da9b1dd914e7ecab2ad3f");
            ParentAccount parentaccount3 = new ParentAccount("8c578.790bf@1dfef.me",
                                                             "02a0b6d1-72ac-470d-917c-5e95963566ca",
                                                             "8f790df8b03da9b1dd914e7ecab2ad3f");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
