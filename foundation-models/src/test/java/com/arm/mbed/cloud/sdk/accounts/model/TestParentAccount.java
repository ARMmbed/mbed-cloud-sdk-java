// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("73532.bb81f@9ca0b.me",
                                                             "26ed5fe0-b0dc-4ea0-a8a1-1bfd460508a2",
                                                             "acc8cb178a5cea59a0ac26cbc2e1911d");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("2f070.d97c9@4390d.me",
                                                             "a29fc1c1-af88-4ebc-970d-cf964cd2f98c",
                                                             "acc8cb178a5cea59a0ac26cbc2e1911d");
            ParentAccount parentaccount2 = new ParentAccount("2f070.d97c9@4390d.me",
                                                             "a29fc1c1-af88-4ebc-970d-cf964cd2f98c",
                                                             "acc8cb178a5cea59a0ac26cbc2e1911d");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("fc919.94227@5842f.fr", "6008b0ac-fc2f-49d9-a671-c053136be048",
                                                        "acc8cb178a5cea59a0ac26cbc2e1911d");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("âš¤\u001e>â›¤â››å»³æ¸ª2é¯˜é°†/\bå«µá¬»éµ¡á­€é«€\u0019ï½”á­”åµ¹\u0017à½¢ä¸¤ çº¥>å¨«/ë¥¢ã­°çƒ?á’?ã¶¡ç„´ë£¥å¾¿ï®®æ•²áš‹0ã©¸\u0014á¾­æˆ¤\u0006âŸŠé™˜á½Ÿ9èº»á­•(â•?å²‰/ê?¤á?ªï¸žéº¡>>à´º>",
                                                               "d60b6419-d160-4c32-bb9b-5db9f032e85be556cf03-ad50-4516-9534-abdf04042bc5aded1252-5468-4983-8b56-b4807563578e",
                                                               "î®·4 4ä£›4\f4O434è†—Aè†¶3æ?µâ ¿3VB+3\u0011íœˆ/æ—º)4ï¾¾)4K?î‡‚\u0014*Ná½¯>ã™¥Mæ«‰à¤»U4>P3\\\\é²„íž°44'33æ¢°\u0017í•­T]E");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("4d995.ba69d@77ea7.me",
                                                             "1e15ece6-7359-4808-a795-4a8a3d3aee06",
                                                             "acc8cb178a5cea59a0ac26cbc2e1911d");
            ParentAccount parentaccount2 = new ParentAccount("4d995.ba69d@77ea7.me",
                                                             "1e15ece6-7359-4808-a795-4a8a3d3aee06",
                                                             "acc8cb178a5cea59a0ac26cbc2e1911d");
            ParentAccount parentaccount3 = new ParentAccount("27b88.8ce61@7f661.fr",
                                                             "49922dbd-48f6-4e0a-b648-5cae98348cf3",
                                                             "acc8cb178a5cea59a0ac26cbc2e1911d");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
