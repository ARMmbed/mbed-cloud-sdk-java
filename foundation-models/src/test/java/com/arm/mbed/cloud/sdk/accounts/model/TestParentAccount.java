// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("e1401.ffeaf@0a442.fr",
                                                             "3792c561-2bc9-4b2a-aaa3-c76b0ed35548",
                                                             "71fdba82137d3d88b328e27f0b30ef6d");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("df653.28650@8c3aa.fr",
                                                             "9e32fad0-1d4a-4e32-ac05-a75cd79b6f66",
                                                             "71fdba82137d3d88b328e27f0b30ef6d");
            ParentAccount parentaccount2 = new ParentAccount("df653.28650@8c3aa.fr",
                                                             "9e32fad0-1d4a-4e32-ac05-a75cd79b6f66",
                                                             "71fdba82137d3d88b328e27f0b30ef6d");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("20f74.2e218@59337.fr", "683c7647-76ab-4a38-a15a-828c6394b892",
                                                        "71fdba82137d3d88b328e27f0b30ef6d");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount(">æ‹¸\u0018ï»•<ï¦¤Ë•Å¥á­¦Ë¾1>ê¸€>ã¿“)/ê¸€ï¹€æ©µè½žé„ˆ#ê€Š\u0017à¹?\u000eå¤½Ë?ã‘ŽÍ?ìœ›;é”š<ï°»é¬?8á—œê·‰>ä›µä…¥ê·¬å‹¨â?£88ê‡Šç°¿çˆ¹Ù¢íƒ©ã²§>é­™ï¨?ï®šï‰–\u0018>áœ?\u0018",
                                                               "b9113bdf-5d4c-403c-a050-8af2b844c013067cd168-abd6-412e-9f17-4cb5209acad709fc57ca-68d5-4ae5-9a38-b5444123c729",
                                                               ";\u000b\u0007å±¨&\u0007H_c5Y\u0005íˆµ44ã—‘\u00165cc)4câˆ³ë…”cc4\u000fë‰¢4ížš54æ£ž4cë€‡c\bcà¦Œ5í?¾?F\táŒ·Tcï‚›céŽ»ëŒ®\u0013$$c:c\u0017F-îŒ¯\u0018");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("3840e.30c80@50560.fr",
                                                             "331d37ad-cd6b-4a13-932b-7d1124aff109",
                                                             "71fdba82137d3d88b328e27f0b30ef6d");
            ParentAccount parentaccount2 = new ParentAccount("3840e.30c80@50560.fr",
                                                             "331d37ad-cd6b-4a13-932b-7d1124aff109",
                                                             "71fdba82137d3d88b328e27f0b30ef6d");
            ParentAccount parentaccount3 = new ParentAccount("dd50c.622aa@7e5db.fr",
                                                             "3f221ec8-ad54-44a8-9d41-be9c7e0ee94d",
                                                             "71fdba82137d3d88b328e27f0b30ef6d");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
