// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("f4b4d.2a056@ef250.me",
                                                             "5dc39d07-7df5-4897-8da4-b2c7acf98cff",
                                                             "360efa29edf1702da7045dd46bf2c0ee");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("f63a8.37684@988d9.fr",
                                                             "5f9147b4-f7a4-4204-ac11-cc18ae4f488e",
                                                             "360efa29edf1702da7045dd46bf2c0ee");
            ParentAccount parentaccount2 = new ParentAccount("f63a8.37684@988d9.fr",
                                                             "5f9147b4-f7a4-4204-ac11-cc18ae4f488e",
                                                             "360efa29edf1702da7045dd46bf2c0ee");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("97d4e.7a39f@cf279.me", "65a7e0fa-11cf-428f-9365-e0f7570056b3",
                                                        "360efa29edf1702da7045dd46bf2c0ee");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("1ë¤˜Îƒìšµî?‘>ê»½ì›‚6> # \u0002à¬µë‹¶ë­–ä‰§ëº§%\u0015\u0006\u0015à±¾î?¬\u000eï®·\u000eê–?\u001c\u0015àª¥æº®è›’\u0003>ï±†ä›“ï¥¬èž”âŸ¡ëµ­?ë¦Ÿ\u0019>ë¿º\u0012\u0007Ò†\u0015\u0018æº±\u001céƒŸ?1\u0015>\u0015î…¼\u001a\u001e\u001b",
                                                               "44c742d5-3a69-4cd3-811a-ea2550ac43908f07ece0-e23c-4479-b45f-231970bfe7ca69a36611-8682-46d0-95ad-7beede58a2ef",
                                                               "TU8ã½…\u0019ZDDâ¬?ê²…8êˆ›è½?*8ç¾‚_\u000e\t\u0013W8Tí‘¼åµ…,\u0001. 8ê?¢8è¡¾\u0001é†€ 8î¢˜\u001bç¶’Sç‚¤ê·ˆ\bëŸ¬\u0011L8\u0010K?î¶¥8ï‚•è‰­ë§¦\u000eG*êµ­8Q8");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("904a5.e7d08@f23c0.fr",
                                                             "8e2ed5e7-9c07-4bce-a09f-3a8799ae4690",
                                                             "360efa29edf1702da7045dd46bf2c0ee");
            ParentAccount parentaccount2 = new ParentAccount("904a5.e7d08@f23c0.fr",
                                                             "8e2ed5e7-9c07-4bce-a09f-3a8799ae4690",
                                                             "360efa29edf1702da7045dd46bf2c0ee");
            ParentAccount parentaccount3 = new ParentAccount("5e4c4.68918@bc798.fr",
                                                             "45573914-7cce-497c-9bd4-61fcd8ae88e0",
                                                             "360efa29edf1702da7045dd46bf2c0ee");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
