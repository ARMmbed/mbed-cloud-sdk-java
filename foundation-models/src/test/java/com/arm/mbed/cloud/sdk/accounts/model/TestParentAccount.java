// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("2a8cc.03e62@a632c.me",
                                                             "c607f8d1-a130-4c97-bb7b-8a3a20df21b4",
                                                             "acbf655bdeac77c770ad4964fcb1f81f");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("8a3fb.8a4ed@ebd55.me",
                                                             "99822720-d3e0-4bd9-9271-9cd0bc0795b7",
                                                             "acbf655bdeac77c770ad4964fcb1f81f");
            ParentAccount parentaccount2 = new ParentAccount("8a3fb.8a4ed@ebd55.me",
                                                             "99822720-d3e0-4bd9-9271-9cd0bc0795b7",
                                                             "acbf655bdeac77c770ad4964fcb1f81f");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("3fab7.ca9be@da7f8.me", "df352ffa-6dc3-4f57-be30-04407970dd5c",
                                                        "acbf655bdeac77c770ad4964fcb1f81f");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount(">>ê¨Œ>á¿‘\u0001.ç©” >ä‡?á”“>é‰¡25ëŒ‡>\f×”,ë?¯ï›‚É˜ç•£è‘ƒè‘ƒç¶—ì ‰>ë°¦è‹ŠìŽ»,3é“´è‘ƒêŒŽ.\têš©&>è‘‚\u0002á‚”ì¾¸>çŸ¾ç¼±â³¦è‘‚âŒ„é ©è‘‚>7é°’í‹¨.é¶™\u0012>à©½",
                                                               "bb474cc9-b511-4dc5-8c5d-35b5478913192a001a19-72f9-4f46-8b40-1529e1d404176ba6b1b9-21f3-49bb-8eae-644f341bc39b",
                                                               "ê€Š+(è¤‘32\f3X\u0005;\\\\2\u001aAä£½îµ‰-2á—œN22&\\\\X\u00023\u00023OJ3\u00012Z*\u000f2\u0007Iä³?3V3ì Ž3'\u00142Î£ë›„\b<XNç£€ë¾†)3.ï¦¢");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("72b50.39179@c56f9.fr",
                                                             "284c1a70-f3d3-4a6d-8b7d-6dd10c0c3a4f",
                                                             "acbf655bdeac77c770ad4964fcb1f81f");
            ParentAccount parentaccount2 = new ParentAccount("72b50.39179@c56f9.fr",
                                                             "284c1a70-f3d3-4a6d-8b7d-6dd10c0c3a4f",
                                                             "acbf655bdeac77c770ad4964fcb1f81f");
            ParentAccount parentaccount3 = new ParentAccount("d72a3.607aa@89588.fr",
                                                             "4ac40ba0-5bb5-4b09-87ba-1661a8a7bcf2",
                                                             "acbf655bdeac77c770ad4964fcb1f81f");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
