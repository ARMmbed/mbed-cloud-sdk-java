// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("c41ee.68838@b7e61.me",
                                                             "35c73645-e904-4afe-a3a5-3dac98a873a2",
                                                             "bedebcaf929fb64c74860f9a9cc41c0c");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("d7b3d.8bfd0@d5aa2.fr",
                                                             "f9066998-257a-4f24-9caf-a849fc6a616f",
                                                             "bedebcaf929fb64c74860f9a9cc41c0c");
            ParentAccount parentaccount2 = new ParentAccount("d7b3d.8bfd0@d5aa2.fr",
                                                             "f9066998-257a-4f24-9caf-a849fc6a616f",
                                                             "bedebcaf929fb64c74860f9a9cc41c0c");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("5501e.73be7@10f17.fr", "0f3e22ef-39e6-47bf-8a6d-90055fdf1e37",
                                                        "bedebcaf929fb64c74860f9a9cc41c0c");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("*â“€í‹«\u0000ï„¿>>ïŸ’ë†¾ëŠŠî¯£ê„?å…Œç…Žæ‹†ïº€ê¥¹7+ë±›ëƒ¢î¼£ì‡šã?¯>î½¢>\u000f&?/ï‡ºî¥ºê£?é¥‘ë¢?ï¶¬î¼¤7ê’¶ä•šê¼¾ëž‘>#êµ©ê•˜ë?ƒ\u000fî…ºë?ˆï¬¨\u001bï±¥(\u000f0ì–„*ë»˜ì¾¿ì?¬",
                                                               "811daec6-96e1-4bb7-99ef-124d21676d39ca14131a-9253-4fb2-b2fc-a1195427d7a97bbc52b5-2865-44f1-98df-74a5ac391ea7",
                                                               "D3\u0001\u0002\u001c53,àº£Gêž?*]\u001e.H555\u0016æ¬?Å¢3Z533ê§ˆâ?ƒ33è­µâ”ŒçŒ‘\b\u001f5ã†ŒG3T)\u001fï¸¬âŠ©àµ¾3H535(35í?º5è˜ Í¡Y333\u0007");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("d8477.61f57@ea872.fr",
                                                             "7926e789-7b55-4f9c-a579-561ef7af0496",
                                                             "bedebcaf929fb64c74860f9a9cc41c0c");
            ParentAccount parentaccount2 = new ParentAccount("d8477.61f57@ea872.fr",
                                                             "7926e789-7b55-4f9c-a579-561ef7af0496",
                                                             "bedebcaf929fb64c74860f9a9cc41c0c");
            ParentAccount parentaccount3 = new ParentAccount("6d360.9a0d4@2becb.fr",
                                                             "f61f1a68-219a-48cd-866e-e10475a236b7",
                                                             "bedebcaf929fb64c74860f9a9cc41c0c");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
