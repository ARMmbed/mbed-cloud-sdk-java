// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                                   new Date(1559288259747L), 66,
                                                                   "3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                                   "dc0ca839-cfd9-445f-8b54-701d0b334a45", -93,
                                                                   "50dcc42d-5be3-42c7-82a7-5de3c1fe5bc3",
                                                                   "3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559288261049L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                                   new Date(1559288254836L), 68,
                                                                   "3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                                   "66b38650-cecf-4b32-b598-b0dc205e7f7c", -10,
                                                                   "85a2abda-ca64-4d2a-ace9-e7263682c3ce",
                                                                   "3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559288262917L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                                   new Date(1559288254836L), 68,
                                                                   "3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                                   "66b38650-cecf-4b32-b598-b0dc205e7f7c", -10,
                                                                   "85a2abda-ca64-4d2a-ace9-e7263682c3ce",
                                                                   "3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559288262917L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                              new Date(1559288254428L), -102,
                                                              "3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                              "838223a7-9489-45d2-b5ac-ce1ee9ccf967", 81,
                                                              "2637c27b-83cd-407f-9400-1fabd32ddfef",
                                                              "3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1559288258043L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1559288261976L), 79,
                                                                     "\u0012&æ…†\t`ì½µîˆ¶888^8á®§M\u0003K\u00108\\\\\u000eè°–8P&8)$$8L;8ã³ªî?¥î¸š\u0011L8âšŠ\u000f\u0014ê?¨88YKKéŽ¨F\u0013^Ú¥8ë¦?!\u001008FZèŸ›ë‚œ8^E",
                                                                     "34d889ea-1bb1-4aa1-b96f-7185e2008030", -53, null,
                                                                     "\u0012&æ…†\t`ì½µîˆ¶888^8á®§M\u0003K\u00108\\\\\u000eè°–8P&8)$$8L;8ã³ªî?¥î¸š\u0011L8âšŠ\u000f\u0014ê?¨88YKKéŽ¨F\u0013^Ú¥8ë¦?!\u001008FZèŸ›ë‚œ8^E",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1559288261187L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                                   new Date(1559288259554L), 7,
                                                                   "3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                                   "71edacb8-d427-4db6-9a93-3d44a9385e95", -52,
                                                                   "391f811f-34cf-40d1-a722-5ac3c720d663",
                                                                   "3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559288262920L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                                   new Date(1559288259554L), 7,
                                                                   "3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                                   "71edacb8-d427-4db6-9a93-3d44a9385e95", -52,
                                                                   "391f811f-34cf-40d1-a722-5ac3c720d663",
                                                                   "3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559288262920L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                                   new Date(1559288257947L), -114,
                                                                   "3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                                   "f8bdb50b-2217-40c2-b73e-4841772224f5", 34,
                                                                   "538e8d15-f168-47d6-829d-0ecabcaadd0c",
                                                                   "3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559288262554L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
