// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                   new Date(1559662783387L), 50,
                                                                   "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                   "1eb5a8c7-51d8-4455-9aed-dfa0cdcbf50d", -61,
                                                                   "f01aecbd-6fc6-4053-aecf-53a7ef947f2f",
                                                                   "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559662780232L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                   new Date(1559662782316L), 102,
                                                                   "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                   "5ba37756-d4d9-42cf-a15a-0824447fe2f2", 43,
                                                                   "3732256c-dbe4-415c-9eb6-62b446991c7a",
                                                                   "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559662782769L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                   new Date(1559662782316L), 102,
                                                                   "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                   "5ba37756-d4d9-42cf-a15a-0824447fe2f2", 43,
                                                                   "3732256c-dbe4-415c-9eb6-62b446991c7a",
                                                                   "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559662782769L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("f33f4df6191a3d432ba4b4ea8fd5906b",
                                                              new Date(1559662785320L), -26,
                                                              "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                              "b6d3a3fb-ad18-4c28-b0c0-137ee171a917", 93,
                                                              "badba53e-fbe1-4c70-b2ed-c6f8116f4255",
                                                              "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1559662778517L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1559662778118L), -18,
                                                                     "7ã??cccUî‡±c7ä¨§\u0003îŒ¾æ­œ7c^Tæ·¨c`è–¯ä•§7cD7äž¾c\u0006\u00117ST-7K-cé§ƒ7cë¼¯ãŠ¯\t\t7cÕ¶cã²ŽâŸ¢\u00177 ;í?½cã½Œ%æ¿´B?7",
                                                                     "5c530b4a-aeaa-4463-a7c7-4acd457327ab", -56, null,
                                                                     "7ã??cccUî‡±c7ä¨§\u0003îŒ¾æ­œ7c^Tæ·¨c`è–¯ä•§7cD7äž¾c\u0006\u00117ST-7K-cé§ƒ7cë¼¯ãŠ¯\t\t7cÕ¶cã²ŽâŸ¢\u00177 ;í?½cã½Œ%æ¿´B?7",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1559662784659L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                   new Date(1559662783040L), -6,
                                                                   "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                   "b0113b1e-52a4-4570-8315-9e2cfd7cf20f", 67,
                                                                   "15e68230-b735-444c-97cd-b9c476fedd55",
                                                                   "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559662779922L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                   new Date(1559662783040L), -6,
                                                                   "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                   "b0113b1e-52a4-4570-8315-9e2cfd7cf20f", 67,
                                                                   "15e68230-b735-444c-97cd-b9c476fedd55",
                                                                   "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559662779922L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                   new Date(1559662782966L), -68,
                                                                   "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                   "391e8e04-e682-415b-add1-45fd91e23ff0", -22,
                                                                   "a15e1578-e277-4358-a210-305563b8c271",
                                                                   "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559662780121L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
