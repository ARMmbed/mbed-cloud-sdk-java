// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("1fb3d6dc3467de6fb631f982b0ebed24",
                                                                   new Date(1559745294564L), 102,
                                                                   "1fb3d6dc3467de6fb631f982b0ebed24",
                                                                   "918cc43e-4133-4d01-84de-863efbb66046", 86,
                                                                   "3ff18eca-4f80-4bf4-aa47-1429707eeade",
                                                                   "1fb3d6dc3467de6fb631f982b0ebed24",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559745296218L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("1fb3d6dc3467de6fb631f982b0ebed24",
                                                                   new Date(1559745300435L), -18,
                                                                   "1fb3d6dc3467de6fb631f982b0ebed24",
                                                                   "117a643b-e3f9-4010-b2d4-c45f00dfe48d", -28,
                                                                   "b949b172-5428-4a59-81c6-fbaf532434fc",
                                                                   "1fb3d6dc3467de6fb631f982b0ebed24",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559745296659L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("1fb3d6dc3467de6fb631f982b0ebed24",
                                                                   new Date(1559745300435L), -18,
                                                                   "1fb3d6dc3467de6fb631f982b0ebed24",
                                                                   "117a643b-e3f9-4010-b2d4-c45f00dfe48d", -28,
                                                                   "b949b172-5428-4a59-81c6-fbaf532434fc",
                                                                   "1fb3d6dc3467de6fb631f982b0ebed24",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559745296659L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("1fb3d6dc3467de6fb631f982b0ebed24",
                                                              new Date(1559745294571L), -116,
                                                              "1fb3d6dc3467de6fb631f982b0ebed24",
                                                              "ae11c8c1-f88c-4216-9fe9-33a4e7b76a5b", 40,
                                                              "ceee9cb7-a7f0-4fb9-a74e-198bf1d2793a",
                                                              "1fb3d6dc3467de6fb631f982b0ebed24",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1559745300855L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1559745297157L), -76,
                                                                     "ì™Œê¿£-[(5â”•5à¹¹5&B\u001e5Oa`ãŸ–è‹”5G\f-\u001aæ›¤ë—§E\u000fM5\u0005í•‚OKç›€ç»¯=5OZ]5\u0007,5ã»ª\u0012ï?¶,[5PZ5â”‘5\u000fá¾°åª™$$5ç‡«",
                                                                     "c0004637-456d-4752-a7ec-7fc53d3a0973", -124, null,
                                                                     "ì™Œê¿£-[(5â”•5à¹¹5&B\u001e5Oa`ãŸ–è‹”5G\f-\u001aæ›¤ë—§E\u000fM5\u0005í•‚OKç›€ç»¯=5OZ]5\u0007,5ã»ª\u0012ï?¶,[5PZ5â”‘5\u000fá¾°åª™$$5ç‡«",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1559745303085L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("1fb3d6dc3467de6fb631f982b0ebed24",
                                                                   new Date(1559745303257L), -8,
                                                                   "1fb3d6dc3467de6fb631f982b0ebed24",
                                                                   "ff3e89eb-32aa-4707-975a-1faaebf7e0ec", 41,
                                                                   "48fb8035-6d47-423d-b23b-9195d1c7c16c",
                                                                   "1fb3d6dc3467de6fb631f982b0ebed24",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559745299508L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("1fb3d6dc3467de6fb631f982b0ebed24",
                                                                   new Date(1559745303257L), -8,
                                                                   "1fb3d6dc3467de6fb631f982b0ebed24",
                                                                   "ff3e89eb-32aa-4707-975a-1faaebf7e0ec", 41,
                                                                   "48fb8035-6d47-423d-b23b-9195d1c7c16c",
                                                                   "1fb3d6dc3467de6fb631f982b0ebed24",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559745299508L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("1fb3d6dc3467de6fb631f982b0ebed24",
                                                                   new Date(1559745303324L), 8,
                                                                   "1fb3d6dc3467de6fb631f982b0ebed24",
                                                                   "ec7f4f74-158f-4604-b76f-c04350641b2d", 19,
                                                                   "abe2b5a2-59d0-432f-ba61-7e45040907eb",
                                                                   "1fb3d6dc3467de6fb631f982b0ebed24",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559745294204L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
