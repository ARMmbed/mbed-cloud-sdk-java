// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                   new Date(1559746948044L), 97,
                                                                   "acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                   "f425e7df-64be-4e77-885f-4976b9594a69", 6,
                                                                   "6e434e1c-d81b-4992-8c72-7f60e5e15739",
                                                                   "acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559746947044L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                   new Date(1559746952943L), -37,
                                                                   "acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                   "5b4ec37e-5074-4ba2-bd4d-5ebd2f867c9a", -56,
                                                                   "47cbcf0d-de5f-46db-a946-4a930070478e",
                                                                   "acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559746949750L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                   new Date(1559746952943L), -37,
                                                                   "acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                   "5b4ec37e-5074-4ba2-bd4d-5ebd2f867c9a", -56,
                                                                   "47cbcf0d-de5f-46db-a946-4a930070478e",
                                                                   "acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559746949750L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("acc8cb178a5cea59a0ac26cbc2e1911d",
                                                              new Date(1559746946926L), -122,
                                                              "acc8cb178a5cea59a0ac26cbc2e1911d",
                                                              "96253cd1-831d-412a-a2be-a3dff9911d78", 124,
                                                              "68d74358-722f-4e26-93f2-74fffcf23748",
                                                              "acc8cb178a5cea59a0ac26cbc2e1911d",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1559746951685L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1559746948368L), -60,
                                                                     "î®·4 4ä£›4\f4O434è†—Aè†¶3æ?µâ ¿3VB+3\u0011íœˆ/æ—º)4ï¾¾)4K?î‡‚\u0014*Ná½¯>ã™¥Mæ«‰à¤»U4>P3\\\\é²„íž°44'33æ¢°\u0017í•­T]E",
                                                                     "89e4d941-73cb-4448-963b-5dc4ec3737e5", -116, null,
                                                                     "î®·4 4ä£›4\f4O434è†—Aè†¶3æ?µâ ¿3VB+3\u0011íœˆ/æ—º)4ï¾¾)4K?î‡‚\u0014*Ná½¯>ã™¥Mæ«‰à¤»U4>P3\\\\é²„íž°44'33æ¢°\u0017í•­T]E",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1559746955267L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                   new Date(1559746948954L), -123,
                                                                   "acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                   "01e0dfe5-1621-4f06-bdcd-6ed7b6f6c54f", 105,
                                                                   "4c4ecad8-1601-41c0-ae4c-ace053f4c1b5",
                                                                   "acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559746946611L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                   new Date(1559746948954L), -123,
                                                                   "acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                   "01e0dfe5-1621-4f06-bdcd-6ed7b6f6c54f", 105,
                                                                   "4c4ecad8-1601-41c0-ae4c-ace053f4c1b5",
                                                                   "acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559746946611L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                   new Date(1559746952303L), -92,
                                                                   "acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                   "df951e26-8168-4d16-a1a8-c8a5f7fc8f9f", -104,
                                                                   "d15daced-35e3-41b4-be39-b2a073f4281f",
                                                                   "acc8cb178a5cea59a0ac26cbc2e1911d",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559746947807L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
