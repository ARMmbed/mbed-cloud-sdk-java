// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                   new Date(1559560671924L), -92,
                                                                   "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                   "341c5c4b-9c1d-427e-b82e-3f524159c689", -65,
                                                                   "0e8119f0-a4d3-4979-80b9-8bc25e59a445",
                                                                   "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559560665477L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                   new Date(1559560672702L), 119,
                                                                   "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                   "579cc635-3964-4204-8a1f-e46113d44ad7", 20,
                                                                   "f1305d5d-7d5c-4f36-a2d1-c971074d6cc0",
                                                                   "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559560663595L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                   new Date(1559560672702L), 119,
                                                                   "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                   "579cc635-3964-4204-8a1f-e46113d44ad7", 20,
                                                                   "f1305d5d-7d5c-4f36-a2d1-c971074d6cc0",
                                                                   "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559560663595L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                              new Date(1559560663473L), 66,
                                                              "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                              "671111ec-faf8-4180-85f3-fd0675869984", -20,
                                                              "5c209e58-750a-4f13-89f3-00775514d47e",
                                                              "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1559560669021L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1559560668561L), -106,
                                                                     "å‚¿!6ç¢šâ«”2'>\tæ ¦\u001c6Y8\u001dä³?8\u001f\u00176à¤Ÿ22æ¢‹)8é¥¦B?ç¿“[6é½­ä?¬8821\u001aM\u001588\u0011ÙŽ6+6_88F1\u0004666[86ë§±I1_",
                                                                     "8dca2dbc-334d-4876-baf0-fec9fa45a4f7", 112, null,
                                                                     "å‚¿!6ç¢šâ«”2'>\tæ ¦\u001c6Y8\u001dä³?8\u001f\u00176à¤Ÿ22æ¢‹)8é¥¦B?ç¿“[6é½­ä?¬8821\u001aM\u001588\u0011ÙŽ6+6_88F1\u0004666[86ë§±I1_",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1559560671659L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                   new Date(1559560669113L), -61,
                                                                   "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                   "27e881b6-9af7-4942-a6eb-f998b72fcf77", 100,
                                                                   "75e58d0b-7a10-4d44-acfe-75f756827a0e",
                                                                   "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559560669340L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                   new Date(1559560669113L), -61,
                                                                   "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                   "27e881b6-9af7-4942-a6eb-f998b72fcf77", 100,
                                                                   "75e58d0b-7a10-4d44-acfe-75f756827a0e",
                                                                   "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559560669340L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                   new Date(1559560668432L), -89,
                                                                   "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                   "d9d818f6-28d4-415b-869c-d1a1562d360c", 44,
                                                                   "c28ddeaf-ad7c-4eb3-95e6-10770a4b25fa",
                                                                   "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559560666989L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
