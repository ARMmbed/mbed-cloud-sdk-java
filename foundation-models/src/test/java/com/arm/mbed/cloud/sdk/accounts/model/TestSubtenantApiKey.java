// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("e5adc84a514e5b3d136332ece0ac7d95",
                                                                   new Date(1559300105765L), 53,
                                                                   "e5adc84a514e5b3d136332ece0ac7d95",
                                                                   "48eb0b3c-4ff9-4e55-ab54-134fe6a7e5bc", 97,
                                                                   "28288a78-a67f-428d-a9db-3248bc533ca2",
                                                                   "e5adc84a514e5b3d136332ece0ac7d95",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559300098323L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("e5adc84a514e5b3d136332ece0ac7d95",
                                                                   new Date(1559300106480L), -99,
                                                                   "e5adc84a514e5b3d136332ece0ac7d95",
                                                                   "cbe956fa-d3d3-4ed1-bc90-069b2484423c", 59,
                                                                   "64bdf0f1-ac19-4f9a-934c-7bcc4096ab90",
                                                                   "e5adc84a514e5b3d136332ece0ac7d95",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559300099003L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("e5adc84a514e5b3d136332ece0ac7d95",
                                                                   new Date(1559300106480L), -99,
                                                                   "e5adc84a514e5b3d136332ece0ac7d95",
                                                                   "cbe956fa-d3d3-4ed1-bc90-069b2484423c", 59,
                                                                   "64bdf0f1-ac19-4f9a-934c-7bcc4096ab90",
                                                                   "e5adc84a514e5b3d136332ece0ac7d95",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559300099003L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("e5adc84a514e5b3d136332ece0ac7d95",
                                                              new Date(1559300103002L), -5,
                                                              "e5adc84a514e5b3d136332ece0ac7d95",
                                                              "0da39014-4ea5-4bd5-a78b-439f71cc5cd9", -76,
                                                              "dcca0c78-363a-4cee-8c37-39d0038f62ae",
                                                              "e5adc84a514e5b3d136332ece0ac7d95",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1559300104609L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1559300106157L), -103,
                                                                     "çŠ”\u001e\u0013J\u0001ä»¥ã¢ˆëš”.å±³\u001e:\u0003:QPä¶²#(\u000f[é©§åœ‹Yâ?”\u0018áª¾é°µîŒ¾â†»<èš¯á?¨ç–‹\\\\\u0014OC<+ãŸ¹AT\u0001ï¦?é¡¤ï¤¸à³·??B,í?¸:ä¡¨KèŒ­Xç¢’=Kê?¯",
                                                                     "d6b29fdb-e986-41d1-ba62-19650cc57f7a", -76, null,
                                                                     "çŠ”\u001e\u0013J\u0001ä»¥ã¢ˆëš”.å±³\u001e:\u0003:QPä¶²#(\u000f[é©§åœ‹Yâ?”\u0018áª¾é°µîŒ¾â†»<èš¯á?¨ç–‹\\\\\u0014OC<+ãŸ¹AT\u0001ï¦?é¡¤ï¤¸à³·??B,í?¸:ä¡¨KèŒ­Xç¢’=Kê?¯",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1559300103463L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("e5adc84a514e5b3d136332ece0ac7d95",
                                                                   new Date(1559300097962L), 90,
                                                                   "e5adc84a514e5b3d136332ece0ac7d95",
                                                                   "aa6f11de-a3d2-42ec-9d63-dc8d74fda496", -12,
                                                                   "28816b7d-b123-4394-acb5-10f5bccd0d3b",
                                                                   "e5adc84a514e5b3d136332ece0ac7d95",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559300103012L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("e5adc84a514e5b3d136332ece0ac7d95",
                                                                   new Date(1559300097962L), 90,
                                                                   "e5adc84a514e5b3d136332ece0ac7d95",
                                                                   "aa6f11de-a3d2-42ec-9d63-dc8d74fda496", -12,
                                                                   "28816b7d-b123-4394-acb5-10f5bccd0d3b",
                                                                   "e5adc84a514e5b3d136332ece0ac7d95",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559300103012L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("e5adc84a514e5b3d136332ece0ac7d95",
                                                                   new Date(1559300102348L), 116,
                                                                   "e5adc84a514e5b3d136332ece0ac7d95",
                                                                   "48e277cf-7bc6-4a94-b59a-ea32fe89b9a6", 66,
                                                                   "9efa78ec-4285-436b-9603-8c398dabb98d",
                                                                   "e5adc84a514e5b3d136332ece0ac7d95",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559300104083L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
