// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("bedebcaf929fb64c74860f9a9cc41c0c",
                                                                   new Date(1559833678767L), 30,
                                                                   "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                   "b6cf60ba-a250-4b82-b499-778a6cf496ac", -5,
                                                                   "2cfe3ca6-3005-4274-aa10-cc28c494ff18",
                                                                   "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559833679001L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("bedebcaf929fb64c74860f9a9cc41c0c",
                                                                   new Date(1559833683952L), 22,
                                                                   "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                   "39de9c28-6b42-45b3-86d7-7da56fb4a794", -102,
                                                                   "73970aaa-124e-41fa-abdc-0aff31e6cd6b",
                                                                   "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559833684609L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("bedebcaf929fb64c74860f9a9cc41c0c",
                                                                   new Date(1559833683952L), 22,
                                                                   "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                   "39de9c28-6b42-45b3-86d7-7da56fb4a794", -102,
                                                                   "73970aaa-124e-41fa-abdc-0aff31e6cd6b",
                                                                   "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559833684609L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("bedebcaf929fb64c74860f9a9cc41c0c",
                                                              new Date(1559833685142L), -125,
                                                              "bedebcaf929fb64c74860f9a9cc41c0c",
                                                              "c8daf56a-294b-4e7e-84e5-b0ba1df43fb9", 46,
                                                              "792f5293-61fb-42e8-84de-b2e5d8605145",
                                                              "bedebcaf929fb64c74860f9a9cc41c0c",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1559833684195L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1559833685240L), 100,
                                                                     "D3\u0001\u0002\u001c53,àº£Gêž?*]\u001e.H555\u0016æ¬?Å¢3Z533ê§ˆâ?ƒ33è­µâ”ŒçŒ‘\b\u001f5ã†ŒG3T)\u001fï¸¬âŠ©àµ¾3H535(35í?º5è˜ Í¡Y333\u0007",
                                                                     "cfe959be-7e3e-4647-982d-8381023b705d", 45, null,
                                                                     "D3\u0001\u0002\u001c53,àº£Gêž?*]\u001e.H555\u0016æ¬?Å¢3Z533ê§ˆâ?ƒ33è­µâ”ŒçŒ‘\b\u001f5ã†ŒG3T)\u001fï¸¬âŠ©àµ¾3H535(35í?º5è˜ Í¡Y333\u0007",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1559833683363L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("bedebcaf929fb64c74860f9a9cc41c0c",
                                                                   new Date(1559833682765L), -4,
                                                                   "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                   "e7c020f7-fe6f-4d1f-b6b7-071a8a88c000", 119,
                                                                   "c003ded5-7053-4884-aa6e-dc7cad3df37a",
                                                                   "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559833684419L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("bedebcaf929fb64c74860f9a9cc41c0c",
                                                                   new Date(1559833682765L), -4,
                                                                   "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                   "e7c020f7-fe6f-4d1f-b6b7-071a8a88c000", 119,
                                                                   "c003ded5-7053-4884-aa6e-dc7cad3df37a",
                                                                   "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559833684419L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("bedebcaf929fb64c74860f9a9cc41c0c",
                                                                   new Date(1559833685916L), 37,
                                                                   "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                   "e79919ea-b005-4cb2-bf06-1f6ae2fc0304", 23,
                                                                   "32bd1f67-457a-42bf-85ca-05a86b9888cd",
                                                                   "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559833686288L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
