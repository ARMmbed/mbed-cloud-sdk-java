// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                   new Date(1559313339855L), 99,
                                                                   "c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                   "c47aa720-9672-46ba-bdb0-6447e2f6b89c", -5,
                                                                   "ef102186-3786-4fb8-8930-0a390a27ca90",
                                                                   "c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559313341175L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                   new Date(1559313347759L), 104,
                                                                   "c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                   "7490fae4-5adb-4e1d-8cb3-aa5a8d3d41c7", -1,
                                                                   "7ca94803-f078-4795-9752-edbd45e02103",
                                                                   "c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559313348861L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                   new Date(1559313347759L), 104,
                                                                   "c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                   "7490fae4-5adb-4e1d-8cb3-aa5a8d3d41c7", -1,
                                                                   "7ca94803-f078-4795-9752-edbd45e02103",
                                                                   "c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559313348861L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("c26ebd108cbc6d2e0e403ca038b7faa6",
                                                              new Date(1559313346751L), 60,
                                                              "c26ebd108cbc6d2e0e403ca038b7faa6",
                                                              "7f8c62d8-d4b5-4b77-a76e-6ed4beba015b", 5,
                                                              "526f7467-ef69-4d68-85e3-938cefe6c2b7",
                                                              "c26ebd108cbc6d2e0e403ca038b7faa6",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1559313346351L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1559313345361L), 40,
                                                                     "5â¬³U\u0013\u0005PJä›¹â©ŽGWWë˜‚)ì“µ55?\u0012'ì¶Œ55\u0018ÏŸPä™˜ç¤¹)5\u0000Z?\bã·?\u0007>5ë¾¹á˜„\u001b\u001c555G5î—Š,ä“¯ç¶´Xï€œ\f5H×¤ê‰±]\u000eAè“œ",
                                                                     "6909d0dc-3f1f-431a-b806-1b52eb79b47e", 108, null,
                                                                     "5â¬³U\u0013\u0005PJä›¹â©ŽGWWë˜‚)ì“µ55?\u0012'ì¶Œ55\u0018ÏŸPä™˜ç¤¹)5\u0000Z?\bã·?\u0007>5ë¾¹á˜„\u001b\u001c555G5î—Š,ä“¯ç¶´Xï€œ\f5H×¤ê‰±]\u000eAè“œ",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1559313346527L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                   new Date(1559313341598L), -51,
                                                                   "c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                   "ffbf48e5-19d6-40f2-ad4b-bdd63ce13000", 18,
                                                                   "1e07e20f-128d-438a-9c4b-459dd117cb77",
                                                                   "c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559313348107L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                   new Date(1559313341598L), -51,
                                                                   "c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                   "ffbf48e5-19d6-40f2-ad4b-bdd63ce13000", 18,
                                                                   "1e07e20f-128d-438a-9c4b-459dd117cb77",
                                                                   "c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559313348107L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                   new Date(1559313341136L), 117,
                                                                   "c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                   "9fd02f6d-b97d-4962-92d4-c0fba1bc95c5", 35,
                                                                   "28e69d73-6816-43dd-8b03-a752fd38302f",
                                                                   "c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559313345078L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
