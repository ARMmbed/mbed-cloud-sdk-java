// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("8f790df8b03da9b1dd914e7ecab2ad3f",
                                                                   new Date(1559752144914L), -115,
                                                                   "8f790df8b03da9b1dd914e7ecab2ad3f",
                                                                   "b86d4f19-f09d-4ea8-a9b3-6e2b0112418a", 25,
                                                                   "f838fa06-2e1a-4a34-a3d8-95780be5a045",
                                                                   "8f790df8b03da9b1dd914e7ecab2ad3f",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559752143704L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("8f790df8b03da9b1dd914e7ecab2ad3f",
                                                                   new Date(1559752149454L), -113,
                                                                   "8f790df8b03da9b1dd914e7ecab2ad3f",
                                                                   "bb296989-66a0-4759-9d15-afda099acb0a", 48,
                                                                   "de4052a9-1b9c-4572-be99-281992e3f393",
                                                                   "8f790df8b03da9b1dd914e7ecab2ad3f",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559752153554L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("8f790df8b03da9b1dd914e7ecab2ad3f",
                                                                   new Date(1559752149454L), -113,
                                                                   "8f790df8b03da9b1dd914e7ecab2ad3f",
                                                                   "bb296989-66a0-4759-9d15-afda099acb0a", 48,
                                                                   "de4052a9-1b9c-4572-be99-281992e3f393",
                                                                   "8f790df8b03da9b1dd914e7ecab2ad3f",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559752153554L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("8f790df8b03da9b1dd914e7ecab2ad3f",
                                                              new Date(1559752151464L), -98,
                                                              "8f790df8b03da9b1dd914e7ecab2ad3f",
                                                              "eb614dec-0960-4915-ae73-bc428319b0aa", -119,
                                                              "feed2b3d-fec9-4a1f-a844-12fe12c48909",
                                                              "8f790df8b03da9b1dd914e7ecab2ad3f",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1559752146552L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1559752145667L), -111,
                                                                     "/\u000eä‹¯65\u000eä¯¯\u0005<å¸ˆ66'\u0016)á¾‰5çˆ€ç–¸\u0019äš–\u001e6èµ«65\u0014%\b\u0005ä?ª-\u001e5\u0011V\\\\ë?ž5îšŠ55\u0012\u0012]#56Xè¤³WO?5\b\u001båƒ¤\u000e6\u0007Vå†Œç²¸X",
                                                                     "cb28355f-4dcb-48e0-a044-7d1ef11c6fee", 65, null,
                                                                     "/\u000eä‹¯65\u000eä¯¯\u0005<å¸ˆ66'\u0016)á¾‰5çˆ€ç–¸\u0019äš–\u001e6èµ«65\u0014%\b\u0005ä?ª-\u001e5\u0011V\\\\ë?ž5îšŠ55\u0012\u0012]#56Xè¤³WO?5\b\u001båƒ¤\u000e6\u0007Vå†Œç²¸X",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1559752147540L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("8f790df8b03da9b1dd914e7ecab2ad3f",
                                                                   new Date(1559752144795L), 30,
                                                                   "8f790df8b03da9b1dd914e7ecab2ad3f",
                                                                   "07813e4a-c15d-4083-ae29-0df6dfc2e55f", 5,
                                                                   "7b2ed5c8-ff41-4f3d-bb05-f4d338cd096c",
                                                                   "8f790df8b03da9b1dd914e7ecab2ad3f",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559752149013L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("8f790df8b03da9b1dd914e7ecab2ad3f",
                                                                   new Date(1559752144795L), 30,
                                                                   "8f790df8b03da9b1dd914e7ecab2ad3f",
                                                                   "07813e4a-c15d-4083-ae29-0df6dfc2e55f", 5,
                                                                   "7b2ed5c8-ff41-4f3d-bb05-f4d338cd096c",
                                                                   "8f790df8b03da9b1dd914e7ecab2ad3f",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559752149013L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("8f790df8b03da9b1dd914e7ecab2ad3f",
                                                                   new Date(1559752149040L), -6,
                                                                   "8f790df8b03da9b1dd914e7ecab2ad3f",
                                                                   "558cec71-165d-44fd-a639-53dad9c07dac", -24,
                                                                   "eb641c50-ac9b-4d08-86a4-85a29e5e5fe4",
                                                                   "8f790df8b03da9b1dd914e7ecab2ad3f",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559752151871L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
