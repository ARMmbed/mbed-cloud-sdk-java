// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                   new Date(1558096039373L), -75,
                                                                   "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                   "433abc53-d418-49e8-a12e-1b610cf90c91", 117,
                                                                   "75d428fb-eedc-4142-bf6e-47e76c24f519",
                                                                   "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558096035644L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                   new Date(1558096039971L), 28,
                                                                   "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                   "1ecca7ae-89cb-4e89-8354-d849f6bf07fa", -123,
                                                                   "650ce11a-b742-4460-aee5-d443edd6b248",
                                                                   "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558096036674L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                   new Date(1558096039971L), 28,
                                                                   "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                   "1ecca7ae-89cb-4e89-8354-d849f6bf07fa", -123,
                                                                   "650ce11a-b742-4460-aee5-d443edd6b248",
                                                                   "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558096036674L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                              new Date(1558096040300L), 102,
                                                              "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                              "5eb9a556-8fe8-4ce4-9ac8-1ad08d8fe031", 31,
                                                              "828a40dd-daee-4919-8053-13a73c9e0135",
                                                              "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1558096043246L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1558096037256L), 6,
                                                                     "2FXì¯†52\u0007R5ë™£\u0000ï´µ2552Séº“åŠ¼ä—´22/æ±µî«¾5î?º25!ë?©5,2\b22\u000725%î¤ 2`è‹…5\u001a)ê–Ÿ2B2\u0013îŸª52ì¦?5\u001c)\u0013",
                                                                     "17832125-9ffc-42cb-ba86-abcbfc43387d", -88, null,
                                                                     "2FXì¯†52\u0007R5ë™£\u0000ï´µ2552Séº“åŠ¼ä—´22/æ±µî«¾5î?º25!ë?©5,2\b22\u000725%î¤ 2`è‹…5\u001a)ê–Ÿ2B2\u0013îŸª52ì¦?5\u001c)\u0013",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1558096039839L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                   new Date(1558096042105L), -49,
                                                                   "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                   "ed99e3a9-6c7e-4b9c-bbf7-7f44288edd40", -94,
                                                                   "ea862b55-e970-4c09-983a-2c03b812f81e",
                                                                   "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558096036894L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                   new Date(1558096042105L), -49,
                                                                   "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                   "ed99e3a9-6c7e-4b9c-bbf7-7f44288edd40", -94,
                                                                   "ea862b55-e970-4c09-983a-2c03b812f81e",
                                                                   "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558096036894L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                   new Date(1558096039688L), -87,
                                                                   "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                   "d2969571-d0f8-4948-91d6-62447c6db9bf", -49,
                                                                   "ca4e3e28-9da4-4175-9967-ee3d27e95999",
                                                                   "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558096039570L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
