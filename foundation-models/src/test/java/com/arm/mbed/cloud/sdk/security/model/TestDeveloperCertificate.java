// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("763ab3c9-f793-41be-897f-255673e66cbe",
                                                                                  "297f81e2-8c7f-4d16-91f9-50cbe6103544",
                                                                                  new Date(1551867945680L),
                                                                                  "258e18cb-021a-40d5-b4ac-3bb6c862d3f4",
                                                                                  "6329fa64-ca1d-4672-9af6-a56918bcf636",
                                                                                  "976b27c3-3599-4e80-9ab6-71b212e24117",
                                                                                  "8c10d15f-a767-4161-a9bf-b82ed3126b52");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("4d18cb96-8d1d-4118-a1f9-cd212626456e",
                                                                                  "373942af-604c-4410-8102-900b57856f76",
                                                                                  new Date(1551867952666L),
                                                                                  "21f10231-b12b-4285-a442-f6e8cc323852",
                                                                                  "2dc87055-1e78-46c7-813d-b45134b7e5c4",
                                                                                  "e8b9c985-3c2a-4daa-8d34-324ab81802fb",
                                                                                  "06488d49-bcde-4d50-8fbc-6d9af919d6bb");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("4d18cb96-8d1d-4118-a1f9-cd212626456e",
                                                                                  "373942af-604c-4410-8102-900b57856f76",
                                                                                  new Date(1551867952666L),
                                                                                  "21f10231-b12b-4285-a442-f6e8cc323852",
                                                                                  "2dc87055-1e78-46c7-813d-b45134b7e5c4",
                                                                                  "e8b9c985-3c2a-4daa-8d34-324ab81802fb",
                                                                                  "06488d49-bcde-4d50-8fbc-6d9af919d6bb");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("bd0cfd2d-f8ab-419e-b9d6-c2d9dfcc8859",
                                                                             "5ae1be55-cc19-4574-b73c-fcf18a09313c",
                                                                             new Date(1551867948398L),
                                                                             "0a06fff6-4afc-4ea1-8977-54658cec5111",
                                                                             "3974bd29-9e43-4925-bcc7-29694905f9b0",
                                                                             "3687bc75-ca94-43ec-aee5-40abef2b2dfb",
                                                                             "fdf4ca42-c1ee-4e99-9722-dc980b162511");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("77efd8d9-76ab-47d0-92a3-0c0e242fae65",
                                                                                    "8e22fac9-e372-4b71-91b8-773f11d1c2f5",
                                                                                    new Date(1551867947277L),
                                                                                    "03cb348c-07ed-47fc-9ed3-f8cbb6777f40",
                                                                                    "75d01489-5322-43ef-8586-5675170a77d6",
                                                                                    null,
                                                                                    "98b7755b-095c-496d-9fcd-eebee87525c8");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("0efe24ab-872e-4cd9-a430-0b98f90c7496",
                                                                                  "b00ce448-317c-493f-abb8-53d599573fd2",
                                                                                  new Date(1551867945382L),
                                                                                  "2de59bd3-002d-4895-b124-45eae5167f33",
                                                                                  "3826373c-478f-435c-805a-a74ce0706230",
                                                                                  "b89281b0-06b2-417b-851d-f941232bb829",
                                                                                  "98704146-400e-40b5-b3cc-38ed534cfc60");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("0efe24ab-872e-4cd9-a430-0b98f90c7496",
                                                                                  "b00ce448-317c-493f-abb8-53d599573fd2",
                                                                                  new Date(1551867945382L),
                                                                                  "2de59bd3-002d-4895-b124-45eae5167f33",
                                                                                  "3826373c-478f-435c-805a-a74ce0706230",
                                                                                  "b89281b0-06b2-417b-851d-f941232bb829",
                                                                                  "98704146-400e-40b5-b3cc-38ed534cfc60");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("19d3134b-ad73-4cf9-bb03-11c53b3ab65f",
                                                                                  "c98adefe-4a1c-45df-a7b1-d7b56fe50c96",
                                                                                  new Date(1551867950369L),
                                                                                  "a02fce79-64d9-471b-9c04-75813122f15f",
                                                                                  "a802d3f8-b9b6-4c84-a044-3753aa279613",
                                                                                  "612ea44e-5d95-4c26-86d5-309ca8cb18bc",
                                                                                  "136f92c9-8e79-48aa-92ff-442d7519168d");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
