// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("420227aa-8ac1-484d-8e1d-7b501812577b",
                                                                                  "648b6afc-d520-44c2-9312-b0ab291e2b35",
                                                                                  new Date(1548165441794L),
                                                                                  "3ccaf10b-1b38-4986-b127-afb872859984",
                                                                                  "affb455f-9916-4516-9ee0-2adafc677e7b",
                                                                                  "ceecd9e7-e58b-4390-94a2-d62cde640b54",
                                                                                  "847bb671-07eb-4889-8b09-bfdd722cda14");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("45e33195-15d6-47ab-a580-ea7bca7ead98",
                                                                                  "799d0116-4ba2-4ab6-98c6-0fb44841f150",
                                                                                  new Date(1548165446924L),
                                                                                  "bf9b2565-a749-48c5-8718-0a190d928ca3",
                                                                                  "4311243d-9672-45e8-be76-6c896172e887",
                                                                                  "edf34d0d-dd49-43f8-b892-c2bc2c318672",
                                                                                  "d91c175b-5bc1-4af0-8365-75acd5191b9e");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("45e33195-15d6-47ab-a580-ea7bca7ead98",
                                                                                  "799d0116-4ba2-4ab6-98c6-0fb44841f150",
                                                                                  new Date(1548165446924L),
                                                                                  "bf9b2565-a749-48c5-8718-0a190d928ca3",
                                                                                  "4311243d-9672-45e8-be76-6c896172e887",
                                                                                  "edf34d0d-dd49-43f8-b892-c2bc2c318672",
                                                                                  "d91c175b-5bc1-4af0-8365-75acd5191b9e");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("2e2f01f6-b16d-461e-8d39-0bd79f61f47e",
                                                                             "7014b56b-2b97-48e0-b743-0df009cb255a",
                                                                             new Date(1548165443560L),
                                                                             "8e7177ee-f15e-40c0-8ec5-e62f12b29331",
                                                                             "48a21b6d-ace0-43b1-8fef-f553085239ab",
                                                                             "6efd2198-08da-4ffa-b863-2dac66c03ec7",
                                                                             "ba4e3378-6e48-41b1-a570-47243dce52c5");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("b4915430-092b-4a34-973b-abc166136670",
                                                                                    "2cde66d3-3598-4dcd-a891-e108521c84a8",
                                                                                    new Date(1548165445874L),
                                                                                    "56d88552-2c47-4e77-a830-9614f32f9ffa",
                                                                                    "78696642-193e-47fd-b0a3-a22f3d21bdfe",
                                                                                    null,
                                                                                    "91b393cc-fc0f-4c8f-85ce-e5f404a85193");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("25e031e2-5fea-4f48-b79e-d549ba3f8b90",
                                                                                  "ba3f534b-d6f9-4a75-963a-46a24a904b44",
                                                                                  new Date(1548165445565L),
                                                                                  "03b46fbe-544d-457b-b5eb-49170e42591c",
                                                                                  "38bc1dc5-08f8-41e9-b869-678f87dd9dfc",
                                                                                  "3f4ff5ba-ebf9-4eae-9df1-018b2b6b6e1b",
                                                                                  "9bed0fed-537f-430d-a769-fa7eee7b78c9");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("25e031e2-5fea-4f48-b79e-d549ba3f8b90",
                                                                                  "ba3f534b-d6f9-4a75-963a-46a24a904b44",
                                                                                  new Date(1548165445565L),
                                                                                  "03b46fbe-544d-457b-b5eb-49170e42591c",
                                                                                  "38bc1dc5-08f8-41e9-b869-678f87dd9dfc",
                                                                                  "3f4ff5ba-ebf9-4eae-9df1-018b2b6b6e1b",
                                                                                  "9bed0fed-537f-430d-a769-fa7eee7b78c9");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("677f6303-19ee-4d2f-8a03-e25d2437b78c",
                                                                                  "be4e6f0d-5ff6-4426-b7ef-eb3573535e36",
                                                                                  new Date(1548165446144L),
                                                                                  "3afd85c6-3934-4f6b-b3d5-7f77e3d1aad2",
                                                                                  "270aaff6-4974-4c26-b1a2-393a214db35e",
                                                                                  "86b87893-860a-4cb4-9020-4d82589fac33",
                                                                                  "158653f3-130c-4948-b4b6-3e31b5ecb507");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
