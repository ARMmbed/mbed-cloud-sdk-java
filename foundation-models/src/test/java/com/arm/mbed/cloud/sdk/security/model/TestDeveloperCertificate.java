// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("acbbf3a7-1d03-4ab7-87f2-f370cdacd1a0",
                                                                                  "cdcc6fbb-0efc-43a1-b370-b1aa9573b05a",
                                                                                  new Date(1547573360476L),
                                                                                  "becc4f80-c12d-40ed-b22b-3fa1134829bc",
                                                                                  "e6e3ff3c-fb36-4367-94f1-ca1030caa519",
                                                                                  "f3f94ec5-e3a0-4fcb-9bd0-e69b355ac0cf",
                                                                                  "1f2fa2b0-17a2-401b-a885-2c7ba0e9dbfc");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("279beb5a-b051-4d0c-b750-beebcfd8495f",
                                                                                  "49d04bf0-7edc-481b-b955-7f67902100b3",
                                                                                  new Date(1547573355389L),
                                                                                  "f2da899d-5812-4567-bfaa-9766c04a2766",
                                                                                  "25734be3-ca2e-4fff-8433-7bcef0e9a348",
                                                                                  "3110c782-39bf-45a2-a30d-83edd0262505",
                                                                                  "c0a9cdca-5427-4f61-ab3c-7646702faf15");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("279beb5a-b051-4d0c-b750-beebcfd8495f",
                                                                                  "49d04bf0-7edc-481b-b955-7f67902100b3",
                                                                                  new Date(1547573355389L),
                                                                                  "f2da899d-5812-4567-bfaa-9766c04a2766",
                                                                                  "25734be3-ca2e-4fff-8433-7bcef0e9a348",
                                                                                  "3110c782-39bf-45a2-a30d-83edd0262505",
                                                                                  "c0a9cdca-5427-4f61-ab3c-7646702faf15");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("195d5a24-20f3-41e1-8952-fa984ffe2dd2",
                                                                             "c26e7880-631a-4059-85ca-d8713b40f7ed",
                                                                             new Date(1547573363595L),
                                                                             "be3eb66b-aaa4-49ff-a9c1-f0342ab3d433",
                                                                             "28d5c327-fc82-4510-932b-88109d31e630",
                                                                             "8dc8cc7e-cdd8-4b00-b67e-a673ecb0b441",
                                                                             "f9f6679b-3ef0-45df-8cfc-d6dcdc910229");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("79e2b8ba-2d5b-442a-b165-a207c077ef5c",
                                                                                    "0af20a7f-97c8-4525-9f24-334e0ec7288d",
                                                                                    new Date(1547573359337L),
                                                                                    "deb27263-2c29-4649-ad77-1498d113949c",
                                                                                    "9acb0aa4-7faa-4480-82bf-d2e4b578c96b",
                                                                                    null,
                                                                                    "83fa64cf-d24d-4cc7-82f5-ebb988fd81a4");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("472c6698-608c-4616-8a45-a5a90a2fb3a6",
                                                                                  "e5a49024-d67b-46e1-8325-66083bf1d669",
                                                                                  new Date(1547573361176L),
                                                                                  "e3d0ea03-be87-4198-ad73-c9c2f30eb9a5",
                                                                                  "ca143d9a-6236-40a3-93d2-c0713c113e06",
                                                                                  "2324d5aa-7b17-4880-8dc9-7e8438f1b058",
                                                                                  "32f961c9-79f1-4b71-9ba5-0f187c396b28");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("472c6698-608c-4616-8a45-a5a90a2fb3a6",
                                                                                  "e5a49024-d67b-46e1-8325-66083bf1d669",
                                                                                  new Date(1547573361176L),
                                                                                  "e3d0ea03-be87-4198-ad73-c9c2f30eb9a5",
                                                                                  "ca143d9a-6236-40a3-93d2-c0713c113e06",
                                                                                  "2324d5aa-7b17-4880-8dc9-7e8438f1b058",
                                                                                  "32f961c9-79f1-4b71-9ba5-0f187c396b28");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("bbaf0e41-a6e1-4e59-bd60-ea379e5b5db5",
                                                                                  "58ed89f8-e9a5-4abb-8a5f-a3221379999c",
                                                                                  new Date(1547573358554L),
                                                                                  "96022529-1fdb-43b0-ab9f-51a3d49abf19",
                                                                                  "975e03df-14c0-48ec-98af-3925b42e8476",
                                                                                  "7446e9b9-a837-46cb-9e4e-37c0dea14e93",
                                                                                  "fe72de7d-e684-40f8-9b38-6d5ccc57049d");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
