// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("34b0e079-f0b6-4819-a44b-ac4e68cdeafe",
                                                                                  "ff6d3bd1-1825-4ebe-8259-afe9f9628fe4",
                                                                                  new Date(1559662781177L),
                                                                                  "d803daf1-e096-4e18-bd90-25856d55fa6e",
                                                                                  "7bc3ee9a-f5cd-4c56-9b68-5b91e67ac9d0",
                                                                                  "cf4ca3e8-fb90-40fd-a64a-7ebdfa099299",
                                                                                  "a1085988-1acf-4e59-b74e-d5d0077783ff",
                                                                                  "260d4eab-34f9-4b57-a986-735465e9e032");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("f2f43a80-4118-455d-8d18-e0ea3b719564",
                                                                                  "5e0564c1-b9e0-4f81-82e2-a07cddec5047",
                                                                                  new Date(1559662786249L),
                                                                                  "eee906b5-8f89-4dcb-b3d5-79212a3eb922",
                                                                                  "53cec093-2ae3-46e5-96af-33979a253abd",
                                                                                  "0711e80e-398b-4702-9b3a-3266300fa71b",
                                                                                  "6418799e-f26a-4817-8b7f-9dba27af6c6a",
                                                                                  "b3f0a34a-2b5e-4d19-a11e-766f2b19f4d9");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("f2f43a80-4118-455d-8d18-e0ea3b719564",
                                                                                  "5e0564c1-b9e0-4f81-82e2-a07cddec5047",
                                                                                  new Date(1559662786249L),
                                                                                  "eee906b5-8f89-4dcb-b3d5-79212a3eb922",
                                                                                  "53cec093-2ae3-46e5-96af-33979a253abd",
                                                                                  "0711e80e-398b-4702-9b3a-3266300fa71b",
                                                                                  "6418799e-f26a-4817-8b7f-9dba27af6c6a",
                                                                                  "b3f0a34a-2b5e-4d19-a11e-766f2b19f4d9");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("728124cc-f516-4044-9f1a-5e6e95b8f797",
                                                                             "5d452bd1-9fa6-465d-827a-8f8c508b53e0",
                                                                             new Date(1559662778711L),
                                                                             "25344e4b-4457-4c97-af0c-3d2f32307199",
                                                                             "8d56e81a-6dd7-429a-995c-c898b9752244",
                                                                             "4a5dd2c5-f55e-4152-b9fa-ebf75c9a43e5",
                                                                             "e46acfb8-a30c-4ebc-8e44-fe4340de4e02",
                                                                             "494a061c-0a85-470b-8523-d3af4ee03445");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("92f8621c-ec26-4063-8da7-c50acb1aa424",
                                                                                    "f67f3ffe-18df-4cbb-96f5-c3eea5cf3f85",
                                                                                    new Date(1559662785107L),
                                                                                    "f4fe665d-277d-4fe5-8509-f052a92ed312",
                                                                                    "99960cb7-bb27-48fa-a15f-1944b7bcd3a0",
                                                                                    "c54c632c-06cd-4d08-bb8e-8d19f5ac8efd",
                                                                                    null,
                                                                                    "bf8cb6b1-f3a7-4bf6-a561-ece222489fb0");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("486411e9-5c4b-4a62-a74e-8e6a176f71d1",
                                                                                  "4aa5a2a9-0628-45a9-a9f9-aa6184b2249b",
                                                                                  new Date(1559662785229L),
                                                                                  "0cc9bd89-17ff-49d2-b5cb-5138cd85e4cf",
                                                                                  "26a04615-690f-46b7-b1b6-9d6e766aaf17",
                                                                                  "0d3c0afd-ae7f-4e52-a69b-3b0ab8141ed7",
                                                                                  "85e8f1e1-c982-4ec6-b547-c9ee9365561e",
                                                                                  "7976cdc8-3d48-4a3f-b131-b0a0f9525625");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("486411e9-5c4b-4a62-a74e-8e6a176f71d1",
                                                                                  "4aa5a2a9-0628-45a9-a9f9-aa6184b2249b",
                                                                                  new Date(1559662785229L),
                                                                                  "0cc9bd89-17ff-49d2-b5cb-5138cd85e4cf",
                                                                                  "26a04615-690f-46b7-b1b6-9d6e766aaf17",
                                                                                  "0d3c0afd-ae7f-4e52-a69b-3b0ab8141ed7",
                                                                                  "85e8f1e1-c982-4ec6-b547-c9ee9365561e",
                                                                                  "7976cdc8-3d48-4a3f-b131-b0a0f9525625");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("fb33190e-5a92-49b2-89f3-caf85f0822a0",
                                                                                  "aaa64e13-d359-4ad7-a5e9-99d38feaa612",
                                                                                  new Date(1559662784713L),
                                                                                  "4e8d91b8-cfaf-47c1-8b49-da9a56dfc2f0",
                                                                                  "d1f6b32b-b23b-413a-9184-d675b06a220f",
                                                                                  "a6a1e6db-3202-4673-9545-f2938f600870",
                                                                                  "21b993e8-230e-4d26-93ac-d97d9354a518",
                                                                                  "8a9abec8-6285-4d97-8225-2eea32cc9979");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
