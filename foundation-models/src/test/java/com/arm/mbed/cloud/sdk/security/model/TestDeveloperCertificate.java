// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("d940214c-9c42-4c0c-ad19-719f35957c9e",
                                                                                  "4a5dbcb1-e102-48a7-8bfa-92d1d215cbb2",
                                                                                  new Date(1559752146957L),
                                                                                  "0848da5a-d579-4981-ad42-80ef045c19a0",
                                                                                  "3dc9b43f-f881-475f-baaf-d1d8013d6420",
                                                                                  "fb72a146-943f-4d9a-ab8e-414db1c357fa",
                                                                                  "8e9135e3-9643-4bcf-8ace-0e081416c7d4",
                                                                                  "692bb7cc-7c85-4510-844e-d8ac1ad6b158");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("aeadaf6f-ad83-4dbb-8bbb-6bab8323f330",
                                                                                  "32cea3b2-87f7-49bb-a562-5fb7a8e01a23",
                                                                                  new Date(1559752152756L),
                                                                                  "0680a273-8bae-4244-9d8d-c2bd67a0d6fc",
                                                                                  "b97deeb3-0669-4bb5-84f9-7eb0a54b7dbd",
                                                                                  "2a076f9f-66a6-44fd-ac72-9250619d511c",
                                                                                  "cc4b662b-0797-4ee5-91ed-5e2b06c101e8",
                                                                                  "224e5e83-8519-4c9d-9516-93835dbdffea");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("aeadaf6f-ad83-4dbb-8bbb-6bab8323f330",
                                                                                  "32cea3b2-87f7-49bb-a562-5fb7a8e01a23",
                                                                                  new Date(1559752152756L),
                                                                                  "0680a273-8bae-4244-9d8d-c2bd67a0d6fc",
                                                                                  "b97deeb3-0669-4bb5-84f9-7eb0a54b7dbd",
                                                                                  "2a076f9f-66a6-44fd-ac72-9250619d511c",
                                                                                  "cc4b662b-0797-4ee5-91ed-5e2b06c101e8",
                                                                                  "224e5e83-8519-4c9d-9516-93835dbdffea");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("a1ced6a4-c0e0-4dd6-9ab4-db36e54aa27e",
                                                                             "0d44158f-2191-48c3-83e8-e04563b28c21",
                                                                             new Date(1559752147164L),
                                                                             "51c00904-ded1-4b78-a8d1-a22b35562f85",
                                                                             "87441212-18b0-405f-8787-c662d3e17906",
                                                                             "3c99ebf6-1f66-4885-b1aa-44baae1e6e1a",
                                                                             "6814de42-2441-4600-913c-b4c5d6fff65a",
                                                                             "1c65a935-fa2f-4d30-abc4-00c495015b05");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("be4a1534-7add-4167-a4e2-dd59a5b188c7",
                                                                                    "e74ca149-0bd7-41c2-8bd7-04976b861a8e",
                                                                                    new Date(1559752150852L),
                                                                                    "03f5b893-d979-4fd0-b604-dc7f27f2df2e",
                                                                                    "24b411a8-040b-4b4b-a017-98b4ab6354da",
                                                                                    "fe9fa05b-f8f8-4459-b26c-4856b8bff7d2",
                                                                                    null,
                                                                                    "6cd67fa5-eb37-4ff5-a9ff-4dbcd49d8b38");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("3b6eb62a-3862-4473-a2d5-3c5ac8700a6e",
                                                                                  "fa202ef3-71fc-453e-ba56-c43f6fb1986c",
                                                                                  new Date(1559752148721L),
                                                                                  "c146ffe0-149d-4490-9df2-8061dcccbd20",
                                                                                  "cfa45ec0-a5dd-40f6-95b4-f4f4174a40a6",
                                                                                  "a87f94f7-9c63-4d87-b84d-b999c74b7d2f",
                                                                                  "df177b8e-a8be-446f-9d65-35ed9fa36560",
                                                                                  "56f35052-987c-4326-9bda-03e895c73313");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("3b6eb62a-3862-4473-a2d5-3c5ac8700a6e",
                                                                                  "fa202ef3-71fc-453e-ba56-c43f6fb1986c",
                                                                                  new Date(1559752148721L),
                                                                                  "c146ffe0-149d-4490-9df2-8061dcccbd20",
                                                                                  "cfa45ec0-a5dd-40f6-95b4-f4f4174a40a6",
                                                                                  "a87f94f7-9c63-4d87-b84d-b999c74b7d2f",
                                                                                  "df177b8e-a8be-446f-9d65-35ed9fa36560",
                                                                                  "56f35052-987c-4326-9bda-03e895c73313");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("9c21fb2d-a75b-4b4c-8ed2-2cf8873ccf39",
                                                                                  "3cacfef7-f1a4-4ed7-8f08-9e2992198667",
                                                                                  new Date(1559752149459L),
                                                                                  "e2bcca41-7ce2-4339-b206-1caf99d6f469",
                                                                                  "7d0ec867-7d0f-48a4-9f64-f7915cb0a285",
                                                                                  "1050699a-0269-4a8f-a38c-f66694fe3cfb",
                                                                                  "ee1c5b09-c33d-4e16-9156-5060d4ba786b",
                                                                                  "db114ff7-ba69-4369-8208-6d8200f0f913");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
