// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("4246557f-a97c-408f-becb-75a1f70fd55d",
                                                                                  "3762a0b9-73b3-4ac7-ab07-4afca19ff328",
                                                                                  new Date(1559754641837L),
                                                                                  "4053560c-2e47-441b-8022-01728cc2f773",
                                                                                  "cfb7f87f-116c-48f6-a4dd-7a903c1455ae",
                                                                                  "0040442f-db07-44aa-aa39-eae035af676f",
                                                                                  "903a8cae-a982-4514-b098-01c610c1f42a",
                                                                                  "d106b0a2-7f5b-482f-a5c5-eb81bbd6b093");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("a8481fa5-6740-41de-93a2-631df6b0d76b",
                                                                                  "d760c90b-dc43-43af-b1e4-87c585e7871c",
                                                                                  new Date(1559754641867L),
                                                                                  "d44a5690-d643-4950-a9b5-83d3a44474a3",
                                                                                  "87f0ff84-0b81-4632-8d09-7e4dad8a35d8",
                                                                                  "df372e8b-d909-4592-b8b4-f9d726638b3a",
                                                                                  "f488e722-cfca-48d2-a4e1-3d116b0dbb98",
                                                                                  "a54e7386-e194-408c-b9a3-77df083bfa89");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("a8481fa5-6740-41de-93a2-631df6b0d76b",
                                                                                  "d760c90b-dc43-43af-b1e4-87c585e7871c",
                                                                                  new Date(1559754641867L),
                                                                                  "d44a5690-d643-4950-a9b5-83d3a44474a3",
                                                                                  "87f0ff84-0b81-4632-8d09-7e4dad8a35d8",
                                                                                  "df372e8b-d909-4592-b8b4-f9d726638b3a",
                                                                                  "f488e722-cfca-48d2-a4e1-3d116b0dbb98",
                                                                                  "a54e7386-e194-408c-b9a3-77df083bfa89");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("2e1f1448-c2c3-47d0-a2a2-56b9595feae6",
                                                                             "0dbc92e7-e29a-4da3-b5e6-597e235a9f78",
                                                                             new Date(1559754636483L),
                                                                             "0a20557f-9f8f-4f85-91f5-17ddb0dd5816",
                                                                             "0a3c708a-f108-47c4-9d71-fb0550a70b04",
                                                                             "1d92458f-2f16-414f-8609-8124820592e4",
                                                                             "18b17288-74f9-43b4-aeb5-d3c8d3cb04e4",
                                                                             "de629682-07b5-45d0-99fb-5ad98c7990c0");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("28fa2acb-3606-412a-89e7-1944a6915b21",
                                                                                    "35124b75-39d7-4251-8a26-199ed182c044",
                                                                                    new Date(1559754644477L),
                                                                                    "d4c4a738-3897-4d2d-8b7d-2e3cad6e2959",
                                                                                    "7bc0d1ec-d9f0-453c-90ac-8442f5bb4f57",
                                                                                    "fd956c68-7644-47f5-a780-67ee2be3f8ff",
                                                                                    null,
                                                                                    "472c2191-29c7-4c8d-8bac-2cb4102ca83f");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("96fa7df0-d6b3-4f19-a806-bacf19653274",
                                                                                  "af4d34b7-0e50-4b2b-8901-787cb6e009bc",
                                                                                  new Date(1559754642422L),
                                                                                  "13639079-fd4a-445a-b752-b2e018277c35",
                                                                                  "1abb7685-3d93-453f-8a20-27a7b27842a3",
                                                                                  "1cdf5666-68d8-42fa-be2f-dc84ab31a368",
                                                                                  "74acf4b9-34a8-4612-bf48-a23f3766489a",
                                                                                  "313bed55-00de-4544-890b-592b8eb133a6");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("96fa7df0-d6b3-4f19-a806-bacf19653274",
                                                                                  "af4d34b7-0e50-4b2b-8901-787cb6e009bc",
                                                                                  new Date(1559754642422L),
                                                                                  "13639079-fd4a-445a-b752-b2e018277c35",
                                                                                  "1abb7685-3d93-453f-8a20-27a7b27842a3",
                                                                                  "1cdf5666-68d8-42fa-be2f-dc84ab31a368",
                                                                                  "74acf4b9-34a8-4612-bf48-a23f3766489a",
                                                                                  "313bed55-00de-4544-890b-592b8eb133a6");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("ae799f65-013e-4e64-8e56-132fc8c594d8",
                                                                                  "35edb4a8-d774-4171-bda8-ef60e1ddbced",
                                                                                  new Date(1559754635825L),
                                                                                  "31b7e802-00c2-4db7-bb15-bfc64fe65deb",
                                                                                  "8d3fe135-4c54-4fa9-82a4-b1fc317556d3",
                                                                                  "9cb8b240-983d-4fa1-8dd9-4ba846684952",
                                                                                  "96f90ddd-115a-4f3a-9de5-38da46899f99",
                                                                                  "b8d1d636-45f8-456b-b33f-f8f409aec935");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
