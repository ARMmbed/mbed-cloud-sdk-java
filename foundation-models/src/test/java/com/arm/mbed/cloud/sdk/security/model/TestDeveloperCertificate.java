// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("0a2d9631-60f9-4431-8504-d27884525846",
                                                                                  "4394ba3d-0b45-4f11-baf6-0ba319f90d2b",
                                                                                  new Date(1547164362594L),
                                                                                  "8025c566-0914-48a6-a567-e4dbe1747bdc",
                                                                                  "a93c38f5-73b9-401b-be6a-5eb5335241d4",
                                                                                  "289bd747-ab40-40c9-8ced-20e1e03a4f1d",
                                                                                  "56d2ce0f-8783-4a06-9d1d-7f96b65b85aa");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("32103812-358b-498b-880e-878cc4984b85",
                                                                                  "e3cdab75-75a1-476f-bd24-e6924f4baec7",
                                                                                  new Date(1547164358380L),
                                                                                  "c7ec525f-d3dc-4eaf-ba58-42732fc75ea9",
                                                                                  "ecfc3573-d2f9-426b-8e7d-dac50eb6066d",
                                                                                  "66181650-6afd-4fea-bbb1-8051f3e8e588",
                                                                                  "ece1b2bb-7ba6-43c3-8ddd-0670416812a1");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("32103812-358b-498b-880e-878cc4984b85",
                                                                                  "e3cdab75-75a1-476f-bd24-e6924f4baec7",
                                                                                  new Date(1547164358380L),
                                                                                  "c7ec525f-d3dc-4eaf-ba58-42732fc75ea9",
                                                                                  "ecfc3573-d2f9-426b-8e7d-dac50eb6066d",
                                                                                  "66181650-6afd-4fea-bbb1-8051f3e8e588",
                                                                                  "ece1b2bb-7ba6-43c3-8ddd-0670416812a1");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("8dae82b6-62a9-4d5d-8812-90fa48b90271",
                                                                             "6ddbeb2a-e720-4a33-a605-41df24f981b1",
                                                                             new Date(1547164360805L),
                                                                             "c475f07e-05dd-49a6-8a20-e7d3f732cedb",
                                                                             "5df005c5-8ecb-472d-92be-0a6242aa4e72",
                                                                             "fca3858d-01b9-4c3f-9ec2-d83619ecba84",
                                                                             "588c8510-0c59-413b-aae3-58c3dbcbc01d");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("b207501e-52e9-4096-abc5-e5c5b0ff8fd0",
                                                                                    "61596480-3acc-4c59-9433-e2bc6a9614dc",
                                                                                    new Date(1547164365213L),
                                                                                    "b564c68c-4649-49dd-8a42-3c1896855b43",
                                                                                    null, null,
                                                                                    "cfd2b1cf-5bd7-4e05-afb2-3b2531eed26f");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("1f46aa6a-b8e6-4815-9f4d-f26680a6f4d9",
                                                                                  "06fb0396-984e-495b-958a-09665e59215a",
                                                                                  new Date(1547164364364L),
                                                                                  "d0f300ce-c227-420f-85e6-baeb00097efc",
                                                                                  "dd6dba1e-07d2-4a72-a534-fd20d4ef4615",
                                                                                  "939c3339-30bd-46a4-aef0-bf5385ab96b8",
                                                                                  "b291ba43-59c8-4a84-b324-6430e7d3e878");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("1f46aa6a-b8e6-4815-9f4d-f26680a6f4d9",
                                                                                  "06fb0396-984e-495b-958a-09665e59215a",
                                                                                  new Date(1547164364364L),
                                                                                  "d0f300ce-c227-420f-85e6-baeb00097efc",
                                                                                  "dd6dba1e-07d2-4a72-a534-fd20d4ef4615",
                                                                                  "939c3339-30bd-46a4-aef0-bf5385ab96b8",
                                                                                  "b291ba43-59c8-4a84-b324-6430e7d3e878");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("d184ed37-fdec-480a-a0fc-7889a4afe650",
                                                                                  "8f204f96-ef2a-49ec-9894-7f5ec3a2176a",
                                                                                  new Date(1547164363942L),
                                                                                  "b7d683af-2733-4cd7-893f-7e0047a8a399",
                                                                                  "633d8ce3-ba38-493b-b016-aafea0e98039",
                                                                                  "b4d72781-66b1-42b7-9a87-ff27267afa4e",
                                                                                  "aee1231f-fee7-4c51-b19d-a11ed80d216b");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
