// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("7577a895-7981-4d90-9e0d-5f6fe3c7ca93",
                                                                                  "15fe3bdc-65e7-48fd-8704-2e8548380883",
                                                                                  new Date(1558096041145L),
                                                                                  "e12fcde6-48bf-43ce-8b62-cd003555e935",
                                                                                  "24a67018-6a2e-4bee-a4d2-0fc783d0b4de",
                                                                                  "88ee5262-a2dd-46b6-be40-771ac129791e",
                                                                                  "586783df-c964-4c03-88b9-fabe0acf8e5c",
                                                                                  "98309c18-7853-4fdd-a753-6ca599752c0a");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("7d7e5f4e-0c3d-4b4d-9ef0-ee17b940f6e6",
                                                                                  "6d61489b-fbd3-4630-9063-43ed5e93497f",
                                                                                  new Date(1558096040725L),
                                                                                  "9eb047ca-be9d-40d4-8931-1d0f83e17763",
                                                                                  "9e26b1b9-3da7-4f7c-a986-48510d2b0e38",
                                                                                  "196f6159-dd7f-42b6-abd5-03a9a7873fe0",
                                                                                  "c442e187-60a8-485a-bbe5-c562310858a5",
                                                                                  "2a12d657-7080-49c2-ae15-7a033d584855");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("7d7e5f4e-0c3d-4b4d-9ef0-ee17b940f6e6",
                                                                                  "6d61489b-fbd3-4630-9063-43ed5e93497f",
                                                                                  new Date(1558096040725L),
                                                                                  "9eb047ca-be9d-40d4-8931-1d0f83e17763",
                                                                                  "9e26b1b9-3da7-4f7c-a986-48510d2b0e38",
                                                                                  "196f6159-dd7f-42b6-abd5-03a9a7873fe0",
                                                                                  "c442e187-60a8-485a-bbe5-c562310858a5",
                                                                                  "2a12d657-7080-49c2-ae15-7a033d584855");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("34fdf8fe-8bf9-45db-aedd-ed9fb67c6645",
                                                                             "e5657958-6c4e-4b02-8f99-5275a8c7f391",
                                                                             new Date(1558096044807L),
                                                                             "22467232-0766-4b79-b659-13f1588d6d60",
                                                                             "5e403738-0e44-4f14-b0ef-d96e2aa462ea",
                                                                             "0ab5ceb3-564d-46e1-84d3-8ba2774e7c7c",
                                                                             "d9228f8e-796a-4f63-9355-a382e7c8f656",
                                                                             "047bb128-0446-4225-b3b5-4c33a48bd02d");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("7728c09c-1753-4093-9574-14222fa33d79",
                                                                                    "4406ce8f-7fd1-4057-9b05-97ea20613cc7",
                                                                                    new Date(1558096037145L),
                                                                                    "80d18799-decc-4cbe-a11f-9a418daf1a1f",
                                                                                    "80d1868b-1974-44f9-9f45-e72b2f9fd7d1",
                                                                                    "362f3305-774b-40b4-941e-fa42da757a7d",
                                                                                    null,
                                                                                    "6bf1e21a-504d-4993-a597-b03fc6ddd957");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("6d05cbde-e42d-4130-b4bc-325c81aae414",
                                                                                  "c44a8eeb-3afd-422b-a4e0-094b26007038",
                                                                                  new Date(1558096038632L),
                                                                                  "f62c0c26-ad40-4763-8531-ebc97f42b9e7",
                                                                                  "3a2ff7e0-f58c-4c31-bfa2-b13b93f06a30",
                                                                                  "b8fe06be-f3f3-43b9-befd-2b6630848a54",
                                                                                  "727bc99a-3ef1-4c5b-ba4c-5140650c1a15",
                                                                                  "dadb44ac-28a8-4e5b-9363-9925b8e09fa0");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("6d05cbde-e42d-4130-b4bc-325c81aae414",
                                                                                  "c44a8eeb-3afd-422b-a4e0-094b26007038",
                                                                                  new Date(1558096038632L),
                                                                                  "f62c0c26-ad40-4763-8531-ebc97f42b9e7",
                                                                                  "3a2ff7e0-f58c-4c31-bfa2-b13b93f06a30",
                                                                                  "b8fe06be-f3f3-43b9-befd-2b6630848a54",
                                                                                  "727bc99a-3ef1-4c5b-ba4c-5140650c1a15",
                                                                                  "dadb44ac-28a8-4e5b-9363-9925b8e09fa0");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("c7bc09c6-757a-421a-af5d-f9bae91d19b4",
                                                                                  "e74f4285-860e-4337-a8fb-ee0052f321b1",
                                                                                  new Date(1558096042127L),
                                                                                  "adfa25b6-c128-46dd-9285-f9a8e993370c",
                                                                                  "12cd721b-6003-48eb-9e65-8475893640d8",
                                                                                  "dcdf2ae9-fe1f-4c05-be43-4fb51b6c1c9c",
                                                                                  "7024ff9a-fb1c-44b3-a8b0-180672593d34",
                                                                                  "956f59cf-cd3e-4ccc-b94c-4f6be6cb1409");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
