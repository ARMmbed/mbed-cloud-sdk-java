// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("335eb835-c64d-42e2-acd3-bf1d7e45c430",
                                                                                  "e1338473-793a-45cd-832c-c7928ca4df73",
                                                                                  new Date(1559746947406L),
                                                                                  "0e2689f6-056d-4f4f-9492-c7a72ca311f9",
                                                                                  "c5858338-f2dc-4d8b-acae-155e1b60b772",
                                                                                  "a4a8693d-da1e-4ed7-9848-0a63e9483069",
                                                                                  "41a5a284-10a8-4d2a-8b77-835a18346735",
                                                                                  "5cd0a30f-2a64-4a74-82b5-fdfea1d05ebf");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("132327a6-9b17-464f-a52a-82fa33373492",
                                                                                  "e4f0dc21-694d-46c7-9745-8b38e2f21786",
                                                                                  new Date(1559746950770L),
                                                                                  "a53e6260-a812-4649-99a7-2b102e27372b",
                                                                                  "96780e1e-c5c2-445b-ad18-db498aa9aa0c",
                                                                                  "3f5a0fe9-0413-4dc8-8523-35481b6da7f8",
                                                                                  "ca9dd173-43c8-4cff-a498-4cb0afa075b3",
                                                                                  "b0053f12-5d32-411d-bdf9-c8851c2260b4");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("132327a6-9b17-464f-a52a-82fa33373492",
                                                                                  "e4f0dc21-694d-46c7-9745-8b38e2f21786",
                                                                                  new Date(1559746950770L),
                                                                                  "a53e6260-a812-4649-99a7-2b102e27372b",
                                                                                  "96780e1e-c5c2-445b-ad18-db498aa9aa0c",
                                                                                  "3f5a0fe9-0413-4dc8-8523-35481b6da7f8",
                                                                                  "ca9dd173-43c8-4cff-a498-4cb0afa075b3",
                                                                                  "b0053f12-5d32-411d-bdf9-c8851c2260b4");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("2c4e6d46-332d-432e-ab8b-00d2eebd0ba7",
                                                                             "b6a0ed28-940e-4e2f-abcd-408ac6096247",
                                                                             new Date(1559746952266L),
                                                                             "07ec3c11-40da-43d2-bf57-93d701cc967e",
                                                                             "26ff980a-0909-46e6-9d55-fbaed3a558ca",
                                                                             "cfb5983e-27a4-4e64-80f7-5a9b35aa57b6",
                                                                             "595293aa-caf9-4b4b-a26a-071224a792c2",
                                                                             "e71aab41-e35c-46c5-b8d6-e3c0bfb92942");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("70dd3e28-f36e-461e-a43d-900a427a0741",
                                                                                    "fd2cd4d2-9f81-46c4-b445-af5aa9bfb1f2",
                                                                                    new Date(1559746953969L),
                                                                                    "23bf4d75-a995-4616-80b5-adf93d6162ee",
                                                                                    "dc62a0b7-999f-4ade-a4b4-30a7c2d3530c",
                                                                                    "ca8e0844-da61-4560-bde7-b77bba40f13b",
                                                                                    null,
                                                                                    "6d219e5d-dacc-40ef-9968-eb574dfd1926");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("527ce94f-6998-4e0e-80b8-a0357efa7217",
                                                                                  "290851ce-610f-4ea2-a29e-18a4b53be7d2",
                                                                                  new Date(1559746947889L),
                                                                                  "5d23d4e1-5de9-431a-8cbe-92310258339a",
                                                                                  "cb17a263-adf4-4c38-96f7-cf003f0d25fe",
                                                                                  "b998eb5a-0c23-4a90-a6a6-c3dd34027076",
                                                                                  "3f37d64f-5648-4b48-8853-64eab47bb61c",
                                                                                  "4569c51f-a84a-43a7-8b3d-f130ee604bbf");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("527ce94f-6998-4e0e-80b8-a0357efa7217",
                                                                                  "290851ce-610f-4ea2-a29e-18a4b53be7d2",
                                                                                  new Date(1559746947889L),
                                                                                  "5d23d4e1-5de9-431a-8cbe-92310258339a",
                                                                                  "cb17a263-adf4-4c38-96f7-cf003f0d25fe",
                                                                                  "b998eb5a-0c23-4a90-a6a6-c3dd34027076",
                                                                                  "3f37d64f-5648-4b48-8853-64eab47bb61c",
                                                                                  "4569c51f-a84a-43a7-8b3d-f130ee604bbf");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("2ea6c33d-a892-4d53-a098-f77648e43f76",
                                                                                  "fd87678d-2139-4e5b-a978-b8b222e20e9e",
                                                                                  new Date(1559746955606L),
                                                                                  "01acfe0b-7f16-46df-ba46-0fa7c583fd66",
                                                                                  "73358b0e-f65f-4dd0-952d-021c01ad29c0",
                                                                                  "d101e2bd-b041-4b03-8882-62fce375bf6a",
                                                                                  "6736d425-a103-4b7e-98b7-b707893e90e6",
                                                                                  "c5c04898-a614-4f3e-9e84-3e49e0ab9852");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
