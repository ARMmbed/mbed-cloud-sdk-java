// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("866e0beb-5be7-41c5-b3dc-c973b3912e3a",
                                                                                  "8f54e7da-7aa9-4530-a2ae-2fdc4ded4811",
                                                                                  new Date(1559655030082L),
                                                                                  "6090c401-aecc-49d5-8545-88df73b31705",
                                                                                  "c6a67136-830a-4fc9-9f70-e74feace870b",
                                                                                  "aab51d89-b92c-45d9-94e3-46b188147d3d",
                                                                                  "018b312a-2bb0-4018-a994-07d8f8f576ae",
                                                                                  "0e657ced-219d-4896-a523-dc23875ca71e");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("7c85460f-e0bf-4162-b908-ed4c0ca3c93d",
                                                                                  "0e6956c9-04ce-4ebe-a8e8-62d82043d7c8",
                                                                                  new Date(1559655030192L),
                                                                                  "50324b09-3953-4f6c-868e-9fe25b7b940a",
                                                                                  "ce3c57ae-f0ee-422b-9ad8-b8515d3dc1b6",
                                                                                  "a0e4a7f2-64c4-448f-b564-ac6dc1f7cc4e",
                                                                                  "6601d5e7-4e14-4cb3-bd51-cd10c2a5e516",
                                                                                  "005a1659-f920-46b9-bb57-fcd5d6562b74");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("7c85460f-e0bf-4162-b908-ed4c0ca3c93d",
                                                                                  "0e6956c9-04ce-4ebe-a8e8-62d82043d7c8",
                                                                                  new Date(1559655030192L),
                                                                                  "50324b09-3953-4f6c-868e-9fe25b7b940a",
                                                                                  "ce3c57ae-f0ee-422b-9ad8-b8515d3dc1b6",
                                                                                  "a0e4a7f2-64c4-448f-b564-ac6dc1f7cc4e",
                                                                                  "6601d5e7-4e14-4cb3-bd51-cd10c2a5e516",
                                                                                  "005a1659-f920-46b9-bb57-fcd5d6562b74");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("22596df8-49f7-416b-8106-69772c4cabba",
                                                                             "34a6e33a-760f-4903-ac8a-fcf2e69a1e8e",
                                                                             new Date(1559655030731L),
                                                                             "4f47d4e3-0af3-4192-a3e0-38bc65f15602",
                                                                             "14f9f645-580a-4593-873d-84930ee64770",
                                                                             "a4b68872-2eb7-4d7b-9f11-f01059a65e5d",
                                                                             "2a216605-f7b5-424c-9c42-4b1e1226de25",
                                                                             "d9cc76c3-6725-4427-98d2-3208972a767c");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("a494dfe5-bb33-4ac4-bf78-f46f231e5552",
                                                                                    "7b96134f-54c2-46d3-af8d-a446d2e934dc",
                                                                                    new Date(1559655033351L),
                                                                                    "66605455-f716-4883-83a3-5ab23e37287f",
                                                                                    "c77e8c71-c772-4f7c-a067-5dbc5ba5e7f8",
                                                                                    "a6ee36af-d894-4f27-a15d-896c2a6d5d67",
                                                                                    null,
                                                                                    "06fd783f-d752-45ed-9051-757257d5a19e");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("94963ff1-0ae9-4a92-88c5-fc23d9e362f6",
                                                                                  "3eb5878d-4af3-485d-8ef9-d894c5c6d07c",
                                                                                  new Date(1559655035438L),
                                                                                  "cf523aaa-b398-4ea4-a3fb-30cfe28cc098",
                                                                                  "d4759fc5-15d4-4481-b03b-e267e5b569cf",
                                                                                  "03d52082-3f30-4b2c-a3a7-5a3a280b3c83",
                                                                                  "dff39ecb-70ea-4b13-821a-b7f7bfde8ae7",
                                                                                  "eeb11f3c-d957-4f9a-9b99-c826eef4309d");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("94963ff1-0ae9-4a92-88c5-fc23d9e362f6",
                                                                                  "3eb5878d-4af3-485d-8ef9-d894c5c6d07c",
                                                                                  new Date(1559655035438L),
                                                                                  "cf523aaa-b398-4ea4-a3fb-30cfe28cc098",
                                                                                  "d4759fc5-15d4-4481-b03b-e267e5b569cf",
                                                                                  "03d52082-3f30-4b2c-a3a7-5a3a280b3c83",
                                                                                  "dff39ecb-70ea-4b13-821a-b7f7bfde8ae7",
                                                                                  "eeb11f3c-d957-4f9a-9b99-c826eef4309d");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("e03c6a02-b5f7-4cd4-b491-edddc368aeb1",
                                                                                  "6d4f4892-f79b-4482-8865-6b4df00c9774",
                                                                                  new Date(1559655027925L),
                                                                                  "e4630c86-ce45-49e1-af36-b1081ef99efc",
                                                                                  "2792e427-4587-4733-8e06-dd3e1a6e089f",
                                                                                  "d091a49d-e0f6-4875-a301-8ebe44e9789c",
                                                                                  "72832f7f-67c9-40ad-b627-b5fb63e7a72a",
                                                                                  "ea05883a-0005-4a9f-9ad5-2542b5f2fe12");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
