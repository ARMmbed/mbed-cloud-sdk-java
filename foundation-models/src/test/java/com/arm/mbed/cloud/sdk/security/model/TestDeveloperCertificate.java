// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("5430a5c7-0590-40d0-b4c1-1472eb78c833",
                                                                                  "66ccc5fe-941e-48d8-998d-8f3a5d45ebdc",
                                                                                  new Date(1547489763258L),
                                                                                  "95111575-4b0f-4ca4-acc3-47ef606bd02e",
                                                                                  "63b3de5d-de25-40ae-8413-c0fb2d1755be",
                                                                                  "0fb13944-d2bc-4c53-ba3b-cafe4644b051",
                                                                                  "54c9e299-6bdf-4eb2-8da5-40829a02e06a");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("43cab426-6ce9-40b3-b0b5-4d1582e93725",
                                                                                  "46970bee-8eaf-483c-847d-217ebb03b9f6",
                                                                                  new Date(1547489767989L),
                                                                                  "88b5e3b6-6c7e-4610-83cd-492aff39f69d",
                                                                                  "1ca58d5f-9554-4810-a2bd-0faf0ab77d69",
                                                                                  "0d5fac92-7792-41f1-a57b-8e34088e0105",
                                                                                  "c4d8bb42-6444-46a0-8dd1-5fa1d25f4403");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("43cab426-6ce9-40b3-b0b5-4d1582e93725",
                                                                                  "46970bee-8eaf-483c-847d-217ebb03b9f6",
                                                                                  new Date(1547489767989L),
                                                                                  "88b5e3b6-6c7e-4610-83cd-492aff39f69d",
                                                                                  "1ca58d5f-9554-4810-a2bd-0faf0ab77d69",
                                                                                  "0d5fac92-7792-41f1-a57b-8e34088e0105",
                                                                                  "c4d8bb42-6444-46a0-8dd1-5fa1d25f4403");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("82d3b721-6811-407f-9d3b-d133c974f416",
                                                                             "579876e8-3b3c-46ea-8ff9-4a89e9afe0ae",
                                                                             new Date(1547489766040L),
                                                                             "6c6a90c4-e501-4b5a-94c8-4e1a05d1e169",
                                                                             "349d761f-13ca-483b-9d83-42e058fe727c",
                                                                             "4f35e83e-13ee-4415-ab8b-85b8335c108b",
                                                                             "384d1300-8210-43a9-b348-6ad401b80cb9");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("900761f6-dafe-4525-82d4-b3317822dee4",
                                                                                    "2a0a5fb2-cee1-47ce-8a6e-0667ef7a0373",
                                                                                    new Date(1547489769610L),
                                                                                    "eedcdd83-cdb7-4a73-80f1-52c761a61e2a",
                                                                                    "0da7343e-3ae0-407c-8810-d7bfb8530737",
                                                                                    null,
                                                                                    "2a3d1d7e-1144-4eb8-8dcb-74e8c3271a8f");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("0c737cd5-9171-4c2f-bb92-88aa82d21ce7",
                                                                                  "fbb144e9-259e-4fed-8ee0-55357f2ea743",
                                                                                  new Date(1547489770764L),
                                                                                  "af4bf86e-395c-4e39-8675-02c6b2d98ea1",
                                                                                  "12490850-7e7e-45da-9ca0-d90a179af6e7",
                                                                                  "1a576c5e-3408-478c-b4b2-9ab00459c5a4",
                                                                                  "9c7594b4-8628-45da-b2b7-0afd43875d64");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("0c737cd5-9171-4c2f-bb92-88aa82d21ce7",
                                                                                  "fbb144e9-259e-4fed-8ee0-55357f2ea743",
                                                                                  new Date(1547489770764L),
                                                                                  "af4bf86e-395c-4e39-8675-02c6b2d98ea1",
                                                                                  "12490850-7e7e-45da-9ca0-d90a179af6e7",
                                                                                  "1a576c5e-3408-478c-b4b2-9ab00459c5a4",
                                                                                  "9c7594b4-8628-45da-b2b7-0afd43875d64");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("b595d8b3-55bd-4945-98ab-d8aae4932ec0",
                                                                                  "b0fd8e5a-2dcc-40d6-8fbc-e0c61898e714",
                                                                                  new Date(1547489767518L),
                                                                                  "4aff2396-39ef-42b3-b81c-80b53464ff58",
                                                                                  "1ae73353-6cf8-4b70-90cf-1f011e3ffee1",
                                                                                  "89a629ee-b0fe-4c8e-b9bc-c56ea3896d85",
                                                                                  "356df849-c7f4-4b97-93c2-e16333d46138");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
