// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("5b85add5-60fd-43a4-b1c6-e0f5a9aa6586",
                                                                                  "11cc28a6-4d89-40d2-bde5-c988d2e998d7",
                                                                                  new Date(1547225115845L),
                                                                                  "99252906-5851-484c-ac52-1cfa93f7eeb2",
                                                                                  "53819047-d284-4ca7-b85d-e1fba3589c59",
                                                                                  "a9034e5a-ebdc-4bcf-a0f9-3a6d69d6e3ac",
                                                                                  "72f15c46-dfa0-4812-b3fc-f4ef0438db39");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("28bd9062-6c18-4336-b384-ae6eeb8313db",
                                                                                  "2d57fbb5-fae0-4e0e-a162-981ea0027551",
                                                                                  new Date(1547225119498L),
                                                                                  "7044a362-70e9-4b89-8b3b-8c94c6514595",
                                                                                  "05944f2e-f483-43d6-8ddc-f026551f139f",
                                                                                  "9da27258-b5d6-41c7-bcf0-82df95987882",
                                                                                  "babc2b8d-0bc2-4386-a344-237ce2e78568");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("28bd9062-6c18-4336-b384-ae6eeb8313db",
                                                                                  "2d57fbb5-fae0-4e0e-a162-981ea0027551",
                                                                                  new Date(1547225119498L),
                                                                                  "7044a362-70e9-4b89-8b3b-8c94c6514595",
                                                                                  "05944f2e-f483-43d6-8ddc-f026551f139f",
                                                                                  "9da27258-b5d6-41c7-bcf0-82df95987882",
                                                                                  "babc2b8d-0bc2-4386-a344-237ce2e78568");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("d0c14c92-648f-48d1-be47-9e2f78687114",
                                                                             "bd83b970-4a09-4ddd-b19d-d3dea96ca06c",
                                                                             new Date(1547225116522L),
                                                                             "a0b15772-a442-4123-a07d-13f8e71d814b",
                                                                             "b578c917-4642-463d-8b0a-8f1e2afd3966",
                                                                             "abaf2b94-b6ba-4187-88fa-4f95858dbe55",
                                                                             "ebf356a3-89e7-4010-b28f-310386a33cbb");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("76ceb1ca-54f3-452d-942d-1b8133fcc468",
                                                                                    "70697af4-ab22-4895-a79b-3c78b70fad79",
                                                                                    new Date(1547225115817L),
                                                                                    "210a0be9-683c-4860-a839-e94987c8fca3",
                                                                                    "bbefa4f1-ba70-4737-8a47-5985b7979f5a",
                                                                                    null,
                                                                                    "5b9aa5a0-f3e8-4478-94de-64ebd81e658c");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("86414c9f-2c73-4d50-b161-2cdc5fc4585b",
                                                                                  "1de7c0e2-d5f8-41a3-8aa8-266f99a44338",
                                                                                  new Date(1547225117554L),
                                                                                  "2950e924-89ff-4c67-9472-805b235b0ea1",
                                                                                  "e28f34f4-4252-48dc-9f8f-2075d8321e3f",
                                                                                  "a4f25274-297b-4371-8755-f22c15afeb72",
                                                                                  "2b49386a-c60d-4837-bb1a-752bdb77f60d");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("86414c9f-2c73-4d50-b161-2cdc5fc4585b",
                                                                                  "1de7c0e2-d5f8-41a3-8aa8-266f99a44338",
                                                                                  new Date(1547225117554L),
                                                                                  "2950e924-89ff-4c67-9472-805b235b0ea1",
                                                                                  "e28f34f4-4252-48dc-9f8f-2075d8321e3f",
                                                                                  "a4f25274-297b-4371-8755-f22c15afeb72",
                                                                                  "2b49386a-c60d-4837-bb1a-752bdb77f60d");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("855eb55c-eea0-49b7-8d04-109ca4673405",
                                                                                  "24d25286-ef2e-4894-83c0-3e08388e0cd4",
                                                                                  new Date(1547225114691L),
                                                                                  "5f67d21a-a438-4c0c-90a8-25e20de1edac",
                                                                                  "1566e3f7-4187-4487-8ec0-abb6a81cb33d",
                                                                                  "e63bee59-857d-426b-b30a-c007ced48341",
                                                                                  "fa4d85a6-7639-4ad2-917a-084d01eb4dfe");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
