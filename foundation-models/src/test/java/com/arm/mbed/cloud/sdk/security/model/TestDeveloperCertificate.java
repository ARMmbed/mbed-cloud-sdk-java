// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("1ef112d9-2a83-45b7-bdc0-55a429156a00",
                                                                                  "bf26809d-a664-436d-b7f0-849b77b070f2",
                                                                                  new java.util.Date(1547041493834L),
                                                                                  "32a84c67-b4b0-4d31-aae4-01c38e42a1a9",
                                                                                  "1885efbb-20f9-43a2-a433-f0fcdd3e72a2",
                                                                                  "0131644f-bdfa-4eb0-b7aa-7c157ab5a570",
                                                                                  "96a23ec8-e511-425a-89ee-ec3e1bdbbaa3");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("2bce9411-9de9-4f0b-83d5-69bac2ef5d31",
                                                                                  "a2905149-5a12-4150-a425-026a32df646f",
                                                                                  new java.util.Date(1547041493382L),
                                                                                  "9f6e52bf-90b4-4c9e-8061-002ba6fb2e97",
                                                                                  "09773ac5-9c3d-4f2e-b3c4-e68904640a06",
                                                                                  "f44dd1d7-9cc7-4d31-89d6-0ae16640bf13",
                                                                                  "f09da735-6bad-4b67-915e-c62daff54b48");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("2bce9411-9de9-4f0b-83d5-69bac2ef5d31",
                                                                                  "a2905149-5a12-4150-a425-026a32df646f",
                                                                                  new java.util.Date(1547041493382L),
                                                                                  "9f6e52bf-90b4-4c9e-8061-002ba6fb2e97",
                                                                                  "09773ac5-9c3d-4f2e-b3c4-e68904640a06",
                                                                                  "f44dd1d7-9cc7-4d31-89d6-0ae16640bf13",
                                                                                  "f09da735-6bad-4b67-915e-c62daff54b48");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("f4d1c3e2-36fc-453f-91a4-eb962ac17f04",
                                                                             "888ba09e-d5a9-481b-8118-40620aba308b",
                                                                             new java.util.Date(1547041494387L),
                                                                             "df3f9dc1-4665-4298-afaa-412856c109cc",
                                                                             "a6f625d8-fb57-4d27-8f47-8a8747e6bc6c",
                                                                             "60f9d832-f7de-41ee-9ae1-facb2544211a",
                                                                             "d57aaa08-d4a8-42d2-a692-51e1ad0fccf9");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("3287b8d9-9a78-423a-a8de-6c10f6d55e37",
                                                                                    "59456fc6-fa54-45e5-a85f-bc405d1c990e",
                                                                                    new java.util.Date(1547041497768L),
                                                                                    "10c21252-dc9c-4a3d-9642-57a5b1cea2a6",
                                                                                    null, null,
                                                                                    "6383a8ec-09d3-4a22-92c3-f6547480076e");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("e2edb887-ad23-491f-8642-37b4bd5df600",
                                                                                  "aef41170-832e-4f84-afca-2f7687fe1c6c",
                                                                                  new java.util.Date(1547041496826L),
                                                                                  "03355cf5-a334-48b8-af6d-36398a09beb3",
                                                                                  "d6c80bca-c89a-4972-b6c1-55def68fedc0",
                                                                                  "52a55ac1-2038-401d-afad-152d33ca0fb8",
                                                                                  "f1288f09-b97c-4549-941f-c20e5829236e");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("e2edb887-ad23-491f-8642-37b4bd5df600",
                                                                                  "aef41170-832e-4f84-afca-2f7687fe1c6c",
                                                                                  new java.util.Date(1547041496826L),
                                                                                  "03355cf5-a334-48b8-af6d-36398a09beb3",
                                                                                  "d6c80bca-c89a-4972-b6c1-55def68fedc0",
                                                                                  "52a55ac1-2038-401d-afad-152d33ca0fb8",
                                                                                  "f1288f09-b97c-4549-941f-c20e5829236e");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("08656779-2f7e-489b-9734-fca12ef054f3",
                                                                                  "6b531ed9-7501-4eab-80ea-c16d09355cf8",
                                                                                  new java.util.Date(1547041493752L),
                                                                                  "4f593adf-9f29-4b29-8e97-85ee6c778fc3",
                                                                                  "ee0dbc70-6656-49cd-bfbd-4ab1d48bea0d",
                                                                                  "58b13cd5-eb11-4a1e-8250-eff03b25ba01",
                                                                                  "5ce110b0-d151-4c8a-aff1-aa4b8a1486f7");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
