// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("2df26d57-e4f7-4140-96d1-f33b301ed7cd",
                                                                                  "fe561908-41e1-48a3-9328-6f8256b71080",
                                                                                  new Date(1547159625216L),
                                                                                  "21952b8f-4df1-45dd-8b8a-a2694d074dd1",
                                                                                  "40e29be6-b650-4ea3-b756-ad60af303d2d",
                                                                                  "45891e8c-2c97-4e2c-87a1-ba7a4c70fe80",
                                                                                  "9dd62175-59e2-4743-8c40-30a114a8def2");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("eb60b945-dba9-4d24-98e4-7a009116e344",
                                                                                  "2667136f-ae3f-45a5-9670-515fbb0a549d",
                                                                                  new Date(1547159627880L),
                                                                                  "4b4cd959-58f8-458e-b3bb-6e5c844bbfb2",
                                                                                  "77fd45cd-ee43-4fba-aa10-6190e372c782",
                                                                                  "c4b8ac5f-f5fb-41dc-ba46-5e886c7cd4e5",
                                                                                  "fd9bce99-69ca-4f34-ad69-435aaaaa0d3b");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("eb60b945-dba9-4d24-98e4-7a009116e344",
                                                                                  "2667136f-ae3f-45a5-9670-515fbb0a549d",
                                                                                  new Date(1547159627880L),
                                                                                  "4b4cd959-58f8-458e-b3bb-6e5c844bbfb2",
                                                                                  "77fd45cd-ee43-4fba-aa10-6190e372c782",
                                                                                  "c4b8ac5f-f5fb-41dc-ba46-5e886c7cd4e5",
                                                                                  "fd9bce99-69ca-4f34-ad69-435aaaaa0d3b");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("f2b8e346-c32e-4b4e-9fad-4415c4999fe3",
                                                                             "6f8100c9-0923-4ce0-a0eb-93893144e430",
                                                                             new Date(1547159623876L),
                                                                             "8018418e-a586-4127-b10e-da5ac3f3c98c",
                                                                             "7661c662-7d29-4c9c-88f1-7d28955b3c54",
                                                                             "14452f63-1c6b-4b3d-8825-1c394975cfbc",
                                                                             "5704bf2f-6213-4983-b337-2ea92ac1191b");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("abf55915-8d94-47f7-8a09-800fa8e4bed3",
                                                                                    "039f74b7-63ff-4ae0-90af-2cb829093e01",
                                                                                    new Date(1547159624987L),
                                                                                    "4a786f78-b015-4502-a272-9605938caed4",
                                                                                    null, null,
                                                                                    "9d559459-1ec9-43b1-9614-ba393a2d30f9");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("893cd8e7-7031-463c-91c2-fab63eb237e1",
                                                                                  "7ade685d-dd7d-44e7-8e9c-c42e295dbb89",
                                                                                  new Date(1547159628972L),
                                                                                  "947dbc95-1fa9-41e2-b74e-0ae876d6d6eb",
                                                                                  "e68b8c73-138b-4be1-a46f-aa94e4c6a799",
                                                                                  "40f60de3-ec4d-4682-b718-3ec7c3802c30",
                                                                                  "be31dbe3-7085-45f4-acb9-e40c5f1ee57e");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("893cd8e7-7031-463c-91c2-fab63eb237e1",
                                                                                  "7ade685d-dd7d-44e7-8e9c-c42e295dbb89",
                                                                                  new Date(1547159628972L),
                                                                                  "947dbc95-1fa9-41e2-b74e-0ae876d6d6eb",
                                                                                  "e68b8c73-138b-4be1-a46f-aa94e4c6a799",
                                                                                  "40f60de3-ec4d-4682-b718-3ec7c3802c30",
                                                                                  "be31dbe3-7085-45f4-acb9-e40c5f1ee57e");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("ee4492e7-267c-4159-9d61-e9ff6c9e8234",
                                                                                  "5200e895-a672-4c41-b957-8865e09a7ce1",
                                                                                  new Date(1547159627380L),
                                                                                  "73fb4f4b-f89c-4628-9eb8-8fbd270eaf7e",
                                                                                  "9fb586c3-f8db-4ad5-bf19-f6dea576eca8",
                                                                                  "c010c606-fbac-4717-9161-919fb95ea54b",
                                                                                  "e19caab5-5a63-4085-bbcb-d89cfdaa2fea");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
