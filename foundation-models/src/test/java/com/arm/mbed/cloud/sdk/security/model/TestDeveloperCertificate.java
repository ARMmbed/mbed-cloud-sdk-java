// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("fbe5cd08-c2bd-4c49-8dd4-0e14d48d8dbd",
                                                                                  "e014a736-aeef-4b5c-9ed4-bf2c34b27e67",
                                                                                  new Date(1559758608809L),
                                                                                  "91f3d837-0f2f-437d-91ad-483cf2161c4e",
                                                                                  "9398d68f-5283-4eb2-951f-2dc94f4c6469",
                                                                                  "b16d4169-f120-4c34-bd7c-f4ea08e4cac3",
                                                                                  "38033b26-b13a-4023-ab91-00e859824fc6",
                                                                                  "b0581230-efd5-4a2f-beca-338ad3b528d9");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("967aa8b0-1602-4a88-8e60-866119504e76",
                                                                                  "b91c8300-d7a7-4cbc-8b47-7fb8cab6ed98",
                                                                                  new Date(1559758609110L),
                                                                                  "7816c321-0da2-4327-9d61-7b79d1ce3132",
                                                                                  "9f319eaf-0f8f-41d2-969e-39780b117a4c",
                                                                                  "33a709ae-abd4-4915-9417-52e28bc6cace",
                                                                                  "3f4f2fef-5609-482b-a3a4-86b70cfe5735",
                                                                                  "f3feb4dd-a172-4142-bcbc-661a855f5ff1");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("967aa8b0-1602-4a88-8e60-866119504e76",
                                                                                  "b91c8300-d7a7-4cbc-8b47-7fb8cab6ed98",
                                                                                  new Date(1559758609110L),
                                                                                  "7816c321-0da2-4327-9d61-7b79d1ce3132",
                                                                                  "9f319eaf-0f8f-41d2-969e-39780b117a4c",
                                                                                  "33a709ae-abd4-4915-9417-52e28bc6cace",
                                                                                  "3f4f2fef-5609-482b-a3a4-86b70cfe5735",
                                                                                  "f3feb4dd-a172-4142-bcbc-661a855f5ff1");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("d40a6c30-9455-4579-88a1-49fe5229bab5",
                                                                             "6a5f722c-ae35-4dd2-8da7-002d76e1ddba",
                                                                             new Date(1559758606992L),
                                                                             "36a22ec0-1b3e-43ab-ac97-e6846bb9959a",
                                                                             "39d9caa1-4a46-4a97-a351-3b4b42ff9072",
                                                                             "f18b5a35-7b5c-4c42-9c5d-c189f4273851",
                                                                             "5cd550ff-9dce-4a2e-b826-fed2df237132",
                                                                             "274f6a80-4b83-41b0-a273-5e59e7a9fc7e");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("5896650d-65d9-4bc5-a4e9-15a0bbf598ee",
                                                                                    "6d3c84ce-b4b3-485e-b27a-3f0563f5fb2a",
                                                                                    new Date(1559758604724L),
                                                                                    "32fa6570-c6a0-4739-9142-a7b2c5717a9f",
                                                                                    "93501d05-8f41-473b-b460-a8408d53b7d3",
                                                                                    "914e0389-0566-49f6-9c75-c56cccb49bf1",
                                                                                    null,
                                                                                    "1a2672c1-53b4-4969-8292-d53ec4a04bc9");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("d7e700cb-84a9-41bc-b8e4-d9c0840847be",
                                                                                  "bf8aeb74-349c-4ec9-8817-bce883f7930e",
                                                                                  new Date(1559758604332L),
                                                                                  "56dc11ba-9255-4d8d-b2c4-6a0c1db0206f",
                                                                                  "5e080f6f-9f37-479e-8d3e-9e3e9f68b5cd",
                                                                                  "676f3851-0b32-4a5c-8ebd-849a92815d9f",
                                                                                  "329887a5-f4e0-4096-af40-58453d329989",
                                                                                  "8d50d210-96d4-46f7-8502-3f7e9efa0580");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("d7e700cb-84a9-41bc-b8e4-d9c0840847be",
                                                                                  "bf8aeb74-349c-4ec9-8817-bce883f7930e",
                                                                                  new Date(1559758604332L),
                                                                                  "56dc11ba-9255-4d8d-b2c4-6a0c1db0206f",
                                                                                  "5e080f6f-9f37-479e-8d3e-9e3e9f68b5cd",
                                                                                  "676f3851-0b32-4a5c-8ebd-849a92815d9f",
                                                                                  "329887a5-f4e0-4096-af40-58453d329989",
                                                                                  "8d50d210-96d4-46f7-8502-3f7e9efa0580");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("0ae7e39c-1051-43b3-9c86-4654c9ffdd82",
                                                                                  "6de569f4-f580-4092-a53a-84fe75c833bb",
                                                                                  new Date(1559758603428L),
                                                                                  "bdbf3565-65c8-47dc-b013-d32ba11e65b1",
                                                                                  "c3400275-8831-431a-bbb6-97f42ed9c06e",
                                                                                  "6f389850-9d33-46db-a825-82030efcfc6a",
                                                                                  "5d33b3f6-be90-46d5-b441-6b4b0117cf5c",
                                                                                  "2366773a-9f08-4da2-957f-145242ab5fb4");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
