// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("c18ac76d-e036-427c-af03-7f2ebce6acb5",
                                                                                  "ddab4095-629c-42eb-89d6-af765b052f31",
                                                                                  new Date(1559300104541L),
                                                                                  "5f11dab6-45a5-408a-89d7-6408c5a5d167",
                                                                                  "5a6f6620-f643-406f-9b92-da73b5dc693d",
                                                                                  "d1083717-5d70-47f3-a5f1-e5b916488e79",
                                                                                  "735f3b16-7690-4899-9e25-5b5fe7a75f35",
                                                                                  "72698c46-5f3a-4f4a-b7a8-f05ea19df15c");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("9320036c-5153-40f7-b481-8b9016a07220",
                                                                                  "cf05c3ee-b613-4340-a043-c156f32447a6",
                                                                                  new Date(1559300104397L),
                                                                                  "32969893-8cce-458b-a803-7f72e34049d0",
                                                                                  "65c10515-c215-428e-ad3d-bfa199a6af0d",
                                                                                  "80750b15-dcae-4c1f-8e33-4ef5eee4f105",
                                                                                  "b43c16ca-5c74-4d66-97bb-71c8e8b80a47",
                                                                                  "8b2e769e-eb21-45cb-b395-5b63f73f39b8");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("9320036c-5153-40f7-b481-8b9016a07220",
                                                                                  "cf05c3ee-b613-4340-a043-c156f32447a6",
                                                                                  new Date(1559300104397L),
                                                                                  "32969893-8cce-458b-a803-7f72e34049d0",
                                                                                  "65c10515-c215-428e-ad3d-bfa199a6af0d",
                                                                                  "80750b15-dcae-4c1f-8e33-4ef5eee4f105",
                                                                                  "b43c16ca-5c74-4d66-97bb-71c8e8b80a47",
                                                                                  "8b2e769e-eb21-45cb-b395-5b63f73f39b8");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("7d227e56-b907-4804-8408-9d31f22780f7",
                                                                             "d806069c-bb18-4e71-bd54-addc155abab4",
                                                                             new Date(1559300103381L),
                                                                             "d07b33b9-ee5d-4b6c-b2a4-b263058c21ca",
                                                                             "83953cee-88da-465a-8c04-bb7a00e247bb",
                                                                             "c3657b51-0a3a-4a02-ba5f-bb2c4a0bd6f0",
                                                                             "543f6532-c76c-450e-a971-ea7a74f6dd39",
                                                                             "100f01c6-4d6a-4f2c-b321-0f9b3034fc60");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("93aa002d-bfd9-4150-9656-88c6b0aba9f9",
                                                                                    "3f88fabc-75c1-4f17-af3a-0ef954c94447",
                                                                                    new Date(1559300107287L),
                                                                                    "c39baaa2-d686-4bb2-94eb-73a784921cf6",
                                                                                    "5a9ec965-8c13-49ad-aafd-8e1eaa197c93",
                                                                                    "73bbf4ae-b5b7-4a61-83ab-b0b971b25f72",
                                                                                    null,
                                                                                    "c12f6f61-f04d-415e-8fd0-c2f72c563390");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("07f6a944-5e38-4978-8bfb-067d71945c3b",
                                                                                  "6929bd1d-6646-4de9-bb98-a73e98430d62",
                                                                                  new Date(1559300097799L),
                                                                                  "4bcf28a5-6ff0-4cc8-8361-cfb9b34d684b",
                                                                                  "a3deb930-3b19-44c1-8dfa-b1226ae010cf",
                                                                                  "19bf2d4d-c1c5-44cf-9b61-a9b17c2b25dd",
                                                                                  "eb05e20d-fa83-4d92-801a-80fb2ffc1c55",
                                                                                  "25ce0dcd-5639-43ad-9852-1b864f3d3771");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("07f6a944-5e38-4978-8bfb-067d71945c3b",
                                                                                  "6929bd1d-6646-4de9-bb98-a73e98430d62",
                                                                                  new Date(1559300097799L),
                                                                                  "4bcf28a5-6ff0-4cc8-8361-cfb9b34d684b",
                                                                                  "a3deb930-3b19-44c1-8dfa-b1226ae010cf",
                                                                                  "19bf2d4d-c1c5-44cf-9b61-a9b17c2b25dd",
                                                                                  "eb05e20d-fa83-4d92-801a-80fb2ffc1c55",
                                                                                  "25ce0dcd-5639-43ad-9852-1b864f3d3771");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("5925d998-64ac-4678-8662-d71124ea4ad4",
                                                                                  "02175a0a-2256-49e8-8b2e-de306313679e",
                                                                                  new Date(1559300097984L),
                                                                                  "207e04ef-4afd-4c3c-93f7-0b3af1638148",
                                                                                  "b8dfff3b-9630-4198-8843-eaf77e9ab325",
                                                                                  "6b1f56cd-e3cc-4894-b362-0ba906d50580",
                                                                                  "0786c0f3-bb16-41eb-98fd-9bae7815aed5",
                                                                                  "b39790e9-0bcc-42b9-a9d5-6bc478832eba");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
