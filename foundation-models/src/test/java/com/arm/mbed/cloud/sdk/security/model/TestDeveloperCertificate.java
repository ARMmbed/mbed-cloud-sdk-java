// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("1cad9c17-93ab-4439-a209-dbe1d464a673",
                                                                                  "f430b9f9-19ed-4e63-8b3b-1cd203fd4220",
                                                                                  new Date(1559747933499L),
                                                                                  "8d106d7c-698c-40f8-9dd4-7dcc45930041",
                                                                                  "736bbd43-2883-41c3-8d82-4ac1d9ad77bf",
                                                                                  "c3bc89a8-3626-4373-82c3-9a739eb3b972",
                                                                                  "b07e9947-71a2-41cd-92ad-cba31f64bdba",
                                                                                  "e1460391-a13b-4345-99d9-30aeac0b96ea");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("eacaec28-db5b-495e-9bdb-422a969cf74f",
                                                                                  "2d0ab791-3ace-4175-9e76-a945e84f0d5d",
                                                                                  new Date(1559747931678L),
                                                                                  "e0853753-0671-4694-83ef-93e8c854134b",
                                                                                  "c1ba9747-a354-4451-b9ab-e8117ce059f1",
                                                                                  "657710bf-96e7-476d-b047-74356b30d685",
                                                                                  "660cd60a-16a9-4961-950d-f386b943d126",
                                                                                  "4bfb132a-e49c-4dbd-b7b2-179bbc31bd62");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("eacaec28-db5b-495e-9bdb-422a969cf74f",
                                                                                  "2d0ab791-3ace-4175-9e76-a945e84f0d5d",
                                                                                  new Date(1559747931678L),
                                                                                  "e0853753-0671-4694-83ef-93e8c854134b",
                                                                                  "c1ba9747-a354-4451-b9ab-e8117ce059f1",
                                                                                  "657710bf-96e7-476d-b047-74356b30d685",
                                                                                  "660cd60a-16a9-4961-950d-f386b943d126",
                                                                                  "4bfb132a-e49c-4dbd-b7b2-179bbc31bd62");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("3d3bb08d-25a6-4046-9a1b-beba1ee60f74",
                                                                             "59a37a2a-ac9b-4685-8045-ea46293331f7",
                                                                             new Date(1559747930180L),
                                                                             "9fb1013b-b2df-4f3c-8600-e529f71283f0",
                                                                             "cba1e3fb-aa1e-49df-ac91-b66fd3583731",
                                                                             "c8107c86-ff0f-49d3-bb8b-8aab99966e44",
                                                                             "639d348f-125e-4bbb-92b7-3168540ec707",
                                                                             "41ca5bd7-cabd-48fa-ac2e-615e17394446");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("dbb1322b-50ef-47bf-aad3-5884ff6fc14d",
                                                                                    "faa393ae-2129-4bd9-ae45-c0373aef03e6",
                                                                                    new Date(1559747929258L),
                                                                                    "9236cfaf-3210-4b89-830d-a1d4a15bcb45",
                                                                                    "0fb2d9b5-7c98-46d6-bcf8-0f0c3a0e07c2",
                                                                                    "5127ae4c-4334-45fe-ae9b-943c567b2636",
                                                                                    null,
                                                                                    "b9ad3b49-55fa-4cb3-9e5a-e3d113c041dc");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("755abf4f-291f-4f1e-bccc-6346af536226",
                                                                                  "9484ecb0-78ab-4da1-b487-218ec22d8cad",
                                                                                  new Date(1559747925628L),
                                                                                  "89df4759-8c13-46bc-9a8b-2a89d33c1701",
                                                                                  "a43fd5ae-557b-41c2-82da-0cbe98f8728b",
                                                                                  "f281c775-4147-4d7b-8299-915f7470679c",
                                                                                  "7248f112-8c87-40b5-8362-3101c7c695e3",
                                                                                  "93b793ba-4df1-419a-b210-44b19f17b03b");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("755abf4f-291f-4f1e-bccc-6346af536226",
                                                                                  "9484ecb0-78ab-4da1-b487-218ec22d8cad",
                                                                                  new Date(1559747925628L),
                                                                                  "89df4759-8c13-46bc-9a8b-2a89d33c1701",
                                                                                  "a43fd5ae-557b-41c2-82da-0cbe98f8728b",
                                                                                  "f281c775-4147-4d7b-8299-915f7470679c",
                                                                                  "7248f112-8c87-40b5-8362-3101c7c695e3",
                                                                                  "93b793ba-4df1-419a-b210-44b19f17b03b");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("627daead-68e6-4eb3-884b-a59c11aeb7fc",
                                                                                  "f89eec55-ae22-4d5a-be11-2a8921d22cc2",
                                                                                  new Date(1559747934701L),
                                                                                  "16bf06d2-9312-4a8a-9ef4-9c8fe19098bb",
                                                                                  "7796a228-c66d-4d95-8294-54c403ad6baa",
                                                                                  "0778ed6a-2056-46a3-8aa9-a928dad39e30",
                                                                                  "cff63014-0409-42cb-a27f-ed7c0366478d",
                                                                                  "7a61bdb4-f3e6-47e0-aca0-2cede33b09ae");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
