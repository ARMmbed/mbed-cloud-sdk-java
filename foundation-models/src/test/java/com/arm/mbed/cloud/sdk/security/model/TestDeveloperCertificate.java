// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("b2a4ff79-28c5-4b55-90e0-80404aa1a421",
                                                                                  "375f1603-e72c-441b-904c-6be636ee32ef",
                                                                                  new Date(1547730055914L),
                                                                                  "c2a74af5-c37f-4ea0-9a7e-1b84f66668a0",
                                                                                  "c6c151d3-eb7f-4b3c-8335-87a47ddafd3d",
                                                                                  "6865e0bb-ff6e-4983-9825-8fe46218e368",
                                                                                  "c8e84404-c757-4182-8c43-b966b3226deb");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("79bc935a-96f0-4914-8d89-bfeb3089c87f",
                                                                                  "369c3a94-2f9a-425d-8308-8e1b67091f56",
                                                                                  new Date(1547730055526L),
                                                                                  "ce1ca845-8c35-4b6c-be2b-00949bde2121",
                                                                                  "b739942b-83ca-47b0-a241-0f647228aad1",
                                                                                  "d210f2cb-1e89-41ae-8efd-35c3bd144f1e",
                                                                                  "bea71ad3-f277-429b-acfb-e79ede1cfb26");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("79bc935a-96f0-4914-8d89-bfeb3089c87f",
                                                                                  "369c3a94-2f9a-425d-8308-8e1b67091f56",
                                                                                  new Date(1547730055526L),
                                                                                  "ce1ca845-8c35-4b6c-be2b-00949bde2121",
                                                                                  "b739942b-83ca-47b0-a241-0f647228aad1",
                                                                                  "d210f2cb-1e89-41ae-8efd-35c3bd144f1e",
                                                                                  "bea71ad3-f277-429b-acfb-e79ede1cfb26");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("f87042fe-a3d5-46ba-bb25-0fe64bc7e7da",
                                                                             "f54ff5dc-bc15-4ccb-ac6e-ea9dd4ed0e45",
                                                                             new Date(1547730049729L),
                                                                             "0441034d-4dd8-4b46-a922-b908db5756dc",
                                                                             "68568616-0b3a-4aec-83e0-4db1d12c86ee",
                                                                             "154c2dc3-6ba8-4d7f-93c9-e2c0108e6e9b",
                                                                             "be36b08a-0eca-428f-926d-65904679f139");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("f838293d-a870-48ee-afcd-4b0da0fd4a16",
                                                                                    "bb93ec46-7a60-4e28-b9ec-30263ae97a57",
                                                                                    new Date(1547730057151L),
                                                                                    "53b9336e-dc2d-4f88-adeb-6abaeb74e1c5",
                                                                                    "bdf4a700-6f2b-4417-b753-560efbe93e13",
                                                                                    null,
                                                                                    "6c6a7466-b46d-4f1d-bff1-1decfd0d55be");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("109ca598-bb14-4fce-9704-9ef2e11120c5",
                                                                                  "83eb3d62-7e2a-4d44-af05-a72e7b7b7172",
                                                                                  new Date(1547730051568L),
                                                                                  "9072cd8d-234f-4bfb-a12f-4d268d867894",
                                                                                  "c3e71bac-57a2-4905-a0f3-af49308f0bdd",
                                                                                  "566f68dd-79af-4e70-9728-3ee6288c4e37",
                                                                                  "fc30521a-1d71-4fa7-bbde-21f5d34829eb");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("109ca598-bb14-4fce-9704-9ef2e11120c5",
                                                                                  "83eb3d62-7e2a-4d44-af05-a72e7b7b7172",
                                                                                  new Date(1547730051568L),
                                                                                  "9072cd8d-234f-4bfb-a12f-4d268d867894",
                                                                                  "c3e71bac-57a2-4905-a0f3-af49308f0bdd",
                                                                                  "566f68dd-79af-4e70-9728-3ee6288c4e37",
                                                                                  "fc30521a-1d71-4fa7-bbde-21f5d34829eb");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("27389da6-4291-4347-9e73-db874e304a58",
                                                                                  "dead92e5-dca2-4010-905a-1b493cb723ee",
                                                                                  new Date(1547730054990L),
                                                                                  "4c30b019-2bb2-4a30-81ae-e8773b2dd3f2",
                                                                                  "48f36b19-3d83-4bd8-928f-813a5c188f04",
                                                                                  "9dabb2a8-9216-4cec-a8bf-8dc7c96c5473",
                                                                                  "9e8de87a-7b02-4663-ba8f-885a9fc3b2a3");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
