// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("a65615d5-d1e0-459e-8a96-350f6a147be1",
                                                                      new Date(1559300106404L),
                                                                      new Date(1559300100923L),
                                                                      "OYKLIwguM1B2MQ5io6O2YwcpsqK0L83P",
                                                                      "A-8UYg1d9V27kN081G0608z0r8:VY9BjRVVpfUx678o6t8X33Ds75rB06tXzWY6:VGtbSTFjja:1f:vOmf8F3:Vu:N3D7p:zF",
                                                                      new Date(1559300101025L),
                                                                      "OYKLIwguM1B2MQ5io6O2YwcpsqK0L83P");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("d76b33de-705b-4a81-8198-b6c060c5cbbe",
                                                                      new Date(1559300102129L),
                                                                      new Date(1559300106919L),
                                                                      "OYKLIwguM1B2MQ5io6O2YwcpsqK0L83P",
                                                                      "A-8UYg1d9V27kN081G0608z0r8:VY9BjRVVpfUx678o6t8X33Ds75rB06tXzWY6:VGtbSTFjja:1f:vOmf8F3:Vu:N3D7p:zF",
                                                                      new Date(1559300099236L),
                                                                      "OYKLIwguM1B2MQ5io6O2YwcpsqK0L83P");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("d76b33de-705b-4a81-8198-b6c060c5cbbe",
                                                                      new Date(1559300102129L),
                                                                      new Date(1559300106919L),
                                                                      "OYKLIwguM1B2MQ5io6O2YwcpsqK0L83P",
                                                                      "A-8UYg1d9V27kN081G0608z0r8:VY9BjRVVpfUx678o6t8X33Ds75rB06tXzWY6:VGtbSTFjja:1f:vOmf8F3:Vu:N3D7p:zF",
                                                                      new Date(1559300099236L),
                                                                      "OYKLIwguM1B2MQ5io6O2YwcpsqK0L83P");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("f22abf0e-e138-486d-9430-fe1aaef619ed",
                                                                 new Date(1559300099652L), new Date(1559300106544L),
                                                                 "OYKLIwguM1B2MQ5io6O2YwcpsqK0L83P",
                                                                 "A-8UYg1d9V27kN081G0608z0r8:VY9BjRVVpfUx678o6t8X33Ds75rB06tXzWY6:VGtbSTFjja:1f:vOmf8F3:Vu:N3D7p:zF",
                                                                 new Date(1559300099875L),
                                                                 "OYKLIwguM1B2MQ5io6O2YwcpsqK0L83P");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("3f848b44-da68-408c-9539-97b211397198",
                                                                        new Date(1559300098078L),
                                                                        new Date(1559300098939L),
                                                                        "\fJnUhJveh\u000f\u0011EF瓓?DJfE4rꦔ4NE^SfhrjjF쭻\u001fmdvt[N\u001bJhdrvhtr7HFZjd;rN`44r",
                                                                        null, new Date(1559300099517L),
                                                                        "\fJnUhJveh\u000f\u0011EF瓓?DJfE4rꦔ4NE^SfhrjjF쭻\u001fmdvt[N\u001bJhdrvhtr7HFZjd;rN`44r");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("c3cd9aeb-5055-4ad7-809f-4c7f6a89fa49",
                                                                      new Date(1559300098631L),
                                                                      new Date(1559300100855L),
                                                                      "OYKLIwguM1B2MQ5io6O2YwcpsqK0L83P",
                                                                      "A-8UYg1d9V27kN081G0608z0r8:VY9BjRVVpfUx678o6t8X33Ds75rB06tXzWY6:VGtbSTFjja:1f:vOmf8F3:Vu:N3D7p:zF",
                                                                      new Date(1559300102261L),
                                                                      "OYKLIwguM1B2MQ5io6O2YwcpsqK0L83P");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("c3cd9aeb-5055-4ad7-809f-4c7f6a89fa49",
                                                                      new Date(1559300098631L),
                                                                      new Date(1559300100855L),
                                                                      "OYKLIwguM1B2MQ5io6O2YwcpsqK0L83P",
                                                                      "A-8UYg1d9V27kN081G0608z0r8:VY9BjRVVpfUx678o6t8X33Ds75rB06tXzWY6:VGtbSTFjja:1f:vOmf8F3:Vu:N3D7p:zF",
                                                                      new Date(1559300102261L),
                                                                      "OYKLIwguM1B2MQ5io6O2YwcpsqK0L83P");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("56629961-51b6-4c05-95e4-c3e07fb92446",
                                                                      new Date(1559300097750L),
                                                                      new Date(1559300107260L),
                                                                      "OYKLIwguM1B2MQ5io6O2YwcpsqK0L83P",
                                                                      "A-8UYg1d9V27kN081G0608z0r8:VY9BjRVVpfUx678o6t8X33Ds75rB06tXzWY6:VGtbSTFjja:1f:vOmf8F3:Vu:N3D7p:zF",
                                                                      new Date(1559300100016L),
                                                                      "OYKLIwguM1B2MQ5io6O2YwcpsqK0L83P");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
