// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("8c81eb3f-60a0-44f5-8888-eb5007474e14",
                                                                      new Date(1559833677755L),
                                                                      new Date(1559833684243L),
                                                                      "UsQvBjr0R2gllR5MrVi74Ph7zv4MeIm2",
                                                                      "A-6ql30vF:TY4l9lJm697ULH9RvVX32lRBEfVRT1w9wxdNW8B5TAjx08:Ya9lkoj4GB5EHzvVJ0mT3Dx2149VI6o5:aN346:0",
                                                                      new Date(1559833681768L),
                                                                      "UsQvBjr0R2gllR5MrVi74Ph7zv4MeIm2");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("66299897-ec53-43a5-9828-4a46cf6d7e03",
                                                                      new Date(1559833685781L),
                                                                      new Date(1559833685249L),
                                                                      "UsQvBjr0R2gllR5MrVi74Ph7zv4MeIm2",
                                                                      "A-6ql30vF:TY4l9lJm697ULH9RvVX32lRBEfVRT1w9wxdNW8B5TAjx08:Ya9lkoj4GB5EHzvVJ0mT3Dx2149VI6o5:aN346:0",
                                                                      new Date(1559833685259L),
                                                                      "UsQvBjr0R2gllR5MrVi74Ph7zv4MeIm2");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("66299897-ec53-43a5-9828-4a46cf6d7e03",
                                                                      new Date(1559833685781L),
                                                                      new Date(1559833685249L),
                                                                      "UsQvBjr0R2gllR5MrVi74Ph7zv4MeIm2",
                                                                      "A-6ql30vF:TY4l9lJm697ULH9RvVX32lRBEfVRT1w9wxdNW8B5TAjx08:Ya9lkoj4GB5EHzvVJ0mT3Dx2149VI6o5:aN346:0",
                                                                      new Date(1559833685259L),
                                                                      "UsQvBjr0R2gllR5MrVi74Ph7zv4MeIm2");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("27bfa5d3-a5a1-4559-8f0a-5b0bdaf5ddd7",
                                                                 new Date(1559833684086L), new Date(1559833682009L),
                                                                 "UsQvBjr0R2gllR5MrVi74Ph7zv4MeIm2",
                                                                 "A-6ql30vF:TY4l9lJm697ULH9RvVX32lRBEfVRT1w9wxdNW8B5TAjx08:Ya9lkoj4GB5EHzvVJ0mT3Dx2149VI6o5:aN346:0",
                                                                 new Date(1559833677744L),
                                                                 "UsQvBjr0R2gllR5MrVi74Ph7zv4MeIm2");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("27f11647-f754-4ee2-b2ad-ac17e7b6be8a",
                                                                        new Date(1559833682615L),
                                                                        new Date(1559833685370L),
                                                                        "1u3T\u0001kNpt\u000ef\\\\\u0015J3CTkKncktf1p31_3c3k3kkTk跆13Oou3OJ6S1/1fKE\u0002wC釘ow6\u0013",
                                                                        null, new Date(1559833683500L),
                                                                        "1u3T\u0001kNpt\u000ef\\\\\u0015J3CTkKncktf1p31_3c3k3kkTk跆13Oou3OJ6S1/1fKE\u0002wC釘ow6\u0013");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("8d16a33d-5179-4b40-938f-1c252c3d6832",
                                                                      new Date(1559833684841L),
                                                                      new Date(1559833686485L),
                                                                      "UsQvBjr0R2gllR5MrVi74Ph7zv4MeIm2",
                                                                      "A-6ql30vF:TY4l9lJm697ULH9RvVX32lRBEfVRT1w9wxdNW8B5TAjx08:Ya9lkoj4GB5EHzvVJ0mT3Dx2149VI6o5:aN346:0",
                                                                      new Date(1559833680883L),
                                                                      "UsQvBjr0R2gllR5MrVi74Ph7zv4MeIm2");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("8d16a33d-5179-4b40-938f-1c252c3d6832",
                                                                      new Date(1559833684841L),
                                                                      new Date(1559833686485L),
                                                                      "UsQvBjr0R2gllR5MrVi74Ph7zv4MeIm2",
                                                                      "A-6ql30vF:TY4l9lJm697ULH9RvVX32lRBEfVRT1w9wxdNW8B5TAjx08:Ya9lkoj4GB5EHzvVJ0mT3Dx2149VI6o5:aN346:0",
                                                                      new Date(1559833680883L),
                                                                      "UsQvBjr0R2gllR5MrVi74Ph7zv4MeIm2");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("1d1502a6-c903-475c-b847-004f6904e147",
                                                                      new Date(1559833677414L),
                                                                      new Date(1559833683027L),
                                                                      "UsQvBjr0R2gllR5MrVi74Ph7zv4MeIm2",
                                                                      "A-6ql30vF:TY4l9lJm697ULH9RvVX32lRBEfVRT1w9wxdNW8B5TAjx08:Ya9lkoj4GB5EHzvVJ0mT3Dx2149VI6o5:aN346:0",
                                                                      new Date(1559833683898L),
                                                                      "UsQvBjr0R2gllR5MrVi74Ph7zv4MeIm2");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
