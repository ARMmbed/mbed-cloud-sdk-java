// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("f8b5f8d0-b7f9-479d-be8d-d18de5fcb02c",
                                                                      new java.util.Date(1547041495310L),
                                                                      new java.util.Date(1547041494043L),
                                                                      "CkK6Bgx598Z1X74nONsj0c4YaA711DCx",
                                                                      "A-sX02896Du2QLuvyz88ZwhT0RwM3E82a3SBXk8nTqRVRoi90gF73dG0EF2c0UC1LZc:zij8rl4THJb5q5O6G6ITF1VtO9pDB",
                                                                      new java.util.Date(1547041497640L),
                                                                      "mD11Q5S9T63F5OPJu2jT5d0BaGZS207b");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("147a9339-876e-4145-b59d-7df8d109a935",
                                                                      new java.util.Date(1547041498691L),
                                                                      new java.util.Date(1547041491814L),
                                                                      "3HQZ9yT9XAog8c18N19CC4zvzfS68J30",
                                                                      "A-v4TbsNJu7diZjKJ5Hl8Nwni67wJ4r93U0p4c:6qOgJtIbWH:y58i9zO8SsYWFFe1o7G7wS3gkS2zf4XW0532M3VmIgWTZ21",
                                                                      new java.util.Date(1547041492043L),
                                                                      "8b1Dj9QNgz6L2JdD71FdvJ09XpM032x0");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("147a9339-876e-4145-b59d-7df8d109a935",
                                                                      new java.util.Date(1547041498691L),
                                                                      new java.util.Date(1547041491814L),
                                                                      "3HQZ9yT9XAog8c18N19CC4zvzfS68J30",
                                                                      "A-v4TbsNJu7diZjKJ5Hl8Nwni67wJ4r93U0p4c:6qOgJtIbWH:y58i9zO8SsYWFFe1o7G7wS3gkS2zf4XW0532M3VmIgWTZ21",
                                                                      new java.util.Date(1547041492043L),
                                                                      "8b1Dj9QNgz6L2JdD71FdvJ09XpM032x0");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("c6ed633d-f909-4662-8110-b88fd0666a34",
                                                                 new java.util.Date(1547041491308L),
                                                                 new java.util.Date(1547041497350L),
                                                                 "OQ9eYI699n6w6OogTk4zK471IhtvT1sd",
                                                                 "A-9325dG3s1gVg0Rj:z7M88HNuCn:050Vn1l4:o3Fm6FY3GpI966e2110Rk:s194K2b:Hx2:70aoNTIdTKVmW3a4Oo5m3VS6g",
                                                                 new java.util.Date(1547041499319L),
                                                                 "J4X8N11Z0m53YAS5X03JMvRDDPqQ60jJ");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("b73c3e34-8427-473c-bc98-fb8ab27dc219",
                                                                        new java.util.Date(1547041499249L),
                                                                        new java.util.Date(1547041495907L),
                                                                        "q6m[Oh;1P6Rd	61ê€?câ ?pQ_66sqh86hlxqpR8hLU6hh=8s&Lv6hq8:8hp8111ä¥³",
                                                                        null, new java.util.Date(1547041490368L), null);
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("6de05f80-87c9-42ac-853c-bbe9f528b7b3",
                                                                      new java.util.Date(1547041493599L),
                                                                      new java.util.Date(1547041493187L),
                                                                      "85l1fT9lfzNez99FI382D2W6l06bLYT5",
                                                                      "A-i7XZhToeVa5YD844H:sBg1sQT272KeY1XPZ:7h:27s1uvk6Cp7M2Nqm7ShGRbL8IicU00t8GmKp9AO:20bvUIQhiW5cSTs3",
                                                                      new java.util.Date(1547041496893L),
                                                                      "S86HF7k5I3k815N09JdbSMQJci0e8pNz");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("6de05f80-87c9-42ac-853c-bbe9f528b7b3",
                                                                      new java.util.Date(1547041493599L),
                                                                      new java.util.Date(1547041493187L),
                                                                      "85l1fT9lfzNez99FI382D2W6l06bLYT5",
                                                                      "A-i7XZhToeVa5YD844H:sBg1sQT272KeY1XPZ:7h:27s1uvk6Cp7M2Nqm7ShGRbL8IicU00t8GmKp9AO:20bvUIQhiW5cSTs3",
                                                                      new java.util.Date(1547041496893L),
                                                                      "S86HF7k5I3k815N09JdbSMQJci0e8pNz");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("6309f97d-3b29-4f39-be0f-241c12daa2a1",
                                                                      new java.util.Date(1547041498331L),
                                                                      new java.util.Date(1547041498740L),
                                                                      "C2Gop3t19to4T6RrT7Mw3v905zf0zhcH",
                                                                      "A-Ydrh8EjEXob52xqk4KVBelngLAQYSjG4:PN1sAY:PPSfi9y53PJ:az2y48U5BwW0iME0ZWYU8eYo2YSwien17zzhN75l23:",
                                                                      new java.util.Date(1547041495370L),
                                                                      "rr1i12F69yw0FCR7rDbR6B7u6t6yb35V");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
