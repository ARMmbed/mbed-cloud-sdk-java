// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("cd197f81-cc3c-4c36-98d3-b3a7e5950e36",
                                                                      new Date(1559745295018L),
                                                                      new Date(1559745297218L),
                                                                      "8qXxL6iUQK9FlOFmHvB9WqOy83D4e0Ra",
                                                                      "A-T9:O5473QnW90174xT6Nxq4WKKcD74mV9tEOzg92hztZ:10rKW2td6u4jK6HgFVBtBflcKw9NN45d7URFlk1C840Ddc1uy:",
                                                                      new Date(1559745300789L),
                                                                      "8qXxL6iUQK9FlOFmHvB9WqOy83D4e0Ra");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("7ac38889-2c1d-45d8-adeb-504b5f721cd0",
                                                                      new Date(1559745302872L),
                                                                      new Date(1559745299474L),
                                                                      "8qXxL6iUQK9FlOFmHvB9WqOy83D4e0Ra",
                                                                      "A-T9:O5473QnW90174xT6Nxq4WKKcD74mV9tEOzg92hztZ:10rKW2td6u4jK6HgFVBtBflcKw9NN45d7URFlk1C840Ddc1uy:",
                                                                      new Date(1559745298725L),
                                                                      "8qXxL6iUQK9FlOFmHvB9WqOy83D4e0Ra");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("7ac38889-2c1d-45d8-adeb-504b5f721cd0",
                                                                      new Date(1559745302872L),
                                                                      new Date(1559745299474L),
                                                                      "8qXxL6iUQK9FlOFmHvB9WqOy83D4e0Ra",
                                                                      "A-T9:O5473QnW90174xT6Nxq4WKKcD74mV9tEOzg92hztZ:10rKW2td6u4jK6HgFVBtBflcKw9NN45d7URFlk1C840Ddc1uy:",
                                                                      new Date(1559745298725L),
                                                                      "8qXxL6iUQK9FlOFmHvB9WqOy83D4e0Ra");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("e0d2b2fa-5314-42bd-ab30-ca2fa54fa863",
                                                                 new Date(1559745303702L), new Date(1559745301311L),
                                                                 "8qXxL6iUQK9FlOFmHvB9WqOy83D4e0Ra",
                                                                 "A-T9:O5473QnW90174xT6Nxq4WKKcD74mV9tEOzg92hztZ:10rKW2td6u4jK6HgFVBtBflcKw9NN45d7URFlk1C840Ddc1uy:",
                                                                 new Date(1559745302221L),
                                                                 "8qXxL6iUQK9FlOFmHvB9WqOy83D4e0Ra");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("38ae2bf6-b378-42f9-ae4f-b5916cf29c9e",
                                                                        new Date(1559745301350L),
                                                                        new Date(1559745296473L),
                                                                        "TVNPPM\u0014c2o7P5PSZd(f1wI`\u0003kEC52Vw>EwcnIdk5\\\\GbcV5opP1CE5Nbn\u0003G\tT=7fV",
                                                                        null, new Date(1559745303202L),
                                                                        "TVNPPM\u0014c2o7P5PSZd(f1wI`\u0003kEC52Vw>EwcnIdk5\\\\GbcV5opP1CE5Nbn\u0003G\tT=7fV");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("00d7ef84-ca11-48fd-954e-bf6b7e9845cf",
                                                                      new Date(1559745302778L),
                                                                      new Date(1559745296947L),
                                                                      "8qXxL6iUQK9FlOFmHvB9WqOy83D4e0Ra",
                                                                      "A-T9:O5473QnW90174xT6Nxq4WKKcD74mV9tEOzg92hztZ:10rKW2td6u4jK6HgFVBtBflcKw9NN45d7URFlk1C840Ddc1uy:",
                                                                      new Date(1559745303129L),
                                                                      "8qXxL6iUQK9FlOFmHvB9WqOy83D4e0Ra");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("00d7ef84-ca11-48fd-954e-bf6b7e9845cf",
                                                                      new Date(1559745302778L),
                                                                      new Date(1559745296947L),
                                                                      "8qXxL6iUQK9FlOFmHvB9WqOy83D4e0Ra",
                                                                      "A-T9:O5473QnW90174xT6Nxq4WKKcD74mV9tEOzg92hztZ:10rKW2td6u4jK6HgFVBtBflcKw9NN45d7URFlk1C840Ddc1uy:",
                                                                      new Date(1559745303129L),
                                                                      "8qXxL6iUQK9FlOFmHvB9WqOy83D4e0Ra");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("57890ca8-dc58-45f9-b536-5fc8f17840ea",
                                                                      new Date(1559745297240L),
                                                                      new Date(1559745295937L),
                                                                      "8qXxL6iUQK9FlOFmHvB9WqOy83D4e0Ra",
                                                                      "A-T9:O5473QnW90174xT6Nxq4WKKcD74mV9tEOzg92hztZ:10rKW2td6u4jK6HgFVBtBflcKw9NN45d7URFlk1C840Ddc1uy:",
                                                                      new Date(1559745296043L),
                                                                      "8qXxL6iUQK9FlOFmHvB9WqOy83D4e0Ra");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
