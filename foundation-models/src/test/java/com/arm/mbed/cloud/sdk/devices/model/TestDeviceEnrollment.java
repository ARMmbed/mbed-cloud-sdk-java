// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("0110cbfd-eaaf-41cd-9512-c98f71679511",
                                                                      new Date(1559758606982L),
                                                                      new Date(1559758611112L),
                                                                      "w3Tu3vLLf7t0OI94ss9KCo18rS4Fg4aN",
                                                                      "A-T87JdQ0o0H3XH481X95QYGo75RbU0LDM1VtAne90K7Fm6076qrPd6X0930uxo71Fi062X8b50idF6NmOC4m97FhGEWwArbi",
                                                                      new Date(1559758608220L),
                                                                      "w3Tu3vLLf7t0OI94ss9KCo18rS4Fg4aN");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("cfc1abe9-a9e8-4f27-bfba-8bf575b976ba",
                                                                      new Date(1559758609544L),
                                                                      new Date(1559758611990L),
                                                                      "w3Tu3vLLf7t0OI94ss9KCo18rS4Fg4aN",
                                                                      "A-T87JdQ0o0H3XH481X95QYGo75RbU0LDM1VtAne90K7Fm6076qrPd6X0930uxo71Fi062X8b50idF6NmOC4m97FhGEWwArbi",
                                                                      new Date(1559758610864L),
                                                                      "w3Tu3vLLf7t0OI94ss9KCo18rS4Fg4aN");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("cfc1abe9-a9e8-4f27-bfba-8bf575b976ba",
                                                                      new Date(1559758609544L),
                                                                      new Date(1559758611990L),
                                                                      "w3Tu3vLLf7t0OI94ss9KCo18rS4Fg4aN",
                                                                      "A-T87JdQ0o0H3XH481X95QYGo75RbU0LDM1VtAne90K7Fm6076qrPd6X0930uxo71Fi062X8b50idF6NmOC4m97FhGEWwArbi",
                                                                      new Date(1559758610864L),
                                                                      "w3Tu3vLLf7t0OI94ss9KCo18rS4Fg4aN");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("4c6811c4-0738-43ff-af0b-58c3503af5f6",
                                                                 new Date(1559758605693L), new Date(1559758606716L),
                                                                 "w3Tu3vLLf7t0OI94ss9KCo18rS4Fg4aN",
                                                                 "A-T87JdQ0o0H3XH481X95QYGo75RbU0LDM1VtAne90K7Fm6076qrPd6X0930uxo71Fi062X8b50idF6NmOC4m97FhGEWwArbi",
                                                                 new Date(1559758612185L),
                                                                 "w3Tu3vLLf7t0OI94ss9KCo18rS4Fg4aN");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("4318ae45-7bf9-43ef-8204-2aace086495b",
                                                                        new Date(1559758607152L),
                                                                        new Date(1559758606526L),
                                                                        "c\u000fMe6\u00076`QAp\u000e)jJ2qpp2?2[RJMdpeDeqRn2pEMMJ\u0015J'E/JGUJHM=J_A&GB!dJQM",
                                                                        null, new Date(1559758603749L),
                                                                        "c\u000fMe6\u00076`QAp\u000e)jJ2qpp2?2[RJMdpeDeqRn2pEMMJ\u0015J'E/JGUJHM=J_A&GB!dJQM");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("e18a236c-a947-4c67-82b7-b287b3955f0d",
                                                                      new Date(1559758606893L),
                                                                      new Date(1559758608524L),
                                                                      "w3Tu3vLLf7t0OI94ss9KCo18rS4Fg4aN",
                                                                      "A-T87JdQ0o0H3XH481X95QYGo75RbU0LDM1VtAne90K7Fm6076qrPd6X0930uxo71Fi062X8b50idF6NmOC4m97FhGEWwArbi",
                                                                      new Date(1559758612485L),
                                                                      "w3Tu3vLLf7t0OI94ss9KCo18rS4Fg4aN");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("e18a236c-a947-4c67-82b7-b287b3955f0d",
                                                                      new Date(1559758606893L),
                                                                      new Date(1559758608524L),
                                                                      "w3Tu3vLLf7t0OI94ss9KCo18rS4Fg4aN",
                                                                      "A-T87JdQ0o0H3XH481X95QYGo75RbU0LDM1VtAne90K7Fm6076qrPd6X0930uxo71Fi062X8b50idF6NmOC4m97FhGEWwArbi",
                                                                      new Date(1559758612485L),
                                                                      "w3Tu3vLLf7t0OI94ss9KCo18rS4Fg4aN");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("d17c65d9-3e6e-4973-bd05-e57754602ddb",
                                                                      new Date(1559758604691L),
                                                                      new Date(1559758604114L),
                                                                      "w3Tu3vLLf7t0OI94ss9KCo18rS4Fg4aN",
                                                                      "A-T87JdQ0o0H3XH481X95QYGo75RbU0LDM1VtAne90K7Fm6076qrPd6X0930uxo71Fi062X8b50idF6NmOC4m97FhGEWwArbi",
                                                                      new Date(1559758607738L),
                                                                      "w3Tu3vLLf7t0OI94ss9KCo18rS4Fg4aN");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
