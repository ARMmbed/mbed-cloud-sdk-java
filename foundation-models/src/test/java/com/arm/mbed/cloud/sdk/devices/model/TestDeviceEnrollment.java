// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("5d0c67f8-9af7-4853-afd1-1692f25c3a4a",
                                                                      new Date(1551867944085L),
                                                                      new Date(1551867952000L),
                                                                      "GZsqUs92QcRXo7398vxXREoLoMprEndY",
                                                                      "A-I1KB631MHwczJ092Lz:8B9188NHeKKzydOZzhk2E:0MpsitV:uY77zPU2iR5CwNmCsJEqX6pG94I9yPJ5C9794Uh174mB8n",
                                                                      new Date(1551867944533L),
                                                                      "07KzZF2bB7XOs3uE81z8NcEyKUia3SqA");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("fab2cb7e-d084-4d29-9f30-e3ed4aa5bb88",
                                                                      new Date(1551867944464L),
                                                                      new Date(1551867951039L),
                                                                      "yO8Df5kf9q6n1Ycu5C9z7ZMHTv31sez5",
                                                                      "A-:9:AS0Uyq02vhCr:r9qP2TypXTe1sSfU:2:72k0457E7VRv1WMJ1Xv60c0tSE6AaawytxO8yaQXYi2VPUw50v73Y8PV3Zdo",
                                                                      new Date(1551867952504L),
                                                                      "lmXJ71dJ37Vs8J8Z5CvXSrA0Em65IT71");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("fab2cb7e-d084-4d29-9f30-e3ed4aa5bb88",
                                                                      new Date(1551867944464L),
                                                                      new Date(1551867951039L),
                                                                      "yO8Df5kf9q6n1Ycu5C9z7ZMHTv31sez5",
                                                                      "A-:9:AS0Uyq02vhCr:r9qP2TypXTe1sSfU:2:72k0457E7VRv1WMJ1Xv60c0tSE6AaawytxO8yaQXYi2VPUw50v73Y8PV3Zdo",
                                                                      new Date(1551867952504L),
                                                                      "lmXJ71dJ37Vs8J8Z5CvXSrA0Em65IT71");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("2c15c07a-f1dc-46d2-bff0-d3ababd682d2",
                                                                 new Date(1551867947187L), new Date(1551867946094L),
                                                                 "BfKeIns286D125ZCro3K41izq9nnI03a",
                                                                 "A-zH7uaamEwCb4n2c9AF4uz8OuBkHV5Lk:2X3jR:aGR3VvmQ9IJ97VSDG1ZD7m8jLqAZDovgPxnbG8GSWJ68yned9zvIWitXF",
                                                                 new Date(1551867945228L),
                                                                 "u0imwPCZb39Pm4Y12feSXRj6sqS3D4YZ");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("711bc96e-f028-42d1-90a9-f644f3d3ccff",
                                                                        new Date(1551867946527L),
                                                                        new Date(1551867951244L),
                                                                        "JUUJOJCBekFC*:ka\fF2JeNUSvjé‡–Jã…ŸZYvH>s]eJHUe\u0001=OJO?JUU]/FHJ2Jvæªˆh'Jé‰™U",
                                                                        null, new Date(1551867952565L),
                                                                        "î¶?4^l\u000bPrW4\u0004R4á¦¿\u000bIgPTì¤’IGm`IE;QO*MPT^Gï¼œEYMGEM[\u0016`MQ4EOI\u001cGPEì­?j4rT4\u00144]I");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("6f08d8b8-c455-43ce-883c-43fe22200481",
                                                                      new Date(1551867946759L),
                                                                      new Date(1551867944160L),
                                                                      "uAER9j0l01601ouSEwGrkK4ZRr1E25RX",
                                                                      "A-CogrELGUqXojZ:s45:ggseTOCdoKx6W79wP0bs8z04vlV9l8IhSPf92EWz4Teoy76rJro5t0QB6uvNZYLd5eLb5:5ZJTbvJ",
                                                                      new Date(1551867945927L),
                                                                      "KAwtrW1IIy95GD3XCW4GClH1afxG3Q9c");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("6f08d8b8-c455-43ce-883c-43fe22200481",
                                                                      new Date(1551867946759L),
                                                                      new Date(1551867944160L),
                                                                      "uAER9j0l01601ouSEwGrkK4ZRr1E25RX",
                                                                      "A-CogrELGUqXojZ:s45:ggseTOCdoKx6W79wP0bs8z04vlV9l8IhSPf92EWz4Teoy76rJro5t0QB6uvNZYLd5eLb5:5ZJTbvJ",
                                                                      new Date(1551867945927L),
                                                                      "KAwtrW1IIy95GD3XCW4GClH1afxG3Q9c");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("e7268d1e-4ae1-45f8-8707-2249238b88a4",
                                                                      new Date(1551867947936L),
                                                                      new Date(1551867946254L),
                                                                      "VAd2re857gaPJ10V9aA98btnazm17c9U",
                                                                      "A-Vajx0:OjVojCK3lRZto6NiA::gxsQ:S9iouSumEzDRi7qZ:A0U9:l4l4iF9TKuC:2S3C7XjmA3C7U:Fsdy2HgOgp35dqmNc",
                                                                      new Date(1551867944295L),
                                                                      "5za2BBXyGjoWh2J1wBH8G69pFPLzdY40");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
