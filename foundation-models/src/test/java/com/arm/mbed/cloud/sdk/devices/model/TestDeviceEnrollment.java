// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("72c6582c-82e7-4507-8fb0-453d993831d3",
                                                                      new Date(1559747934074L),
                                                                      new Date(1559747929132L),
                                                                      "oVX9Z9Y5IdJpQ49dLNocXs8qsRNw8R8e",
                                                                      "A-3z3b6GXYe5dxjLO:9p6I7f1GPd9:SpPBIeG3ogcxV4xqQrCIH2S09FPQpWtpw7Cal62QyAkS6Ly73W:55Tgx2yAcEFb2vAH",
                                                                      new Date(1559747934687L),
                                                                      "oVX9Z9Y5IdJpQ49dLNocXs8qsRNw8R8e");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("55793216-17b1-422c-8d31-4104a26ba5e8",
                                                                      new Date(1559747931663L),
                                                                      new Date(1559747926045L),
                                                                      "oVX9Z9Y5IdJpQ49dLNocXs8qsRNw8R8e",
                                                                      "A-3z3b6GXYe5dxjLO:9p6I7f1GPd9:SpPBIeG3ogcxV4xqQrCIH2S09FPQpWtpw7Cal62QyAkS6Ly73W:55Tgx2yAcEFb2vAH",
                                                                      new Date(1559747933136L),
                                                                      "oVX9Z9Y5IdJpQ49dLNocXs8qsRNw8R8e");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("55793216-17b1-422c-8d31-4104a26ba5e8",
                                                                      new Date(1559747931663L),
                                                                      new Date(1559747926045L),
                                                                      "oVX9Z9Y5IdJpQ49dLNocXs8qsRNw8R8e",
                                                                      "A-3z3b6GXYe5dxjLO:9p6I7f1GPd9:SpPBIeG3ogcxV4xqQrCIH2S09FPQpWtpw7Cal62QyAkS6Ly73W:55Tgx2yAcEFb2vAH",
                                                                      new Date(1559747933136L),
                                                                      "oVX9Z9Y5IdJpQ49dLNocXs8qsRNw8R8e");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("2f884d83-8d72-43ae-b327-384f408702e2",
                                                                 new Date(1559747933226L), new Date(1559747931294L),
                                                                 "oVX9Z9Y5IdJpQ49dLNocXs8qsRNw8R8e",
                                                                 "A-3z3b6GXYe5dxjLO:9p6I7f1GPd9:SpPBIeG3ogcxV4xqQrCIH2S09FPQpWtpw7Cal62QyAkS6Ly73W:55Tgx2yAcEFb2vAH",
                                                                 new Date(1559747928076L),
                                                                 "oVX9Z9Y5IdJpQ49dLNocXs8qsRNw8R8e");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("792c6e05-cef5-4b10-8054-4f4ee9ea10b8",
                                                                        new Date(1559747927969L),
                                                                        new Date(1559747929267L),
                                                                        "7?Sv7Wr717KrgfUKP6൦6vKK\u0018KMjr퉹㶣?6l欿h@mO[킄ESvW窠7r\fTWn噅arP7v\u0013tKPSM",
                                                                        null, new Date(1559747933194L),
                                                                        "7?Sv7Wr717KrgfUKP6൦6vKK\u0018KMjr퉹㶣?6l欿h@mO[킄ESvW窠7r\fTWn噅arP7v\u0013tKPSM");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("11517661-31a4-44fe-8609-9a1deef6c036",
                                                                      new Date(1559747935099L),
                                                                      new Date(1559747931156L),
                                                                      "oVX9Z9Y5IdJpQ49dLNocXs8qsRNw8R8e",
                                                                      "A-3z3b6GXYe5dxjLO:9p6I7f1GPd9:SpPBIeG3ogcxV4xqQrCIH2S09FPQpWtpw7Cal62QyAkS6Ly73W:55Tgx2yAcEFb2vAH",
                                                                      new Date(1559747932471L),
                                                                      "oVX9Z9Y5IdJpQ49dLNocXs8qsRNw8R8e");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("11517661-31a4-44fe-8609-9a1deef6c036",
                                                                      new Date(1559747935099L),
                                                                      new Date(1559747931156L),
                                                                      "oVX9Z9Y5IdJpQ49dLNocXs8qsRNw8R8e",
                                                                      "A-3z3b6GXYe5dxjLO:9p6I7f1GPd9:SpPBIeG3ogcxV4xqQrCIH2S09FPQpWtpw7Cal62QyAkS6Ly73W:55Tgx2yAcEFb2vAH",
                                                                      new Date(1559747932471L),
                                                                      "oVX9Z9Y5IdJpQ49dLNocXs8qsRNw8R8e");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("e1fbfcb3-3c3a-4e4c-bdbe-f972d0611914",
                                                                      new Date(1559747929386L),
                                                                      new Date(1559747931972L),
                                                                      "oVX9Z9Y5IdJpQ49dLNocXs8qsRNw8R8e",
                                                                      "A-3z3b6GXYe5dxjLO:9p6I7f1GPd9:SpPBIeG3ogcxV4xqQrCIH2S09FPQpWtpw7Cal62QyAkS6Ly73W:55Tgx2yAcEFb2vAH",
                                                                      new Date(1559747929530L),
                                                                      "oVX9Z9Y5IdJpQ49dLNocXs8qsRNw8R8e");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
