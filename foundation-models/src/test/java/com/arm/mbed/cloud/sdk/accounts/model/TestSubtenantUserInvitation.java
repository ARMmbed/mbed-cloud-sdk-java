// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("22ee8eda-abd1-4509-a889-493a5fbe3c1c",
                                                                                           new Date(1547225122630L),
                                                                                           "b1e306c4-8cbf-4849-b9b6-6b5de35852b1",
                                                                                           new Date(1547225121232L),
                                                                                           "a411e3e8-5e88-4bc0-a349-dbb0bbc81b14",
                                                                                           null,
                                                                                           new Date(1547225118650L),
                                                                                           "3613d85e-1372-4319-8430-489ca78084c4");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("230ad9e6-7c9a-49d1-acac-0b8d7f09b519",
                                                                                           new Date(1547225115120L),
                                                                                           "fd1b5020-20d3-4c8d-89d5-bd8d21406942",
                                                                                           new Date(1547225117213L),
                                                                                           "35ca82bd-a322-4503-a910-e7f729ccdb59",
                                                                                           null,
                                                                                           new Date(1547225123081L),
                                                                                           "37aac66f-7eaf-470e-95a4-f0c22c4faa25");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("230ad9e6-7c9a-49d1-acac-0b8d7f09b519",
                                                                                           new Date(1547225115120L),
                                                                                           "fd1b5020-20d3-4c8d-89d5-bd8d21406942",
                                                                                           new Date(1547225117213L),
                                                                                           "35ca82bd-a322-4503-a910-e7f729ccdb59",
                                                                                           null,
                                                                                           new Date(1547225123081L),
                                                                                           "37aac66f-7eaf-470e-95a4-f0c22c4faa25");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("4bb0b75c-1b2d-4a30-9d4f-64e4e1f58840",
                                                                                      new Date(1547225122076L),
                                                                                      "9d39eae2-7d3d-4af0-84ab-a8f31827e080",
                                                                                      new Date(1547225114912L),
                                                                                      "17d0bb0b-e744-4dc7-b65d-6dc67527e0d0",
                                                                                      null, new Date(1547225116880L),
                                                                                      "d936d50c-7eca-4b58-ad34-e0a3eebbf917");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1547225120185L),
                                                                                             null,
                                                                                             new Date(1547225121880L),
                                                                                             "775802a3-68b0-4d1f-bd1f-b44c159e7273",
                                                                                             null,
                                                                                             new Date(1547225122193L),
                                                                                             "38648570-0daa-488f-b2a7-e4ae9b36300b");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("5fcf6d3f-89b6-4b13-983a-98f8234b9f1e",
                                                                                           new Date(1547225118235L),
                                                                                           "2302102e-3eca-42ac-bce6-bd2740075db9",
                                                                                           new Date(1547225119571L),
                                                                                           "1ba40c6a-4e1c-49a2-9178-23d75c00db13",
                                                                                           null,
                                                                                           new Date(1547225115147L),
                                                                                           "36adecc3-9552-4eb3-a691-30b4de7c99f7");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("5fcf6d3f-89b6-4b13-983a-98f8234b9f1e",
                                                                                           new Date(1547225118235L),
                                                                                           "2302102e-3eca-42ac-bce6-bd2740075db9",
                                                                                           new Date(1547225119571L),
                                                                                           "1ba40c6a-4e1c-49a2-9178-23d75c00db13",
                                                                                           null,
                                                                                           new Date(1547225115147L),
                                                                                           "36adecc3-9552-4eb3-a691-30b4de7c99f7");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("de3e62f6-7504-41a9-8bc2-4c115392dc0b",
                                                                                           new Date(1547225119612L),
                                                                                           "95f9cd6c-f365-4272-bce1-33a0d35f6d69",
                                                                                           new Date(1547225121777L),
                                                                                           "1bed490a-8017-4405-ba2f-bdf01cf5b8b3",
                                                                                           null,
                                                                                           new Date(1547225114874L),
                                                                                           "06ddea67-5c30-4a83-8e0b-87c1931edbc8");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
