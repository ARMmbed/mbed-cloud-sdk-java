// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                           new Date(1558096036248L),
                                                                                           "73612.83065@e0672.me",
                                                                                           new Date(1558096039890L),
                                                                                           "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                           null,
                                                                                           new Date(1558096040400L),
                                                                                           "afbdeea60718ef43acbc07ccc8d8b7ff");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                           new Date(1558096039855L),
                                                                                           "79566.6ac3e@83873.fr",
                                                                                           new Date(1558096042051L),
                                                                                           "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                           null,
                                                                                           new Date(1558096038727L),
                                                                                           "afbdeea60718ef43acbc07ccc8d8b7ff");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                           new Date(1558096039855L),
                                                                                           "79566.6ac3e@83873.fr",
                                                                                           new Date(1558096042051L),
                                                                                           "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                           null,
                                                                                           new Date(1558096038727L),
                                                                                           "afbdeea60718ef43acbc07ccc8d8b7ff");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                      new Date(1558096037069L),
                                                                                      "9ef92.4823a@2649b.fr",
                                                                                      new Date(1558096036640L),
                                                                                      "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                      null, new Date(1558096040346L),
                                                                                      "afbdeea60718ef43acbc07ccc8d8b7ff");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1558096037727L),
                                                                                             null,
                                                                                             new Date(1558096038626L),
                                                                                             "2FXì¯†52\u0007R5ë™£\u0000ï´µ2552Séº“åŠ¼ä—´22/æ±µî«¾5î?º25!ë?©5,2\b22\u000725%î¤ 2`è‹…5\u001a)ê–Ÿ2B2\u0013îŸª52ì¦?5\u001c)\u0013",
                                                                                             null,
                                                                                             new Date(1558096040414L),
                                                                                             "2FXì¯†52\u0007R5ë™£\u0000ï´µ2552Séº“åŠ¼ä—´22/æ±µî«¾5î?º25!ë?©5,2\b22\u000725%î¤ 2`è‹…5\u001a)ê–Ÿ2B2\u0013îŸª52ì¦?5\u001c)\u0013");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                           new Date(1558096038895L),
                                                                                           "d6f89.374f8@f8da6.fr",
                                                                                           new Date(1558096037514L),
                                                                                           "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                           null,
                                                                                           new Date(1558096041086L),
                                                                                           "afbdeea60718ef43acbc07ccc8d8b7ff");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                           new Date(1558096038895L),
                                                                                           "d6f89.374f8@f8da6.fr",
                                                                                           new Date(1558096037514L),
                                                                                           "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                           null,
                                                                                           new Date(1558096041086L),
                                                                                           "afbdeea60718ef43acbc07ccc8d8b7ff");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                           new Date(1558096040108L),
                                                                                           "27c99.07ee8@c248d.me",
                                                                                           new Date(1558096042442L),
                                                                                           "afbdeea60718ef43acbc07ccc8d8b7ff",
                                                                                           null,
                                                                                           new Date(1558096036750L),
                                                                                           "afbdeea60718ef43acbc07ccc8d8b7ff");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
