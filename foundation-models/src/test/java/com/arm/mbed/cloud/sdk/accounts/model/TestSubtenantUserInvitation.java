// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("28690619-daec-48b9-90d0-48aad9bfe763",
                                                                                           new Date(1551867944609L),
                                                                                           "b956d844-a95d-427b-aa3a-f53d442d451d",
                                                                                           new Date(1551867950056L),
                                                                                           "523a46c5-b17f-4a91-a043-a0b2e5253e2a",
                                                                                           null,
                                                                                           new Date(1551867946551L),
                                                                                           "43c20d00-2654-4eda-8a42-9b5b7059bd7c");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("64940cdc-9955-4c1c-8d5b-4ab81d5f9c51",
                                                                                           new Date(1551867950834L),
                                                                                           "78bf0041-e413-4388-923e-7f38a52044f1",
                                                                                           new Date(1551867944048L),
                                                                                           "5a6b1725-7857-439f-89aa-c573fdf10d61",
                                                                                           null,
                                                                                           new Date(1551867945993L),
                                                                                           "3c9eea04-0370-46fa-8a07-fa646f47dfec");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("64940cdc-9955-4c1c-8d5b-4ab81d5f9c51",
                                                                                           new Date(1551867950834L),
                                                                                           "78bf0041-e413-4388-923e-7f38a52044f1",
                                                                                           new Date(1551867944048L),
                                                                                           "5a6b1725-7857-439f-89aa-c573fdf10d61",
                                                                                           null,
                                                                                           new Date(1551867945993L),
                                                                                           "3c9eea04-0370-46fa-8a07-fa646f47dfec");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("5c375bc3-4b74-4e31-a266-967b610fb2d9",
                                                                                      new Date(1551867950418L),
                                                                                      "285f5cb6-a7ae-4f8f-b6b9-a14751756538",
                                                                                      new Date(1551867947070L),
                                                                                      "620bd248-3c85-4a42-ac9e-ab6c4e6e44c8",
                                                                                      null, new Date(1551867947567L),
                                                                                      "e883f6b4-9c20-4fed-b592-f23dc8ed0e8b");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1551867946206L),
                                                                                             null,
                                                                                             new Date(1551867953055L),
                                                                                             "b4ff9727-6025-420e-95f6-b84a0d8100a4",
                                                                                             null,
                                                                                             new Date(1551867945087L),
                                                                                             "4871f432-c79f-441c-bda8-74944eedf760");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("ba35e371-0f0a-475b-9334-c06f9a96243c",
                                                                                           new Date(1551867951619L),
                                                                                           "3f0fc3e7-8728-4d43-a2e2-7fc305902f2d",
                                                                                           new Date(1551867953312L),
                                                                                           "864060f7-e819-4168-9314-ba2999e0ebc3",
                                                                                           null,
                                                                                           new Date(1551867945872L),
                                                                                           "596696f9-1dcd-44b8-b214-a83449aeaacf");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("ba35e371-0f0a-475b-9334-c06f9a96243c",
                                                                                           new Date(1551867951619L),
                                                                                           "3f0fc3e7-8728-4d43-a2e2-7fc305902f2d",
                                                                                           new Date(1551867953312L),
                                                                                           "864060f7-e819-4168-9314-ba2999e0ebc3",
                                                                                           null,
                                                                                           new Date(1551867945872L),
                                                                                           "596696f9-1dcd-44b8-b214-a83449aeaacf");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("51562274-9285-458f-aeba-beac11bdadc9",
                                                                                           new Date(1551867953370L),
                                                                                           "f2a7a462-d39f-4b13-be00-2c86f920a91a",
                                                                                           new Date(1551867950749L),
                                                                                           "cc90f4b5-31a9-489a-927f-ffc75160e4dd",
                                                                                           null,
                                                                                           new Date(1551867951114L),
                                                                                           "bc1268a5-bc7b-4b39-af9f-3b44940a667a");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
