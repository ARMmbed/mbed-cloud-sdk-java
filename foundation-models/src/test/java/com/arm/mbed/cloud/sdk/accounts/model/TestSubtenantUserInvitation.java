// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("360efa29edf1702da7045dd46bf2c0ee",
                                                                                           new Date(1559758611114L),
                                                                                           "2611b.a9d6d@8cd42.fr",
                                                                                           new Date(1559758606881L),
                                                                                           "360efa29edf1702da7045dd46bf2c0ee",
                                                                                           null,
                                                                                           new Date(1559758608326L),
                                                                                           "360efa29edf1702da7045dd46bf2c0ee");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("360efa29edf1702da7045dd46bf2c0ee",
                                                                                           new Date(1559758604646L),
                                                                                           "af8a2.e1614@7e63e.fr",
                                                                                           new Date(1559758606209L),
                                                                                           "360efa29edf1702da7045dd46bf2c0ee",
                                                                                           null,
                                                                                           new Date(1559758604339L),
                                                                                           "360efa29edf1702da7045dd46bf2c0ee");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("360efa29edf1702da7045dd46bf2c0ee",
                                                                                           new Date(1559758604646L),
                                                                                           "af8a2.e1614@7e63e.fr",
                                                                                           new Date(1559758606209L),
                                                                                           "360efa29edf1702da7045dd46bf2c0ee",
                                                                                           null,
                                                                                           new Date(1559758604339L),
                                                                                           "360efa29edf1702da7045dd46bf2c0ee");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("360efa29edf1702da7045dd46bf2c0ee",
                                                                                      new Date(1559758607863L),
                                                                                      "d1f03.f1f11@1669d.me",
                                                                                      new Date(1559758609298L),
                                                                                      "360efa29edf1702da7045dd46bf2c0ee",
                                                                                      null, new Date(1559758611936L),
                                                                                      "360efa29edf1702da7045dd46bf2c0ee");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1559758610644L),
                                                                                             null,
                                                                                             new Date(1559758607241L),
                                                                                             "TU8ã½…\u0019ZDDâ¬?ê²…8êˆ›è½?*8ç¾‚_\u000e\t\u0013W8Tí‘¼åµ…,\u0001. 8ê?¢8è¡¾\u0001é†€ 8î¢˜\u001bç¶’Sç‚¤ê·ˆ\bëŸ¬\u0011L8\u0010K?î¶¥8ï‚•è‰­ë§¦\u000eG*êµ­8Q8",
                                                                                             null,
                                                                                             new Date(1559758610682L),
                                                                                             "TU8ã½…\u0019ZDDâ¬?ê²…8êˆ›è½?*8ç¾‚_\u000e\t\u0013W8Tí‘¼åµ…,\u0001. 8ê?¢8è¡¾\u0001é†€ 8î¢˜\u001bç¶’Sç‚¤ê·ˆ\bëŸ¬\u0011L8\u0010K?î¶¥8ï‚•è‰­ë§¦\u000eG*êµ­8Q8");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("360efa29edf1702da7045dd46bf2c0ee",
                                                                                           new Date(1559758607693L),
                                                                                           "5d419.3de6a@91cbc.me",
                                                                                           new Date(1559758604912L),
                                                                                           "360efa29edf1702da7045dd46bf2c0ee",
                                                                                           null,
                                                                                           new Date(1559758603400L),
                                                                                           "360efa29edf1702da7045dd46bf2c0ee");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("360efa29edf1702da7045dd46bf2c0ee",
                                                                                           new Date(1559758607693L),
                                                                                           "5d419.3de6a@91cbc.me",
                                                                                           new Date(1559758604912L),
                                                                                           "360efa29edf1702da7045dd46bf2c0ee",
                                                                                           null,
                                                                                           new Date(1559758603400L),
                                                                                           "360efa29edf1702da7045dd46bf2c0ee");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("360efa29edf1702da7045dd46bf2c0ee",
                                                                                           new Date(1559758611833L),
                                                                                           "7c790.cd9d2@cb9d9.me",
                                                                                           new Date(1559758608520L),
                                                                                           "360efa29edf1702da7045dd46bf2c0ee",
                                                                                           null,
                                                                                           new Date(1559758603249L),
                                                                                           "360efa29edf1702da7045dd46bf2c0ee");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
