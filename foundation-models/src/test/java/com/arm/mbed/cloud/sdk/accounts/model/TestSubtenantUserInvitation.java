// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("fdf80519-d3c1-42de-9707-8ea39670dc0b",
                                                                                           new Date(1547225897914L),
                                                                                           "344d7e5f-2b51-4398-a4ff-bcdc19d85976",
                                                                                           new Date(1547225903152L),
                                                                                           "a032745c-b8ff-4fd2-9837-2d557095e600",
                                                                                           null,
                                                                                           new Date(1547225901105L),
                                                                                           "a74080c6-3894-457a-a59a-27af71e299ca");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("4ad81e3c-7f4e-4b9e-bebc-ff9b1ba19177",
                                                                                           new Date(1547225905341L),
                                                                                           "00784cd4-13e4-4cfc-9bad-e94e3152e0b9",
                                                                                           new Date(1547225900650L),
                                                                                           "c98c9fba-517e-40d3-bada-b80817f71506",
                                                                                           null,
                                                                                           new Date(1547225905673L),
                                                                                           "d91e7c38-2879-4e8c-bb5a-7f65ba1b611d");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("4ad81e3c-7f4e-4b9e-bebc-ff9b1ba19177",
                                                                                           new Date(1547225905341L),
                                                                                           "00784cd4-13e4-4cfc-9bad-e94e3152e0b9",
                                                                                           new Date(1547225900650L),
                                                                                           "c98c9fba-517e-40d3-bada-b80817f71506",
                                                                                           null,
                                                                                           new Date(1547225905673L),
                                                                                           "d91e7c38-2879-4e8c-bb5a-7f65ba1b611d");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("40fcbf52-3abd-4284-b134-d501c21d0ef1",
                                                                                      new Date(1547225896772L),
                                                                                      "2b64361c-3bde-42eb-8f7a-120aca058db3",
                                                                                      new Date(1547225899502L),
                                                                                      "a3260b83-ccc9-4d18-b3b0-e6d9e8bb94f8",
                                                                                      null, new Date(1547225900700L),
                                                                                      "da8b0a3c-ae26-4c0d-9fd7-18bb3e73c371");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1547225901659L),
                                                                                             null,
                                                                                             new Date(1547225900056L),
                                                                                             "b89743a6-4d6c-4f56-8141-349ea84e4f54",
                                                                                             null,
                                                                                             new Date(1547225897547L),
                                                                                             "5751976f-4d48-4b0e-a756-6aba2512de08");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("71749e85-90a1-482a-959d-d16591533976",
                                                                                           new Date(1547225897390L),
                                                                                           "33749cad-c0a9-465d-a832-c3d6b37e2d41",
                                                                                           new Date(1547225898371L),
                                                                                           "16bdf9f4-c93c-459f-924a-8ac2594e2883",
                                                                                           null,
                                                                                           new Date(1547225900656L),
                                                                                           "08af025e-4dfb-4a29-9071-638c91b7d29c");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("71749e85-90a1-482a-959d-d16591533976",
                                                                                           new Date(1547225897390L),
                                                                                           "33749cad-c0a9-465d-a832-c3d6b37e2d41",
                                                                                           new Date(1547225898371L),
                                                                                           "16bdf9f4-c93c-459f-924a-8ac2594e2883",
                                                                                           null,
                                                                                           new Date(1547225900656L),
                                                                                           "08af025e-4dfb-4a29-9071-638c91b7d29c");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("a3d3b19b-126d-470c-a5a8-9f96f4f2352d",
                                                                                           new Date(1547225903890L),
                                                                                           "5ac51ed2-56c2-4ab2-875e-ad60f2b72306",
                                                                                           new Date(1547225902444L),
                                                                                           "2594b3b9-4608-4942-874c-a12b4748b6b1",
                                                                                           null,
                                                                                           new Date(1547225898334L),
                                                                                           "06b1b22b-a406-4918-87c5-834f914d4049");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
