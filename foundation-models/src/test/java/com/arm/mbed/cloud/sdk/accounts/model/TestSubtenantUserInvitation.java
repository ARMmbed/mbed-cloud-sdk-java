// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("acbf655bdeac77c770ad4964fcb1f81f",
                                                                                           new Date(1559747935040L),
                                                                                           "86d59.55c0d@29e5c.me",
                                                                                           new Date(1559747926601L),
                                                                                           "acbf655bdeac77c770ad4964fcb1f81f",
                                                                                           null,
                                                                                           new Date(1559747929100L),
                                                                                           "acbf655bdeac77c770ad4964fcb1f81f");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("acbf655bdeac77c770ad4964fcb1f81f",
                                                                                           new Date(1559747926170L),
                                                                                           "dc10d.94cb8@4ce64.me",
                                                                                           new Date(1559747931785L),
                                                                                           "acbf655bdeac77c770ad4964fcb1f81f",
                                                                                           null,
                                                                                           new Date(1559747930584L),
                                                                                           "acbf655bdeac77c770ad4964fcb1f81f");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("acbf655bdeac77c770ad4964fcb1f81f",
                                                                                           new Date(1559747926170L),
                                                                                           "dc10d.94cb8@4ce64.me",
                                                                                           new Date(1559747931785L),
                                                                                           "acbf655bdeac77c770ad4964fcb1f81f",
                                                                                           null,
                                                                                           new Date(1559747930584L),
                                                                                           "acbf655bdeac77c770ad4964fcb1f81f");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("acbf655bdeac77c770ad4964fcb1f81f",
                                                                                      new Date(1559747932119L),
                                                                                      "02bb2.b1952@1d19d.me",
                                                                                      new Date(1559747928510L),
                                                                                      "acbf655bdeac77c770ad4964fcb1f81f",
                                                                                      null, new Date(1559747927676L),
                                                                                      "acbf655bdeac77c770ad4964fcb1f81f");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1559747930550L),
                                                                                             null,
                                                                                             new Date(1559747926496L),
                                                                                             "ê€Š+(è¤‘32\f3X\u0005;\\\\2\u001aAä£½îµ‰-2á—œN22&\\\\X\u00023\u00023OJ3\u00012Z*\u000f2\u0007Iä³?3V3ì Ž3'\u00142Î£ë›„\b<XNç£€ë¾†)3.ï¦¢",
                                                                                             null,
                                                                                             new Date(1559747928496L),
                                                                                             "ê€Š+(è¤‘32\f3X\u0005;\\\\2\u001aAä£½îµ‰-2á—œN22&\\\\X\u00023\u00023OJ3\u00012Z*\u000f2\u0007Iä³?3V3ì Ž3'\u00142Î£ë›„\b<XNç£€ë¾†)3.ï¦¢");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("acbf655bdeac77c770ad4964fcb1f81f",
                                                                                           new Date(1559747931147L),
                                                                                           "fbd6c.e1ac3@8f20e.me",
                                                                                           new Date(1559747926845L),
                                                                                           "acbf655bdeac77c770ad4964fcb1f81f",
                                                                                           null,
                                                                                           new Date(1559747925815L),
                                                                                           "acbf655bdeac77c770ad4964fcb1f81f");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("acbf655bdeac77c770ad4964fcb1f81f",
                                                                                           new Date(1559747931147L),
                                                                                           "fbd6c.e1ac3@8f20e.me",
                                                                                           new Date(1559747926845L),
                                                                                           "acbf655bdeac77c770ad4964fcb1f81f",
                                                                                           null,
                                                                                           new Date(1559747925815L),
                                                                                           "acbf655bdeac77c770ad4964fcb1f81f");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("acbf655bdeac77c770ad4964fcb1f81f",
                                                                                           new Date(1559747929112L),
                                                                                           "2c305.76f81@988c4.me",
                                                                                           new Date(1559747927959L),
                                                                                           "acbf655bdeac77c770ad4964fcb1f81f",
                                                                                           null,
                                                                                           new Date(1559747933709L),
                                                                                           "acbf655bdeac77c770ad4964fcb1f81f");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
