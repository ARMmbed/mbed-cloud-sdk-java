// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("85b43b75-d847-4bf0-a0b4-a9123a86ba53",
                                                                                           new Date(1547489766381L),
                                                                                           "15bbb3e8-0fd9-43d2-8a84-85daec8b615e",
                                                                                           new Date(1547489769934L),
                                                                                           "f181911b-0280-4103-b897-9f387b3d6ace",
                                                                                           null,
                                                                                           new Date(1547489769109L),
                                                                                           "c01eb13e-512d-4e82-bac6-1dbb9561a1ee");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("8e92fd1f-4a87-4efb-b220-2402e9fae42e",
                                                                                           new Date(1547489767985L),
                                                                                           "084b59f7-90ae-4efd-9dea-e252e97b95dc",
                                                                                           new Date(1547489769036L),
                                                                                           "751a3f55-b31f-40dd-ad69-a1d2e6d3d161",
                                                                                           null,
                                                                                           new Date(1547489768288L),
                                                                                           "7272a4d0-4f40-4f29-9e93-caa7ccde7d43");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("8e92fd1f-4a87-4efb-b220-2402e9fae42e",
                                                                                           new Date(1547489767985L),
                                                                                           "084b59f7-90ae-4efd-9dea-e252e97b95dc",
                                                                                           new Date(1547489769036L),
                                                                                           "751a3f55-b31f-40dd-ad69-a1d2e6d3d161",
                                                                                           null,
                                                                                           new Date(1547489768288L),
                                                                                           "7272a4d0-4f40-4f29-9e93-caa7ccde7d43");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("20f453fe-cd20-4f44-9ddc-6cb4bbb6e144",
                                                                                      new Date(1547489771260L),
                                                                                      "c49e2307-1d6a-4088-9042-8cced34dea70",
                                                                                      new Date(1547489771929L),
                                                                                      "7f0212fc-be5c-4271-955d-2d4ecceae809",
                                                                                      null, new Date(1547489766828L),
                                                                                      "754b73b0-3496-439d-8aef-34a993ed6e08");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1547489768428L),
                                                                                             null,
                                                                                             new Date(1547489767343L),
                                                                                             "4f24116f-033a-42f9-a822-0c0b2437b535",
                                                                                             null,
                                                                                             new Date(1547489764726L),
                                                                                             "2623a983-8a2a-4da9-b425-68506d0d8d05");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("8d81693b-d1e8-4e55-9730-40f1a0d2c58c",
                                                                                           new Date(1547489764849L),
                                                                                           "f6db6ea9-e306-4447-8f38-dc5029a056d8",
                                                                                           new Date(1547489765182L),
                                                                                           "55e4c4ed-cbeb-417c-8dc2-d7d655af754e",
                                                                                           null,
                                                                                           new Date(1547489764397L),
                                                                                           "bee8b7e6-82b0-43d8-9731-52401acd7816");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("8d81693b-d1e8-4e55-9730-40f1a0d2c58c",
                                                                                           new Date(1547489764849L),
                                                                                           "f6db6ea9-e306-4447-8f38-dc5029a056d8",
                                                                                           new Date(1547489765182L),
                                                                                           "55e4c4ed-cbeb-417c-8dc2-d7d655af754e",
                                                                                           null,
                                                                                           new Date(1547489764397L),
                                                                                           "bee8b7e6-82b0-43d8-9731-52401acd7816");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("4080a03c-3ad6-41bc-90c3-90c55380e272",
                                                                                           new Date(1547489767557L),
                                                                                           "bbce2967-ddeb-420b-82c4-a04dacffd2be",
                                                                                           new Date(1547489771871L),
                                                                                           "0e8751c3-8cce-4b1f-a4b1-d2d831888cb7",
                                                                                           null,
                                                                                           new Date(1547489768435L),
                                                                                           "4ad3465b-e969-4789-8519-cbbebb1868be");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
