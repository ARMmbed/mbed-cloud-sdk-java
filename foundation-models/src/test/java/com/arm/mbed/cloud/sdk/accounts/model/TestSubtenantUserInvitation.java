// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                           new Date(1559662776727L),
                                                                                           "98179.c654d@1512c.fr",
                                                                                           new Date(1559662783950L),
                                                                                           "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                           null,
                                                                                           new Date(1559662779330L),
                                                                                           "f33f4df6191a3d432ba4b4ea8fd5906b");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                           new Date(1559662782322L),
                                                                                           "d34c4.61f6f@eb3c2.me",
                                                                                           new Date(1559662784626L),
                                                                                           "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                           null,
                                                                                           new Date(1559662782497L),
                                                                                           "f33f4df6191a3d432ba4b4ea8fd5906b");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                           new Date(1559662782322L),
                                                                                           "d34c4.61f6f@eb3c2.me",
                                                                                           new Date(1559662784626L),
                                                                                           "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                           null,
                                                                                           new Date(1559662782497L),
                                                                                           "f33f4df6191a3d432ba4b4ea8fd5906b");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                      new Date(1559662784600L),
                                                                                      "ca04a.b0dbc@9e7d8.fr",
                                                                                      new Date(1559662777601L),
                                                                                      "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                      null, new Date(1559662779729L),
                                                                                      "f33f4df6191a3d432ba4b4ea8fd5906b");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1559662784784L),
                                                                                             null,
                                                                                             new Date(1559662785401L),
                                                                                             "7ã??cccUî‡±c7ä¨§\u0003îŒ¾æ­œ7c^Tæ·¨c`è–¯ä•§7cD7äž¾c\u0006\u00117ST-7K-cé§ƒ7cë¼¯ãŠ¯\t\t7cÕ¶cã²ŽâŸ¢\u00177 ;í?½cã½Œ%æ¿´B?7",
                                                                                             null,
                                                                                             new Date(1559662785854L),
                                                                                             "7ã??cccUî‡±c7ä¨§\u0003îŒ¾æ­œ7c^Tæ·¨c`è–¯ä•§7cD7äž¾c\u0006\u00117ST-7K-cé§ƒ7cë¼¯ãŠ¯\t\t7cÕ¶cã²ŽâŸ¢\u00177 ;í?½cã½Œ%æ¿´B?7");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                           new Date(1559662781952L),
                                                                                           "e581a.776cc@26bbe.me",
                                                                                           new Date(1559662777857L),
                                                                                           "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                           null,
                                                                                           new Date(1559662785261L),
                                                                                           "f33f4df6191a3d432ba4b4ea8fd5906b");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                           new Date(1559662781952L),
                                                                                           "e581a.776cc@26bbe.me",
                                                                                           new Date(1559662777857L),
                                                                                           "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                           null,
                                                                                           new Date(1559662785261L),
                                                                                           "f33f4df6191a3d432ba4b4ea8fd5906b");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                           new Date(1559662779754L),
                                                                                           "a716f.ed689@0c54d.fr",
                                                                                           new Date(1559662780945L),
                                                                                           "f33f4df6191a3d432ba4b4ea8fd5906b",
                                                                                           null,
                                                                                           new Date(1559662779576L),
                                                                                           "f33f4df6191a3d432ba4b4ea8fd5906b");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
