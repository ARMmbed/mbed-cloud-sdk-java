// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                           new Date(1559833680505L),
                                                                                           "ee356.bd92e@36de1.me",
                                                                                           new Date(1559833677916L),
                                                                                           "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                           null,
                                                                                           new Date(1559833681420L),
                                                                                           "bedebcaf929fb64c74860f9a9cc41c0c");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                           new Date(1559833678076L),
                                                                                           "b2ae8.8072f@8e7c0.fr",
                                                                                           new Date(1559833679948L),
                                                                                           "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                           null,
                                                                                           new Date(1559833686541L),
                                                                                           "bedebcaf929fb64c74860f9a9cc41c0c");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                           new Date(1559833678076L),
                                                                                           "b2ae8.8072f@8e7c0.fr",
                                                                                           new Date(1559833679948L),
                                                                                           "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                           null,
                                                                                           new Date(1559833686541L),
                                                                                           "bedebcaf929fb64c74860f9a9cc41c0c");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                      new Date(1559833686550L),
                                                                                      "54f7c.b0002@b5056.fr",
                                                                                      new Date(1559833681869L),
                                                                                      "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                      null, new Date(1559833683968L),
                                                                                      "bedebcaf929fb64c74860f9a9cc41c0c");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1559833678780L),
                                                                                             null,
                                                                                             new Date(1559833678578L),
                                                                                             "D3\u0001\u0002\u001c53,àº£Gêž?*]\u001e.H555\u0016æ¬?Å¢3Z533ê§ˆâ?ƒ33è­µâ”ŒçŒ‘\b\u001f5ã†ŒG3T)\u001fï¸¬âŠ©àµ¾3H535(35í?º5è˜ Í¡Y333\u0007",
                                                                                             null,
                                                                                             new Date(1559833679015L),
                                                                                             "D3\u0001\u0002\u001c53,àº£Gêž?*]\u001e.H555\u0016æ¬?Å¢3Z533ê§ˆâ?ƒ33è­µâ”ŒçŒ‘\b\u001f5ã†ŒG3T)\u001fï¸¬âŠ©àµ¾3H535(35í?º5è˜ Í¡Y333\u0007");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                           new Date(1559833685956L),
                                                                                           "6f906.ed277@47df3.fr",
                                                                                           new Date(1559833682073L),
                                                                                           "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                           null,
                                                                                           new Date(1559833679965L),
                                                                                           "bedebcaf929fb64c74860f9a9cc41c0c");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                           new Date(1559833685956L),
                                                                                           "6f906.ed277@47df3.fr",
                                                                                           new Date(1559833682073L),
                                                                                           "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                           null,
                                                                                           new Date(1559833679965L),
                                                                                           "bedebcaf929fb64c74860f9a9cc41c0c");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                           new Date(1559833682206L),
                                                                                           "61ba7.14c4b@664a6.me",
                                                                                           new Date(1559833685984L),
                                                                                           "bedebcaf929fb64c74860f9a9cc41c0c",
                                                                                           null,
                                                                                           new Date(1559833682909L),
                                                                                           "bedebcaf929fb64c74860f9a9cc41c0c");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
