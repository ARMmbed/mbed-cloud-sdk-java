// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                                           new Date(1559560669686L),
                                                                                           "4ab75.fff6a@fab5d.fr",
                                                                                           new Date(1559560667007L),
                                                                                           "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                                           null,
                                                                                           new Date(1559560668662L),
                                                                                           "3f3bfa45b47fdcef3cd0baefcc7b4d9a");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                                           new Date(1559560665162L),
                                                                                           "9d671.7adf3@b970f.fr",
                                                                                           new Date(1559560666749L),
                                                                                           "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                                           null,
                                                                                           new Date(1559560664157L),
                                                                                           "3f3bfa45b47fdcef3cd0baefcc7b4d9a");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                                           new Date(1559560665162L),
                                                                                           "9d671.7adf3@b970f.fr",
                                                                                           new Date(1559560666749L),
                                                                                           "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                                           null,
                                                                                           new Date(1559560664157L),
                                                                                           "3f3bfa45b47fdcef3cd0baefcc7b4d9a");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                                      new Date(1559560671996L),
                                                                                      "5e854.824e3@9237a.me",
                                                                                      new Date(1559560669306L),
                                                                                      "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                                      null, new Date(1559560673231L),
                                                                                      "3f3bfa45b47fdcef3cd0baefcc7b4d9a");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1559560673035L),
                                                                                             null,
                                                                                             new Date(1559560670817L),
                                                                                             "å‚¿!6ç¢šâ«”2'>\tæ ¦\u001c6Y8\u001dä³?8\u001f\u00176à¤Ÿ22æ¢‹)8é¥¦B?ç¿“[6é½­ä?¬8821\u001aM\u001588\u0011ÙŽ6+6_88F1\u0004666[86ë§±I1_",
                                                                                             null,
                                                                                             new Date(1559560663895L),
                                                                                             "å‚¿!6ç¢šâ«”2'>\tæ ¦\u001c6Y8\u001dä³?8\u001f\u00176à¤Ÿ22æ¢‹)8é¥¦B?ç¿“[6é½­ä?¬8821\u001aM\u001588\u0011ÙŽ6+6_88F1\u0004666[86ë§±I1_");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                                           new Date(1559560665375L),
                                                                                           "dde12.87d59@48c5e.me",
                                                                                           new Date(1559560673031L),
                                                                                           "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                                           null,
                                                                                           new Date(1559560666517L),
                                                                                           "3f3bfa45b47fdcef3cd0baefcc7b4d9a");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                                           new Date(1559560665375L),
                                                                                           "dde12.87d59@48c5e.me",
                                                                                           new Date(1559560673031L),
                                                                                           "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                                           null,
                                                                                           new Date(1559560666517L),
                                                                                           "3f3bfa45b47fdcef3cd0baefcc7b4d9a");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                                           new Date(1559560668137L),
                                                                                           "175b9.fcf4d@26867.me",
                                                                                           new Date(1559560664848L),
                                                                                           "3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                                           null,
                                                                                           new Date(1559560670586L),
                                                                                           "3f3bfa45b47fdcef3cd0baefcc7b4d9a");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
