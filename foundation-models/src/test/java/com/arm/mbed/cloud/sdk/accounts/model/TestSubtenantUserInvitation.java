// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("61d81ff5-6416-4007-82ac-0ebc1eda3099",
                                                                                           new Date(1547730059519L),
                                                                                           "37b898ce-f0ad-4827-bc4b-1a3b39d0d40f",
                                                                                           new Date(1547730056806L),
                                                                                           "e1d4aed7-1ca4-467e-a6ee-c709dada187a",
                                                                                           null,
                                                                                           new Date(1547730058695L),
                                                                                           "23308531-73bc-4dd4-a320-93bca60cbd15");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("edef2c19-3ba6-4c57-963b-df42b470ad23",
                                                                                           new Date(1547730056990L),
                                                                                           "534391df-ae24-4b00-aecd-a1a9c3de9eb7",
                                                                                           new Date(1547730053092L),
                                                                                           "4a714b82-f3af-4fc7-9bc0-48e9cc33a3c5",
                                                                                           null,
                                                                                           new Date(1547730055108L),
                                                                                           "365d4adf-b391-4596-8239-a31cf6ae48dc");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("edef2c19-3ba6-4c57-963b-df42b470ad23",
                                                                                           new Date(1547730056990L),
                                                                                           "534391df-ae24-4b00-aecd-a1a9c3de9eb7",
                                                                                           new Date(1547730053092L),
                                                                                           "4a714b82-f3af-4fc7-9bc0-48e9cc33a3c5",
                                                                                           null,
                                                                                           new Date(1547730055108L),
                                                                                           "365d4adf-b391-4596-8239-a31cf6ae48dc");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("be36034b-7224-4f64-91af-dd144af0cafa",
                                                                                      new Date(1547730052054L),
                                                                                      "6d354251-cde2-4add-8919-1e3c9f10a94a",
                                                                                      new Date(1547730059424L),
                                                                                      "598e7c09-faba-4d15-9f7e-5e52413baaf9",
                                                                                      null, new Date(1547730058347L),
                                                                                      "73141650-7aac-4bd7-a693-a3131e004d72");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1547730054945L),
                                                                                             null,
                                                                                             new Date(1547730053252L),
                                                                                             "9fdc496d-27cf-41da-b531-0e676795985c",
                                                                                             null,
                                                                                             new Date(1547730052111L),
                                                                                             "d8ec44d0-98b9-480e-b3f8-62c79ec798a7");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("9093a7d7-32ca-4fc7-9b96-13ba9b64d979",
                                                                                           new Date(1547730055461L),
                                                                                           "78782a9f-3a89-4052-9acb-fcc859d37863",
                                                                                           new Date(1547730059089L),
                                                                                           "97b496f4-13ca-4bde-8d76-e20a732c529d",
                                                                                           null,
                                                                                           new Date(1547730050613L),
                                                                                           "3a53ace3-8ff0-4283-8012-e3409b2f7364");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("9093a7d7-32ca-4fc7-9b96-13ba9b64d979",
                                                                                           new Date(1547730055461L),
                                                                                           "78782a9f-3a89-4052-9acb-fcc859d37863",
                                                                                           new Date(1547730059089L),
                                                                                           "97b496f4-13ca-4bde-8d76-e20a732c529d",
                                                                                           null,
                                                                                           new Date(1547730050613L),
                                                                                           "3a53ace3-8ff0-4283-8012-e3409b2f7364");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("efd49977-79f7-4ff4-b7d0-f986d4e1302a",
                                                                                           new Date(1547730051016L),
                                                                                           "b018645d-66a1-4bf0-89b3-09fb37c487b9",
                                                                                           new Date(1547730052383L),
                                                                                           "0c9721f4-c730-4a39-a7c7-cfdbd1b3f3cc",
                                                                                           null,
                                                                                           new Date(1547730056346L),
                                                                                           "8c865c35-c86e-42f1-a575-6fa25d2af515");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
