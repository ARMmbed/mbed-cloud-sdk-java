// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("71fdba82137d3d88b328e27f0b30ef6d",
                                                                                           new Date(1559754644099L),
                                                                                           "8d492.eb611@a1322.fr",
                                                                                           new Date(1559754638624L),
                                                                                           "71fdba82137d3d88b328e27f0b30ef6d",
                                                                                           null,
                                                                                           new Date(1559754639315L),
                                                                                           "71fdba82137d3d88b328e27f0b30ef6d");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("71fdba82137d3d88b328e27f0b30ef6d",
                                                                                           new Date(1559754637316L),
                                                                                           "162cb.4f80c@6f4b4.me",
                                                                                           new Date(1559754641878L),
                                                                                           "71fdba82137d3d88b328e27f0b30ef6d",
                                                                                           null,
                                                                                           new Date(1559754638190L),
                                                                                           "71fdba82137d3d88b328e27f0b30ef6d");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("71fdba82137d3d88b328e27f0b30ef6d",
                                                                                           new Date(1559754637316L),
                                                                                           "162cb.4f80c@6f4b4.me",
                                                                                           new Date(1559754641878L),
                                                                                           "71fdba82137d3d88b328e27f0b30ef6d",
                                                                                           null,
                                                                                           new Date(1559754638190L),
                                                                                           "71fdba82137d3d88b328e27f0b30ef6d");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("71fdba82137d3d88b328e27f0b30ef6d",
                                                                                      new Date(1559754645070L),
                                                                                      "81bf2.e6134@aae15.me",
                                                                                      new Date(1559754636297L),
                                                                                      "71fdba82137d3d88b328e27f0b30ef6d",
                                                                                      null, new Date(1559754641830L),
                                                                                      "71fdba82137d3d88b328e27f0b30ef6d");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1559754637791L),
                                                                                             null,
                                                                                             new Date(1559754638946L),
                                                                                             ";\u000b\u0007å±¨&\u0007H_c5Y\u0005íˆµ44ã—‘\u00165cc)4câˆ³ë…”cc4\u000fë‰¢4ížš54æ£ž4cë€‡c\bcà¦Œ5í?¾?F\táŒ·Tcï‚›céŽ»ëŒ®\u0013$$c:c\u0017F-îŒ¯\u0018",
                                                                                             null,
                                                                                             new Date(1559754640644L),
                                                                                             ";\u000b\u0007å±¨&\u0007H_c5Y\u0005íˆµ44ã—‘\u00165cc)4câˆ³ë…”cc4\u000fë‰¢4ížš54æ£ž4cë€‡c\bcà¦Œ5í?¾?F\táŒ·Tcï‚›céŽ»ëŒ®\u0013$$c:c\u0017F-îŒ¯\u0018");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("71fdba82137d3d88b328e27f0b30ef6d",
                                                                                           new Date(1559754644314L),
                                                                                           "a85f4.311e0@65328.me",
                                                                                           new Date(1559754636464L),
                                                                                           "71fdba82137d3d88b328e27f0b30ef6d",
                                                                                           null,
                                                                                           new Date(1559754640720L),
                                                                                           "71fdba82137d3d88b328e27f0b30ef6d");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("71fdba82137d3d88b328e27f0b30ef6d",
                                                                                           new Date(1559754644314L),
                                                                                           "a85f4.311e0@65328.me",
                                                                                           new Date(1559754636464L),
                                                                                           "71fdba82137d3d88b328e27f0b30ef6d",
                                                                                           null,
                                                                                           new Date(1559754640720L),
                                                                                           "71fdba82137d3d88b328e27f0b30ef6d");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("71fdba82137d3d88b328e27f0b30ef6d",
                                                                                           new Date(1559754640400L),
                                                                                           "e09d4.e4a1e@0346c.me",
                                                                                           new Date(1559754642566L),
                                                                                           "71fdba82137d3d88b328e27f0b30ef6d",
                                                                                           null,
                                                                                           new Date(1559754635134L),
                                                                                           "71fdba82137d3d88b328e27f0b30ef6d");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
