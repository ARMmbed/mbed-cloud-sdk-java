// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("19f2f3f7-a726-493c-8c83-81c0347797d6",
                                                                                           new Date(1547573363262L),
                                                                                           "74eacdd0-ea54-43b2-9adb-f0ac26c3749d",
                                                                                           new Date(1547573361896L),
                                                                                           "fb8de01b-b55c-4170-8e00-4a45b4e1e4b2",
                                                                                           null,
                                                                                           new Date(1547573357243L),
                                                                                           "0b60062e-7f4c-4c05-83e8-ac181890d169");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("6f4a090a-48e6-4cd2-8d6b-20d4e6b91d52",
                                                                                           new Date(1547573361989L),
                                                                                           "55374f9c-5db3-4261-8e3a-7c9d0daa8298",
                                                                                           new Date(1547573364335L),
                                                                                           "05a2d119-81f2-4327-b412-91e51aed83a0",
                                                                                           null,
                                                                                           new Date(1547573359495L),
                                                                                           "021386ea-c12e-4d10-baab-233ab382ad5a");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("6f4a090a-48e6-4cd2-8d6b-20d4e6b91d52",
                                                                                           new Date(1547573361989L),
                                                                                           "55374f9c-5db3-4261-8e3a-7c9d0daa8298",
                                                                                           new Date(1547573364335L),
                                                                                           "05a2d119-81f2-4327-b412-91e51aed83a0",
                                                                                           null,
                                                                                           new Date(1547573359495L),
                                                                                           "021386ea-c12e-4d10-baab-233ab382ad5a");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("523f5dbb-b61a-4225-99fb-c43bbd4d0ed0",
                                                                                      new Date(1547573356982L),
                                                                                      "50ebeba0-4f5b-459d-ad82-92bb959f5539",
                                                                                      new Date(1547573358959L),
                                                                                      "ce3e1a81-3bff-4e79-9596-7201261ff4cc",
                                                                                      null, new Date(1547573360296L),
                                                                                      "2df8462d-489d-4f7e-a584-eb991c8e5b77");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1547573362070L),
                                                                                             null,
                                                                                             new Date(1547573361171L),
                                                                                             "b13cb711-7b04-4a63-bc9a-7d2b0e897045",
                                                                                             null,
                                                                                             new Date(1547573357001L),
                                                                                             "2b645f60-3ee2-44a3-9f84-8bc3bcb4154c");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("37779eb4-034e-4246-af18-5979bde2dfdd",
                                                                                           new Date(1547573360756L),
                                                                                           "7565558f-37ec-4f75-8ca7-d303ca1238bf",
                                                                                           new Date(1547573364655L),
                                                                                           "fbd90256-bc70-472e-81ed-52543333185b",
                                                                                           null,
                                                                                           new Date(1547573358293L),
                                                                                           "c55c0a29-82f7-467f-ad68-e524754525f4");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("37779eb4-034e-4246-af18-5979bde2dfdd",
                                                                                           new Date(1547573360756L),
                                                                                           "7565558f-37ec-4f75-8ca7-d303ca1238bf",
                                                                                           new Date(1547573364655L),
                                                                                           "fbd90256-bc70-472e-81ed-52543333185b",
                                                                                           null,
                                                                                           new Date(1547573358293L),
                                                                                           "c55c0a29-82f7-467f-ad68-e524754525f4");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("316f0175-fc0f-4841-b2ee-9033d0b4c07f",
                                                                                           new Date(1547573357824L),
                                                                                           "2e870eee-d738-40de-a513-a83668d29d52",
                                                                                           new Date(1547573356935L),
                                                                                           "65586863-cf4d-4646-ba80-08c77ae8dd70",
                                                                                           null,
                                                                                           new Date(1547573366193L),
                                                                                           "57d3d76b-b411-42eb-93b8-88fc4bd220b9");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
