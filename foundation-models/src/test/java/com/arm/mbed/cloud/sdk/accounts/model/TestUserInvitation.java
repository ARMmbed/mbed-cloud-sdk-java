// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                new Date(1559560670875L), "36b2d.ba58e@c4555.me",
                                                                new Date(1559560666924L),
                                                                "3f3bfa45b47fdcef3cd0baefcc7b4d9a", null,
                                                                new Date(1559560668018L),
                                                                "3f3bfa45b47fdcef3cd0baefcc7b4d9a");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                new Date(1559560668566L), "a2a28.6151a@9459f.me",
                                                                new Date(1559560663727L),
                                                                "3f3bfa45b47fdcef3cd0baefcc7b4d9a", null,
                                                                new Date(1559560669532L),
                                                                "3f3bfa45b47fdcef3cd0baefcc7b4d9a");
            UserInvitation userinvitation2 = new UserInvitation("3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                new Date(1559560668566L), "a2a28.6151a@9459f.me",
                                                                new Date(1559560663727L),
                                                                "3f3bfa45b47fdcef3cd0baefcc7b4d9a", null,
                                                                new Date(1559560669532L),
                                                                "3f3bfa45b47fdcef3cd0baefcc7b4d9a");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("3f3bfa45b47fdcef3cd0baefcc7b4d9a", new Date(1559560667089L),
                                                           "b8d3b.74cec@4541a.fr", new Date(1559560663787L),
                                                           "3f3bfa45b47fdcef3cd0baefcc7b4d9a", null,
                                                           new Date(1559560665888L),
                                                           "3f3bfa45b47fdcef3cd0baefcc7b4d9a");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("å‚¿!6ç¢šâ«”2'>\tæ ¦\u001c6Y8\u001dä³?8\u001f\u00176à¤Ÿ22æ¢‹)8é¥¦B?ç¿“[6é½­ä?¬8821\u001aM\u001588\u0011ÙŽ6+6_88F1\u0004666[86ë§±I1_",
                                                                  new Date(1559560673101L), null,
                                                                  new Date(1559560667487L),
                                                                  "å‚¿!6ç¢šâ«”2'>\tæ ¦\u001c6Y8\u001dä³?8\u001f\u00176à¤Ÿ22æ¢‹)8é¥¦B?ç¿“[6é½­ä?¬8821\u001aM\u001588\u0011ÙŽ6+6_88F1\u0004666[86ë§±I1_",
                                                                  null, new Date(1559560666764L),
                                                                  "å‚¿!6ç¢šâ«”2'>\tæ ¦\u001c6Y8\u001dä³?8\u001f\u00176à¤Ÿ22æ¢‹)8é¥¦B?ç¿“[6é½­ä?¬8821\u001aM\u001588\u0011ÙŽ6+6_88F1\u0004666[86ë§±I1_");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                new Date(1559560667656L), "a168e.c662b@49c81.me",
                                                                new Date(1559560664053L),
                                                                "3f3bfa45b47fdcef3cd0baefcc7b4d9a", null,
                                                                new Date(1559560668512L),
                                                                "3f3bfa45b47fdcef3cd0baefcc7b4d9a");
            UserInvitation userinvitation2 = new UserInvitation("3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                new Date(1559560667656L), "a168e.c662b@49c81.me",
                                                                new Date(1559560664053L),
                                                                "3f3bfa45b47fdcef3cd0baefcc7b4d9a", null,
                                                                new Date(1559560668512L),
                                                                "3f3bfa45b47fdcef3cd0baefcc7b4d9a");
            UserInvitation userinvitation3 = new UserInvitation("3f3bfa45b47fdcef3cd0baefcc7b4d9a",
                                                                new Date(1559560671415L), "fff13.934cb@bb933.fr",
                                                                new Date(1559560663970L),
                                                                "3f3bfa45b47fdcef3cd0baefcc7b4d9a", null,
                                                                new Date(1559560668254L),
                                                                "3f3bfa45b47fdcef3cd0baefcc7b4d9a");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
