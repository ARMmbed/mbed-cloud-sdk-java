// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("a955fa6e-5881-446b-8b0c-6b08a29fba30",
                                                                new java.util.Date(1546448719181L),
                                                                "45dc1c99-3990-4b3f-84f1-e316e538c521",
                                                                new java.util.Date(1546448713004L),
                                                                "bfc7050e-f7fd-4c06-babf-40aad6a1e64f", null,
                                                                new java.util.Date(1546448719183L),
                                                                "1803c9d1-c163-44ac-a9fa-b18101f61bde");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsvalid() {
        UserInvitation userinvitation = new UserInvitation("36b3287b-08f1-4334-8fe8-85979efeda1c",
                                                           new java.util.Date(1546448713880L),
                                                           "d3624ebb-3b3c-4f71-834c-2a2072b83f89",
                                                           new java.util.Date(1546448716897L),
                                                           "781e4a2f-822f-4fcf-bea4-76fa9c726822", null,
                                                           new java.util.Date(1546448720877L),
                                                           "d0af3912-d873-49f6-aa28-77ed8b37c6c0");
        assertTrue(userinvitation.isValid());
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashcode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("1c7bfa92-e268-4076-83aa-6717e20ce362",
                                                                new java.util.Date(1546448715129L),
                                                                "1cdc9267-c60f-4bcd-936e-d92a78aa7bec",
                                                                new java.util.Date(1546448712949L),
                                                                "d53fafef-e14d-4e55-8920-c2d60a381d02", null,
                                                                new java.util.Date(1546448717128L),
                                                                "2fb4e8ff-8dc4-48b2-ba0c-e7cd44eab83b");
            UserInvitation userinvitation2 = new UserInvitation("1c7bfa92-e268-4076-83aa-6717e20ce362",
                                                                new java.util.Date(1546448715129L),
                                                                "1cdc9267-c60f-4bcd-936e-d92a78aa7bec",
                                                                new java.util.Date(1546448712949L),
                                                                "d53fafef-e14d-4e55-8920-c2d60a381d02", null,
                                                                new java.util.Date(1546448717128L),
                                                                "2fb4e8ff-8dc4-48b2-ba0c-e7cd44eab83b");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("5a0d4587-ff01-4246-9a27-fccb3ae8cd8f",
                                                                new java.util.Date(1546448718586L),
                                                                "7e7a087c-1bf5-48c6-a1c7-055987f261bc",
                                                                new java.util.Date(1546448716009L),
                                                                "12a50ae9-7abb-41a4-aab0-413bda8b3a83", null,
                                                                new java.util.Date(1546448715708L),
                                                                "3df77d8a-0996-46bc-9602-d0a96c592e7f");
            UserInvitation userinvitation2 = new UserInvitation("5a0d4587-ff01-4246-9a27-fccb3ae8cd8f",
                                                                new java.util.Date(1546448718586L),
                                                                "7e7a087c-1bf5-48c6-a1c7-055987f261bc",
                                                                new java.util.Date(1546448716009L),
                                                                "12a50ae9-7abb-41a4-aab0-413bda8b3a83", null,
                                                                new java.util.Date(1546448715708L),
                                                                "3df77d8a-0996-46bc-9602-d0a96c592e7f");
            UserInvitation userinvitation3 = new UserInvitation("8cff9584-26ee-4643-afd4-f3387ed1d43a",
                                                                new java.util.Date(1546448717032L),
                                                                "a6da7ace-e5b1-4c40-bea0-c2c9be100d4c",
                                                                new java.util.Date(1546448711839L),
                                                                "46717a90-dd31-40b0-8c8a-83786aa57353", null,
                                                                new java.util.Date(1546448711912L),
                                                                "c61005b2-c0e6-4bef-a14c-d7187b90e507");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
