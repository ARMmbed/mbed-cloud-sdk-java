// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("acbf655bdeac77c770ad4964fcb1f81f",
                                                                new Date(1559747929601L), "90ce4.b676e@2af1a.fr",
                                                                new Date(1559747927595L),
                                                                "acbf655bdeac77c770ad4964fcb1f81f", null,
                                                                new Date(1559747925612L),
                                                                "acbf655bdeac77c770ad4964fcb1f81f");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("acbf655bdeac77c770ad4964fcb1f81f",
                                                                new Date(1559747931383L), "077d1.c8a1f@52d25.me",
                                                                new Date(1559747928660L),
                                                                "acbf655bdeac77c770ad4964fcb1f81f", null,
                                                                new Date(1559747934296L),
                                                                "acbf655bdeac77c770ad4964fcb1f81f");
            UserInvitation userinvitation2 = new UserInvitation("acbf655bdeac77c770ad4964fcb1f81f",
                                                                new Date(1559747931383L), "077d1.c8a1f@52d25.me",
                                                                new Date(1559747928660L),
                                                                "acbf655bdeac77c770ad4964fcb1f81f", null,
                                                                new Date(1559747934296L),
                                                                "acbf655bdeac77c770ad4964fcb1f81f");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("acbf655bdeac77c770ad4964fcb1f81f", new Date(1559747930355L),
                                                           "b65a2.b1d2b@6f618.fr", new Date(1559747929042L),
                                                           "acbf655bdeac77c770ad4964fcb1f81f", null,
                                                           new Date(1559747927481L),
                                                           "acbf655bdeac77c770ad4964fcb1f81f");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("ê€Š+(è¤‘32\f3X\u0005;\\\\2\u001aAä£½îµ‰-2á—œN22&\\\\X\u00023\u00023OJ3\u00012Z*\u000f2\u0007Iä³?3V3ì Ž3'\u00142Î£ë›„\b<XNç£€ë¾†)3.ï¦¢",
                                                                  new Date(1559747929968L), null,
                                                                  new Date(1559747930493L),
                                                                  "ê€Š+(è¤‘32\f3X\u0005;\\\\2\u001aAä£½îµ‰-2á—œN22&\\\\X\u00023\u00023OJ3\u00012Z*\u000f2\u0007Iä³?3V3ì Ž3'\u00142Î£ë›„\b<XNç£€ë¾†)3.ï¦¢",
                                                                  null, new Date(1559747934560L),
                                                                  "ê€Š+(è¤‘32\f3X\u0005;\\\\2\u001aAä£½îµ‰-2á—œN22&\\\\X\u00023\u00023OJ3\u00012Z*\u000f2\u0007Iä³?3V3ì Ž3'\u00142Î£ë›„\b<XNç£€ë¾†)3.ï¦¢");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("acbf655bdeac77c770ad4964fcb1f81f",
                                                                new Date(1559747935117L), "9d3a0.6f6e2@2f363.me",
                                                                new Date(1559747926601L),
                                                                "acbf655bdeac77c770ad4964fcb1f81f", null,
                                                                new Date(1559747928832L),
                                                                "acbf655bdeac77c770ad4964fcb1f81f");
            UserInvitation userinvitation2 = new UserInvitation("acbf655bdeac77c770ad4964fcb1f81f",
                                                                new Date(1559747935117L), "9d3a0.6f6e2@2f363.me",
                                                                new Date(1559747926601L),
                                                                "acbf655bdeac77c770ad4964fcb1f81f", null,
                                                                new Date(1559747928832L),
                                                                "acbf655bdeac77c770ad4964fcb1f81f");
            UserInvitation userinvitation3 = new UserInvitation("acbf655bdeac77c770ad4964fcb1f81f",
                                                                new Date(1559747930223L), "b2293.aca67@cb066.fr",
                                                                new Date(1559747933930L),
                                                                "acbf655bdeac77c770ad4964fcb1f81f", null,
                                                                new Date(1559747928966L),
                                                                "acbf655bdeac77c770ad4964fcb1f81f");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
