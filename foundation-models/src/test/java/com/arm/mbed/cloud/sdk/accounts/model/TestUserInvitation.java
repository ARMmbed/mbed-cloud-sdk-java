// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                                new Date(1559288258612L), "46c84.869b3@2c212.fr",
                                                                new Date(1559288257293L),
                                                                "3bfc9cdfe313bbd7bcb627c7a4f35e1e", null,
                                                                new Date(1559288254134L),
                                                                "3bfc9cdfe313bbd7bcb627c7a4f35e1e");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                                new Date(1559288258826L), "e4bdb.6854e@b8716.me",
                                                                new Date(1559288260686L),
                                                                "3bfc9cdfe313bbd7bcb627c7a4f35e1e", null,
                                                                new Date(1559288260083L),
                                                                "3bfc9cdfe313bbd7bcb627c7a4f35e1e");
            UserInvitation userinvitation2 = new UserInvitation("3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                                new Date(1559288258826L), "e4bdb.6854e@b8716.me",
                                                                new Date(1559288260686L),
                                                                "3bfc9cdfe313bbd7bcb627c7a4f35e1e", null,
                                                                new Date(1559288260083L),
                                                                "3bfc9cdfe313bbd7bcb627c7a4f35e1e");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("3bfc9cdfe313bbd7bcb627c7a4f35e1e", new Date(1559288259940L),
                                                           "5113e.6127e@16614.me", new Date(1559288259622L),
                                                           "3bfc9cdfe313bbd7bcb627c7a4f35e1e", null,
                                                           new Date(1559288261178L),
                                                           "3bfc9cdfe313bbd7bcb627c7a4f35e1e");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("\u0012&æ…†\t`ì½µîˆ¶888^8á®§M\u0003K\u00108\\\\\u000eè°–8P&8)$$8L;8ã³ªî?¥î¸š\u0011L8âšŠ\u000f\u0014ê?¨88YKKéŽ¨F\u0013^Ú¥8ë¦?!\u001008FZèŸ›ë‚œ8^E",
                                                                  new Date(1559288262637L), null,
                                                                  new Date(1559288258884L),
                                                                  "\u0012&æ…†\t`ì½µîˆ¶888^8á®§M\u0003K\u00108\\\\\u000eè°–8P&8)$$8L;8ã³ªî?¥î¸š\u0011L8âšŠ\u000f\u0014ê?¨88YKKéŽ¨F\u0013^Ú¥8ë¦?!\u001008FZèŸ›ë‚œ8^E",
                                                                  null, new Date(1559288262491L),
                                                                  "\u0012&æ…†\t`ì½µîˆ¶888^8á®§M\u0003K\u00108\\\\\u000eè°–8P&8)$$8L;8ã³ªî?¥î¸š\u0011L8âšŠ\u000f\u0014ê?¨88YKKéŽ¨F\u0013^Ú¥8ë¦?!\u001008FZèŸ›ë‚œ8^E");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                                new Date(1559288262075L), "66312.02965@faa03.fr",
                                                                new Date(1559288261794L),
                                                                "3bfc9cdfe313bbd7bcb627c7a4f35e1e", null,
                                                                new Date(1559288261090L),
                                                                "3bfc9cdfe313bbd7bcb627c7a4f35e1e");
            UserInvitation userinvitation2 = new UserInvitation("3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                                new Date(1559288262075L), "66312.02965@faa03.fr",
                                                                new Date(1559288261794L),
                                                                "3bfc9cdfe313bbd7bcb627c7a4f35e1e", null,
                                                                new Date(1559288261090L),
                                                                "3bfc9cdfe313bbd7bcb627c7a4f35e1e");
            UserInvitation userinvitation3 = new UserInvitation("3bfc9cdfe313bbd7bcb627c7a4f35e1e",
                                                                new Date(1559288257649L), "5bffa.6114a@41284.fr",
                                                                new Date(1559288254298L),
                                                                "3bfc9cdfe313bbd7bcb627c7a4f35e1e", null,
                                                                new Date(1559288254721L),
                                                                "3bfc9cdfe313bbd7bcb627c7a4f35e1e");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
