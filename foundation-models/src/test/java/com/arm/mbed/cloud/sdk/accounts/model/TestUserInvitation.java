// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("8f790df8b03da9b1dd914e7ecab2ad3f",
                                                                new Date(1559752144308L), "67aca.6957d@8401f.fr",
                                                                new Date(1559752145495L),
                                                                "8f790df8b03da9b1dd914e7ecab2ad3f", null,
                                                                new Date(1559752148644L),
                                                                "8f790df8b03da9b1dd914e7ecab2ad3f");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("8f790df8b03da9b1dd914e7ecab2ad3f",
                                                                new Date(1559752151329L), "31c78.425cc@b5429.me",
                                                                new Date(1559752145180L),
                                                                "8f790df8b03da9b1dd914e7ecab2ad3f", null,
                                                                new Date(1559752152926L),
                                                                "8f790df8b03da9b1dd914e7ecab2ad3f");
            UserInvitation userinvitation2 = new UserInvitation("8f790df8b03da9b1dd914e7ecab2ad3f",
                                                                new Date(1559752151329L), "31c78.425cc@b5429.me",
                                                                new Date(1559752145180L),
                                                                "8f790df8b03da9b1dd914e7ecab2ad3f", null,
                                                                new Date(1559752152926L),
                                                                "8f790df8b03da9b1dd914e7ecab2ad3f");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("8f790df8b03da9b1dd914e7ecab2ad3f", new Date(1559752146894L),
                                                           "ff44b.3d447@8c8b8.me", new Date(1559752146804L),
                                                           "8f790df8b03da9b1dd914e7ecab2ad3f", null,
                                                           new Date(1559752145483L),
                                                           "8f790df8b03da9b1dd914e7ecab2ad3f");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("/\u000eä‹¯65\u000eä¯¯\u0005<å¸ˆ66'\u0016)á¾‰5çˆ€ç–¸\u0019äš–\u001e6èµ«65\u0014%\b\u0005ä?ª-\u001e5\u0011V\\\\ë?ž5îšŠ55\u0012\u0012]#56Xè¤³WO?5\b\u001båƒ¤\u000e6\u0007Vå†Œç²¸X",
                                                                  new Date(1559752146669L), null,
                                                                  new Date(1559752148867L),
                                                                  "/\u000eä‹¯65\u000eä¯¯\u0005<å¸ˆ66'\u0016)á¾‰5çˆ€ç–¸\u0019äš–\u001e6èµ«65\u0014%\b\u0005ä?ª-\u001e5\u0011V\\\\ë?ž5îšŠ55\u0012\u0012]#56Xè¤³WO?5\b\u001båƒ¤\u000e6\u0007Vå†Œç²¸X",
                                                                  null, new Date(1559752150290L),
                                                                  "/\u000eä‹¯65\u000eä¯¯\u0005<å¸ˆ66'\u0016)á¾‰5çˆ€ç–¸\u0019äš–\u001e6èµ«65\u0014%\b\u0005ä?ª-\u001e5\u0011V\\\\ë?ž5îšŠ55\u0012\u0012]#56Xè¤³WO?5\b\u001båƒ¤\u000e6\u0007Vå†Œç²¸X");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("8f790df8b03da9b1dd914e7ecab2ad3f",
                                                                new Date(1559752151991L), "79674.82533@9b80e.me",
                                                                new Date(1559752143842L),
                                                                "8f790df8b03da9b1dd914e7ecab2ad3f", null,
                                                                new Date(1559752151195L),
                                                                "8f790df8b03da9b1dd914e7ecab2ad3f");
            UserInvitation userinvitation2 = new UserInvitation("8f790df8b03da9b1dd914e7ecab2ad3f",
                                                                new Date(1559752151991L), "79674.82533@9b80e.me",
                                                                new Date(1559752143842L),
                                                                "8f790df8b03da9b1dd914e7ecab2ad3f", null,
                                                                new Date(1559752151195L),
                                                                "8f790df8b03da9b1dd914e7ecab2ad3f");
            UserInvitation userinvitation3 = new UserInvitation("8f790df8b03da9b1dd914e7ecab2ad3f",
                                                                new Date(1559752152216L), "738eb.23c61@93d5b.fr",
                                                                new Date(1559752144453L),
                                                                "8f790df8b03da9b1dd914e7ecab2ad3f", null,
                                                                new Date(1559752145189L),
                                                                "8f790df8b03da9b1dd914e7ecab2ad3f");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
