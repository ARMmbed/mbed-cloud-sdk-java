// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("91998e15-b78a-4e39-9ed4-f918b20c993d",
                                                                new Date(1551867951293L),
                                                                "7c604c9f-d5ce-49df-860c-4b1f3985a841",
                                                                new Date(1551867951880L),
                                                                "097a1793-b4a8-4e0b-af3a-1f2f4c0027c6", null,
                                                                new Date(1551867952768L),
                                                                "df80c85c-155a-4a8b-97c3-409990950888");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("8328df5a-10c6-4329-b33f-bdf0e3a9aee9",
                                                                new Date(1551867953712L),
                                                                "d7fbaf5c-a7ce-4c81-bfc1-7c0f92d1101e",
                                                                new Date(1551867948161L),
                                                                "eab3c7b3-161a-409b-ac72-8a61b2978657", null,
                                                                new Date(1551867946002L),
                                                                "4bac91c1-bacd-4cd0-936c-dd33fde423ba");
            UserInvitation userinvitation2 = new UserInvitation("8328df5a-10c6-4329-b33f-bdf0e3a9aee9",
                                                                new Date(1551867953712L),
                                                                "d7fbaf5c-a7ce-4c81-bfc1-7c0f92d1101e",
                                                                new Date(1551867948161L),
                                                                "eab3c7b3-161a-409b-ac72-8a61b2978657", null,
                                                                new Date(1551867946002L),
                                                                "4bac91c1-bacd-4cd0-936c-dd33fde423ba");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("115f40d8-d7d0-40ec-9caf-976c820e55ae",
                                                           new Date(1551867950826L),
                                                           "45ea20ad-7411-4d64-a286-d4f5082b43aa",
                                                           new Date(1551867947777L),
                                                           "323cc750-d45e-440c-a0d0-ddbeb1b41207", null,
                                                           new Date(1551867951201L),
                                                           "3cd9cf59-2857-4ffb-bdcb-f682424ed1d8");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("72d3a7ed-460c-43fc-9ff3-17b134a152ef",
                                                                  new Date(1551867952313L), null,
                                                                  new Date(1551867950692L),
                                                                  "c550f951-e259-4167-b20d-4a0355904346", null,
                                                                  new Date(1551867951012L),
                                                                  "d5fcaf62-75d1-4f34-92cf-b9fb66349338");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("0178a6a5-9945-46cf-a59f-e19f49372ab2",
                                                                new Date(1551867950322L),
                                                                "24df1972-7822-4251-b1b8-6b873f177cc7",
                                                                new Date(1551867953534L),
                                                                "ab6cc089-76f0-4e86-b8a1-e22cb5c6a576", null,
                                                                new Date(1551867951735L),
                                                                "840ba282-5a01-47b1-b162-44a6cb0a5124");
            UserInvitation userinvitation2 = new UserInvitation("0178a6a5-9945-46cf-a59f-e19f49372ab2",
                                                                new Date(1551867950322L),
                                                                "24df1972-7822-4251-b1b8-6b873f177cc7",
                                                                new Date(1551867953534L),
                                                                "ab6cc089-76f0-4e86-b8a1-e22cb5c6a576", null,
                                                                new Date(1551867951735L),
                                                                "840ba282-5a01-47b1-b162-44a6cb0a5124");
            UserInvitation userinvitation3 = new UserInvitation("7eff99c4-44cd-4fe1-bd0a-441d3bba092d",
                                                                new Date(1551867951700L),
                                                                "6af9033f-2909-4a0f-9633-1e0ffe34c4dc",
                                                                new Date(1551867951695L),
                                                                "636b445f-2054-488d-82b1-d97bc8c38c1e", null,
                                                                new Date(1551867946559L),
                                                                "847497fe-1348-43a5-89d2-d55bc16e44c7");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
