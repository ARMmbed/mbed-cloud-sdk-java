// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("c7ddc743-a331-4baf-b0b7-5b67dad9cb2f",
                                                                new Date(1547573356436L),
                                                                "ce472d6d-bee3-44b6-ac0a-643fc9ae5a27",
                                                                new Date(1547573360180L),
                                                                "95bfea76-855a-4741-911a-370a9ce52fc1", null,
                                                                new Date(1547573365084L),
                                                                "e85d7e68-0946-48eb-b97e-bcbe5d26dd61");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("a095f0a3-4e57-4528-9670-78f259f22cf3",
                                                                new Date(1547573365441L),
                                                                "7245d85f-1cd1-4bf9-bb88-5f393617127e",
                                                                new Date(1547573364289L),
                                                                "cbde16cd-8d00-4604-bad9-e4e3400710ee", null,
                                                                new Date(1547573358038L),
                                                                "da82580b-fd7e-438d-93b1-8b522a765cf6");
            UserInvitation userinvitation2 = new UserInvitation("a095f0a3-4e57-4528-9670-78f259f22cf3",
                                                                new Date(1547573365441L),
                                                                "7245d85f-1cd1-4bf9-bb88-5f393617127e",
                                                                new Date(1547573364289L),
                                                                "cbde16cd-8d00-4604-bad9-e4e3400710ee", null,
                                                                new Date(1547573358038L),
                                                                "da82580b-fd7e-438d-93b1-8b522a765cf6");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("8d72fb73-69b0-4eb8-ae30-eeb61dc98962",
                                                           new Date(1547573365683L),
                                                           "e881cbac-17bd-4865-a30b-0a40cf7f80e7",
                                                           new Date(1547573359425L),
                                                           "9182cd67-de62-4836-9127-711c8ae6025a", null,
                                                           new Date(1547573358661L),
                                                           "77043028-a9e6-41cb-aa93-57a454e1a754");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("c9cfe184-2ffc-474c-bedc-19c3ec0e9970",
                                                                  new Date(1547573365459L), null,
                                                                  new Date(1547573365455L),
                                                                  "e5f009ac-9af5-4101-a7a9-bf709dc9480a", null,
                                                                  new Date(1547573357593L),
                                                                  "a1ca2f2a-baa5-43b8-bd38-6dec2f9e4809");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("b8d9240f-8358-4010-af5c-de3d7d66b036",
                                                                new Date(1547573359029L),
                                                                "7abd0ee2-82ad-41f8-8da7-d217e8a4ac39",
                                                                new Date(1547573365032L),
                                                                "792e97d7-474f-42e0-94f6-d2583faf00cf", null,
                                                                new Date(1547573363783L),
                                                                "1c412b84-b862-4497-9dae-e087c78ddef0");
            UserInvitation userinvitation2 = new UserInvitation("b8d9240f-8358-4010-af5c-de3d7d66b036",
                                                                new Date(1547573359029L),
                                                                "7abd0ee2-82ad-41f8-8da7-d217e8a4ac39",
                                                                new Date(1547573365032L),
                                                                "792e97d7-474f-42e0-94f6-d2583faf00cf", null,
                                                                new Date(1547573363783L),
                                                                "1c412b84-b862-4497-9dae-e087c78ddef0");
            UserInvitation userinvitation3 = new UserInvitation("c9ffb0f3-e183-49c5-af69-942300e9d5a5",
                                                                new Date(1547573364708L),
                                                                "cb80968b-3390-4665-b2a1-847410ff0164",
                                                                new Date(1547573364129L),
                                                                "7b20d0c1-bf8b-4d1f-820a-b7a2943c9c40", null,
                                                                new Date(1547573364168L),
                                                                "9acaa176-3d97-4dfe-8ab3-c3321b834e0c");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
