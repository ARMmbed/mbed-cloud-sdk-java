// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("f56a5aa8-438a-45fc-a3e3-2ea985918b53",
                                                                new Date(1547489772343L),
                                                                "e23f7557-4c67-4cd2-a3ed-8d78b693709f",
                                                                new Date(1547489770874L),
                                                                "ae05669d-180f-4b5d-abee-729606942e92", null,
                                                                new Date(1547489769753L),
                                                                "bf512684-205d-4d7c-ab44-0c5dfe4367e9");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("b42dfca9-023a-4703-8a16-76cc21007feb",
                                                                new Date(1547489773956L),
                                                                "73f13218-9807-4226-9c7f-7448cd28d489",
                                                                new Date(1547489770222L),
                                                                "ca8deb8c-6c31-4cdd-b003-070a86b61e54", null,
                                                                new Date(1547489764715L),
                                                                "780b6ddf-531c-423d-9974-535c46845b5d");
            UserInvitation userinvitation2 = new UserInvitation("b42dfca9-023a-4703-8a16-76cc21007feb",
                                                                new Date(1547489773956L),
                                                                "73f13218-9807-4226-9c7f-7448cd28d489",
                                                                new Date(1547489770222L),
                                                                "ca8deb8c-6c31-4cdd-b003-070a86b61e54", null,
                                                                new Date(1547489764715L),
                                                                "780b6ddf-531c-423d-9974-535c46845b5d");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("b310995e-8cd1-4664-aa24-eb92a1696b46",
                                                           new Date(1547489767119L),
                                                           "415115cc-0785-451c-bb09-1eba23021f82",
                                                           new Date(1547489767900L),
                                                           "46d7ce85-f5f8-4627-8847-8817cad355b8", null,
                                                           new Date(1547489770609L),
                                                           "37e4f043-cc9c-4c14-b4d4-1449ba991aeb");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("3c52bee9-7e4b-4624-af6f-5511fea71332",
                                                                  new Date(1547489773185L), null,
                                                                  new Date(1547489766545L),
                                                                  "8abb9292-e0b1-4f27-924e-3028f3542e61", null,
                                                                  new Date(1547489769850L),
                                                                  "7851b539-42d5-46c3-b1d2-a5f0e8b9f518");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("2e648450-2aae-46f1-9483-11e6e969fa84",
                                                                new Date(1547489764259L),
                                                                "ec484f03-88ce-4f76-8eb2-c3b3043e31de",
                                                                new Date(1547489773811L),
                                                                "e7ff3af7-5b9d-438e-b408-a656170b6b6e", null,
                                                                new Date(1547489767857L),
                                                                "c18e71fd-1270-4ae0-abde-dd6ce358b87f");
            UserInvitation userinvitation2 = new UserInvitation("2e648450-2aae-46f1-9483-11e6e969fa84",
                                                                new Date(1547489764259L),
                                                                "ec484f03-88ce-4f76-8eb2-c3b3043e31de",
                                                                new Date(1547489773811L),
                                                                "e7ff3af7-5b9d-438e-b408-a656170b6b6e", null,
                                                                new Date(1547489767857L),
                                                                "c18e71fd-1270-4ae0-abde-dd6ce358b87f");
            UserInvitation userinvitation3 = new UserInvitation("08a2b121-f434-4cb8-b672-8ec85c98f9dd",
                                                                new Date(1547489767266L),
                                                                "81b80031-ba69-4421-a330-7eefe21d3283",
                                                                new Date(1547489767233L),
                                                                "af5643c7-1fc5-44f2-a69d-cdb7ff31563d", null,
                                                                new Date(1547489773211L),
                                                                "dc3fef5c-2c98-42b3-9b12-47b4e6162dae");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
