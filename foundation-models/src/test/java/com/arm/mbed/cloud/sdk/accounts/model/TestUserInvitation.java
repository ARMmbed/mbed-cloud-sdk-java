// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("569b26be-4f6f-4eb5-a751-50c25f404929",
                                                                new Date(1547159625600L),
                                                                "58403dc9-c21c-4a72-9029-78d3191c73a2",
                                                                new Date(1547159627324L),
                                                                "d15ce51b-3ab5-4e82-b174-f91460caaf74", null,
                                                                new Date(1547159621399L),
                                                                "1b59dfd6-1795-477c-9bff-02bc21e982a8");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("d188c122-86ce-42f7-a9af-1a30c83e48b3",
                                                                new Date(1547159625376L),
                                                                "468e76e4-9d26-4bf4-af8c-4e6d885a0255",
                                                                new Date(1547159623217L),
                                                                "7811c009-0201-4efb-bf5b-53eae536f0da", null,
                                                                new Date(1547159625002L),
                                                                "9272f7a4-8ab3-4fad-b599-b9f0ea919952");
            UserInvitation userinvitation2 = new UserInvitation("d188c122-86ce-42f7-a9af-1a30c83e48b3",
                                                                new Date(1547159625376L),
                                                                "468e76e4-9d26-4bf4-af8c-4e6d885a0255",
                                                                new Date(1547159623217L),
                                                                "7811c009-0201-4efb-bf5b-53eae536f0da", null,
                                                                new Date(1547159625002L),
                                                                "9272f7a4-8ab3-4fad-b599-b9f0ea919952");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("4dca5fb7-9f28-4e1f-821d-66b15ea2a01b",
                                                           new Date(1547159622730L),
                                                           "a0ea6257-714c-4d15-980a-5797bce58b18",
                                                           new Date(1547159628068L),
                                                           "89d1597f-05b4-47cf-867d-b2a48325fe9d", null,
                                                           new Date(1547159623707L),
                                                           "a5ca5d9d-ec3d-41af-a9a2-d9be94c8d8dc");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("46576f49-52bd-4ca4-a1b8-c1ba42f3033a",
                                                                  new Date(1547159629609L), null,
                                                                  new Date(1547159625249L), null, null,
                                                                  new Date(1547159623023L),
                                                                  "5bc0eed6-47c4-481b-a688-1fefc192f957");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("3ac4d701-d03a-4fe7-b9e7-dfa455896810",
                                                                new Date(1547159624667L),
                                                                "6f551997-95ad-4774-b275-5206f0ae8cb8",
                                                                new Date(1547159626782L),
                                                                "a8591fe3-cc89-4b85-82b8-d38d1a0af168", null,
                                                                new Date(1547159629693L),
                                                                "8de057c8-fa19-460e-a5c4-902c710afc29");
            UserInvitation userinvitation2 = new UserInvitation("3ac4d701-d03a-4fe7-b9e7-dfa455896810",
                                                                new Date(1547159624667L),
                                                                "6f551997-95ad-4774-b275-5206f0ae8cb8",
                                                                new Date(1547159626782L),
                                                                "a8591fe3-cc89-4b85-82b8-d38d1a0af168", null,
                                                                new Date(1547159629693L),
                                                                "8de057c8-fa19-460e-a5c4-902c710afc29");
            UserInvitation userinvitation3 = new UserInvitation("172c857d-4afd-435a-a442-baaf10482e3c",
                                                                new Date(1547159624822L),
                                                                "816c31ee-7e66-437b-a553-a559a6c6b983",
                                                                new Date(1547159629420L),
                                                                "bbf4159e-da77-4419-9d42-193e235d87aa", null,
                                                                new Date(1547159630307L),
                                                                "73f61eb3-6d71-46ab-97d4-2e71939720bf");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
