// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                new Date(1559313346391L), "84aab.f3b1e@4c603.me",
                                                                new Date(1559313348032L),
                                                                "c26ebd108cbc6d2e0e403ca038b7faa6", null,
                                                                new Date(1559313343976L),
                                                                "c26ebd108cbc6d2e0e403ca038b7faa6");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                new Date(1559313345569L), "b85bc.847b3@68ddd.me",
                                                                new Date(1559313347088L),
                                                                "c26ebd108cbc6d2e0e403ca038b7faa6", null,
                                                                new Date(1559313340887L),
                                                                "c26ebd108cbc6d2e0e403ca038b7faa6");
            UserInvitation userinvitation2 = new UserInvitation("c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                new Date(1559313345569L), "b85bc.847b3@68ddd.me",
                                                                new Date(1559313347088L),
                                                                "c26ebd108cbc6d2e0e403ca038b7faa6", null,
                                                                new Date(1559313340887L),
                                                                "c26ebd108cbc6d2e0e403ca038b7faa6");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("c26ebd108cbc6d2e0e403ca038b7faa6", new Date(1559313342284L),
                                                           "ad05d.775c4@04670.me", new Date(1559313342423L),
                                                           "c26ebd108cbc6d2e0e403ca038b7faa6", null,
                                                           new Date(1559313348949L),
                                                           "c26ebd108cbc6d2e0e403ca038b7faa6");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("5â¬³U\u0013\u0005PJä›¹â©ŽGWWë˜‚)ì“µ55?\u0012'ì¶Œ55\u0018ÏŸPä™˜ç¤¹)5\u0000Z?\bã·?\u0007>5ë¾¹á˜„\u001b\u001c555G5î—Š,ä“¯ç¶´Xï€œ\f5H×¤ê‰±]\u000eAè“œ",
                                                                  new Date(1559313340780L), null,
                                                                  new Date(1559313348699L),
                                                                  "5â¬³U\u0013\u0005PJä›¹â©ŽGWWë˜‚)ì“µ55?\u0012'ì¶Œ55\u0018ÏŸPä™˜ç¤¹)5\u0000Z?\bã·?\u0007>5ë¾¹á˜„\u001b\u001c555G5î—Š,ä“¯ç¶´Xï€œ\f5H×¤ê‰±]\u000eAè“œ",
                                                                  null, new Date(1559313348300L),
                                                                  "5â¬³U\u0013\u0005PJä›¹â©ŽGWWë˜‚)ì“µ55?\u0012'ì¶Œ55\u0018ÏŸPä™˜ç¤¹)5\u0000Z?\bã·?\u0007>5ë¾¹á˜„\u001b\u001c555G5î—Š,ä“¯ç¶´Xï€œ\f5H×¤ê‰±]\u000eAè“œ");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                new Date(1559313342908L), "ff195.c315c@f38b8.me",
                                                                new Date(1559313346194L),
                                                                "c26ebd108cbc6d2e0e403ca038b7faa6", null,
                                                                new Date(1559313347697L),
                                                                "c26ebd108cbc6d2e0e403ca038b7faa6");
            UserInvitation userinvitation2 = new UserInvitation("c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                new Date(1559313342908L), "ff195.c315c@f38b8.me",
                                                                new Date(1559313346194L),
                                                                "c26ebd108cbc6d2e0e403ca038b7faa6", null,
                                                                new Date(1559313347697L),
                                                                "c26ebd108cbc6d2e0e403ca038b7faa6");
            UserInvitation userinvitation3 = new UserInvitation("c26ebd108cbc6d2e0e403ca038b7faa6",
                                                                new Date(1559313343669L), "0d6f9.49a8c@0b0d0.me",
                                                                new Date(1559313342603L),
                                                                "c26ebd108cbc6d2e0e403ca038b7faa6", null,
                                                                new Date(1559313342791L),
                                                                "c26ebd108cbc6d2e0e403ca038b7faa6");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
