// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("f7041f27-7740-4001-ab46-472c37f88d31",
                                                                new Date(1547164365157L),
                                                                "5f50bcc5-b1dd-4cb0-90a4-34a80ba6a64f",
                                                                new Date(1547164358872L),
                                                                "da8c3dac-956a-4a6a-a456-2372fc7ef551", null,
                                                                new Date(1547164363695L),
                                                                "3e95edeb-969e-4f40-b4b2-27e64d1c8926");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("cc423482-847c-40bc-9591-67151db18f58",
                                                                new Date(1547164361501L),
                                                                "3102cd90-f48f-409b-ab7a-a63f67a4b428",
                                                                new Date(1547164361687L),
                                                                "b6597803-a360-46e1-bcb9-29e11d70f542", null,
                                                                new Date(1547164362397L),
                                                                "5f99551d-2120-45b0-b9fd-f137cb32be03");
            UserInvitation userinvitation2 = new UserInvitation("cc423482-847c-40bc-9591-67151db18f58",
                                                                new Date(1547164361501L),
                                                                "3102cd90-f48f-409b-ab7a-a63f67a4b428",
                                                                new Date(1547164361687L),
                                                                "b6597803-a360-46e1-bcb9-29e11d70f542", null,
                                                                new Date(1547164362397L),
                                                                "5f99551d-2120-45b0-b9fd-f137cb32be03");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("69287aa4-369c-4c90-afa1-b3f4c3dae4ce",
                                                           new Date(1547164359473L),
                                                           "6cf0f499-eef2-4744-af90-e7a9b981b7bd",
                                                           new Date(1547164366349L),
                                                           "b0e24de6-db73-4b6d-bd24-08ad2d55a843", null,
                                                           new Date(1547164366912L),
                                                           "6b3e3547-2a12-44bc-94e0-2efb8d981a48");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("19d6f36b-5a9c-456e-b76c-2a5959813da6",
                                                                  new Date(1547164367791L), null,
                                                                  new Date(1547164365640L), null, null,
                                                                  new Date(1547164364015L),
                                                                  "4d6a4631-5479-49ab-b908-46232a42d102");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("7fc3696d-ab3c-4dec-b8fd-b58145f5b860",
                                                                new Date(1547164367937L),
                                                                "47eeb0ef-d826-45b1-9f30-8aeb8a408610",
                                                                new Date(1547164361989L),
                                                                "55c341b0-3f8d-4882-bd60-0eb238bebf6d", null,
                                                                new Date(1547164358633L),
                                                                "cc7cadc0-3a5f-4fc0-b938-aca189ccf826");
            UserInvitation userinvitation2 = new UserInvitation("7fc3696d-ab3c-4dec-b8fd-b58145f5b860",
                                                                new Date(1547164367937L),
                                                                "47eeb0ef-d826-45b1-9f30-8aeb8a408610",
                                                                new Date(1547164361989L),
                                                                "55c341b0-3f8d-4882-bd60-0eb238bebf6d", null,
                                                                new Date(1547164358633L),
                                                                "cc7cadc0-3a5f-4fc0-b938-aca189ccf826");
            UserInvitation userinvitation3 = new UserInvitation("c8dd9197-40e0-43f3-b7d2-55c539f65903",
                                                                new Date(1547164365726L),
                                                                "22e79797-c3aa-452d-9b72-1c7e81c9ecb8",
                                                                new Date(1547164360102L),
                                                                "ce80fa8e-9456-4318-b790-339f8dd3a6de", null,
                                                                new Date(1547164366699L),
                                                                "231f1383-c557-4ade-b8c6-8015cfb8deeb");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
