// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("1fb3d6dc3467de6fb631f982b0ebed24",
                                                                new Date(1559745301421L), "e2951.79053@78978.fr",
                                                                new Date(1559745296792L),
                                                                "1fb3d6dc3467de6fb631f982b0ebed24", null,
                                                                new Date(1559745298272L),
                                                                "1fb3d6dc3467de6fb631f982b0ebed24");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("1fb3d6dc3467de6fb631f982b0ebed24",
                                                                new Date(1559745299133L), "17dda.41612@10681.me",
                                                                new Date(1559745303366L),
                                                                "1fb3d6dc3467de6fb631f982b0ebed24", null,
                                                                new Date(1559745303761L),
                                                                "1fb3d6dc3467de6fb631f982b0ebed24");
            UserInvitation userinvitation2 = new UserInvitation("1fb3d6dc3467de6fb631f982b0ebed24",
                                                                new Date(1559745299133L), "17dda.41612@10681.me",
                                                                new Date(1559745303366L),
                                                                "1fb3d6dc3467de6fb631f982b0ebed24", null,
                                                                new Date(1559745303761L),
                                                                "1fb3d6dc3467de6fb631f982b0ebed24");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("1fb3d6dc3467de6fb631f982b0ebed24", new Date(1559745297604L),
                                                           "4c994.5ef1a@b1482.me", new Date(1559745302064L),
                                                           "1fb3d6dc3467de6fb631f982b0ebed24", null,
                                                           new Date(1559745295244L),
                                                           "1fb3d6dc3467de6fb631f982b0ebed24");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("ì™Œê¿£-[(5â”•5à¹¹5&B\u001e5Oa`ãŸ–è‹”5G\f-\u001aæ›¤ë—§E\u000fM5\u0005í•‚OKç›€ç»¯=5OZ]5\u0007,5ã»ª\u0012ï?¶,[5PZ5â”‘5\u000fá¾°åª™$$5ç‡«",
                                                                  new Date(1559745297958L), null,
                                                                  new Date(1559745297230L),
                                                                  "ì™Œê¿£-[(5â”•5à¹¹5&B\u001e5Oa`ãŸ–è‹”5G\f-\u001aæ›¤ë—§E\u000fM5\u0005í•‚OKç›€ç»¯=5OZ]5\u0007,5ã»ª\u0012ï?¶,[5PZ5â”‘5\u000fá¾°åª™$$5ç‡«",
                                                                  null, new Date(1559745297187L),
                                                                  "ì™Œê¿£-[(5â”•5à¹¹5&B\u001e5Oa`ãŸ–è‹”5G\f-\u001aæ›¤ë—§E\u000fM5\u0005í•‚OKç›€ç»¯=5OZ]5\u0007,5ã»ª\u0012ï?¶,[5PZ5â”‘5\u000fá¾°åª™$$5ç‡«");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("1fb3d6dc3467de6fb631f982b0ebed24",
                                                                new Date(1559745298807L), "4d041.75c00@fbb59.fr",
                                                                new Date(1559745298747L),
                                                                "1fb3d6dc3467de6fb631f982b0ebed24", null,
                                                                new Date(1559745296429L),
                                                                "1fb3d6dc3467de6fb631f982b0ebed24");
            UserInvitation userinvitation2 = new UserInvitation("1fb3d6dc3467de6fb631f982b0ebed24",
                                                                new Date(1559745298807L), "4d041.75c00@fbb59.fr",
                                                                new Date(1559745298747L),
                                                                "1fb3d6dc3467de6fb631f982b0ebed24", null,
                                                                new Date(1559745296429L),
                                                                "1fb3d6dc3467de6fb631f982b0ebed24");
            UserInvitation userinvitation3 = new UserInvitation("1fb3d6dc3467de6fb631f982b0ebed24",
                                                                new Date(1559745297729L), "3f80e.a599a@e73b6.fr",
                                                                new Date(1559745303283L),
                                                                "1fb3d6dc3467de6fb631f982b0ebed24", null,
                                                                new Date(1559745301718L),
                                                                "1fb3d6dc3467de6fb631f982b0ebed24");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
