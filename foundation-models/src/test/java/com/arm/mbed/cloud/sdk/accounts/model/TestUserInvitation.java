// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("8cc5c30d-055a-4b7b-bc88-9c924ff92048",
                                                                new Date(1547225902453L),
                                                                "9c19a6ca-0f62-484b-85b2-c19b83a5715d",
                                                                new Date(1547225899850L),
                                                                "8cccdb35-99dd-4d71-972f-9f4c703e19f7", null,
                                                                new Date(1547225896736L),
                                                                "b20acfed-84c7-4cce-bbd6-6fd0f38e4269");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("a1aceeb7-0435-4aa3-92ae-d1695a2912a2",
                                                                new Date(1547225902933L),
                                                                "e329c4a2-994c-466b-b8ef-6bd7625263d6",
                                                                new Date(1547225899173L),
                                                                "492f4a66-c34b-4aae-bbc6-b4e6b9626ca3", null,
                                                                new Date(1547225905654L),
                                                                "089e269f-bc29-4015-b6de-b1661c8c8101");
            UserInvitation userinvitation2 = new UserInvitation("a1aceeb7-0435-4aa3-92ae-d1695a2912a2",
                                                                new Date(1547225902933L),
                                                                "e329c4a2-994c-466b-b8ef-6bd7625263d6",
                                                                new Date(1547225899173L),
                                                                "492f4a66-c34b-4aae-bbc6-b4e6b9626ca3", null,
                                                                new Date(1547225905654L),
                                                                "089e269f-bc29-4015-b6de-b1661c8c8101");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("7426e86b-61fd-4731-8008-1800ed8acd49",
                                                           new Date(1547225899606L),
                                                           "6ca46b63-53da-428f-ae6d-c0d17b96b729",
                                                           new Date(1547225903415L),
                                                           "eb661b22-1828-4e5d-b874-f6a6bc8b5778", null,
                                                           new Date(1547225901485L),
                                                           "4ca8aa6f-38a7-4f0d-b05c-5f0f76a99a30");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("f2ce5088-e259-4ce0-9b88-9dbe29aee097",
                                                                  new Date(1547225899830L), null,
                                                                  new Date(1547225902716L),
                                                                  "2a63cada-19ed-4cd0-a391-8e9a129e03fa", null,
                                                                  new Date(1547225901275L),
                                                                  "62dd7a9a-a904-411a-bca4-0365458be904");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("454cf692-16c2-42a4-b044-0d3d2e58287c",
                                                                new Date(1547225902075L),
                                                                "8e32b70b-7242-4933-9feb-ae880e85ab9a",
                                                                new Date(1547225898497L),
                                                                "c1ab17ee-22fc-465b-80ab-05bf162942ef", null,
                                                                new Date(1547225897791L),
                                                                "caf681c1-8daa-430e-aaa4-f97e77f0ca98");
            UserInvitation userinvitation2 = new UserInvitation("454cf692-16c2-42a4-b044-0d3d2e58287c",
                                                                new Date(1547225902075L),
                                                                "8e32b70b-7242-4933-9feb-ae880e85ab9a",
                                                                new Date(1547225898497L),
                                                                "c1ab17ee-22fc-465b-80ab-05bf162942ef", null,
                                                                new Date(1547225897791L),
                                                                "caf681c1-8daa-430e-aaa4-f97e77f0ca98");
            UserInvitation userinvitation3 = new UserInvitation("f66b5aa3-8cda-4c08-8df7-174a316221fc",
                                                                new Date(1547225897899L),
                                                                "e830a98e-af8c-4ef8-84b6-3af927517f20",
                                                                new Date(1547225900205L),
                                                                "80536f5c-d5c6-48fb-8b7d-43c3808b97dc", null,
                                                                new Date(1547225898822L),
                                                                "9badac9d-b204-4240-96c4-3bb25278c8b8");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
