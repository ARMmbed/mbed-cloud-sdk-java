// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("71fdba82137d3d88b328e27f0b30ef6d",
                                                                new Date(1559754644159L), "f5761.3af1a@c3dfd.fr",
                                                                new Date(1559754638503L),
                                                                "71fdba82137d3d88b328e27f0b30ef6d", null,
                                                                new Date(1559754641549L),
                                                                "71fdba82137d3d88b328e27f0b30ef6d");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("71fdba82137d3d88b328e27f0b30ef6d",
                                                                new Date(1559754640363L), "eca92.256b0@96b3b.me",
                                                                new Date(1559754637754L),
                                                                "71fdba82137d3d88b328e27f0b30ef6d", null,
                                                                new Date(1559754641506L),
                                                                "71fdba82137d3d88b328e27f0b30ef6d");
            UserInvitation userinvitation2 = new UserInvitation("71fdba82137d3d88b328e27f0b30ef6d",
                                                                new Date(1559754640363L), "eca92.256b0@96b3b.me",
                                                                new Date(1559754637754L),
                                                                "71fdba82137d3d88b328e27f0b30ef6d", null,
                                                                new Date(1559754641506L),
                                                                "71fdba82137d3d88b328e27f0b30ef6d");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("71fdba82137d3d88b328e27f0b30ef6d", new Date(1559754640617L),
                                                           "9c39a.0493b@73af8.me", new Date(1559754644191L),
                                                           "71fdba82137d3d88b328e27f0b30ef6d", null,
                                                           new Date(1559754640376L),
                                                           "71fdba82137d3d88b328e27f0b30ef6d");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation(";\u000b\u0007å±¨&\u0007H_c5Y\u0005íˆµ44ã—‘\u00165cc)4câˆ³ë…”cc4\u000fë‰¢4ížš54æ£ž4cë€‡c\bcà¦Œ5í?¾?F\táŒ·Tcï‚›céŽ»ëŒ®\u0013$$c:c\u0017F-îŒ¯\u0018",
                                                                  new Date(1559754635549L), null,
                                                                  new Date(1559754636831L),
                                                                  ";\u000b\u0007å±¨&\u0007H_c5Y\u0005íˆµ44ã—‘\u00165cc)4câˆ³ë…”cc4\u000fë‰¢4ížš54æ£ž4cë€‡c\bcà¦Œ5í?¾?F\táŒ·Tcï‚›céŽ»ëŒ®\u0013$$c:c\u0017F-îŒ¯\u0018",
                                                                  null, new Date(1559754636290L),
                                                                  ";\u000b\u0007å±¨&\u0007H_c5Y\u0005íˆµ44ã—‘\u00165cc)4câˆ³ë…”cc4\u000fë‰¢4ížš54æ£ž4cë€‡c\bcà¦Œ5í?¾?F\táŒ·Tcï‚›céŽ»ëŒ®\u0013$$c:c\u0017F-îŒ¯\u0018");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("71fdba82137d3d88b328e27f0b30ef6d",
                                                                new Date(1559754636752L), "a9941.7e465@ec54e.me",
                                                                new Date(1559754639714L),
                                                                "71fdba82137d3d88b328e27f0b30ef6d", null,
                                                                new Date(1559754643808L),
                                                                "71fdba82137d3d88b328e27f0b30ef6d");
            UserInvitation userinvitation2 = new UserInvitation("71fdba82137d3d88b328e27f0b30ef6d",
                                                                new Date(1559754636752L), "a9941.7e465@ec54e.me",
                                                                new Date(1559754639714L),
                                                                "71fdba82137d3d88b328e27f0b30ef6d", null,
                                                                new Date(1559754643808L),
                                                                "71fdba82137d3d88b328e27f0b30ef6d");
            UserInvitation userinvitation3 = new UserInvitation("71fdba82137d3d88b328e27f0b30ef6d",
                                                                new Date(1559754638553L), "5cb40.dc576@18707.me",
                                                                new Date(1559754635557L),
                                                                "71fdba82137d3d88b328e27f0b30ef6d", null,
                                                                new Date(1559754642705L),
                                                                "71fdba82137d3d88b328e27f0b30ef6d");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
