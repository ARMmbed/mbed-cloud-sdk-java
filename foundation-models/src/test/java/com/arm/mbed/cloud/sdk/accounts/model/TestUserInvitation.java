// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("e41dfd7a-559d-49b6-9e4f-44301c860800",
                                                                new Date(1547225123615L),
                                                                "48b7f1ab-b347-4d9b-98d5-f699cd711de8",
                                                                new Date(1547225119504L),
                                                                "db520af5-0554-4a4e-bf98-7ba412b9a9c2", null,
                                                                new Date(1547225123277L),
                                                                "72695a4f-36fe-47f3-b639-979fdadc8c76");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("d8ef4ce3-e58c-44a2-a692-8fd8eac56c72",
                                                                new Date(1547225117121L),
                                                                "14bbdc87-e27a-482d-8ff9-41c6f24a4435",
                                                                new Date(1547225119495L),
                                                                "ae29361f-95a2-49d0-8803-1f0da0c05b47", null,
                                                                new Date(1547225117751L),
                                                                "5c14e658-7632-4a62-8f2d-633874a0e444");
            UserInvitation userinvitation2 = new UserInvitation("d8ef4ce3-e58c-44a2-a692-8fd8eac56c72",
                                                                new Date(1547225117121L),
                                                                "14bbdc87-e27a-482d-8ff9-41c6f24a4435",
                                                                new Date(1547225119495L),
                                                                "ae29361f-95a2-49d0-8803-1f0da0c05b47", null,
                                                                new Date(1547225117751L),
                                                                "5c14e658-7632-4a62-8f2d-633874a0e444");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("331266d8-9a75-4a50-afd1-10234a4bd4c7",
                                                           new Date(1547225118285L),
                                                           "63e02a5d-8bc5-4917-ac29-e2f3dcd9313a",
                                                           new Date(1547225122905L),
                                                           "e73524ab-5415-4074-b1f3-7294dec788f5", null,
                                                           new Date(1547225115841L),
                                                           "609cdbc0-b408-4535-b0f9-bf68d684e5bf");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("a91b3dd6-50f9-4b62-a049-6ea92d90cd2d",
                                                                  new Date(1547225117862L), null,
                                                                  new Date(1547225118926L),
                                                                  "d7b72ff6-fb86-48e5-ab97-12b26563a039", null,
                                                                  new Date(1547225115609L),
                                                                  "b8b73de1-9884-49b8-9a6b-a8410cdfad37");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("6ceb4502-0fe5-4202-badf-1b03cfbc607a",
                                                                new Date(1547225119609L),
                                                                "8df90d21-98af-4232-a7fa-43bf5e59c7e8",
                                                                new Date(1547225124258L),
                                                                "3c7297f7-f0f2-4454-8896-6ac6b63284e5", null,
                                                                new Date(1547225124035L),
                                                                "764e481f-3bb2-4c5c-8939-bc2dad4edc7d");
            UserInvitation userinvitation2 = new UserInvitation("6ceb4502-0fe5-4202-badf-1b03cfbc607a",
                                                                new Date(1547225119609L),
                                                                "8df90d21-98af-4232-a7fa-43bf5e59c7e8",
                                                                new Date(1547225124258L),
                                                                "3c7297f7-f0f2-4454-8896-6ac6b63284e5", null,
                                                                new Date(1547225124035L),
                                                                "764e481f-3bb2-4c5c-8939-bc2dad4edc7d");
            UserInvitation userinvitation3 = new UserInvitation("4b0c710d-8c70-4633-a633-e774761c0a1a",
                                                                new Date(1547225118845L),
                                                                "16049c6b-c59e-4e3e-bed0-0235269f6c61",
                                                                new Date(1547225117108L),
                                                                "810cc4de-3022-4a08-bc2d-21c4157ef8a1", null,
                                                                new Date(1547225116354L),
                                                                "13cb5124-a05c-4041-97f8-15c7e4b713cd");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
