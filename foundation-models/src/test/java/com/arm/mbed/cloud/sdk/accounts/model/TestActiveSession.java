// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("8f790df8b03da9b1dd914e7ecab2ad3f",
                                                             "930eecf9-e0cd-470f-ad8a-86fb2bb9ff2f",
                                                             new Date(1559752145526L),
                                                             "c7a908b1-c1ac-4c87-a362-6db21d62ecde",
                                                             "b7a9e9f7-a22a-455f-a509-9b2dcdf8f18e");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("8f790df8b03da9b1dd914e7ecab2ad3f",
                                                             "f3ff53b5-4989-4c84-9ca9-c26c28b2ddb6",
                                                             new Date(1559752147673L),
                                                             "67ee7fa1-c9ca-4b38-9fff-db838ce85ede",
                                                             "955f0479-120d-4f35-a1a7-3c49de2f3bc8");
            ActiveSession activesession2 = new ActiveSession("8f790df8b03da9b1dd914e7ecab2ad3f",
                                                             "f3ff53b5-4989-4c84-9ca9-c26c28b2ddb6",
                                                             new Date(1559752147673L),
                                                             "67ee7fa1-c9ca-4b38-9fff-db838ce85ede",
                                                             "955f0479-120d-4f35-a1a7-3c49de2f3bc8");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("8f790df8b03da9b1dd914e7ecab2ad3f",
                                                        "4a51c621-fd33-40b3-8b91-2efcf4988bc8",
                                                        new Date(1559752153518L),
                                                        "44a51a7c-9d53-46c5-8545-416becd63070",
                                                        "4f4a7ba1-4c74-44a5-a0cb-9dfd1a05d8b3");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("8f790df8b03da9b1dd914e7ecab2ad3f",
                                                             "e2815c30-4f4b-46b0-a86d-b7e0da2b7b61",
                                                             new Date(1559752152894L),
                                                             "e46c1b66-aaa7-420a-9c1e-6521ced9ce4c",
                                                             "6e4b64b4-709f-4865-bc95-0bc4979c04d9");
            ActiveSession activesession2 = new ActiveSession("8f790df8b03da9b1dd914e7ecab2ad3f",
                                                             "e2815c30-4f4b-46b0-a86d-b7e0da2b7b61",
                                                             new Date(1559752152894L),
                                                             "e46c1b66-aaa7-420a-9c1e-6521ced9ce4c",
                                                             "6e4b64b4-709f-4865-bc95-0bc4979c04d9");
            ActiveSession activesession3 = new ActiveSession("8f790df8b03da9b1dd914e7ecab2ad3f",
                                                             "e06ea921-4c29-42ee-9810-8bbb24961028",
                                                             new Date(1559752144365L),
                                                             "0e21f797-8643-47b1-a6e5-62b77bc20de1",
                                                             "907a4cc9-5e14-4a04-b655-251377b0b0fa");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
