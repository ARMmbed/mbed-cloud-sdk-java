// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("360efa29edf1702da7045dd46bf2c0ee",
                                                             "6994f1ae-38ff-4de8-9227-8cfbb51ca189",
                                                             new Date(1559758608710L),
                                                             "c2826281-882d-4002-b9c2-fc83e651f3c8",
                                                             "d559c0e4-7f4e-482b-906c-a8a42e670cb7");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("360efa29edf1702da7045dd46bf2c0ee",
                                                             "f40008da-1df3-4a7d-a8ff-2867f358b89e",
                                                             new Date(1559758607874L),
                                                             "4e6e4bd5-8333-4bde-91d6-da6ea047d85c",
                                                             "4c1a5a30-13d5-4c53-9209-ad66399cc288");
            ActiveSession activesession2 = new ActiveSession("360efa29edf1702da7045dd46bf2c0ee",
                                                             "f40008da-1df3-4a7d-a8ff-2867f358b89e",
                                                             new Date(1559758607874L),
                                                             "4e6e4bd5-8333-4bde-91d6-da6ea047d85c",
                                                             "4c1a5a30-13d5-4c53-9209-ad66399cc288");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("360efa29edf1702da7045dd46bf2c0ee",
                                                        "84dbb23d-b997-471d-9b20-adde85206c76",
                                                        new Date(1559758610592L),
                                                        "50b8661d-ef91-4408-8e0f-199d8701d84c",
                                                        "048e9e00-c9a2-43e2-a4a7-b1cb18a2882d");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("360efa29edf1702da7045dd46bf2c0ee",
                                                             "48fc2ab9-19e0-4e96-b27d-32849f5de6a9",
                                                             new Date(1559758611769L),
                                                             "30ca050f-728e-46b9-aa9c-8308871efdaa",
                                                             "214a2cde-b163-4bb2-af1e-1f37bcccff92");
            ActiveSession activesession2 = new ActiveSession("360efa29edf1702da7045dd46bf2c0ee",
                                                             "48fc2ab9-19e0-4e96-b27d-32849f5de6a9",
                                                             new Date(1559758611769L),
                                                             "30ca050f-728e-46b9-aa9c-8308871efdaa",
                                                             "214a2cde-b163-4bb2-af1e-1f37bcccff92");
            ActiveSession activesession3 = new ActiveSession("360efa29edf1702da7045dd46bf2c0ee",
                                                             "f7a2e8ca-0e0c-4774-a620-2b62cc688460",
                                                             new Date(1559758606330L),
                                                             "4b3b5e2d-e4a0-4c19-8cf4-eda2e56d9824",
                                                             "29400741-6f5a-4166-878c-e8b51eb1a67a");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
