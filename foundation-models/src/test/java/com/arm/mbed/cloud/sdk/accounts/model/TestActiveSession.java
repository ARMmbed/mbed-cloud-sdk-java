// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("1fb3d6dc3467de6fb631f982b0ebed24",
                                                             "cd9b96bd-61de-42a1-ad9f-4480c85a5b06",
                                                             new Date(1559745294894L),
                                                             "6cfd58c6-f012-4535-8561-cbc3903b26e6",
                                                             "8db5e071-4200-40c3-a2d2-d29581aafab6");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("1fb3d6dc3467de6fb631f982b0ebed24",
                                                             "9c2cda46-740a-4ad1-bec5-7e2cc5030d69",
                                                             new Date(1559745303788L),
                                                             "d3a88232-edd1-49ba-89ee-0176296fa7ad",
                                                             "328f0250-6d43-4a37-9b8d-45ab392a6aa2");
            ActiveSession activesession2 = new ActiveSession("1fb3d6dc3467de6fb631f982b0ebed24",
                                                             "9c2cda46-740a-4ad1-bec5-7e2cc5030d69",
                                                             new Date(1559745303788L),
                                                             "d3a88232-edd1-49ba-89ee-0176296fa7ad",
                                                             "328f0250-6d43-4a37-9b8d-45ab392a6aa2");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("1fb3d6dc3467de6fb631f982b0ebed24",
                                                        "0825911b-46e1-4304-b1fa-78b6aaba6027",
                                                        new Date(1559745299220L),
                                                        "b3fe7039-b6ef-4e97-9287-ca914f09d14c",
                                                        "c5198658-0560-402a-a1de-8b0f8882454c");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("1fb3d6dc3467de6fb631f982b0ebed24",
                                                             "4ca37306-42d9-421e-946f-c53b8430e71e",
                                                             new Date(1559745294640L),
                                                             "487904c6-e435-476a-880f-41aab7b6279d",
                                                             "b5f2fb12-a054-42d5-a9c0-54e455eb30d8");
            ActiveSession activesession2 = new ActiveSession("1fb3d6dc3467de6fb631f982b0ebed24",
                                                             "4ca37306-42d9-421e-946f-c53b8430e71e",
                                                             new Date(1559745294640L),
                                                             "487904c6-e435-476a-880f-41aab7b6279d",
                                                             "b5f2fb12-a054-42d5-a9c0-54e455eb30d8");
            ActiveSession activesession3 = new ActiveSession("1fb3d6dc3467de6fb631f982b0ebed24",
                                                             "00763fb5-41c1-4dbd-b25e-3a2a346a0d37",
                                                             new Date(1559745302718L),
                                                             "8a756851-4edd-400d-9f74-e10d11997d65",
                                                             "b98c0693-b435-4b99-bdb5-d93f428ee1b8");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
