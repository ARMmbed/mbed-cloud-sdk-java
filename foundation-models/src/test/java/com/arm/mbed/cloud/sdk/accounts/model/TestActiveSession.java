// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("71fdba82137d3d88b328e27f0b30ef6d",
                                                             "5ef0d78d-753c-445d-a480-c45a638a67ae",
                                                             new Date(1559754644783L),
                                                             "5a8f0ab4-5b22-470f-9821-16b33a7baf78",
                                                             "40f834c1-709f-4618-94dc-112ae215219f");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("71fdba82137d3d88b328e27f0b30ef6d",
                                                             "61226370-5668-4289-a54b-88d0b816da09",
                                                             new Date(1559754642634L),
                                                             "d6f11908-f50e-4834-805f-58a435048398",
                                                             "db70aae7-8d73-4853-973b-4b8cf51cec15");
            ActiveSession activesession2 = new ActiveSession("71fdba82137d3d88b328e27f0b30ef6d",
                                                             "61226370-5668-4289-a54b-88d0b816da09",
                                                             new Date(1559754642634L),
                                                             "d6f11908-f50e-4834-805f-58a435048398",
                                                             "db70aae7-8d73-4853-973b-4b8cf51cec15");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("71fdba82137d3d88b328e27f0b30ef6d",
                                                        "432239d0-458f-4297-9bb1-8b28dec5aa9e",
                                                        new Date(1559754637258L),
                                                        "e0320f0c-dae8-4ab6-a354-95275467d1bc",
                                                        "06ca6abf-98ad-43e3-8cd6-f6b897402a30");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("71fdba82137d3d88b328e27f0b30ef6d",
                                                             "3df84678-d6ec-4d0c-8099-946e61fb6685",
                                                             new Date(1559754641783L),
                                                             "ea66d53d-348b-44e7-9f52-31d2b0e6afb4",
                                                             "25c0ba63-afe3-4504-b498-958325141216");
            ActiveSession activesession2 = new ActiveSession("71fdba82137d3d88b328e27f0b30ef6d",
                                                             "3df84678-d6ec-4d0c-8099-946e61fb6685",
                                                             new Date(1559754641783L),
                                                             "ea66d53d-348b-44e7-9f52-31d2b0e6afb4",
                                                             "25c0ba63-afe3-4504-b498-958325141216");
            ActiveSession activesession3 = new ActiveSession("71fdba82137d3d88b328e27f0b30ef6d",
                                                             "217b85e6-58b6-4b85-9151-805187ac1afb",
                                                             new Date(1559754637668L),
                                                             "62a6a902-b017-4b35-a1ec-cc8c3fedbfdc",
                                                             "fd18d7b1-250b-4747-bf0b-84aea6f630aa");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
