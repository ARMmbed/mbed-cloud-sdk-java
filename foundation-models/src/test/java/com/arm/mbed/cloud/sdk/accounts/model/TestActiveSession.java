// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("acbf655bdeac77c770ad4964fcb1f81f",
                                                             "e1ccd64f-e69a-4c0d-b094-c98858cf3be5",
                                                             new Date(1559747931597L),
                                                             "c4983192-254c-491d-8b61-f933e9f8e5c9",
                                                             "27f1e42c-83f8-49e9-a2e0-2b7451c9275d");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("acbf655bdeac77c770ad4964fcb1f81f",
                                                             "c8c284c6-2934-4be0-a879-66c5807878c2",
                                                             new Date(1559747927229L),
                                                             "488f95e7-f71c-4921-8768-6bd9a2e095cc",
                                                             "30c90010-07fc-4567-b265-31a07131d6d1");
            ActiveSession activesession2 = new ActiveSession("acbf655bdeac77c770ad4964fcb1f81f",
                                                             "c8c284c6-2934-4be0-a879-66c5807878c2",
                                                             new Date(1559747927229L),
                                                             "488f95e7-f71c-4921-8768-6bd9a2e095cc",
                                                             "30c90010-07fc-4567-b265-31a07131d6d1");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("acbf655bdeac77c770ad4964fcb1f81f",
                                                        "d5495fc6-557b-490e-aade-41de68f672a2",
                                                        new Date(1559747925492L),
                                                        "490b1c8d-3c10-442b-b8ca-c7942882dc6e",
                                                        "28dcf586-1344-4459-ab99-ac64c1638321");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("acbf655bdeac77c770ad4964fcb1f81f",
                                                             "40931e28-6940-4199-b0ae-fa25a9d0d22e",
                                                             new Date(1559747925877L),
                                                             "f727b8b1-551c-4905-b663-ec186807c1f5",
                                                             "b0612bac-d8a7-4abf-a2d0-0f1ae908aaf3");
            ActiveSession activesession2 = new ActiveSession("acbf655bdeac77c770ad4964fcb1f81f",
                                                             "40931e28-6940-4199-b0ae-fa25a9d0d22e",
                                                             new Date(1559747925877L),
                                                             "f727b8b1-551c-4905-b663-ec186807c1f5",
                                                             "b0612bac-d8a7-4abf-a2d0-0f1ae908aaf3");
            ActiveSession activesession3 = new ActiveSession("acbf655bdeac77c770ad4964fcb1f81f",
                                                             "c31dfa65-c451-4438-a630-33977cd196b2",
                                                             new Date(1559747929158L),
                                                             "36f8a361-f086-49ae-b0e8-e9e45ab70db3",
                                                             "21731b68-752a-4536-ad3b-38e8c7b7ef78");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
