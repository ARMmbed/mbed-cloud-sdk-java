// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                             "298c64e3-2881-489e-acb6-58e0938ac2de",
                                                             new Date(1558096038865L),
                                                             "e12aea84-451d-465f-819b-92d5d0792082",
                                                             "7747d274-d9b3-4e5d-963f-3a88dbe7acbc");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                             "4db336ca-2aff-438f-84e7-292cb64a8e35",
                                                             new Date(1558096042820L),
                                                             "419ec518-74c3-4045-b68e-f79cdb85183b",
                                                             "3b8b25c5-799d-49dc-a530-1f53df608485");
            ActiveSession activesession2 = new ActiveSession("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                             "4db336ca-2aff-438f-84e7-292cb64a8e35",
                                                             new Date(1558096042820L),
                                                             "419ec518-74c3-4045-b68e-f79cdb85183b",
                                                             "3b8b25c5-799d-49dc-a530-1f53df608485");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                        "579ce9a3-53c2-4464-8123-71b79f652882",
                                                        new Date(1558096044239L),
                                                        "f0b2f1da-29d4-4850-b8ab-635a6defbf5c",
                                                        "710091da-35d7-4f44-a866-1ca327a6fcf0");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                             "41026186-c910-490b-859f-4713620d8eb1",
                                                             new Date(1558096037117L),
                                                             "9597580e-f997-44bf-a905-552f5162075c",
                                                             "93ae76e2-8316-4ed8-8095-ece615b3e70d");
            ActiveSession activesession2 = new ActiveSession("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                             "41026186-c910-490b-859f-4713620d8eb1",
                                                             new Date(1558096037117L),
                                                             "9597580e-f997-44bf-a905-552f5162075c",
                                                             "93ae76e2-8316-4ed8-8095-ece615b3e70d");
            ActiveSession activesession3 = new ActiveSession("afbdeea60718ef43acbc07ccc8d8b7ff",
                                                             "a5b28002-e920-46b5-b28a-7d07a36647e5",
                                                             new Date(1558096040632L),
                                                             "9600758d-100e-4f58-9685-ca93b90c4584",
                                                             "3c31e9ef-a94d-4e74-b8a2-c9a94fb09d83");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
