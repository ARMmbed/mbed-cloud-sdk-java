// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("f7f9edc2df1fd9afea87465e2109cb51",
                                                             "c62c3f61-370d-4937-a13d-4c00fa400d08",
                                                             new Date(1559655034180L),
                                                             "d6f2c4b7-27e7-4ce0-ab2a-55793a830522",
                                                             "a17aa7b1-0750-4bd0-9668-534d6dba6b33");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("f7f9edc2df1fd9afea87465e2109cb51",
                                                             "b4432b03-7128-43de-aaa0-65a751388b5f",
                                                             new Date(1559655035000L),
                                                             "4a832f03-a016-433c-958f-59f824b9b73a",
                                                             "3d6cfb5e-50ca-4c05-b556-836c2623c97c");
            ActiveSession activesession2 = new ActiveSession("f7f9edc2df1fd9afea87465e2109cb51",
                                                             "b4432b03-7128-43de-aaa0-65a751388b5f",
                                                             new Date(1559655035000L),
                                                             "4a832f03-a016-433c-958f-59f824b9b73a",
                                                             "3d6cfb5e-50ca-4c05-b556-836c2623c97c");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("f7f9edc2df1fd9afea87465e2109cb51",
                                                        "4914d1e9-4ba9-4be6-8de1-fda21b9941c3",
                                                        new Date(1559655031225L),
                                                        "a4cb7858-b2b6-4b12-8f90-873a4a51e254",
                                                        "e452eebd-dd07-4f2d-8428-a6a35c8c79d4");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("f7f9edc2df1fd9afea87465e2109cb51",
                                                             "87383f39-d53c-40d8-8462-5b88be79cc18",
                                                             new Date(1559655030354L),
                                                             "30cf6895-407c-4a15-984e-26096603d93d",
                                                             "c83aa30c-1a83-4319-806d-4a8426ba1479");
            ActiveSession activesession2 = new ActiveSession("f7f9edc2df1fd9afea87465e2109cb51",
                                                             "87383f39-d53c-40d8-8462-5b88be79cc18",
                                                             new Date(1559655030354L),
                                                             "30cf6895-407c-4a15-984e-26096603d93d",
                                                             "c83aa30c-1a83-4319-806d-4a8426ba1479");
            ActiveSession activesession3 = new ActiveSession("f7f9edc2df1fd9afea87465e2109cb51",
                                                             "5b2633b4-2bcb-4499-a5fd-f1f42e806f7e",
                                                             new Date(1559655029488L),
                                                             "deacb792-431a-4c4e-8122-ab3a9d107101",
                                                             "7f4239af-eb8d-4859-94dc-323a89f39ea5");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
