// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("bedebcaf929fb64c74860f9a9cc41c0c",
                                                             "fa95a8a4-8cf0-4db7-99f1-7d7e08e6a96c",
                                                             new Date(1559833685924L),
                                                             "c970cff4-8b11-4fa4-949c-ba10b7898c77",
                                                             "07a4f5e4-fbfc-4a8f-85e7-ddb31eb9c8ce");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("bedebcaf929fb64c74860f9a9cc41c0c",
                                                             "7acbc924-2d0b-462a-9d5b-57daa3eabed3",
                                                             new Date(1559833683263L),
                                                             "de38a57c-40b8-4c3a-bc05-6b47fc93930e",
                                                             "171fb0c7-078c-4b0d-a96a-fd0c5981e2de");
            ActiveSession activesession2 = new ActiveSession("bedebcaf929fb64c74860f9a9cc41c0c",
                                                             "7acbc924-2d0b-462a-9d5b-57daa3eabed3",
                                                             new Date(1559833683263L),
                                                             "de38a57c-40b8-4c3a-bc05-6b47fc93930e",
                                                             "171fb0c7-078c-4b0d-a96a-fd0c5981e2de");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("bedebcaf929fb64c74860f9a9cc41c0c",
                                                        "f2d45658-ae57-4162-82aa-f991595104b4",
                                                        new Date(1559833682667L),
                                                        "2f7e1cdf-88e7-4b1f-8ba4-54595508ad25",
                                                        "e05f16f2-68a5-4db5-976d-a0cd81533d30");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("bedebcaf929fb64c74860f9a9cc41c0c",
                                                             "cd279152-47f6-409e-b2c9-4510b2f4edf0",
                                                             new Date(1559833682802L),
                                                             "63734508-8b36-4758-a54f-df7434036cf1",
                                                             "b7205628-519b-476b-b254-f8d75ac965d9");
            ActiveSession activesession2 = new ActiveSession("bedebcaf929fb64c74860f9a9cc41c0c",
                                                             "cd279152-47f6-409e-b2c9-4510b2f4edf0",
                                                             new Date(1559833682802L),
                                                             "63734508-8b36-4758-a54f-df7434036cf1",
                                                             "b7205628-519b-476b-b254-f8d75ac965d9");
            ActiveSession activesession3 = new ActiveSession("bedebcaf929fb64c74860f9a9cc41c0c",
                                                             "c09f5e79-86ae-4f2e-b897-b68a7eeb2235",
                                                             new Date(1559833682637L),
                                                             "614c2431-66e2-4299-99e0-c842a5c7a76e",
                                                             "1c7bcb9e-677c-4873-a869-8a27a1c42cb1");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
