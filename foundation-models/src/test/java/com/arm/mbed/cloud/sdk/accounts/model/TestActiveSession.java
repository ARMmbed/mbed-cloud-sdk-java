// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("e5adc84a514e5b3d136332ece0ac7d95",
                                                             "d52b369a-3477-413c-94bd-7deb19364b5f",
                                                             new Date(1559300098580L),
                                                             "e108df43-88e6-49c7-8fc4-7383ad6606eb",
                                                             "b50f3975-d32d-4cc9-8bb1-8e79c4ebae7f");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("e5adc84a514e5b3d136332ece0ac7d95",
                                                             "2a65a597-6466-4ba3-84dd-485a8a6739c9",
                                                             new Date(1559300100818L),
                                                             "336a453c-b956-4deb-9e27-5169510c9b91",
                                                             "31a90210-acb1-4d6c-89a2-ae1a83a2ed34");
            ActiveSession activesession2 = new ActiveSession("e5adc84a514e5b3d136332ece0ac7d95",
                                                             "2a65a597-6466-4ba3-84dd-485a8a6739c9",
                                                             new Date(1559300100818L),
                                                             "336a453c-b956-4deb-9e27-5169510c9b91",
                                                             "31a90210-acb1-4d6c-89a2-ae1a83a2ed34");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("e5adc84a514e5b3d136332ece0ac7d95",
                                                        "ba4b3073-fb25-45b4-a5cf-8dd808c4a30b",
                                                        new Date(1559300099207L),
                                                        "c313aa65-af07-4e6b-bcfa-bb0dd8f6428e",
                                                        "2074117e-a554-42e2-ad9a-b5eb2e82b3c1");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("e5adc84a514e5b3d136332ece0ac7d95",
                                                             "f72d1bea-0f33-4b78-8c0e-969bb2e61543",
                                                             new Date(1559300100680L),
                                                             "42a19281-42c2-437d-8fe6-477e5bff0339",
                                                             "ac206bb1-a234-4c4f-9bc3-e8b264722fa8");
            ActiveSession activesession2 = new ActiveSession("e5adc84a514e5b3d136332ece0ac7d95",
                                                             "f72d1bea-0f33-4b78-8c0e-969bb2e61543",
                                                             new Date(1559300100680L),
                                                             "42a19281-42c2-437d-8fe6-477e5bff0339",
                                                             "ac206bb1-a234-4c4f-9bc3-e8b264722fa8");
            ActiveSession activesession3 = new ActiveSession("e5adc84a514e5b3d136332ece0ac7d95",
                                                             "319093f7-cb34-452e-8c66-b25e734b44a5",
                                                             new Date(1559300103132L),
                                                             "8960b4e0-51c0-4041-9084-f33e54c2eb73",
                                                             "8c37ca6f-1d5d-414d-a8d7-3b04a753aeb3");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
