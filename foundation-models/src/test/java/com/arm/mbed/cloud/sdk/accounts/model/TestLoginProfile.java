// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("a73ef47c-247b-4d83-bf11-84cc2964b623",
                                                          "f443f6b6-a934-4307-bab2-101854f0450a");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("75b717fc-c904-4368-b608-fef19d7d4bc3",
                                                          "935f64a1-97df-4587-a83c-d429e548de8e");
            LoginProfile loginprofile2 = new LoginProfile("75b717fc-c904-4368-b608-fef19d7d4bc3",
                                                          "935f64a1-97df-4587-a83c-d429e548de8e");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("c2cc8014-a0da-4536-8393-b46ff7e895b5",
                                                     "82c1116f-792d-4926-ac41-d31869387b5e");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("481b20fa-1140-4948-9ef2-49df3ad4d38f",
                                                          "dc03025c-4347-4148-b3e9-ca492cf087b5");
            LoginProfile loginprofile2 = new LoginProfile("481b20fa-1140-4948-9ef2-49df3ad4d38f",
                                                          "dc03025c-4347-4148-b3e9-ca492cf087b5");
            LoginProfile loginprofile3 = new LoginProfile("6d8c4a92-5f80-4794-a12f-068ceb5310a1",
                                                          "7272dd3e-63a0-4069-ae9c-23feacbf85c4");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
