// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("d52672a8-9c6f-4261-b95c-ce61eb425c7e",
                                                          "a1d87815-ca53-4b75-b65b-d970527da865");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("05f59724-e491-48aa-8f74-3bc8e5a4d81f",
                                                          "52ba6f0e-8a89-4e52-a5dc-d1367792eff6");
            LoginProfile loginprofile2 = new LoginProfile("05f59724-e491-48aa-8f74-3bc8e5a4d81f",
                                                          "52ba6f0e-8a89-4e52-a5dc-d1367792eff6");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("9dd1423a-de94-45f1-a7ff-188cb5f7b2ca",
                                                     "d9cd4a81-e7f8-4e3d-b2c8-b406995d9725");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("c88e6c5b-9010-482f-8930-f8e401989963",
                                                          "9c317496-9639-475d-aaeb-39cb6c777d4a");
            LoginProfile loginprofile2 = new LoginProfile("c88e6c5b-9010-482f-8930-f8e401989963",
                                                          "9c317496-9639-475d-aaeb-39cb6c777d4a");
            LoginProfile loginprofile3 = new LoginProfile("4ea132cb-4ace-47bf-a867-be4debce5ff6",
                                                          "1e678b4f-48d5-49a0-91ce-f76334149b8d");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
