// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("d8e99580-1a06-499d-ba2b-22d0dd141194",
                                                          "4aae95a8-6e5a-4d3e-a40c-5cd9d8a44038");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("801634f6-3481-4fe8-9873-c91f5923526b",
                                                          "e0de2361-91cf-41ca-91ec-b2fb3c2042e5");
            LoginProfile loginprofile2 = new LoginProfile("801634f6-3481-4fe8-9873-c91f5923526b",
                                                          "e0de2361-91cf-41ca-91ec-b2fb3c2042e5");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("d50f43f6-463b-404b-a7f4-c0946599c72f",
                                                     "eb5b5a84-ee7a-4dc5-ba3e-28ad0db7d449");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("eac1bfb9-1eb9-4a10-9cdf-1bcb4e912e3e",
                                                          "8adc86a7-bf08-40f3-a0ab-c2994c6649ba");
            LoginProfile loginprofile2 = new LoginProfile("eac1bfb9-1eb9-4a10-9cdf-1bcb4e912e3e",
                                                          "8adc86a7-bf08-40f3-a0ab-c2994c6649ba");
            LoginProfile loginprofile3 = new LoginProfile("14048aaa-f1bf-4a39-b6cc-fc754b875057",
                                                          "c902c8f9-97bf-45f3-a6b6-e2a903c8a04d");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
