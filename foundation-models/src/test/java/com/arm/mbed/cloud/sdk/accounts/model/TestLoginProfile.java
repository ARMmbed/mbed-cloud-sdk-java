// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("1287ffa3-c40e-471d-98bc-c5550131aaa0",
                                                          "809d49e1-9628-4ba3-82a4-ebbc981f0d51");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("0821c8a7-07e8-44c3-a421-ae65c8783ecb",
                                                          "ebb9f2ec-2136-4f46-8619-8523fa2823b2");
            LoginProfile loginprofile2 = new LoginProfile("0821c8a7-07e8-44c3-a421-ae65c8783ecb",
                                                          "ebb9f2ec-2136-4f46-8619-8523fa2823b2");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("186549ce-2283-4094-bc17-91a1827f43ad",
                                                     "a3569346-6594-41ab-97b3-ee0c6ef3b17e");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("e121c63c-5ca3-4716-bef3-80a6cb43bc68",
                                                          "284c76d9-43fe-4b7f-9e83-e920fc32f305");
            LoginProfile loginprofile2 = new LoginProfile("e121c63c-5ca3-4716-bef3-80a6cb43bc68",
                                                          "284c76d9-43fe-4b7f-9e83-e920fc32f305");
            LoginProfile loginprofile3 = new LoginProfile("4d9e4062-c79b-4375-9048-0ae90d4ad663",
                                                          "217b517d-57b5-4aa1-9043-be90c2d8c260");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
