// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("517ef7b2-555a-4ca0-88da-3b099c4c5c76",
                                                          "fcf434ae-9c11-467b-b832-557c27547e21");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("34ebaba7-a9c2-4523-83d0-040306b8e7dc",
                                                          "c339e4b6-ee63-471e-8be5-c8a37cd257ee");
            LoginProfile loginprofile2 = new LoginProfile("34ebaba7-a9c2-4523-83d0-040306b8e7dc",
                                                          "c339e4b6-ee63-471e-8be5-c8a37cd257ee");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("75fb9f15-5881-45bb-9dea-c3291306ee7c",
                                                     "d6848fb2-69e8-41e0-acd2-6f9bcbf3f981");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("ec47d7a1-76d0-47f1-8046-b7afa0583acb",
                                                          "a1bfbad9-01a6-4687-9980-b412c42acb80");
            LoginProfile loginprofile2 = new LoginProfile("ec47d7a1-76d0-47f1-8046-b7afa0583acb",
                                                          "a1bfbad9-01a6-4687-9980-b412c42acb80");
            LoginProfile loginprofile3 = new LoginProfile("bd62a4bc-a76c-44a3-9fbe-eb523d785136",
                                                          "4f22141e-b48d-4111-9f53-6dd98d5a567d");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
