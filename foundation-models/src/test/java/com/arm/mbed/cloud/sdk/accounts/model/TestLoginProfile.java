// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("5003b198-0183-480f-b6d1-cb586a28f2a1",
                                                          "fdf88c97-bdee-489b-ac62-3ece8819a241");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("606e8408-3f26-4cbf-a0a2-dcfdc5631747",
                                                          "aeafc455-af94-4745-b28b-c4e2ece54395");
            LoginProfile loginprofile2 = new LoginProfile("606e8408-3f26-4cbf-a0a2-dcfdc5631747",
                                                          "aeafc455-af94-4745-b28b-c4e2ece54395");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("61c2981c-e446-45d0-aa20-8e5fe5a93ef9",
                                                     "a971a470-637f-41cd-b140-f4621be145d2");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("5e7208f0-8ed1-4898-af51-42f995c235ba",
                                                          "3ae9002c-9c3a-4fec-b38d-325e961d3be2");
            LoginProfile loginprofile2 = new LoginProfile("5e7208f0-8ed1-4898-af51-42f995c235ba",
                                                          "3ae9002c-9c3a-4fec-b38d-325e961d3be2");
            LoginProfile loginprofile3 = new LoginProfile("ba59ebcd-99ac-4a6d-9622-5e2ece05e4e9",
                                                          "35b215dc-34da-4b54-9976-0cc922924c75");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
