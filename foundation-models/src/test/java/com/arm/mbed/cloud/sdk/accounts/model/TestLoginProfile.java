// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("cc66ce2c-36df-4d99-9c72-2eb0297eeee5",
                                                          "ca038795-3904-4315-ab03-91ca5dbdd516");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("0950131b-2bc8-46ab-80b5-4ebda282531c",
                                                          "20289a38-223a-4e04-97e1-f589b35522ee");
            LoginProfile loginprofile2 = new LoginProfile("0950131b-2bc8-46ab-80b5-4ebda282531c",
                                                          "20289a38-223a-4e04-97e1-f589b35522ee");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("1fc4754e-d239-48db-8eae-874189ae7302",
                                                     "cfbe8db1-4db2-4019-a9f4-359b585129d1");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("2719cdfb-c573-4537-87ff-b158cd8d4ae6",
                                                          "73867ce2-3f18-41da-b753-d04b5da99afe");
            LoginProfile loginprofile2 = new LoginProfile("2719cdfb-c573-4537-87ff-b158cd8d4ae6",
                                                          "73867ce2-3f18-41da-b753-d04b5da99afe");
            LoginProfile loginprofile3 = new LoginProfile("3c9f0144-77f1-46b1-90f4-6d7e6569fd5b",
                                                          "976f444d-0802-4df3-af8c-19fbbb9770b0");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
