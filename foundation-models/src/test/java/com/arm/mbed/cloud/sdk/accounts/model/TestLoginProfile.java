// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("4f5d85c2-c414-498e-8b3c-73cc05b3e637",
                                                          "a30bfcaf-957a-44f8-b67f-7358e5cec224");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("f7c324c9-7a03-47b4-9b01-459ce02aeb48",
                                                          "39b75540-d66c-48b2-8cc1-8636a8075da7");
            LoginProfile loginprofile2 = new LoginProfile("f7c324c9-7a03-47b4-9b01-459ce02aeb48",
                                                          "39b75540-d66c-48b2-8cc1-8636a8075da7");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("f5b818fc-403a-4d21-84ec-ab27e5a9cdd6",
                                                     "4b891616-abe1-4bdf-bc38-380899aff6f9");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("f9dbb443-ed5d-4370-9d8d-c90d965237e3",
                                                          "cd442222-1562-4b35-8657-129573cc243a");
            LoginProfile loginprofile2 = new LoginProfile("f9dbb443-ed5d-4370-9d8d-c90d965237e3",
                                                          "cd442222-1562-4b35-8657-129573cc243a");
            LoginProfile loginprofile3 = new LoginProfile("e79f0c55-8731-46df-a35b-873e2ebb6007",
                                                          "7421377c-642c-43f8-998c-a4ccdaf64231");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
