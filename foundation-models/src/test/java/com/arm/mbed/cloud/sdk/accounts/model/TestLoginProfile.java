// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("3ccaf480-2670-42f5-a0bd-51225cf3dfc4",
                                                          "bcec6c89-e922-418a-995f-95367a8981c8");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("20e6b608-453e-4109-b13b-caac660ad263",
                                                          "8669c8c3-f572-4eab-810b-d1c16fb68e6f");
            LoginProfile loginprofile2 = new LoginProfile("20e6b608-453e-4109-b13b-caac660ad263",
                                                          "8669c8c3-f572-4eab-810b-d1c16fb68e6f");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("fbb5024b-ef2e-4ff0-b670-7bd740a074b7",
                                                     "8ef7d25e-89fb-4626-9bd4-a10108367f8f");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("0b555f70-0e54-4c7b-a911-1f03a905c33d",
                                                          "de9fa494-50d8-446c-ac46-c8f8d6163bf4");
            LoginProfile loginprofile2 = new LoginProfile("0b555f70-0e54-4c7b-a911-1f03a905c33d",
                                                          "de9fa494-50d8-446c-ac46-c8f8d6163bf4");
            LoginProfile loginprofile3 = new LoginProfile("4d67b6e5-860b-4bb4-a192-5431af2792e9",
                                                          "2b8bed61-6851-4aeb-97f2-f9f5465873b8");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
