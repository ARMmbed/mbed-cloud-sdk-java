// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("bcbb36b8-6ef9-4d3f-a909-d83f23139e27",
                                                          "ea3ee45a-5102-4237-a54f-8bff40c5d6c6");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("1980bcd6-bfa5-40b8-a0c0-da05e156cdc6",
                                                          "431396cb-b834-45b8-9ec1-d356a977dd0e");
            LoginProfile loginprofile2 = new LoginProfile("1980bcd6-bfa5-40b8-a0c0-da05e156cdc6",
                                                          "431396cb-b834-45b8-9ec1-d356a977dd0e");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("2da9cc41-857f-4a34-bb65-53f05d82f6c0",
                                                     "a06f63ba-b2ed-4be8-be42-d6aa84589413");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("8ce2f7bc-6f27-42c8-9981-5a4f076b541e",
                                                          "a538fee6-797f-4a94-9314-98b41de7e87a");
            LoginProfile loginprofile2 = new LoginProfile("8ce2f7bc-6f27-42c8-9981-5a4f076b541e",
                                                          "a538fee6-797f-4a94-9314-98b41de7e87a");
            LoginProfile loginprofile3 = new LoginProfile("ac719843-d2e3-47c5-8b28-786a03fb870f",
                                                          "485e733e-a783-4d8a-b2cf-18d258aed09a");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
