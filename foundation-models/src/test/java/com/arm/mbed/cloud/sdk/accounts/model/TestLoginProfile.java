// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("ac6a9c67-fd14-4650-86fa-28d383377c6c",
                                                          "e68ea601-b1d9-4cd4-940f-afd653c4471d");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("6826132b-fb18-40e3-859c-57798da0a4a2",
                                                          "6b5f838e-90b7-4ca1-bd5d-763870e9ea7c");
            LoginProfile loginprofile2 = new LoginProfile("6826132b-fb18-40e3-859c-57798da0a4a2",
                                                          "6b5f838e-90b7-4ca1-bd5d-763870e9ea7c");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("99134bf9-35e0-44c0-891b-22e2006538fd",
                                                     "0870479b-6964-43ea-bc6d-0a6b30e32c1c");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("9822dd6f-dd2c-455d-8371-a264f2e6c21d",
                                                          "3a6cdb2f-68ba-4556-94f0-bbc8027eb493");
            LoginProfile loginprofile2 = new LoginProfile("9822dd6f-dd2c-455d-8371-a264f2e6c21d",
                                                          "3a6cdb2f-68ba-4556-94f0-bbc8027eb493");
            LoginProfile loginprofile3 = new LoginProfile("81e372f9-2bef-42c2-9e6e-eabb7b19457b",
                                                          "4d8d1cce-4cf3-4fb8-8642-c342f6c98f0b");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
