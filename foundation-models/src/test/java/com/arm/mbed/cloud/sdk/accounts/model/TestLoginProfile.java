// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("15246ee9-ab45-419c-90a9-82b688a0b1ef",
                                                          "ed82023e-df74-4e35-b8cf-e1b1759a2f2b");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("bdb983e2-22a2-47bc-ba3b-e0ad39ac77f3",
                                                          "e8689490-1490-416c-a4e0-b54753c13bc3");
            LoginProfile loginprofile2 = new LoginProfile("bdb983e2-22a2-47bc-ba3b-e0ad39ac77f3",
                                                          "e8689490-1490-416c-a4e0-b54753c13bc3");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("650ad467-1c2b-4552-b6b2-644e2d0ec362",
                                                     "e170e8c3-3554-4a79-bae8-3628651e1243");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("37edc70e-ab68-4f64-910e-24877eedccdc",
                                                          "8805639d-635f-40ed-8209-08d1be71daac");
            LoginProfile loginprofile2 = new LoginProfile("37edc70e-ab68-4f64-910e-24877eedccdc",
                                                          "8805639d-635f-40ed-8209-08d1be71daac");
            LoginProfile loginprofile3 = new LoginProfile("d7c5b18d-a408-4427-b3ab-567bfa4ae1bf",
                                                          "25e1742e-9dd6-4c45-a543-ef1a49e17936");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
