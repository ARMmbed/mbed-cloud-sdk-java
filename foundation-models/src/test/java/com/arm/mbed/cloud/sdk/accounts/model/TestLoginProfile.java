// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("77d997d6-305b-4749-bbdc-513bb6d237b8",
                                                          "32da1a61-830a-4c2b-92a7-913757da44f6");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("80d9dd15-c1e2-4d1e-8035-b4f7bc490a8c",
                                                          "e803693b-8ee7-4757-be18-9ccc1dbedc90");
            LoginProfile loginprofile2 = new LoginProfile("80d9dd15-c1e2-4d1e-8035-b4f7bc490a8c",
                                                          "e803693b-8ee7-4757-be18-9ccc1dbedc90");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("926e45ec-2d75-41ff-aee0-1fe2a0e67482",
                                                     "e85aca52-52e7-4c9d-aef6-b183e1135ddd");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("b53adbb4-fcf3-41aa-8822-024323057277",
                                                          "40aaf1da-038b-45d9-90e9-f6bcc9ff613f");
            LoginProfile loginprofile2 = new LoginProfile("b53adbb4-fcf3-41aa-8822-024323057277",
                                                          "40aaf1da-038b-45d9-90e9-f6bcc9ff613f");
            LoginProfile loginprofile3 = new LoginProfile("78708d6e-4cc5-4a0f-b4b6-66ae94a9673c",
                                                          "ed2749a7-d6ca-4b34-bafe-e3d68715ce1a");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
