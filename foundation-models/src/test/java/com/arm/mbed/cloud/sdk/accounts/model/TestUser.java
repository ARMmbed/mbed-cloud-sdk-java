// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
public class TestUser {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            User user1 = new User("7ecde3a7-1ece-4e18-b9da-aefdec19d7ff", "ada8f729-1ed9-40b9-9542-d718158c9b43",
                                  new Date(1547225121953L), -12, "1990bcaa-1830-4ecb-b00e-acc97f32a392", false,
                                  "d2d79e46-fabf-470b-98b3-d4862b59a9c4", "95fa1407-4b43-45e9-ac3e-c59e40bf3b3f", -102,
                                  null, null, true, "739d41b8-886c-434a-a50f-7a9036829f14", -48,
                                  "2d58aba7-be41-43e2-b4e8-697f7a2866b7", UserStatus.getDefault(), true, true,
                                  new Date(1547225120361L), "d9e7f615-8d87-42c6-8997-138cd4a18c56");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("486e134d-3ea7-4f1e-bbfc-2b5f2d0c0a01", "8b0a56e7-337f-4d5f-83d0-551a0c4ec1cd",
                                  new Date(1547225120238L), -15, "8918fe46-b9e7-4069-a406-e647e574a478", false,
                                  "c5b185fb-083b-4ff3-a569-82a9c2fc2b02", "efd7447a-4985-4f0d-b027-fdb525aa7320", 125,
                                  null, null, false, "8dccb0f2-e8ac-4b63-8194-016196bd0574", -5,
                                  "e5411327-a8d1-4b7b-b051-2c51a3967e57", UserStatus.getDefault(), true, true,
                                  new Date(1547225119869L), "585dedcf-58e2-4c7f-b029-a8cf25c22580");
            User user2 = new User("486e134d-3ea7-4f1e-bbfc-2b5f2d0c0a01", "8b0a56e7-337f-4d5f-83d0-551a0c4ec1cd",
                                  new Date(1547225120238L), -15, "8918fe46-b9e7-4069-a406-e647e574a478", false,
                                  "c5b185fb-083b-4ff3-a569-82a9c2fc2b02", "efd7447a-4985-4f0d-b027-fdb525aa7320", 125,
                                  null, null, false, "8dccb0f2-e8ac-4b63-8194-016196bd0574", -5,
                                  "e5411327-a8d1-4b7b-b051-2c51a3967e57", UserStatus.getDefault(), true, true,
                                  new Date(1547225119869L), "585dedcf-58e2-4c7f-b029-a8cf25c22580");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        User user = new User("9a715eaf-2039-4d4b-80fa-3a843a372240", "30fced8e-16e8-4ec0-b428-064f617a7c82",
                             new Date(1547225114914L), 7, "353f06b0-952f-4e4c-b79d-e83fb97e380f", false,
                             "1a213b5d-37f1-4192-a401-d19a924bb5ad", "38fb0352-b078-475d-af8f-e28079d83630", 126, null,
                             null, false, "3bbe439b-cb1b-4705-9610-f13f464f515c", -45,
                             "6002f50c-dcb1-4573-bbfa-58df5b7190a5", UserStatus.getDefault(), true, true,
                             new Date(1547225116199L), "eeb5946b-8c38-4999-b440-480805c4516c");
        assertTrue(user.isValid());
        User userInvalid = new User("5ae56fd5-1607-48aa-862f-fac48b582dc6", "cb7c6d89-989d-4ed4-a579-971b6eaad295",
                                    new Date(1547225123484L), -64, null, true, "893bc1e4-630b-4546-94c4-377b19996303",
                                    "4e56a9ea-70e2-4173-8a44-4a00b21fc4b4", -8, null, null, true,
                                    "50450e82-18b4-4641-95ad-43453774d9be", -123,
                                    "c6ba969e-2b41-4620-b8e2-aa62d5d33049", UserStatus.getDefault(), true, false,
                                    new Date(1547225120482L), "0da6a543-e077-4b21-9215-c5b9cd6cc656");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            User user1 = new User("20ea55bc-dadb-46be-b0cb-1996271de980", "713e8951-1880-4dcc-994a-269e3bf3290f",
                                  new Date(1547225121298L), -110, "1d8564f5-f39e-4953-bfb7-11654d4f729b", true,
                                  "63efc0de-a883-4d11-aaa1-cad6097857d7", "ddb7ec42-72e5-44aa-837e-5b9375f28385", -125,
                                  null, null, true, "49712f67-b07a-4dd1-8090-b853a43b1b74", -24,
                                  "55939fca-4c0b-4512-ad4d-f1c8c925399c", UserStatus.getDefault(), false, true,
                                  new Date(1547225121114L), "116003cc-ba6f-4372-b76d-6d0ca4ab6872");
            User user2 = new User("20ea55bc-dadb-46be-b0cb-1996271de980", "713e8951-1880-4dcc-994a-269e3bf3290f",
                                  new Date(1547225121298L), -110, "1d8564f5-f39e-4953-bfb7-11654d4f729b", true,
                                  "63efc0de-a883-4d11-aaa1-cad6097857d7", "ddb7ec42-72e5-44aa-837e-5b9375f28385", -125,
                                  null, null, true, "49712f67-b07a-4dd1-8090-b853a43b1b74", -24,
                                  "55939fca-4c0b-4512-ad4d-f1c8c925399c", UserStatus.getDefault(), false, true,
                                  new Date(1547225121114L), "116003cc-ba6f-4372-b76d-6d0ca4ab6872");
            User user3 = new User("987df296-3efe-4ead-960d-1615212c4ee8", "478b3826-4660-46a8-9501-b646a85e148a",
                                  new Date(1547225123252L), 33, "bf8ae661-0ad6-4e43-b96f-d5a5ae0676fe", true,
                                  "c186dea6-f5bc-42ed-b5ab-e435a838131d", "bd9f7fe3-e17c-4a74-a82c-c33d67680643", -44,
                                  null, null, true, "5845dc6d-8947-4bd2-abc1-81206192702b", 23,
                                  "7126f254-7fe0-4e3e-be68-26a1f1921044", UserStatus.getDefault(), false, true,
                                  new Date(1547225116794L), "173a69c4-412e-4e03-a698-c5f20ed4d060");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
