// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
public class TestUser {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            User user1 = new User("6cbf09a9-dc9b-4fbf-bedb-ae19afd8619f", null, "5ad3a224-7b41-4e79-84c7-e1785956c7cc",
                                  new Date(1551867951634L), -29, null, "384007c3-44ae-4a0c-b2eb-744aa466825b", false,
                                  "61924ff7-79d7-450c-8e9e-53e12cff324d", "0cc0b7bc-f9ae-4c5f-97fa-81c66b761559", -23,
                                  null, null, false, "b91e99a3-f33f-46b1-a20a-950c529648e2", 31,
                                  "e7f18fe3-d969-4979-9f89-74c3d39f4d93", UserStatus.getDefault(), true, null, true,
                                  new Date(1551867953104L), "4af2c2c7-5855-42fb-afe4-3801f467f7a0");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("126fabcc-4426-4983-bf67-e35464aec8c7", null, "c947f48c-457d-402d-b942-92fdd29a59f1",
                                  new Date(1551867951501L), 71, null, "80f681f8-9b13-4a8a-a96a-4f56b984179a", false,
                                  "9dfa169b-e8f6-48a6-91dc-77fa5fb2c861", "91180e2c-d5ed-4a34-a861-3ce672e73c34", 119,
                                  null, null, true, "cf4cb38b-95f6-47b6-881b-d8a7d10a3295", 32,
                                  "d339e3d2-cf41-4cfa-9a22-1b205d5151d2", UserStatus.getDefault(), true, null, true,
                                  new Date(1551867944278L), "b3329686-dfa1-4ed6-b436-57abf355260a");
            User user2 = new User("126fabcc-4426-4983-bf67-e35464aec8c7", null, "c947f48c-457d-402d-b942-92fdd29a59f1",
                                  new Date(1551867951501L), 71, null, "80f681f8-9b13-4a8a-a96a-4f56b984179a", false,
                                  "9dfa169b-e8f6-48a6-91dc-77fa5fb2c861", "91180e2c-d5ed-4a34-a861-3ce672e73c34", 119,
                                  null, null, true, "cf4cb38b-95f6-47b6-881b-d8a7d10a3295", 32,
                                  "d339e3d2-cf41-4cfa-9a22-1b205d5151d2", UserStatus.getDefault(), true, null, true,
                                  new Date(1551867944278L), "b3329686-dfa1-4ed6-b436-57abf355260a");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        User user = new User("da85f97a-17a7-489c-8afe-a74e8aa57753", null, "96e68d12-4576-42b7-a14d-69337915c32b",
                             new Date(1551867945966L), 34, null, "2c7e1fc8-ed0d-4c75-957a-865497921919", true,
                             "5edab2d5-3fcc-4d09-ac57-d1d2b38704b3", "8ec24d8a-440f-4de2-a3e9-f2eec04a7e14", 6, null,
                             null, true, "4ccfaa6b-7d95-41fb-aa65-29af0a78f45c", 33,
                             "a4856624-d0f9-431d-a35f-8a40b17b37c7", UserStatus.getDefault(), true, null, false,
                             new Date(1551867950539L), "94591e83-c76a-422e-b1f4-f9b1440f8f16");
        assertTrue(user.isValid());
        User userInvalid = new User("deff6e45-9588-48e7-a069-5ec78f921e30", null,
                                    "d2886783-0eb0-4ea6-9a82-3db8920eb00b", new Date(1551867943900L), 120, null, null,
                                    false, "4a2fcd48-e684-4e85-a98f-60cd6a245f5c",
                                    "404126e9-d66a-471b-9057-0260db3224c1", 65, null, null, true,
                                    "a6d301b2-6083-4a53-b832-72e25b579a19", -78, "3cde635e-95e6-43d1-b800-7c28f548894e",
                                    UserStatus.getDefault(), false, null, true, new Date(1551867946920L),
                                    "0519969d-80e0-4314-bf22-8a16e085d49f");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            User user1 = new User("b6e986b1-bb40-487d-9c19-1a16f842a29a", null, "54336345-1e4c-4fb3-a36a-5d6f03c5604d",
                                  new Date(1551867948384L), 54, null, "042a3f40-5175-40d7-b9df-e15e4af4c423", true,
                                  "2aa2f3f0-6806-4aa6-b4d4-f5cbc05231b6", "55c35c02-d015-47d0-85a8-6d72a9424cef", 37,
                                  null, null, true, "8b8a73f7-9318-4209-b4ad-09f14a4287ab", -90,
                                  "76307639-de3e-4fed-940e-8f2e054dede3", UserStatus.getDefault(), false, null, true,
                                  new Date(1551867945283L), "60ca644b-23fa-4b74-ab32-44fcc9653aec");
            User user2 = new User("b6e986b1-bb40-487d-9c19-1a16f842a29a", null, "54336345-1e4c-4fb3-a36a-5d6f03c5604d",
                                  new Date(1551867948384L), 54, null, "042a3f40-5175-40d7-b9df-e15e4af4c423", true,
                                  "2aa2f3f0-6806-4aa6-b4d4-f5cbc05231b6", "55c35c02-d015-47d0-85a8-6d72a9424cef", 37,
                                  null, null, true, "8b8a73f7-9318-4209-b4ad-09f14a4287ab", -90,
                                  "76307639-de3e-4fed-940e-8f2e054dede3", UserStatus.getDefault(), false, null, true,
                                  new Date(1551867945283L), "60ca644b-23fa-4b74-ab32-44fcc9653aec");
            User user3 = new User("685a58c4-5790-4387-ae62-5164f6a527db", null, "6d885dff-88d4-4bea-846c-008250d0fb40",
                                  new Date(1551867953580L), -112, null, "61bec4b5-97ba-4a53-8a8d-70f6532b1b15", true,
                                  "77b626f3-607d-4282-b11b-7e2669b26a75", "0492571b-192a-40e9-8e69-c89a1372f0ae", -123,
                                  null, null, true, "7e13651e-854c-4937-bd3c-ef637a8c33f2", 22,
                                  "f8280d3c-a9cd-45f8-874a-637e465931cb", UserStatus.getDefault(), false, null, true,
                                  new Date(1551867951827L), "13dec6af-0706-4113-ada9-b7019a095e67");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
