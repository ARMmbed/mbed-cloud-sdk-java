// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
public class TestUser {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            User user1 = new User("ed177761-983a-43f0-834b-c499111313f9", "081b8233-98de-414b-bd8d-e9605dd07dbd",
                                  new Date(1547489772504L), 8, "a54ce77c-b6cc-4f73-ad4c-f22f182d25d6", true,
                                  "867b8960-30d0-4489-8b04-0643244d6fb7", "f63ca2f9-57e5-4c41-9cb0-ba81fad1a43d", 70,
                                  null, null, false, "9a3ee4d9-16c1-47ca-a1f3-2481ef7508e1", -66,
                                  "482d0d29-156f-44a7-acf9-e45e7253f541", UserStatus.getDefault(), true, false,
                                  new Date(1547489767522L), "97b1384b-933c-4cd9-91a0-d76d919d058a");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("2cdbb923-09ed-483a-9be7-6688fc55a306", "945008c7-14c2-4880-b0cd-9c0509d9b448",
                                  new Date(1547489768060L), -21, "998bf47c-5c76-434f-a53a-87368c8c899e", true,
                                  "c527638c-0002-4a45-a942-698fe75c1b98", "5982fcc3-3b9a-49da-8db7-dff47d0bb6c1", -119,
                                  null, null, false, "7967c0e4-eebc-4cf2-9112-bc5d421d83ae", 87,
                                  "916cabb1-3ce5-4694-928c-94f82a4640f9", UserStatus.getDefault(), false, false,
                                  new Date(1547489773510L), "49b6710c-7602-4e4e-931a-90bfe2d262dc");
            User user2 = new User("2cdbb923-09ed-483a-9be7-6688fc55a306", "945008c7-14c2-4880-b0cd-9c0509d9b448",
                                  new Date(1547489768060L), -21, "998bf47c-5c76-434f-a53a-87368c8c899e", true,
                                  "c527638c-0002-4a45-a942-698fe75c1b98", "5982fcc3-3b9a-49da-8db7-dff47d0bb6c1", -119,
                                  null, null, false, "7967c0e4-eebc-4cf2-9112-bc5d421d83ae", 87,
                                  "916cabb1-3ce5-4694-928c-94f82a4640f9", UserStatus.getDefault(), false, false,
                                  new Date(1547489773510L), "49b6710c-7602-4e4e-931a-90bfe2d262dc");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        User user = new User("7ea6f6e1-3048-45d4-9ee1-73399d8832bb", "baee50fc-95c6-4041-aa15-38622cdca35b",
                             new Date(1547489768122L), -30, "f7053195-ce31-4f35-99f9-8fe73657dfef", true,
                             "fc88c4af-d1b5-4282-b52a-6d08706d1e3b", "ab488cbf-4a11-4620-8210-e4a4026b4a97", -12, null,
                             null, false, "8fa303fb-fcc1-4fb6-a1ab-8934c49cfce9", 97,
                             "9a59bde2-f78a-4bd1-81b4-ae45ffd8a0cc", UserStatus.getDefault(), true, true,
                             new Date(1547489769703L), "d697b819-3a14-4d25-9749-190f755aa563");
        assertTrue(user.isValid());
        User userInvalid = new User("6d5de5f9-0415-4b82-99ad-0dbe6240fe4b", "4e49ec79-c814-4f95-8719-6236ce50ff33",
                                    new Date(1547489765627L), 119, null, true, "877bfe7e-7237-450d-8453-feb765b9728b",
                                    "f1dd7555-1af8-43a4-acef-3bef2b5f76ec", -3, null, null, false,
                                    "e053ce5a-58ac-40e5-9d71-811a77525d7a", 48, "55d8e2e6-4854-49e4-90ae-5ab6822e11b5",
                                    UserStatus.getDefault(), true, true, new Date(1547489773440L),
                                    "713e3fde-ccc4-4a7e-a924-fb9c9fde273c");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            User user1 = new User("e6f44a3a-707c-4e6a-a523-7e74842ceafa", "18f16d15-481e-466c-81d3-2d0cbeeb344a",
                                  new Date(1547489772813L), -50, "cb963270-ca6d-4e73-854c-8f721ca36b0f", true,
                                  "fca5b29f-da05-4aac-aad9-c70268f6d2c3", "60cee39c-2e6c-4165-813a-5ce10ca8debf", -99,
                                  null, null, false, "4e07ac96-d823-4360-ad94-433b7a0256a8", 76,
                                  "f3d60112-7cc5-4a4a-a6df-b0debeb797ee", UserStatus.getDefault(), true, true,
                                  new Date(1547489769757L), "3b52ace5-8135-4863-9e64-783aea3f6d73");
            User user2 = new User("e6f44a3a-707c-4e6a-a523-7e74842ceafa", "18f16d15-481e-466c-81d3-2d0cbeeb344a",
                                  new Date(1547489772813L), -50, "cb963270-ca6d-4e73-854c-8f721ca36b0f", true,
                                  "fca5b29f-da05-4aac-aad9-c70268f6d2c3", "60cee39c-2e6c-4165-813a-5ce10ca8debf", -99,
                                  null, null, false, "4e07ac96-d823-4360-ad94-433b7a0256a8", 76,
                                  "f3d60112-7cc5-4a4a-a6df-b0debeb797ee", UserStatus.getDefault(), true, true,
                                  new Date(1547489769757L), "3b52ace5-8135-4863-9e64-783aea3f6d73");
            User user3 = new User("79be7805-c5af-41ba-b1ed-e3a25a194f40", "69cb0215-18f8-4d5c-84e9-ff1c00341860",
                                  new Date(1547489766450L), -36, "3f8a08a9-a498-4d4a-ba29-60e7d990830e", true,
                                  "765cc039-feb2-4252-8c2e-b67d954085ad", "7a4ab918-cc74-4bc7-a5ef-f1156271b03c", 12,
                                  null, null, false, "dd45bcee-1c4e-4c16-9f21-71c37297d8fe", -65,
                                  "116df58e-c050-401a-9ddd-997088490b63", UserStatus.getDefault(), true, true,
                                  new Date(1547489766015L), "80ef48e7-673f-4c5a-84e7-71deaed25d06");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
