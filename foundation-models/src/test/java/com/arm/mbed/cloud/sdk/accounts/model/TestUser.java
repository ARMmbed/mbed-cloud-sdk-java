// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("71fdba82137d3d88b328e27f0b30ef6d", null, "54722d23-f5f9-4377-ba55-43e4e8473099",
                                  new Date(1559754643253L), -37, null, "64517.6b786@869a0.fr", false,
                                  "1265c532-14ed-4f71-82da-e1bc742458f2", "71fdba82137d3d88b328e27f0b30ef6d", true,
                                  false, true, 121, null, null, "f5694ef4-2b90-4235-9587-461b00b37df7", -49,
                                  "54646f4d-d993-43ad-90cd-dc58d0f96504", UserStatus.getDefault(), null,
                                  new Date(1559754636414L), "V-Y,T");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("71fdba82137d3d88b328e27f0b30ef6d", null, "bc6ecf94-5c47-46ce-9e5e-3a30c4d2ac81",
                                  new Date(1559754639190L), 1, null, "bef75.5292a@4c805.me", true,
                                  "0c5d1fb7-070d-4b81-a207-f72818e792cf", "71fdba82137d3d88b328e27f0b30ef6d", true,
                                  true, false, -9, null, null, "9b4944e5-528e-4117-afee-8ac98086808b", -35,
                                  "a8b1821b-172b-4ede-a40a-6d818e0d9471", UserStatus.getDefault(), null,
                                  new Date(1559754637126L), "V-Y,T");
            User user2 = new User("71fdba82137d3d88b328e27f0b30ef6d", null, "bc6ecf94-5c47-46ce-9e5e-3a30c4d2ac81",
                                  new Date(1559754639190L), 1, null, "bef75.5292a@4c805.me", true,
                                  "0c5d1fb7-070d-4b81-a207-f72818e792cf", "71fdba82137d3d88b328e27f0b30ef6d", true,
                                  true, false, -9, null, null, "9b4944e5-528e-4117-afee-8ac98086808b", -35,
                                  "a8b1821b-172b-4ede-a40a-6d818e0d9471", UserStatus.getDefault(), null,
                                  new Date(1559754637126L), "V-Y,T");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("71fdba82137d3d88b328e27f0b30ef6d", null, "9bc664b3-faab-4f6d-a342-7c0cf5b599a3",
                             new Date(1559754642627L), 78, null, "b754a.fc178@79eaa.me", false,
                             "3d19d380-ded6-4d92-8b50-92119ff9ff6d", "71fdba82137d3d88b328e27f0b30ef6d", true, true,
                             true, -21, null, null, "c33347c5-4d0b-4e3f-9755-0f9fa20b3ff9", 47,
                             "90973bb7-ad92-45ae-b57f-2e03e4788434", UserStatus.getDefault(), null,
                             new Date(1559754640737L), "V-Y,T");
        assertTrue(user.isValid());
        User userInvalid = new User(";\u000b\u0007å±¨&\u0007H_c5Y\u0005íˆµ44ã—‘\u00165cc)4câˆ³ë…”cc4\u000fë‰¢4ížš54æ£ž4cë€‡c\bcà¦Œ5í?¾?F\táŒ·Tcï‚›céŽ»ëŒ®\u0013$$c:c\u0017F-îŒ¯\u0018",
                                    null, "f4f0ca0b-c8da-485e-93c9-531bce116949", new Date(1559754643911L), -107, null,
                                    null, false,
                                    "d14f8610-9de1-47e3-906a-2ec3e0064fe40be857eb-1ed1-4d08-9106-ac36cd0fbc04df6db28a-9975-4fe4-84f5-919267a4c8c8",
                                    ";\u000b\u0007å±¨&\u0007H_c5Y\u0005íˆµ44ã—‘\u00165cc)4câˆ³ë…”cc4\u000fë‰¢4ížš54æ£ž4cë€‡c\bcà¦Œ5í?¾?F\táŒ·Tcï‚›céŽ»ëŒ®\u0013$$c:c\u0017F-îŒ¯\u0018",
                                    false, false, true, 98, null, null, "cfc07489-d725-445b-9158-c87062d3cbc1", -102,
                                    "eeb0f1dc-af17-40c4-a18d-d7a3a5eb94dec81108d4-4fe3-468c-b9bb-35e60190570aade5ec0e-2498-4c0a-908b-1442418173cb",
                                    UserStatus.getDefault(), null, new Date(1559754641156L),
                                    "W!í?ˆ=\u0012í?»ä–ª\u000b?*Wà»?UXå¥šXî™”R\u001dUWUWU4X\u0016ì¹€\u001dWUî—‡Uæš‘UI\u0015\u0015å›?UUX\u001f2UXUXC)JXUXæƒ½UUæ«¿WWUUU)");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("71fdba82137d3d88b328e27f0b30ef6d", null, "5e3ccfef-3a5b-4ed7-8a64-ca6e701dd6b5",
                                  new Date(1559754637081L), 34, null, "c482a.54ed6@fb2f7.me", true,
                                  "87924e04-3995-4120-892d-e3f122870b13", "71fdba82137d3d88b328e27f0b30ef6d", false,
                                  false, false, -89, null, null, "2a47d404-081a-40aa-898d-43d6499fae30", 32,
                                  "8a2bd2c9-2233-4748-9804-c7c2202e15c9", UserStatus.getDefault(), null,
                                  new Date(1559754635172L), "V-Y,T");
            User user2 = new User("71fdba82137d3d88b328e27f0b30ef6d", null, "5e3ccfef-3a5b-4ed7-8a64-ca6e701dd6b5",
                                  new Date(1559754637081L), 34, null, "c482a.54ed6@fb2f7.me", true,
                                  "87924e04-3995-4120-892d-e3f122870b13", "71fdba82137d3d88b328e27f0b30ef6d", false,
                                  false, false, -89, null, null, "2a47d404-081a-40aa-898d-43d6499fae30", 32,
                                  "8a2bd2c9-2233-4748-9804-c7c2202e15c9", UserStatus.getDefault(), null,
                                  new Date(1559754635172L), "V-Y,T");
            User user3 = new User("71fdba82137d3d88b328e27f0b30ef6d", null, "4651895d-4e51-4e70-8c67-dcf6ee7183bd",
                                  new Date(1559754644502L), -12, null, "69bd1.a3381@5a7f4.fr", true,
                                  "2e2ab3e9-e094-4b9b-9add-644664c7202f", "71fdba82137d3d88b328e27f0b30ef6d", false,
                                  false, false, -103, null, null, "ebb46f92-3700-4110-8e9a-a5c9c7a620f9", 63,
                                  "9487c6aa-afa4-4cdd-8cf3-72477d68faaf", UserStatus.getDefault(), null,
                                  new Date(1559754637202L), "V-Y,T");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
