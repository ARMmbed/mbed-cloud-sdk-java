// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("f33f4df6191a3d432ba4b4ea8fd5906b", null, "a20ca804-8055-479e-a4f1-18296c0ec5e3",
                                  new Date(1559662779689L), -22, null, "840e4.30cf0@fc652.fr", false,
                                  "6f674e63-361d-4a3e-a794-94df71995a4c", "f33f4df6191a3d432ba4b4ea8fd5906b", true,
                                  false, false, 120, null, null, "b1987498-cfb8-489b-b115-b7bd26f019bb", 125,
                                  "b079bfb0-6b27-4100-9ef9-a1ba3d07dfcf", UserStatus.getDefault(), null,
                                  new Date(1559662779103L), "J9+6f");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("f33f4df6191a3d432ba4b4ea8fd5906b", null, "a17825eb-4431-4069-9582-eda574412e89",
                                  new Date(1559662778514L), -91, null, "6e79c.4b1fb@b757e.me", false,
                                  "1bc6a791-e4cb-4027-acc0-1a15ccd2c26d", "f33f4df6191a3d432ba4b4ea8fd5906b", true,
                                  true, true, -104, null, null, "0e22b051-80cf-445e-bbe5-57141bb6a6d3", -43,
                                  "91360c0e-522c-484f-9e73-a828aabccdac", UserStatus.getDefault(), null,
                                  new Date(1559662781315L), "J9+6f");
            User user2 = new User("f33f4df6191a3d432ba4b4ea8fd5906b", null, "a17825eb-4431-4069-9582-eda574412e89",
                                  new Date(1559662778514L), -91, null, "6e79c.4b1fb@b757e.me", false,
                                  "1bc6a791-e4cb-4027-acc0-1a15ccd2c26d", "f33f4df6191a3d432ba4b4ea8fd5906b", true,
                                  true, true, -104, null, null, "0e22b051-80cf-445e-bbe5-57141bb6a6d3", -43,
                                  "91360c0e-522c-484f-9e73-a828aabccdac", UserStatus.getDefault(), null,
                                  new Date(1559662781315L), "J9+6f");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("f33f4df6191a3d432ba4b4ea8fd5906b", null, "cb82a4dd-6a31-406e-aaca-8a4f6b7907f0",
                             new Date(1559662782213L), 0, null, "54d73.e9af3@31026.me", true,
                             "b3f12411-9216-4956-ba51-a9fa3e7a8752", "f33f4df6191a3d432ba4b4ea8fd5906b", true, true,
                             true, 87, null, null, "0e15911f-4e20-451f-9976-86bddcdaf360", -6,
                             "ce7d621f-df3f-4b71-94f1-03f8aec71a09", UserStatus.getDefault(), null,
                             new Date(1559662777064L), "J9+6f");
        assertTrue(user.isValid());
        User userInvalid = new User("7ã??cccUî‡±c7ä¨§\u0003îŒ¾æ­œ7c^Tæ·¨c`è–¯ä•§7cD7äž¾c\u0006\u00117ST-7K-cé§ƒ7cë¼¯ãŠ¯\t\t7cÕ¶cã²ŽâŸ¢\u00177 ;í?½cã½Œ%æ¿´B?7",
                                    null, "750e09ef-bc5d-4913-bf54-711223937933", new Date(1559662781693L), 32, null,
                                    null, false,
                                    "1064f3f9-e5fe-4b65-8f55-0c5af97c50468a550ee0-011b-4872-bf88-d393dc5d3ea0ad8832fc-f3b5-4f2f-9a90-c3eec690338a",
                                    "7ã??cccUî‡±c7ä¨§\u0003îŒ¾æ­œ7c^Tæ·¨c`è–¯ä•§7cD7äž¾c\u0006\u00117ST-7K-cé§ƒ7cë¼¯ãŠ¯\t\t7cÕ¶cã²ŽâŸ¢\u00177 ;í?½cã½Œ%æ¿´B?7",
                                    false, true, false, 112, null, null, "8c08141f-1422-4a6a-96ac-e255a8767a4b", -16,
                                    "fcba902b-7122-49a4-bf9a-116618118e6aaadaf16c-6a93-497d-b735-5e7612a819730f2431ae-79dd-45b2-a6f7-18ac84f1175d",
                                    UserStatus.getDefault(), null, new Date(1559662782237L),
                                    "\u001e?Oå§¡ç„•\u0001Hí?–8I\u0006_#ä¬?\u0012;7,7í‹…8FUì‘¤ã¨›83:7NP85\u0007@'X)<>Oæ?±7\u001bâº¿\u0007æŒž\u0016>1]ç“‚^aSè¹?\u0015\u0012d1\u0014é¯½ã€ƒ\u001c");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("f33f4df6191a3d432ba4b4ea8fd5906b", null, "525a5963-622a-4977-8c3e-4492e2f20eb1",
                                  new Date(1559662781611L), 99, null, "fd2b2.14d6c@a0df1.fr", false,
                                  "c064e581-e079-479d-b9ad-a8b3d58aab66", "f33f4df6191a3d432ba4b4ea8fd5906b", true,
                                  false, true, -16, null, null, "f8e2d905-56ce-4e3b-a0b5-a22e6c9893c0", 72,
                                  "b7f92eb8-bf8c-4922-b0c1-34d2ae9dfbf7", UserStatus.getDefault(), null,
                                  new Date(1559662782754L), "J9+6f");
            User user2 = new User("f33f4df6191a3d432ba4b4ea8fd5906b", null, "525a5963-622a-4977-8c3e-4492e2f20eb1",
                                  new Date(1559662781611L), 99, null, "fd2b2.14d6c@a0df1.fr", false,
                                  "c064e581-e079-479d-b9ad-a8b3d58aab66", "f33f4df6191a3d432ba4b4ea8fd5906b", true,
                                  false, true, -16, null, null, "f8e2d905-56ce-4e3b-a0b5-a22e6c9893c0", 72,
                                  "b7f92eb8-bf8c-4922-b0c1-34d2ae9dfbf7", UserStatus.getDefault(), null,
                                  new Date(1559662782754L), "J9+6f");
            User user3 = new User("f33f4df6191a3d432ba4b4ea8fd5906b", null, "1c81aa81-d0a9-49d5-8da0-6e1255eeb015",
                                  new Date(1559662781881L), -24, null, "157af.8c714@82527.me", false,
                                  "6dc6a387-2e23-439f-868f-e69e82080903", "f33f4df6191a3d432ba4b4ea8fd5906b", true,
                                  false, true, 94, null, null, "873d56da-3b15-4c0f-ac22-8ed945504447", -7,
                                  "8a29b717-7270-403b-bae3-a4b9e72bb6a3", UserStatus.getDefault(), null,
                                  new Date(1559662782106L), "J9+6f");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
