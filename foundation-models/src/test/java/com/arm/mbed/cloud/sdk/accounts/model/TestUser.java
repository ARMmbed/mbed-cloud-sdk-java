// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model User.
 */
public class TestUser {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            User user1 = new User("6b8d4446-ca54-44b0-82d2-f94a3b972343", "c89a7889-729b-4a07-a024-d22efb191e72",
                                  new java.util.Date(1547041499955L), -125, "1452b089-b143-4a7e-a32c-865b5f2f72ba",
                                  false, "2ccbdf3a-17f5-495f-abc0-3bbda0ce06dd", "a6ff2cfd-db81-482a-8da4-729666a526fa",
                                  -117, null, null, true, "c6774543-9450-45e1-8481-943d91cae815", -91,
                                  "0c821b55-2ca6-4cde-a522-18b0a29ac8c0",
                                  com.arm.mbed.cloud.sdk.accounts.model.UserStatus.getDefault(), true, false,
                                  new java.util.Date(1547041496931L), "aaeab222-26fc-4587-8a59-3db78589a9b9");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("044d0f93-a81f-4439-9198-d0af1d68ff23", "984e8570-b11a-43b4-865b-85f184144698",
                                  new java.util.Date(1547041492491L), -101, "8dbf010c-925f-4038-b5fc-6e48798bd634",
                                  false, "1e360956-002f-4399-8eb7-f9525d1d9327", "28098990-1542-4100-ab53-b4668918fc6a",
                                  -13, null, null, false, "abe6c1f6-3851-45bb-8549-0298b0873c2b", -125,
                                  "2bf8f5c0-5e74-4993-b6cf-5202f945d754",
                                  com.arm.mbed.cloud.sdk.accounts.model.UserStatus.getDefault(), true, true,
                                  new java.util.Date(1547041496758L), "1da355e9-f26a-4196-8360-3ebeec63056f");
            User user2 = new User("044d0f93-a81f-4439-9198-d0af1d68ff23", "984e8570-b11a-43b4-865b-85f184144698",
                                  new java.util.Date(1547041492491L), -101, "8dbf010c-925f-4038-b5fc-6e48798bd634",
                                  false, "1e360956-002f-4399-8eb7-f9525d1d9327", "28098990-1542-4100-ab53-b4668918fc6a",
                                  -13, null, null, false, "abe6c1f6-3851-45bb-8549-0298b0873c2b", -125,
                                  "2bf8f5c0-5e74-4993-b6cf-5202f945d754",
                                  com.arm.mbed.cloud.sdk.accounts.model.UserStatus.getDefault(), true, true,
                                  new java.util.Date(1547041496758L), "1da355e9-f26a-4196-8360-3ebeec63056f");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        User user = new User("4e51a6b2-e285-488e-8f94-6e63a66c454b", "a54ee433-562f-47fc-9be1-95939d39a729",
                             new java.util.Date(1547041493371L), -62, "5fdb6dc6-ca9f-4c10-9056-893c6c3674a3", false,
                             "90ee2ffe-57a3-4581-affa-63f5599a1a34", "c9f5fddf-31a1-4407-829e-b962cf1464e8", 60, null,
                             null, true, "88feb36d-dcff-44a1-b372-dc070d97f79c", 50,
                             "7e7605f0-6422-48cc-8bf9-e2f16fee3429",
                             com.arm.mbed.cloud.sdk.accounts.model.UserStatus.getDefault(), false, false,
                             new java.util.Date(1547041496912L), "03dab116-246e-4c3a-8dfe-ab7e48181aff");
        assertTrue(user.isValid());
        User userInvalid = new User("71e2446e-01c8-49f6-8358-727e68c1eecb", "0de6060f-aa43-4932-a803-ab459cdb11a1",
                                    new java.util.Date(1547041495471L), -109, null, false,
                                    "8b58bc2b-5358-437e-a293-185bbcd26d3e", null, -86, null, null, false,
                                    "7bbfc7ec-ed7b-40b4-96bb-32bdbf8b5395", -111,
                                    "a0c58644-bb0f-4e52-8c65-beb2a1e4e5fe",
                                    com.arm.mbed.cloud.sdk.accounts.model.UserStatus.getDefault(), true, true,
                                    new java.util.Date(1547041498238L), "7935fc2d-2200-4d18-a51b-579b235815d4");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            User user1 = new User("8b0a3333-2333-41a1-9b3b-1b3cb54c80b7", "1abf7a9d-c329-4781-8f41-2b6a2629c998",
                                  new java.util.Date(1547041496618L), 84, "7794b581-eb6b-4afc-8aeb-a364178c4786", true,
                                  "0ebae246-a51d-4b14-b221-bb940fd99e4a", "8e5bc824-afbc-4f02-a6b6-7e40cfa70ecf", 108,
                                  null, null, true, "df5ca100-26cb-43dc-aa56-89b0e7b59a02", -42,
                                  "fbbb4f9c-92ed-4b4e-85be-c8fd5ac06e49",
                                  com.arm.mbed.cloud.sdk.accounts.model.UserStatus.getDefault(), true, false,
                                  new java.util.Date(1547041493187L), "85e7911c-7fdf-46d1-b9f7-f7dccb500f3a");
            User user2 = new User("8b0a3333-2333-41a1-9b3b-1b3cb54c80b7", "1abf7a9d-c329-4781-8f41-2b6a2629c998",
                                  new java.util.Date(1547041496618L), 84, "7794b581-eb6b-4afc-8aeb-a364178c4786", true,
                                  "0ebae246-a51d-4b14-b221-bb940fd99e4a", "8e5bc824-afbc-4f02-a6b6-7e40cfa70ecf", 108,
                                  null, null, true, "df5ca100-26cb-43dc-aa56-89b0e7b59a02", -42,
                                  "fbbb4f9c-92ed-4b4e-85be-c8fd5ac06e49",
                                  com.arm.mbed.cloud.sdk.accounts.model.UserStatus.getDefault(), true, false,
                                  new java.util.Date(1547041493187L), "85e7911c-7fdf-46d1-b9f7-f7dccb500f3a");
            User user3 = new User("11e343a0-5ea0-4701-8c36-f09db4477a85", "903af793-3ed3-4203-bbaa-5905c31701c2",
                                  new java.util.Date(1547041499991L), -120, "5c7d8403-cf8d-433d-ba0b-ea10155220cd",
                                  false, "570a43fb-cce4-4c84-8ebc-83981ab14491", "447d2eb3-07ee-4b91-8d4c-5f1c4f1d4327",
                                  -16, null, null, false, "32c7addc-7720-4ed3-8ea6-cf8a98fa0981", 39,
                                  "bc83ca76-ae5f-4790-b055-feaf003c6a78",
                                  com.arm.mbed.cloud.sdk.accounts.model.UserStatus.getDefault(), true, false,
                                  new java.util.Date(1547041491300L), "fbae55f4-ce90-4528-8c1b-d63ff5eb22c2");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
