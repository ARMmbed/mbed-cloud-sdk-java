// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("360efa29edf1702da7045dd46bf2c0ee", null, "dcad769a-ff68-49ba-9bbc-a1560f16311d",
                                  new Date(1559758610136L), -33, null, "41b5c.5acb8@5babc.me", false,
                                  "bc22065a-4e7f-4fd6-a532-075b212575eb", "360efa29edf1702da7045dd46bf2c0ee", false,
                                  false, true, 92, null, null, "6aa14659-004c-4ab0-b65e-286c9f764641", 51,
                                  "afb2624d-d9d9-4c2f-9e6f-4060d60cf498", UserStatus.getDefault(), null,
                                  new Date(1559758605622L), "==_5=");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("360efa29edf1702da7045dd46bf2c0ee", null, "dd106c97-a8a7-4164-960b-c458478efd30",
                                  new Date(1559758610798L), -59, null, "aab76.cf558@3b011.fr", true,
                                  "1104b1a2-c420-47be-8355-aa11a356633a", "360efa29edf1702da7045dd46bf2c0ee", false,
                                  false, false, -2, null, null, "139e51f1-a802-4ad4-9070-97fc93cb0536", 55,
                                  "a6c25459-d71c-43ec-a0e7-0bc1002f19d7", UserStatus.getDefault(), null,
                                  new Date(1559758610128L), "==_5=");
            User user2 = new User("360efa29edf1702da7045dd46bf2c0ee", null, "dd106c97-a8a7-4164-960b-c458478efd30",
                                  new Date(1559758610798L), -59, null, "aab76.cf558@3b011.fr", true,
                                  "1104b1a2-c420-47be-8355-aa11a356633a", "360efa29edf1702da7045dd46bf2c0ee", false,
                                  false, false, -2, null, null, "139e51f1-a802-4ad4-9070-97fc93cb0536", 55,
                                  "a6c25459-d71c-43ec-a0e7-0bc1002f19d7", UserStatus.getDefault(), null,
                                  new Date(1559758610128L), "==_5=");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("360efa29edf1702da7045dd46bf2c0ee", null, "83bff3fd-cad7-4c1b-9940-90ae3545ce3a",
                             new Date(1559758607989L), -117, null, "bde47.8af30@e5ffb.me", false,
                             "15912b2f-360d-4d42-ba21-1055d0bbb9c3", "360efa29edf1702da7045dd46bf2c0ee", false, false,
                             true, -107, null, null, "4490abc9-6859-4657-8927-9e1a9fa26d32", -49,
                             "245e6ac8-d822-464f-9f92-5ebdba8ca5d5", UserStatus.getDefault(), null,
                             new Date(1559758603691L), "==_5=");
        assertTrue(user.isValid());
        User userInvalid = new User("TU8ã½…\u0019ZDDâ¬?ê²…8êˆ›è½?*8ç¾‚_\u000e\t\u0013W8Tí‘¼åµ…,\u0001. 8ê?¢8è¡¾\u0001é†€ 8î¢˜\u001bç¶’Sç‚¤ê·ˆ\bëŸ¬\u0011L8\u0010K?î¶¥8ï‚•è‰­ë§¦\u000eG*êµ­8Q8",
                                    null, "24e61680-1b2c-4c53-933e-21883f788e7c", new Date(1559758611150L), 18, null,
                                    null, true,
                                    "cc1b7f60-8ca5-46f5-97de-f2ef3f5f836c3ab63d22-e14a-4434-9b47-8cfa9b3a762254a8b30f-6eb5-427d-9bc1-53d5c34c6ac4",
                                    "TU8ã½…\u0019ZDDâ¬?ê²…8êˆ›è½?*8ç¾‚_\u000e\t\u0013W8Tí‘¼åµ…,\u0001. 8ê?¢8è¡¾\u0001é†€ 8î¢˜\u001bç¶’Sç‚¤ê·ˆ\bëŸ¬\u0011L8\u0010K?î¶¥8ï‚•è‰­ë§¦\u000eG*êµ­8Q8",
                                    true, true, true, 25, null, null, "d26d1dfb-9bd2-4138-9b25-dde0770977b6", -27,
                                    "a50fc5c3-72d9-4894-8c2d-59e04841fd1409a97a12-7735-4487-84e0-8c21f59fa27010a6b8f4-6770-40fc-9bd2-19d543dcaa6d",
                                    UserStatus.getDefault(), null, new Date(1559758608305L),
                                    "Y8/å²?ä•²V3;6\u00128ê¢†î§¼\u0005*\u0015$$#í’´ä¿„9RZ\u001aé·¥\u0004!\u0013î†¬76äŽ­\u000b\u00136;$$Z:<6E,ìŒ˜Qç‘„à¶ˆî·’ê©º\bà¦Ÿä¼ˆ966-E8[\u000eæ˜©è»°\u0019âµ?");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("360efa29edf1702da7045dd46bf2c0ee", null, "63594a63-73bc-4059-8f79-10d9a3464a6a",
                                  new Date(1559758606354L), 111, null, "fd56d.706fe@a73b7.fr", true,
                                  "8bdfb430-7400-4f8e-a590-d8629396450f", "360efa29edf1702da7045dd46bf2c0ee", true,
                                  true, false, -28, null, null, "fdd1ad22-31c6-444b-a3e2-270973bb837d", 93,
                                  "e1e10d36-a443-4fac-8d39-9d83275aa86a", UserStatus.getDefault(), null,
                                  new Date(1559758608384L), "==_5=");
            User user2 = new User("360efa29edf1702da7045dd46bf2c0ee", null, "63594a63-73bc-4059-8f79-10d9a3464a6a",
                                  new Date(1559758606354L), 111, null, "fd56d.706fe@a73b7.fr", true,
                                  "8bdfb430-7400-4f8e-a590-d8629396450f", "360efa29edf1702da7045dd46bf2c0ee", true,
                                  true, false, -28, null, null, "fdd1ad22-31c6-444b-a3e2-270973bb837d", 93,
                                  "e1e10d36-a443-4fac-8d39-9d83275aa86a", UserStatus.getDefault(), null,
                                  new Date(1559758608384L), "==_5=");
            User user3 = new User("360efa29edf1702da7045dd46bf2c0ee", null, "141f6327-3530-4773-b9b5-0a80431d892c",
                                  new Date(1559758605096L), -43, null, "0e8aa.40a03@50feb.me", true,
                                  "e188a262-f0cc-4956-8c94-ed475dd03ca0", "360efa29edf1702da7045dd46bf2c0ee", true,
                                  true, false, -74, null, null, "063d6c54-0cd0-49da-9b66-d88dc67c0383", -124,
                                  "d82be505-8e84-4f80-89cf-294e61c17365", UserStatus.getDefault(), null,
                                  new Date(1559758603618L), "==_5=");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
