// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
public class TestUser {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            User user1 = new User("276c5bfa-b598-434d-ac68-79b0f2d57863", "7823c566-73d2-4b7e-863f-840cbe543e3c",
                                  new Date(1547730053059L), 58, "263abf12-db0d-4b5e-a0c3-78c23b3c1035", true,
                                  "47d0a55f-1d8a-4f3b-975d-3ad77f32dc90", "c2561aab-0abc-49e1-b411-0e6ee6e488c6", 97,
                                  null, null, false, "046fb873-ddf7-44b4-9cf7-a753b2186f34", -74,
                                  "d29bb7ea-2387-466b-9667-99780fe976f5", UserStatus.getDefault(), false, true,
                                  new Date(1547730058536L), "dc9a4f64-ee66-48c1-8001-e90593df6c83");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("d02a16b9-936e-4298-959f-5cfa40dc233e", "65c1283e-6942-4a27-b127-92b123e72fe3",
                                  new Date(1547730058310L), 108, "e59c4964-cbef-406b-a72e-aec11242257b", false,
                                  "c01001d6-0034-4976-ab8e-698f464fca75", "8830edd0-f5f7-45e0-bb5f-75379b9e8e2b", 94,
                                  null, null, false, "9b005945-8d1b-465a-bf8d-7f93ae62685d", -112,
                                  "7a884b22-881b-4a18-8e5d-a960040ed6c6", UserStatus.getDefault(), true, true,
                                  new Date(1547730052930L), "8609394d-bd57-4623-bdb9-425d0b125890");
            User user2 = new User("d02a16b9-936e-4298-959f-5cfa40dc233e", "65c1283e-6942-4a27-b127-92b123e72fe3",
                                  new Date(1547730058310L), 108, "e59c4964-cbef-406b-a72e-aec11242257b", false,
                                  "c01001d6-0034-4976-ab8e-698f464fca75", "8830edd0-f5f7-45e0-bb5f-75379b9e8e2b", 94,
                                  null, null, false, "9b005945-8d1b-465a-bf8d-7f93ae62685d", -112,
                                  "7a884b22-881b-4a18-8e5d-a960040ed6c6", UserStatus.getDefault(), true, true,
                                  new Date(1547730052930L), "8609394d-bd57-4623-bdb9-425d0b125890");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        User user = new User("29dd3de7-a9af-496a-a249-9aca0f90ae95", "ba08e11c-262c-44a9-a7a6-a4b6885f4030",
                             new Date(1547730059619L), -69, "05ff212e-b3c4-4e6a-aaf7-f0c7b58059e3", true,
                             "d3395d02-9cbd-4daa-a3d8-a4b667ca64aa", "92c448ce-0c60-4d74-a566-29f55188e6b2", -114, null,
                             null, true, "b756b383-9d9c-4c6b-8975-5bf69f0c9bd3", 112,
                             "7bf3235e-edda-4b0a-bcbf-f0017d72823e", UserStatus.getDefault(), false, true,
                             new Date(1547730058689L), "2c757133-b40e-4813-a245-5e00c5439dc9");
        assertTrue(user.isValid());
        User userInvalid = new User("38943e38-910a-44d4-bc99-37e627f8910d", "7228548f-cc40-4c5e-aad2-ed2e3e0d638c",
                                    new Date(1547730054985L), 57, null, false, "0e3aeeec-39de-4cbf-ad96-c4657568935e",
                                    "9af55833-237a-4cbe-9675-d2cc5f995ef9", 35, null, null, false,
                                    "a440972e-533b-4798-bef2-5de6132a3460", 121, "eb7d4ead-cc41-4775-8536-55e2ce485297",
                                    UserStatus.getDefault(), true, true, new Date(1547730056077L),
                                    "f7d703ce-341e-43e0-ac74-684fb899ceca");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            User user1 = new User("afc0f62d-ad60-42aa-bc98-52379c45bba8", "c7677268-37d0-41ec-a09d-b42f8a26c6e8",
                                  new Date(1547730059747L), -126, "06317881-87f2-4a96-a224-43aca974c178", true,
                                  "2a6aa645-3fc9-46a8-8b4b-24796a2bb1a2", "358e146e-641b-4e6f-814f-c1629df2b6b6", -111,
                                  null, null, false, "6062cf0f-de39-4175-9628-b7eaf9dc4e2e", 116,
                                  "0b6602c1-715a-4134-a47f-3a7cfd4ec425", UserStatus.getDefault(), false, true,
                                  new Date(1547730057069L), "68915a86-cc6c-40a5-a55c-ce47fec3c30e");
            User user2 = new User("afc0f62d-ad60-42aa-bc98-52379c45bba8", "c7677268-37d0-41ec-a09d-b42f8a26c6e8",
                                  new Date(1547730059747L), -126, "06317881-87f2-4a96-a224-43aca974c178", true,
                                  "2a6aa645-3fc9-46a8-8b4b-24796a2bb1a2", "358e146e-641b-4e6f-814f-c1629df2b6b6", -111,
                                  null, null, false, "6062cf0f-de39-4175-9628-b7eaf9dc4e2e", 116,
                                  "0b6602c1-715a-4134-a47f-3a7cfd4ec425", UserStatus.getDefault(), false, true,
                                  new Date(1547730057069L), "68915a86-cc6c-40a5-a55c-ce47fec3c30e");
            User user3 = new User("8b32bbf6-a272-452f-9dd2-0be03d2a4c77", "375cdc89-6e28-4929-be7f-b5207599c397",
                                  new Date(1547730058275L), -10, "d962912a-e6ab-47ca-8218-506bd4aefa4e", true,
                                  "8de8093c-552e-45d8-bcfa-e1bce5490a83", "bcb3695c-a98e-43e1-a848-72253e20b703", 117,
                                  null, null, false, "e1aaa307-b412-4f87-baa3-b60e8ddfdb84", -65,
                                  "882c08ef-e1a4-4a96-b999-17d0254883b0", UserStatus.getDefault(), false, true,
                                  new Date(1547730057142L), "03a41df4-17e7-4fa7-82aa-2194c23058e7");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
