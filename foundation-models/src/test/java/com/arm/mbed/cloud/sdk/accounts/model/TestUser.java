// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("acc8cb178a5cea59a0ac26cbc2e1911d", null, "1bb1cf1e-94ff-4857-ae1b-b6301ba94275",
                                  new Date(1559746955070L), 100, null, "afd73.7958e@c846b.fr", false,
                                  "0baf1072-65cf-4f04-a6d5-75561f691108", "acc8cb178a5cea59a0ac26cbc2e1911d", false,
                                  false, true, -111, null, null, "95f67579-c2e1-4e96-9c9a-b062d0dcea44", 86,
                                  "c9847095-8c9b-4037-bbe3-73fe731b68b9", UserStatus.getDefault(), null,
                                  new Date(1559746951275L), ",bU=5");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("acc8cb178a5cea59a0ac26cbc2e1911d", null, "b6376651-11d2-4aef-8258-fe6047dc1e76",
                                  new Date(1559746948976L), 6, null, "547b1.fc52d@ed2e9.fr", false,
                                  "eddbf295-567e-497b-86a1-7cf015d8fabc", "acc8cb178a5cea59a0ac26cbc2e1911d", false,
                                  false, false, 87, null, null, "e3402c66-276d-48f0-b5f3-a03079216b21", -109,
                                  "740d0477-d7e3-4c3f-afc4-a25842068612", UserStatus.getDefault(), null,
                                  new Date(1559746948107L), ",bU=5");
            User user2 = new User("acc8cb178a5cea59a0ac26cbc2e1911d", null, "b6376651-11d2-4aef-8258-fe6047dc1e76",
                                  new Date(1559746948976L), 6, null, "547b1.fc52d@ed2e9.fr", false,
                                  "eddbf295-567e-497b-86a1-7cf015d8fabc", "acc8cb178a5cea59a0ac26cbc2e1911d", false,
                                  false, false, 87, null, null, "e3402c66-276d-48f0-b5f3-a03079216b21", -109,
                                  "740d0477-d7e3-4c3f-afc4-a25842068612", UserStatus.getDefault(), null,
                                  new Date(1559746948107L), ",bU=5");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("acc8cb178a5cea59a0ac26cbc2e1911d", null, "8e2a90ba-8a16-4ea3-a77c-ecafbe484604",
                             new Date(1559746952294L), 82, null, "3573b.b823a@375cf.me", true,
                             "58e12189-f21d-49cf-ad93-21b01de20908", "acc8cb178a5cea59a0ac26cbc2e1911d", true, false,
                             false, -125, null, null, "926310ab-4cf6-41eb-b27c-ff484ada5927", 101,
                             "92ba0ea4-67f3-4075-b394-a012484cf1da", UserStatus.getDefault(), null,
                             new Date(1559746951168L), ",bU=5");
        assertTrue(user.isValid());
        User userInvalid = new User("î®·4 4ä£›4\f4O434è†—Aè†¶3æ?µâ ¿3VB+3\u0011íœˆ/æ—º)4ï¾¾)4K?î‡‚\u0014*Ná½¯>ã™¥Mæ«‰à¤»U4>P3\\\\é²„íž°44'33æ¢°\u0017í•­T]E",
                                    null, "944cbed9-eee9-42d7-bd2a-8ef09dd1bb2e", new Date(1559746947280L), -79, null,
                                    null, false,
                                    "96b48c1c-66b1-4091-ac3d-256264d5f718c4c5eda3-083c-404f-9d50-1f5ddbb66a10bb4e3120-4959-401c-968b-84b855f8f1ba",
                                    "î®·4 4ä£›4\f4O434è†—Aè†¶3æ?µâ ¿3VB+3\u0011íœˆ/æ—º)4ï¾¾)4K?î‡‚\u0014*Ná½¯>ã™¥Mæ«‰à¤»U4>P3\\\\é²„íž°44'33æ¢°\u0017í•­T]E",
                                    false, true, false, -80, null, null, "cf3ad7b5-7305-4685-b6cc-998783f4a92f", 70,
                                    "28c054a7-aa12-46f8-8ac3-d1be923da7d859be0924-e571-47b2-9185-4efd8fe45c3f93a8a673-6119-4c3d-913c-714643d6ae3f",
                                    UserStatus.getDefault(), null, new Date(1559746955472L),
                                    "3.!;39\t7\u001c)a!\u001bí–·G7K307\u001cPC\u0010<0\u000090;î…©7\få“?\u00108î¬»_BD\f?3ï’«/ç¡‡\u0006\u001a7\u0012ç»•]9;O_\u000eæ¨Ÿ\u001c\u001e2Iì½™");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("acc8cb178a5cea59a0ac26cbc2e1911d", null, "5e7f6595-ff87-4111-b8a8-22bd2161fe79",
                                  new Date(1559746954876L), 86, null, "63557.4817f@fb7ae.fr", false,
                                  "85a7924f-28ed-49e8-8e72-6bb3d5f03530", "acc8cb178a5cea59a0ac26cbc2e1911d", true,
                                  false, true, 70, null, null, "ac881820-7226-4408-9424-375814674372", 1,
                                  "e3031e33-04f3-46f1-9163-960806af9629", UserStatus.getDefault(), null,
                                  new Date(1559746950474L), ",bU=5");
            User user2 = new User("acc8cb178a5cea59a0ac26cbc2e1911d", null, "5e7f6595-ff87-4111-b8a8-22bd2161fe79",
                                  new Date(1559746954876L), 86, null, "63557.4817f@fb7ae.fr", false,
                                  "85a7924f-28ed-49e8-8e72-6bb3d5f03530", "acc8cb178a5cea59a0ac26cbc2e1911d", true,
                                  false, true, 70, null, null, "ac881820-7226-4408-9424-375814674372", 1,
                                  "e3031e33-04f3-46f1-9163-960806af9629", UserStatus.getDefault(), null,
                                  new Date(1559746950474L), ",bU=5");
            User user3 = new User("acc8cb178a5cea59a0ac26cbc2e1911d", null, "d6416536-ddb1-4df9-bf39-c50719a5155d",
                                  new Date(1559746945965L), 118, null, "95541.0eec6@15e6c.fr", false,
                                  "12395d72-2e7d-4814-90eb-37020ff8aa7c", "acc8cb178a5cea59a0ac26cbc2e1911d", true,
                                  false, true, -117, null, null, "badb043f-8e2d-4c3e-bd92-bf3c2e1bd3d4", -88,
                                  "65a756b4-c050-407a-b3d7-84a0261a2bd4", UserStatus.getDefault(), null,
                                  new Date(1559746950100L), ",bU=5");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
