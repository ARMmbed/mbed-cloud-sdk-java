// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("c26ebd108cbc6d2e0e403ca038b7faa6", null, "3b2827de-f576-4bb3-a2c8-16665cf7c0b0",
                                  new Date(1559313343939L), 111, null, "2954e.e18d1@c0ba5.me", true,
                                  "3450b2aa-26ae-423b-b470-59c690b6f255", "c26ebd108cbc6d2e0e403ca038b7faa6", false,
                                  true, true, 49, null, null, "6656a54e-d226-43fb-baa4-3ce6c9bfe1c3", 1,
                                  "75e95599-1026-424c-af58-8f05e12cf504", UserStatus.getDefault(), null,
                                  new Date(1559313342418L), "z=_,gJK-");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("c26ebd108cbc6d2e0e403ca038b7faa6", null, "2fc2472d-3c73-499b-ab2c-3dff2e2228f3",
                                  new Date(1559313342549L), 59, null, "df593.3ef30@4e1b0.me", false,
                                  "446421cd-8ad7-4728-ab58-f5bfe7a661fb", "c26ebd108cbc6d2e0e403ca038b7faa6", false,
                                  false, false, 5, null, null, "79efc9b2-6d43-46e0-8367-9dffc2ecd19c", 112,
                                  "e12aa453-36bd-441d-9852-bab5b66f8905", UserStatus.getDefault(), null,
                                  new Date(1559313340248L), "z=_,gJK-");
            User user2 = new User("c26ebd108cbc6d2e0e403ca038b7faa6", null, "2fc2472d-3c73-499b-ab2c-3dff2e2228f3",
                                  new Date(1559313342549L), 59, null, "df593.3ef30@4e1b0.me", false,
                                  "446421cd-8ad7-4728-ab58-f5bfe7a661fb", "c26ebd108cbc6d2e0e403ca038b7faa6", false,
                                  false, false, 5, null, null, "79efc9b2-6d43-46e0-8367-9dffc2ecd19c", 112,
                                  "e12aa453-36bd-441d-9852-bab5b66f8905", UserStatus.getDefault(), null,
                                  new Date(1559313340248L), "z=_,gJK-");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("c26ebd108cbc6d2e0e403ca038b7faa6", null, "0a5d7699-54c1-402f-a564-83c2d289f5be",
                             new Date(1559313343273L), 115, null, "3f3e4.c6eaf@c4ec6.me", false,
                             "edd7217b-6cbc-4401-ad4e-f9e4f1994728", "c26ebd108cbc6d2e0e403ca038b7faa6", false, false,
                             false, -121, null, null, "9a725b7b-4eae-4e71-8d12-f0f3b6b55e48", 0,
                             "622a81f4-2c85-4c71-bfde-e7ead07a4e64", UserStatus.getDefault(), null,
                             new Date(1559313345433L), "z=_,gJK-");
        assertTrue(user.isValid());
        User userInvalid = new User("5â¬³U\u0013\u0005PJä›¹â©ŽGWWë˜‚)ì“µ55?\u0012'ì¶Œ55\u0018ÏŸPä™˜ç¤¹)5\u0000Z?\bã·?\u0007>5ë¾¹á˜„\u001b\u001c555G5î—Š,ä“¯ç¶´Xï€œ\f5H×¤ê‰±]\u000eAè“œ",
                                    null, "4f6c0330-4a6b-45fb-8e9e-17fef74dbfb2", new Date(1559313348733L), 22, null,
                                    null, false,
                                    "6fd87949-9248-4767-8458-f2e1c79862e42ebc9c73-2f3c-4549-a66e-0ec9c2765ef0314f1122-4e8b-4377-84fa-be4bbd3b3873",
                                    "5â¬³U\u0013\u0005PJä›¹â©ŽGWWë˜‚)ì“µ55?\u0012'ì¶Œ55\u0018ÏŸPä™˜ç¤¹)5\u0000Z?\bã·?\u0007>5ë¾¹á˜„\u001b\u001c555G5î—Š,ä“¯ç¶´Xï€œ\f5H×¤ê‰±]\u000eAè“œ",
                                    true, true, false, 90, null, null, "7572cf58-e543-47cb-abe3-a6c75cc5ffed", 114,
                                    "8fae295f-b48f-4443-b3d6-a76b1b124b5a82aaee07-2ecb-4afd-a0ba-5e3cf3891a97deee6d53-d560-43d8-8a96-b20af7568a81",
                                    UserStatus.getDefault(), null, new Date(1559313343480L),
                                    "ì¾–ëµ‘W]0kæ„?tkCN[?Rá—”c5ä«¨2SaDèƒ‘\u001cHC`/9lXxT`uGçµµbLå˜®\u0011f5FLc'\u00128\u000bthe/W/2dU\u001b`c");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("c26ebd108cbc6d2e0e403ca038b7faa6", null, "e017e6e7-44c4-44a4-8d5d-38038e989313",
                                  new Date(1559313343093L), -23, null, "039f5.4fe02@9c4c2.fr", false,
                                  "cc6eca34-5913-437e-a97b-57c6c45cbc7c", "c26ebd108cbc6d2e0e403ca038b7faa6", true,
                                  true, true, 81, null, null, "d884bcc5-c30a-4419-a050-7402f9ecd54d", 15,
                                  "ca1cfa24-c4e7-4b52-862d-0dd4bfe88f36", UserStatus.getDefault(), null,
                                  new Date(1559313344024L), "z=_,gJK-");
            User user2 = new User("c26ebd108cbc6d2e0e403ca038b7faa6", null, "e017e6e7-44c4-44a4-8d5d-38038e989313",
                                  new Date(1559313343093L), -23, null, "039f5.4fe02@9c4c2.fr", false,
                                  "cc6eca34-5913-437e-a97b-57c6c45cbc7c", "c26ebd108cbc6d2e0e403ca038b7faa6", true,
                                  true, true, 81, null, null, "d884bcc5-c30a-4419-a050-7402f9ecd54d", 15,
                                  "ca1cfa24-c4e7-4b52-862d-0dd4bfe88f36", UserStatus.getDefault(), null,
                                  new Date(1559313344024L), "z=_,gJK-");
            User user3 = new User("c26ebd108cbc6d2e0e403ca038b7faa6", null, "af3f451e-f5dc-4ce6-865d-90b4ab11dff5",
                                  new Date(1559313344060L), 46, null, "5b0b1.d5384@c511e.fr", false,
                                  "319430d8-dc3f-4815-8874-5dd0cddd55e3", "c26ebd108cbc6d2e0e403ca038b7faa6", true,
                                  true, true, 107, null, null, "ebd894ca-7df6-4d7d-a51d-3a52126bdf59", 75,
                                  "9804388f-a22f-4e06-8d51-7bbfee97cb73", UserStatus.getDefault(), null,
                                  new Date(1559313348920L), "z=_,gJK-");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
