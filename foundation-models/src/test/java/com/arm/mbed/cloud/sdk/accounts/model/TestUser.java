// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("8f790df8b03da9b1dd914e7ecab2ad3f", null, "d1986548-e73a-442a-a2ca-3ab60cfab009",
                                  new Date(1559752151992L), 108, null, "6bd6f.a9616@0a80e.me", false,
                                  "0393c2d7-6fcb-4604-b615-ab7b2c3f24e5", "8f790df8b03da9b1dd914e7ecab2ad3f", false,
                                  true, false, 119, null, null, "42f10bf8-78a5-452d-964d-0257b421911e", 10,
                                  "b7372b37-9269-46e0-ae0e-13aeda9ee8f9", UserStatus.getDefault(), null,
                                  new Date(1559752149808L), "Dy7XZv_");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("8f790df8b03da9b1dd914e7ecab2ad3f", null, "788725e3-4c14-4fe1-97b9-eb3c8c40b60f",
                                  new Date(1559752153068L), -81, null, "06ec6.aa513@72e9b.me", true,
                                  "98efeea4-8b98-4411-988a-c0e20c752404", "8f790df8b03da9b1dd914e7ecab2ad3f", true,
                                  true, true, -11, null, null, "1c941d39-314c-49d2-a3d8-5310bd2cf76c", -42,
                                  "5d9296df-bf0b-4516-9bef-8d2323107536", UserStatus.getDefault(), null,
                                  new Date(1559752153434L), "Dy7XZv_");
            User user2 = new User("8f790df8b03da9b1dd914e7ecab2ad3f", null, "788725e3-4c14-4fe1-97b9-eb3c8c40b60f",
                                  new Date(1559752153068L), -81, null, "06ec6.aa513@72e9b.me", true,
                                  "98efeea4-8b98-4411-988a-c0e20c752404", "8f790df8b03da9b1dd914e7ecab2ad3f", true,
                                  true, true, -11, null, null, "1c941d39-314c-49d2-a3d8-5310bd2cf76c", -42,
                                  "5d9296df-bf0b-4516-9bef-8d2323107536", UserStatus.getDefault(), null,
                                  new Date(1559752153434L), "Dy7XZv_");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("8f790df8b03da9b1dd914e7ecab2ad3f", null, "cc0484e7-6991-40a0-b421-7d5a486e0836",
                             new Date(1559752149494L), 98, null, "83198.646be@f295c.fr", true,
                             "775c5ab8-fc29-4762-93cc-96c329ddf03d", "8f790df8b03da9b1dd914e7ecab2ad3f", true, false,
                             true, -11, null, null, "309f55cf-7e3c-4273-a35e-6fd226fd694d", 5,
                             "57b62b2e-6af5-4354-b6b7-89e46b275426", UserStatus.getDefault(), null,
                             new Date(1559752149938L), "Dy7XZv_");
        assertTrue(user.isValid());
        User userInvalid = new User("/\u000eä‹¯65\u000eä¯¯\u0005<å¸ˆ66'\u0016)á¾‰5çˆ€ç–¸\u0019äš–\u001e6èµ«65\u0014%\b\u0005ä?ª-\u001e5\u0011V\\\\ë?ž5îšŠ55\u0012\u0012]#56Xè¤³WO?5\b\u001båƒ¤\u000e6\u0007Vå†Œç²¸X",
                                    null, "98f19981-f9f7-4b20-99f7-c9a316a2b5ab", new Date(1559752144580L), -11, null,
                                    null, false,
                                    "ff3dd8d1-184c-4037-93f7-4b51f9acaf58e86b1ffe-1077-4965-9a3d-2b0d5c1f133fe56d5e47-2551-47a3-bfbb-4dca80e99f75",
                                    "/\u000eä‹¯65\u000eä¯¯\u0005<å¸ˆ66'\u0016)á¾‰5çˆ€ç–¸\u0019äš–\u001e6èµ«65\u0014%\b\u0005ä?ª-\u001e5\u0011V\\\\ë?ž5îšŠ55\u0012\u0012]#56Xè¤³WO?5\b\u001båƒ¤\u000e6\u0007Vå†Œç²¸X",
                                    false, false, true, 96, null, null, "efda819f-27e4-4167-a617-860c72912083", -128,
                                    "5354fc6f-9622-4361-9e08-77199c41a4fb44ab92a8-99a6-41a2-9d56-475c8da98abc04137795-8942-49aa-9a17-7501242c9c4d",
                                    UserStatus.getDefault(), null, new Date(1559752147776L),
                                    "Y\\\\w[\u0007c^YYY]Né«®^ì¿™^,î …xê¶—\u001bå«¢ç¿Š>9]^\\\\n:\u000e\u001fx\\\\Ux\\\\Yw!Y=Yo'^x8Y\u0010Yê´•\u0017w8=9ê¥½\u0005tV\\\\êšŸ");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("8f790df8b03da9b1dd914e7ecab2ad3f", null, "c786ba03-8f5c-46b2-a88e-fa149501ee71",
                                  new Date(1559752150868L), 110, null, "0bae1.cd678@85002.fr", false,
                                  "c240ae26-96ba-433f-b988-77695981fe12", "8f790df8b03da9b1dd914e7ecab2ad3f", false,
                                  true, false, 125, null, null, "4f294b5f-2753-46a7-9bda-5cd4ae4e6398", 31,
                                  "a465b240-6046-475e-a677-8756c3d0cd9b", UserStatus.getDefault(), null,
                                  new Date(1559752152353L), "Dy7XZv_");
            User user2 = new User("8f790df8b03da9b1dd914e7ecab2ad3f", null, "c786ba03-8f5c-46b2-a88e-fa149501ee71",
                                  new Date(1559752150868L), 110, null, "0bae1.cd678@85002.fr", false,
                                  "c240ae26-96ba-433f-b988-77695981fe12", "8f790df8b03da9b1dd914e7ecab2ad3f", false,
                                  true, false, 125, null, null, "4f294b5f-2753-46a7-9bda-5cd4ae4e6398", 31,
                                  "a465b240-6046-475e-a677-8756c3d0cd9b", UserStatus.getDefault(), null,
                                  new Date(1559752152353L), "Dy7XZv_");
            User user3 = new User("8f790df8b03da9b1dd914e7ecab2ad3f", null, "b68c40b3-47ea-454b-9364-da4363ca7b0a",
                                  new Date(1559752148395L), -72, null, "11dc2.cabae@ce8d6.fr", false,
                                  "d46bf324-810f-45a7-a3a3-6a8004f060ff", "8f790df8b03da9b1dd914e7ecab2ad3f", false,
                                  true, false, 50, null, null, "ed51320c-7183-412f-b318-80d64abe1cbc", -63,
                                  "a8f8833c-14ac-41be-ba1e-21f190cb28f3", UserStatus.getDefault(), null,
                                  new Date(1559752148464L), "Dy7XZv_");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
