// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("e5adc84a514e5b3d136332ece0ac7d95", null, "82a41eb0-21fc-46f7-a390-7bf60db43016",
                                  new Date(1559300107274L), -107, null, "07e68.d4d8e@e5989.fr", false,
                                  "95701bda-c305-4169-aea8-baa08c42b806", "e5adc84a514e5b3d136332ece0ac7d95", false,
                                  false, false, 57, null, null, "144e517d-f8ea-4d50-b244-ba7f3a6d0ec8", 83,
                                  "85f35bfb-2f64-4d42-8848-71d2c60e0904", UserStatus.getDefault(), null,
                                  new Date(1559300103388L), "c4K=.");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("e5adc84a514e5b3d136332ece0ac7d95", null, "543b4a39-e8a7-4f3e-8517-e3a935522b9a",
                                  new Date(1559300097968L), -2, null, "df6d2.cbd1c@1f612.me", false,
                                  "5c3761ed-55d4-4677-b8c1-7c3bf9502182", "e5adc84a514e5b3d136332ece0ac7d95", true,
                                  true, false, -12, null, null, "9a32a24f-aab3-4564-9dfd-4f4ca6e0bbc1", -55,
                                  "07eae588-023c-45b0-bbb1-79951cf819ee", UserStatus.getDefault(), null,
                                  new Date(1559300106423L), "c4K=.");
            User user2 = new User("e5adc84a514e5b3d136332ece0ac7d95", null, "543b4a39-e8a7-4f3e-8517-e3a935522b9a",
                                  new Date(1559300097968L), -2, null, "df6d2.cbd1c@1f612.me", false,
                                  "5c3761ed-55d4-4677-b8c1-7c3bf9502182", "e5adc84a514e5b3d136332ece0ac7d95", true,
                                  true, false, -12, null, null, "9a32a24f-aab3-4564-9dfd-4f4ca6e0bbc1", -55,
                                  "07eae588-023c-45b0-bbb1-79951cf819ee", UserStatus.getDefault(), null,
                                  new Date(1559300106423L), "c4K=.");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("e5adc84a514e5b3d136332ece0ac7d95", null, "ff08e56c-f9a7-4a23-96c8-487060435f78",
                             new Date(1559300103892L), 51, null, "f4218.b99b2@63399.me", true,
                             "e38e2c96-7b55-4272-93a5-e698cac3ded3", "e5adc84a514e5b3d136332ece0ac7d95", true, true,
                             false, 87, null, null, "e233465a-2002-458b-975a-b96ae65adf3e", -69,
                             "6f750eb1-0c9b-4b8b-98e2-53efdc6b4986", UserStatus.getDefault(), null,
                             new Date(1559300100273L), "c4K=.");
        assertTrue(user.isValid());
        User userInvalid = new User("çŠ”\u001e\u0013J\u0001ä»¥ã¢ˆëš”.å±³\u001e:\u0003:QPä¶²#(\u000f[é©§åœ‹Yâ?”\u0018áª¾é°µîŒ¾â†»<èš¯á?¨ç–‹\\\\\u0014OC<+ãŸ¹AT\u0001ï¦?é¡¤ï¤¸à³·??B,í?¸:ä¡¨KèŒ­Xç¢’=Kê?¯",
                                    null, "3f6d03c8-d0b9-4eeb-8fd9-28a470b5c626", new Date(1559300107147L), -110, null,
                                    null, false,
                                    "2f914536-88ab-4194-a9de-400da29a1a27ac168f63-2755-4c80-aba4-0d8b552a3ba42a4775dc-0e94-405e-9b5d-642b13d778eb",
                                    "çŠ”\u001e\u0013J\u0001ä»¥ã¢ˆëš”.å±³\u001e:\u0003:QPä¶²#(\u000f[é©§åœ‹Yâ?”\u0018áª¾é°µîŒ¾â†»<èš¯á?¨ç–‹\\\\\u0014OC<+ãŸ¹AT\u0001ï¦?é¡¤ï¤¸à³·??B,í?¸:ä¡¨KèŒ­Xç¢’=Kê?¯",
                                    false, false, true, 96, null, null, "e50a05b3-67ac-4493-adb9-a3c1c6956639", 100,
                                    "c4430888-8896-46bc-89d0-5fc2c599ade9d1f85001-abb6-4d1f-935a-4eaed2d6568a46a6a23d-97c4-441b-9d3d-b652372f6d24",
                                    UserStatus.getDefault(), null, new Date(1559300103960L),
                                    "1@çº?b2/6ç˜©^â¹­\u000e##é‘‹áŠž[[á……bê¹ƒR01M>V:C0AL!5*0+ã‚©\u0015N1âŠ…\u0019â?¦î›Ÿ\u0010?;%2ZFâ?»3<?á“°R@P39ã…°9:");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("e5adc84a514e5b3d136332ece0ac7d95", null, "e4bb6864-ccd0-453b-b256-b8596330ab30",
                                  new Date(1559300103835L), 15, null, "9b760.4bd03@e129b.fr", false,
                                  "8a007879-7399-4de3-98dc-dbfced33edf4", "e5adc84a514e5b3d136332ece0ac7d95", true,
                                  false, false, -11, null, null, "69ed3b54-5037-4c38-8fb7-6d82d35f4cb3", -46,
                                  "21cd6eaf-7c63-4b46-83c1-6375d51bcce6", UserStatus.getDefault(), null,
                                  new Date(1559300099272L), "c4K=.");
            User user2 = new User("e5adc84a514e5b3d136332ece0ac7d95", null, "e4bb6864-ccd0-453b-b256-b8596330ab30",
                                  new Date(1559300103835L), 15, null, "9b760.4bd03@e129b.fr", false,
                                  "8a007879-7399-4de3-98dc-dbfced33edf4", "e5adc84a514e5b3d136332ece0ac7d95", true,
                                  false, false, -11, null, null, "69ed3b54-5037-4c38-8fb7-6d82d35f4cb3", -46,
                                  "21cd6eaf-7c63-4b46-83c1-6375d51bcce6", UserStatus.getDefault(), null,
                                  new Date(1559300099272L), "c4K=.");
            User user3 = new User("e5adc84a514e5b3d136332ece0ac7d95", null, "f8740060-5986-4470-b3b5-6b3597d77690",
                                  new Date(1559300099393L), -52, null, "2e0af.a5073@5e5b7.me", false,
                                  "73062164-1791-4e93-958d-daae01406521", "e5adc84a514e5b3d136332ece0ac7d95", true,
                                  false, false, -98, null, null, "9b3fea9a-9192-4cda-ae9f-bfb141b81f30", -62,
                                  "a8f3a21e-ab2a-4684-b72a-7d0064377a08", UserStatus.getDefault(), null,
                                  new Date(1559300102788L), "c4K=.");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
