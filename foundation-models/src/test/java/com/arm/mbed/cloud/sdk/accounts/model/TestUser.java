// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
public class TestUser {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            User user1 = new User("e798f518-8b55-4a8c-819d-bbb58282bfad", "371eab97-6839-43cb-8f9c-688763a8ffce",
                                  new Date(1547573364683L), 123, "37d011bd-3078-47b9-8541-798f8f32962e", true,
                                  "dc1e7588-a99d-43fc-bf53-0efc78e8cfeb", "82535948-974e-4536-98d0-062fc3cf2a5e", 71,
                                  null, null, true, "72e10a73-547e-4a54-bb5b-47d11e40e008", 89,
                                  "6f47cfe6-9793-48aa-aa8c-9b5a33403379", UserStatus.getDefault(), true, true,
                                  new Date(1547573365738L), "a8c4276e-f858-436e-8709-ea00049937c5");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("653c3e57-15b3-4d27-83de-303e375697eb", "4ac21d3b-c655-499d-91a9-358dfd52d92b",
                                  new Date(1547573357481L), -106, "eb201aa0-5737-4200-a851-1ebce2bf62a4", false,
                                  "f10c29d3-fbc8-4a28-bbd6-d86a8fcdfb6b", "7d7de5c1-d942-4765-acc3-81196a269361", 59,
                                  null, null, true, "398d673f-d8ef-474f-be09-c5781b441ee7", 13,
                                  "0ba8753e-6447-4b8d-995e-85060441d9e2", UserStatus.getDefault(), false, false,
                                  new Date(1547573365455L), "197cc35e-834e-4f1b-a484-6c0c2bc53539");
            User user2 = new User("653c3e57-15b3-4d27-83de-303e375697eb", "4ac21d3b-c655-499d-91a9-358dfd52d92b",
                                  new Date(1547573357481L), -106, "eb201aa0-5737-4200-a851-1ebce2bf62a4", false,
                                  "f10c29d3-fbc8-4a28-bbd6-d86a8fcdfb6b", "7d7de5c1-d942-4765-acc3-81196a269361", 59,
                                  null, null, true, "398d673f-d8ef-474f-be09-c5781b441ee7", 13,
                                  "0ba8753e-6447-4b8d-995e-85060441d9e2", UserStatus.getDefault(), false, false,
                                  new Date(1547573365455L), "197cc35e-834e-4f1b-a484-6c0c2bc53539");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        User user = new User("5190bce3-7e94-4bc1-a070-0a15a569ebd7", "e6ae9707-e781-498e-9b59-3a1fd534eade",
                             new Date(1547573360052L), -110, "918abaed-1096-4caa-b759-47993de75875", false,
                             "320df3ec-c7ca-4f5c-9423-895c1f2b3843", "f211add1-296e-4b26-891b-8303b2baadb2", 27, null,
                             null, false, "bd6fc3d3-8a14-4e46-889a-3d0fb51c6a97", 109,
                             "2b2166f6-0fcc-477b-bbc4-53963fcd5d27", UserStatus.getDefault(), false, true,
                             new Date(1547573357762L), "fc5c2393-065a-428c-a0e0-285c15088718");
        assertTrue(user.isValid());
        User userInvalid = new User("84c5cc7d-4f3f-49bd-999f-0da5c1bb20bd", "5b93d43c-61a4-4e6e-83f9-94f4e320a4bf",
                                    new Date(1547573360381L), -17, null, false, "67b36cbc-dc1f-42b6-835e-5fa42ab261d2",
                                    "0b90c3f5-531e-4432-8ef2-89a25cc5d26f", 104, null, null, true,
                                    "7b490835-326e-4d54-8ce8-a6c2377f1f92", 88, "79dbde0c-389e-4e42-9f31-cce91d36a140",
                                    UserStatus.getDefault(), true, false, new Date(1547573364138L),
                                    "bf421c4f-1211-4e43-acaf-9e717cb68eab");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            User user1 = new User("dbc9c62e-030b-4a49-9e95-436650a629d3", "c30deb43-177e-4341-be48-6c6b5cc2d720",
                                  new Date(1547573356873L), -39, "380182b2-04bd-47c2-8a2e-61dcde5db4e0", false,
                                  "c5ec44a2-545e-481b-b671-a5c1e0dceb46", "54f4e2ef-ec62-4d45-9daa-35206fa1e96c", -21,
                                  null, null, true, "ed5cc235-fc47-4859-afbc-8e15e3248a35", 107,
                                  "a02687bf-2b93-43a8-81a2-085ae499ce7c", UserStatus.getDefault(), false, false,
                                  new Date(1547573357941L), "0360ec05-75a7-41b3-be7c-7ad0f725d060");
            User user2 = new User("dbc9c62e-030b-4a49-9e95-436650a629d3", "c30deb43-177e-4341-be48-6c6b5cc2d720",
                                  new Date(1547573356873L), -39, "380182b2-04bd-47c2-8a2e-61dcde5db4e0", false,
                                  "c5ec44a2-545e-481b-b671-a5c1e0dceb46", "54f4e2ef-ec62-4d45-9daa-35206fa1e96c", -21,
                                  null, null, true, "ed5cc235-fc47-4859-afbc-8e15e3248a35", 107,
                                  "a02687bf-2b93-43a8-81a2-085ae499ce7c", UserStatus.getDefault(), false, false,
                                  new Date(1547573357941L), "0360ec05-75a7-41b3-be7c-7ad0f725d060");
            User user3 = new User("e4b3dfe2-cb4b-4753-af06-e5bf8b19dcb6", "43aef87b-dc04-4ab0-ac18-259728648824",
                                  new Date(1547573364383L), -112, "bb034e6d-9e8b-4da0-864f-99da4b425670", false,
                                  "c5c04380-6dbc-4e97-8aa8-e5d9f414f8a1", "9096ecec-1858-4538-96d3-5209a5c6ba7f", -14,
                                  null, null, true, "cdb33219-62f9-4052-925d-04da174f5733", -72,
                                  "eeffab44-c07f-4e07-903c-c25b2dd37f8a", UserStatus.getDefault(), false, false,
                                  new Date(1547573356496L), "b46f4a36-7713-43c1-b83d-2ca8b073b9b7");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
