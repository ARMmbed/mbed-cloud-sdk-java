// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
public class TestUser {
    /**
     * Tests the clone method.
     */
    @Test
    public void testClone() {
        try {
            User user1 = new User("9098ebb4-3916-445c-9a5c-2be9ccbccc31", "7e6f5cb4-a78e-4383-bd5b-fc732131cc69",
                                  new Date(1547164367279L), -29, "c683e3ef-e25c-4754-b898-306f0353cb68", true,
                                  "4dddccf1-fd2d-49e3-82f1-8594120aab04", "183ef3fe-1e6c-435b-8ef8-89eaeb71aea2", -11,
                                  null, null, false, "0f536f29-d963-4cd5-90ff-286fb3848a02", -93,
                                  "eb2234b8-87e2-48b4-a544-035bdeab0d71", UserStatus.getDefault(), true, true,
                                  new Date(1547164364434L), "c21696c2-f014-4cfd-beb2-72619a59bab4");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("0c9d793e-b0d1-40d9-a75e-e89411055712", "99d8970d-1d6d-46bc-9ce5-8896fd87226e",
                                  new Date(1547164359851L), -16, "f810d9d6-3b42-4517-980d-def5aa3bb1a8", false,
                                  "0461c1d8-914c-49db-9246-c4e289601865", "fd6d2f7f-d385-4dc0-b2ce-d852defd77f7", -51,
                                  null, null, true, "8c0dff60-921c-444b-8127-4a0589dc5995", -57,
                                  "19c04894-e782-444c-9641-6c512ff83de1", UserStatus.getDefault(), false, false,
                                  new Date(1547164365488L), "b640997c-157f-44a3-9381-545dc43fba1c");
            User user2 = new User("0c9d793e-b0d1-40d9-a75e-e89411055712", "99d8970d-1d6d-46bc-9ce5-8896fd87226e",
                                  new Date(1547164359851L), -16, "f810d9d6-3b42-4517-980d-def5aa3bb1a8", false,
                                  "0461c1d8-914c-49db-9246-c4e289601865", "fd6d2f7f-d385-4dc0-b2ce-d852defd77f7", -51,
                                  null, null, true, "8c0dff60-921c-444b-8127-4a0589dc5995", -57,
                                  "19c04894-e782-444c-9641-6c512ff83de1", UserStatus.getDefault(), false, false,
                                  new Date(1547164365488L), "b640997c-157f-44a3-9381-545dc43fba1c");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @Test
    public void testIsValid() {
        User user = new User("34de4fa3-5cf7-46a1-8b45-75fd8ceca43f", "3ee40522-3e98-4070-8eb5-feb1e620871c",
                             new Date(1547164364732L), -42, "d991f17d-2d73-48d8-9f04-75c10ec96fa2", true,
                             "775eab94-8a3c-4156-ae12-cb29a90b70b1", "0dba19ab-6aa0-4afd-9302-fd221ceb921f", -87, null,
                             null, false, "2ad1ba97-b102-46c1-8234-2073d63abefc", 40,
                             "a4090359-823a-4b32-b752-26ae1234eae7", UserStatus.getDefault(), false, true,
                             new Date(1547164359686L), "0b498ea2-cb2b-418a-9577-a4b52c398cf8");
        assertTrue(user.isValid());
        User userInvalid = new User("49400fec-7c91-4e04-a5aa-93098b74ae65", "d9ce982c-ae15-4fa8-a426-77bfbcbca4f9",
                                    new Date(1547164362387L), 12, null, false, "c4d8602b-c324-4b8f-8668-5ed0aa508d68",
                                    null, -70, null, null, false, "44ddf573-2d5e-4698-ba59-1cc839035e09", -40,
                                    "fef5b4e7-6b39-407d-b2b3-6b05496c2393", UserStatus.getDefault(), true, false,
                                    new Date(1547164361132L), "969a396b-7992-43fb-974f-15bb36f00a84");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        try {
            User user1 = new User("2a4682fa-3e78-4eae-956e-00044532701d", "a76c12d6-29ed-471e-923f-e78f533ebb88",
                                  new Date(1547164365837L), 95, "0ff14116-fc7c-4082-82d7-0446fb4d74f4", false,
                                  "3734ed11-3750-4780-8827-7962931bc489", "b52e0dc2-d6ef-42ef-8352-b4839a95babb", -24,
                                  null, null, true, "3a8dffe6-5717-4cdd-bb2e-4a9970c26f72", 119,
                                  "87b151f0-13ed-4a48-828f-d83b38f72702", UserStatus.getDefault(), true, true,
                                  new Date(1547164368026L), "2305dc8c-2149-4f44-ac4c-44d6b9a558b4");
            User user2 = new User("2a4682fa-3e78-4eae-956e-00044532701d", "a76c12d6-29ed-471e-923f-e78f533ebb88",
                                  new Date(1547164365837L), 95, "0ff14116-fc7c-4082-82d7-0446fb4d74f4", false,
                                  "3734ed11-3750-4780-8827-7962931bc489", "b52e0dc2-d6ef-42ef-8352-b4839a95babb", -24,
                                  null, null, true, "3a8dffe6-5717-4cdd-bb2e-4a9970c26f72", 119,
                                  "87b151f0-13ed-4a48-828f-d83b38f72702", UserStatus.getDefault(), true, true,
                                  new Date(1547164368026L), "2305dc8c-2149-4f44-ac4c-44d6b9a558b4");
            User user3 = new User("5697c411-90bf-4d9d-a3a8-927371381aca", "7c721962-e841-459f-9704-8bb193c49f99",
                                  new Date(1547164367018L), 56, "8d8d4ac4-e02c-4e7b-a91d-168cb020a8ba", false,
                                  "11644097-c363-4537-9868-f14b0093e8a8", "49758652-5292-4c45-8064-78fa6a514a8a", -93,
                                  null, null, true, "e0f04189-1c9f-4d6a-89c6-a472b353b07c", -98,
                                  "f692610b-a3e5-46bd-a61e-100db96c3eb0", UserStatus.getDefault(), true, true,
                                  new Date(1547164362314L), "d1b530dd-fce6-4f08-9f07-2179617a1085");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
