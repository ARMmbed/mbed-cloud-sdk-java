// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("f7f9edc2df1fd9afea87465e2109cb51", null, "9de4d4ac-669d-45be-8e80-a8373c73d97a",
                                  new Date(1559655033688L), -22, null, "3cef7.75ffa@4ce16.fr", true,
                                  "6a8f491d-f467-46b6-b974-f11f03f96a6b", "f7f9edc2df1fd9afea87465e2109cb51", false,
                                  true, false, -3, null, null, "38693ea1-f4be-443b-8f5f-e4869027c48c", -45,
                                  "11f4ab9d-78a3-4700-827e-da72273af556", UserStatus.getDefault(), null,
                                  new Date(1559655031844L), "DG,r=dw");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("f7f9edc2df1fd9afea87465e2109cb51", null, "53b67523-8d4e-459f-bf98-f4a2ab54ca24",
                                  new Date(1559655031162L), 81, null, "1155f.58d18@21b7b.me", true,
                                  "99a02fa4-ef60-4e0e-aa00-9bbbdfd34ecd", "f7f9edc2df1fd9afea87465e2109cb51", true,
                                  true, true, -91, null, null, "2d232fee-5427-4337-82dc-dd4696a18535", -60,
                                  "e72964b8-df84-44c8-8dc2-7ba9f126429c", UserStatus.getDefault(), null,
                                  new Date(1559655029728L), "DG,r=dw");
            User user2 = new User("f7f9edc2df1fd9afea87465e2109cb51", null, "53b67523-8d4e-459f-bf98-f4a2ab54ca24",
                                  new Date(1559655031162L), 81, null, "1155f.58d18@21b7b.me", true,
                                  "99a02fa4-ef60-4e0e-aa00-9bbbdfd34ecd", "f7f9edc2df1fd9afea87465e2109cb51", true,
                                  true, true, -91, null, null, "2d232fee-5427-4337-82dc-dd4696a18535", -60,
                                  "e72964b8-df84-44c8-8dc2-7ba9f126429c", UserStatus.getDefault(), null,
                                  new Date(1559655029728L), "DG,r=dw");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("f7f9edc2df1fd9afea87465e2109cb51", null, "ad434600-992a-48f0-b12f-cbdaa4f4bf11",
                             new Date(1559655032011L), 89, null, "3a91d.a79b9@e5f72.me", true,
                             "f5eb8ca8-b77c-419e-9999-49446a637a9c", "f7f9edc2df1fd9afea87465e2109cb51", true, false,
                             true, -24, null, null, "7826359c-70c4-4be8-ad9b-7dd3f0d8f151", -110,
                             "96563f0b-6540-432b-90ec-2fb1fc545d70", UserStatus.getDefault(), null,
                             new Date(1559655036514L), "DG,r=dw");
        assertTrue(user.isValid());
        User userInvalid = new User("ä»‚+K\u001aé¦¥ëŸ‡\u00103\bá­?L33.3C\u0000\u000e\u001bQ3Uç¨£3ä¯³CS\u0016Mï‹˜\fë¼™Q'3A.ï»¸Y3ã¯²\u0001[3 ì“¶333333J3æ¸—éºƒÊ£)\u00153ì?¼ä…Žà«”3",
                                    null, "3b6b87f6-b6de-47f6-8ef5-b3c655e057ed", new Date(1559655029137L), 44, null,
                                    null, true,
                                    "b264dab6-7154-42f5-b657-30c6b8079dab68f84adf-0ed8-46dc-b75f-b7ea77b9ef820ea73cc9-b084-4e5a-a4db-4dfb2cfa18a4",
                                    "ä»‚+K\u001aé¦¥ëŸ‡\u00103\bá­?L33.3C\u0000\u000e\u001bQ3Uç¨£3ä¯³CS\u0016Mï‹˜\fë¼™Q'3A.ï»¸Y3ã¯²\u0001[3 ì“¶333333J3æ¸—éºƒÊ£)\u00153ì?¼ä…Žà«”3",
                                    true, true, false, 6, null, null, "03d23dac-f949-4704-b8c5-d4bad2800efa", -59,
                                    "64fa0594-9f0e-42a7-b2ad-283d19b2b2377bcc29a9-640f-4bf1-9141-45396e26b897d9f36a12-36fd-45b9-bd33-bc2f419ed327",
                                    UserStatus.getDefault(), null, new Date(1559655031155L),
                                    "äª¼4ã†„enæ’³ZFe+@EC1\u0000bé”€ç?¶E4\u0019+Fkå›¼suá§ªiå½ŽEuEFe4\u0014NEvTvv\u001atC5VuvFç«—Fm;0\u000b>?\u0013t\u0016sM");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("f7f9edc2df1fd9afea87465e2109cb51", null, "f8e7bc84-c548-4052-b0da-17f1527efb22",
                                  new Date(1559655033691L), -94, null, "e2cb0.4e953@7d78b.me", true,
                                  "ea333776-2aa9-471a-806f-4eaa6473a95d", "f7f9edc2df1fd9afea87465e2109cb51", false,
                                  true, false, 87, null, null, "37d57260-d7a6-4c28-b1f4-a072cfbb62f5", -44,
                                  "3bdfbae8-058c-48f4-8f58-44d4a8c7ed48", UserStatus.getDefault(), null,
                                  new Date(1559655032449L), "DG,r=dw");
            User user2 = new User("f7f9edc2df1fd9afea87465e2109cb51", null, "f8e7bc84-c548-4052-b0da-17f1527efb22",
                                  new Date(1559655033691L), -94, null, "e2cb0.4e953@7d78b.me", true,
                                  "ea333776-2aa9-471a-806f-4eaa6473a95d", "f7f9edc2df1fd9afea87465e2109cb51", false,
                                  true, false, 87, null, null, "37d57260-d7a6-4c28-b1f4-a072cfbb62f5", -44,
                                  "3bdfbae8-058c-48f4-8f58-44d4a8c7ed48", UserStatus.getDefault(), null,
                                  new Date(1559655032449L), "DG,r=dw");
            User user3 = new User("f7f9edc2df1fd9afea87465e2109cb51", null, "a9e8abcf-2eab-4161-9846-4275cdefe750",
                                  new Date(1559655032601L), -76, null, "b4830.2a205@8c956.fr", true,
                                  "a17a06ec-de8c-4adf-a108-59e12ed5e05f", "f7f9edc2df1fd9afea87465e2109cb51", false,
                                  true, false, -90, null, null, "648882f7-d4bb-4508-8dfc-77d8825bfa3a", -89,
                                  "fd95a4c0-3df9-47bd-a47c-42ac34c740f8", UserStatus.getDefault(), null,
                                  new Date(1559655035393L), "DG,r=dw");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
