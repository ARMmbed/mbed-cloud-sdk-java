// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("afbdeea60718ef43acbc07ccc8d8b7ff", null, "2f088c08-7734-453a-8c9f-0c73acd1554c",
                                  new Date(1558096039441L), 18, null, "5bc08.59b9b@3e065.me", true,
                                  "a5fbc341-729c-44ca-9949-d6fc2592524e", "afbdeea60718ef43acbc07ccc8d8b7ff", true,
                                  false, false, 120, null, null, "075f8eab-d6ef-45aa-9df5-8ebe7c70bcf6", 56,
                                  "ed1ddb5d-658b-44a1-a9b0-e4ccfafda2a7", UserStatus.getDefault(), null,
                                  new Date(1558096040866L), "==_LU=");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("afbdeea60718ef43acbc07ccc8d8b7ff", null, "2843fb4a-1a48-4359-a32c-dea0dcd3e09b",
                                  new Date(1558096043720L), 29, null, "64d63.8d1a9@dace2.fr", true,
                                  "73f05ca4-3fb8-4532-8169-f96ee3ffcf46", "afbdeea60718ef43acbc07ccc8d8b7ff", true,
                                  false, false, 90, null, null, "2a9c32bd-1a63-49d6-aa80-b54192c3fab8", -103,
                                  "ab77fc26-0a45-46da-93a1-76675a67e863", UserStatus.getDefault(), null,
                                  new Date(1558096042796L), "==_LU=");
            User user2 = new User("afbdeea60718ef43acbc07ccc8d8b7ff", null, "2843fb4a-1a48-4359-a32c-dea0dcd3e09b",
                                  new Date(1558096043720L), 29, null, "64d63.8d1a9@dace2.fr", true,
                                  "73f05ca4-3fb8-4532-8169-f96ee3ffcf46", "afbdeea60718ef43acbc07ccc8d8b7ff", true,
                                  false, false, 90, null, null, "2a9c32bd-1a63-49d6-aa80-b54192c3fab8", -103,
                                  "ab77fc26-0a45-46da-93a1-76675a67e863", UserStatus.getDefault(), null,
                                  new Date(1558096042796L), "==_LU=");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("afbdeea60718ef43acbc07ccc8d8b7ff", null, "0257b19c-4ebe-4ce9-aa5c-02163566d29c",
                             new Date(1558096039049L), 22, null, "65fab.c5f90@b37cc.fr", true,
                             "8c871d27-b559-408a-b99d-dfd37ee13db9", "afbdeea60718ef43acbc07ccc8d8b7ff", false, true,
                             false, 30, null, null, "76c34e2f-e587-4d1c-a664-e7f0f4aaa3e1", -101,
                             "e43a0bf3-fedf-4702-88e1-1036fc16ecbd", UserStatus.getDefault(), null,
                             new Date(1558096040577L), "==_LU=");
        assertTrue(user.isValid());
        User userInvalid = new User("2FXì¯†52\u0007R5ë™£\u0000ï´µ2552Séº“åŠ¼ä—´22/æ±µî«¾5î?º25!ë?©5,2\b22\u000725%î¤ 2`è‹…5\u001a)ê–Ÿ2B2\u0013îŸª52ì¦?5\u001c)\u0013",
                                    null, "0645e7d5-ce97-42b4-a984-2899388a79b4", new Date(1558096043588L), -81, null,
                                    null, true,
                                    "24522fd8-b98a-4759-8001-778a2ee7ead2e0179a21-178d-4120-9d18-3bf0eb71069fe16563d6-a6df-44d3-b75a-c445843a3759",
                                    "2FXì¯†52\u0007R5ë™£\u0000ï´µ2552Séº“åŠ¼ä—´22/æ±µî«¾5î?º25!ë?©5,2\b22\u000725%î¤ 2`è‹…5\u001a)ê–Ÿ2B2\u0013îŸª52ì¦?5\u001c)\u0013",
                                    true, false, true, 93, null, null, "515e4eb3-d93e-4532-9862-268129e831b1", -41,
                                    "b8601af4-e58a-45ec-a4bf-90b4b3be280d3d1fcab6-51a1-4165-9d11-3d945001c89d2016b2a3-7f36-41ba-a030-9b6ff7270d69",
                                    UserStatus.getDefault(), null, new Date(1558096040353L),
                                    "ìš¢æ§ŽO;Yâ™š\u0019\u0015\u0012YZ\u0000â…‚OAF6\\\\Né³‚\u0014(\u000b-J*^æ´†[[]8á¦?ZÂ¸ì ?á …A?T\u0011,JW'Tè¨›\u001d\\\\EJ\u0005>D\u001dçŸ«Oå­?XOâˆ­QX");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("afbdeea60718ef43acbc07ccc8d8b7ff", null, "99df650a-4937-4a26-a433-29f5f1851004",
                                  new Date(1558096042061L), 84, null, "cf0a1.7ba2c@2200d.fr", true,
                                  "9e9af9e5-b7da-4ef0-8078-9a1e725280c3", "afbdeea60718ef43acbc07ccc8d8b7ff", false,
                                  false, false, 117, null, null, "d77fda1e-e568-494a-b25e-9a32ece15b2c", 41,
                                  "d30c4727-c455-40f4-8d94-098c8595889f", UserStatus.getDefault(), null,
                                  new Date(1558096037838L), "==_LU=");
            User user2 = new User("afbdeea60718ef43acbc07ccc8d8b7ff", null, "99df650a-4937-4a26-a433-29f5f1851004",
                                  new Date(1558096042061L), 84, null, "cf0a1.7ba2c@2200d.fr", true,
                                  "9e9af9e5-b7da-4ef0-8078-9a1e725280c3", "afbdeea60718ef43acbc07ccc8d8b7ff", false,
                                  false, false, 117, null, null, "d77fda1e-e568-494a-b25e-9a32ece15b2c", 41,
                                  "d30c4727-c455-40f4-8d94-098c8595889f", UserStatus.getDefault(), null,
                                  new Date(1558096037838L), "==_LU=");
            User user3 = new User("afbdeea60718ef43acbc07ccc8d8b7ff", null, "49b77d8e-3059-4b91-bc27-93dd592b6440",
                                  new Date(1558096044786L), -37, null, "e603f.d422b@254fc.me", true,
                                  "d6a85278-69a7-441e-8928-b4820964e94c", "afbdeea60718ef43acbc07ccc8d8b7ff", false,
                                  false, false, -32, null, null, "5429dadb-5683-4195-a1de-e0ede45a0b07", -115,
                                  "5129e37d-2d0c-4b1b-ac77-0be32f0b08f0", UserStatus.getDefault(), null,
                                  new Date(1558096039527L), "==_LU=");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
