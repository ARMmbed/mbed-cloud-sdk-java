// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated abstract class. Do not modify its contents.
// Code customisation should happen in the child class [PasswordPolicy]
package com.arm.mbed.cloud.sdk.accounts.model;

import com.arm.mbed.cloud.sdk.annotations.Internal;
import com.arm.mbed.cloud.sdk.annotations.Preamble;
import com.arm.mbed.cloud.sdk.common.SdkModel;
import java.lang.CloneNotSupportedException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;

/**
 * Model for a password policy. */
@Preamble(
    description = "Model for a password policy."
)
public abstract class AbstractPasswordPolicy implements SdkModel {
  /**
   * Serialisation Id. */
  private static final long serialVersionUID = -246843577121920L;

  /**
   * Minimum length for the password. A number between 8 and 512. */
  protected String minimumLength;

  /**
   * Internal constructor.
   * <p>
   * Note: Should not be used. Use {@link #AbstractPasswordPolicy()} instead.
   * @param minimumLength Minimum length for the password. A number between 8 and 512.
   */
  @Internal
  public AbstractPasswordPolicy(String minimumLength) {
    super();
    setMinimumLength(minimumLength);
  }

  /**
   * Internal constructor.
   * <p>
   * Note: Should not be used. Use {@link #AbstractPasswordPolicy()} instead.
   * @param abstractPasswordPolicy an abstract password policy.
   */
  @Internal
  public AbstractPasswordPolicy(AbstractPasswordPolicy abstractPasswordPolicy) {
    this(abstractPasswordPolicy == null ? (String) null : abstractPasswordPolicy.minimumLength);
  }

  /**
   * Constructor.
   */
  public AbstractPasswordPolicy() {
    this((String) null);
  }

  /**
   * Gets minimum length for the password. a number between 8 and 512.
   * @return minimumLength
   */
  public String getMinimumLength() {
    return minimumLength;
  }

  /**
   * Sets minimum length for the password. a number between 8 and 512.
   * @param minimumLength Minimum length for the password. A number between 8 and 512.
   */
  public void setMinimumLength(String minimumLength) {
    this.minimumLength = minimumLength;
  }

  /**
   * Calculates the hash code of this instance based on field values.
   * <p>
   * @see java.lang.Object#hashCode()
   * @return hash code
   */
  @Override
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    result = prime * result + ((minimumLength == null) ? 0 : minimumLength.hashCode());
    return result;
  }

  /**
   * Indicates whether some other object is "equal to" this one.
   * <p>
   * @see java.lang.Object#equals(java.lang.Object)
   * @param obj an object to compare with this instance.
   * @return true if this object is the same as the obj argument; false otherwise.
   */
  @Override
  public boolean equals(Object obj) {
    if (this == obj) {
      return true;
    }
    if (obj == null) {
      return false;
    }
    if (!getClass().isAssignableFrom(obj.getClass()))  {
      return false;
    }
    final PasswordPolicy other = (PasswordPolicy) obj;
    if (minimumLength == null) {
      if (other.minimumLength != null) {
        return false;
      }
    } else if (!minimumLength.equals(other.minimumLength)) {
      return false;
    }
    return true;
  }

  /**
   * Returns a string representation of the object.
   * <p>
   * @see java.lang.Object#toString()
   * @return the string representation
   */
  @Override
  public String toString() {
    return "AbstractPasswordPolicy [minimumLength=" + minimumLength + "]";
  }

  /**
   * Checks whether the model is valid or not.
   * <p>
   * @see SdkModel#isValid()
   * @return true if the model is valid; false otherwise.
   */
  @Override
  public boolean isValid() {
    return true;
  }

  /**
   * Clones this instance.
   * <p>
   * @see java.lang.Object#clone()
   * @return a cloned instance
   */
  @Override
  public Object clone() {
    try {
      return super.clone();
    }
    catch(CloneNotSupportedException exception) {
      return null;
    }
  }
}
