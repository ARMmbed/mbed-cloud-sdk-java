// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import com.arm.mbed.cloud.sdk.annotations.Internal;
import com.arm.mbed.cloud.sdk.annotations.PerformsNoOperation;
import com.arm.mbed.cloud.sdk.annotations.Preamble;
import com.arm.mbed.cloud.sdk.common.SdkModel;

/**
 * Model for an identity provider public key.
 */
@Preamble(description = "Model for an identity provider public key.")
public class IdentityProviderPublicKey implements SdkModel {
    /**
     * Serialisation Id.
     */
    private static final long serialVersionUID = -154373697945142L;

    /**
     * The public key.
     */
    private final String key;

    /**
     * The public key ID.
     */
    private final String kid;

    /**
     * Internal constructor.
     * 
     * <p>
     * Constructor based on all fields.
     * <p>
     * Note: Should not be used. Use {@link #IdentityProviderPublicKey()} instead.
     * 
     * @param key
     *            The public key.
     * @param kid
     *            The public key ID.
     */
    @Internal
    public IdentityProviderPublicKey(String key, String kid) {
        super();
        this.key = key;
        this.kid = kid;
    }

    /**
     * Internal constructor.
     * 
     * <p>
     * Constructor based on a similar object.
     * <p>
     * Note: Should not be used. Use {@link #IdentityProviderPublicKey()} instead.
     * 
     * @param identityProviderPublicKey
     *            an identity provider public key.
     */
    @Internal
    public IdentityProviderPublicKey(IdentityProviderPublicKey identityProviderPublicKey) {
        this(identityProviderPublicKey == null ? (String) null : identityProviderPublicKey.key,
             identityProviderPublicKey == null ? (String) null : identityProviderPublicKey.kid);
    }

    /**
     * Constructor.
     */
    public IdentityProviderPublicKey() {
        this((String) null, (String) null);
    }

    /**
     * Sets id.
     * 
     * @param id
     *            id.
     */
    @Override
    @Internal
    @PerformsNoOperation
    public void setId(String id) {
        // Nothing to do
    }

    /**
     * Gets id.
     * 
     * <p>
     * Warning: IdentityProviderPublicKey model does not have any ID field. This always returns {@code null}.
     * 
     * @return id
     */
    @Override
    @Internal
    public String getId() {
        return null;
    }

    /**
     * Gets the public key.
     * 
     * @return key
     */
    public String getKey() {
        return key;
    }

    /**
     * Gets the public key id.
     * 
     * @return kid
     */
    public String getKid() {
        return kid;
    }

    /**
     * Returns a string representation of the object.
     * 
     * <p>
     * 
     * @see java.lang.Object#toString()
     * @return the string representation
     */
    @Override
    public String toString() {
        return "IdentityProviderPublicKey [key=" + key + ", kid=" + kid + "]";
    }

    /**
     * Calculates the hash code of this instance based on field values.
     * 
     * <p>
     * 
     * @see java.lang.Object#hashCode()
     * @return hash code
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((key == null) ? 0 : key.hashCode());
        result = prime * result + ((kid == null) ? 0 : kid.hashCode());
        return result;
    }

    /**
     * Method to ensure {@link #equals(Object)} is correct.
     * 
     * <p>
     * Note: see this article: <a href="https://www.artima.com/lejava/articles/equality.html">canEqual()</a>
     * 
     * @param other
     *            another object.
     * @return true if the other object is an instance of the class in which canEqual is (re)defined, false otherwise.
     */
    protected boolean canEqual(Object other) {
        return other instanceof IdentityProviderPublicKey;
    }

    /**
     * Indicates whether some other object is "equal to" this one.
     * 
     * <p>
     * 
     * @see java.lang.Object#equals(java.lang.Object)
     * @param obj
     *            an object to compare with this instance.
     * @return true if this object is the same as the obj argument; false otherwise.
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (!(obj instanceof IdentityProviderPublicKey)) {
            return false;
        }
        final IdentityProviderPublicKey other = (IdentityProviderPublicKey) obj;
        if (!other.canEqual(this)) {
            return false;
        }
        if (key == null) {
            if (other.key != null) {
                return false;
            }
        } else if (!key.equals(other.key)) {
            return false;
        }
        if (kid == null) {
            if (other.kid != null) {
                return false;
            }
        } else if (!kid.equals(other.kid)) {
            return false;
        }
        return true;
    }

    /**
     * Checks whether the model is valid or not.
     * 
     * <p>
     * 
     * @see SdkModel#isValid()
     * @return true if the model is valid; false otherwise.
     */
    @Override
    public boolean isValid() {
        return true;
    }

    /**
     * Clones this instance.
     * 
     * <p>
     * 
     * @see java.lang.Object#clone()
     * @return a cloned instance
     */
    @Override
    public IdentityProviderPublicKey clone() {
        return new IdentityProviderPublicKey(this);
    }
}
