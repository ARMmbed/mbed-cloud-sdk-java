// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model CertificateEnrollmentDao. */
public class TestCertificateEnrollmentDao {
  /**
   * Tests the clone method.
   */
  @Test
  public void testClone() {
    CertificateEnrollmentDao certificateenrollmentdao1 = new CertificateEnrollmentDao();
    CertificateEnrollmentDao certificateenrollmentdao2 = certificateenrollmentdao1.clone();
    assertNotNull(certificateenrollmentdao1);
    assertNotNull(certificateenrollmentdao2);
    assertNotSame(certificateenrollmentdao2, certificateenrollmentdao1);
    assertEquals(certificateenrollmentdao2, certificateenrollmentdao1);
  }

  /**
   * Tests the hashCode method.
   */
  @Test
  public void testHashcode() {
    CertificateEnrollmentDao certificateenrollmentdao1 = new CertificateEnrollmentDao();
    CertificateEnrollmentDao certificateenrollmentdao2 = new CertificateEnrollmentDao();
    assertNotNull(certificateenrollmentdao1);
    assertNotNull(certificateenrollmentdao2);
    assertNotSame(certificateenrollmentdao2, certificateenrollmentdao1);
    assertEquals(certificateenrollmentdao2, certificateenrollmentdao1);
    assertEquals(certificateenrollmentdao2.hashCode(), certificateenrollmentdao1.hashCode());
    int hashCode = certificateenrollmentdao1.hashCode();
    for (int i = 0; i < 5 ; i++) {
      assertEquals(hashCode, certificateenrollmentdao1.hashCode());
    }
  }

  /**
   * Tests the equals method.
   */
  @Test
  public void testEquals() {
    CertificateEnrollmentDao certificateenrollmentdao1 = new CertificateEnrollmentDao();
    CertificateEnrollmentDao certificateenrollmentdao2 = new CertificateEnrollmentDao();
    CertificateEnrollmentDao certificateenrollmentdao3 = new CertificateEnrollmentDao();
    assertNotNull(certificateenrollmentdao1);
    assertNotNull(certificateenrollmentdao2);
    assertNotNull(certificateenrollmentdao3);
    assertNotSame(certificateenrollmentdao2, certificateenrollmentdao1);
    assertNotSame(certificateenrollmentdao3, certificateenrollmentdao1);
    assertEquals(certificateenrollmentdao2, certificateenrollmentdao1);
    assertEquals(certificateenrollmentdao2, certificateenrollmentdao1);
    assertEquals(certificateenrollmentdao1, certificateenrollmentdao2);
    assertEquals(certificateenrollmentdao1, certificateenrollmentdao1);
    assertFalse(certificateenrollmentdao1.equals(null));
    assertNotEquals(certificateenrollmentdao3, certificateenrollmentdao1);
  }
}
