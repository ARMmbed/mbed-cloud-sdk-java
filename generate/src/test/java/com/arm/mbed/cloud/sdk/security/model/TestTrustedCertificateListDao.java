// This file was generated by the Pelion SDK foundation code generator.
// This unit test suite was autogenerated on Fri Dec 28 16:23:55 GMT 2018. Feel free to change its contents as you wish.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model TrustedCertificateListDao. */
public class TestTrustedCertificateListDao {
  /**
   * Tests the clone method.
   */
  @Test
  public void testClone() {
    TrustedCertificateListDao trustedcertificatelistdao1 = new TrustedCertificateListDao();
    TrustedCertificateListDao trustedcertificatelistdao2 = trustedcertificatelistdao1.clone();
    assertNotNull(trustedcertificatelistdao1);
    assertNotNull(trustedcertificatelistdao2);
    assertNotSame(trustedcertificatelistdao2, trustedcertificatelistdao1);
    assertEquals(trustedcertificatelistdao2, trustedcertificatelistdao1);
  }

  /**
   * Tests the hashCode method.
   */
  @Test
  public void testHashcode() {
    TrustedCertificateListDao trustedcertificatelistdao1 = new TrustedCertificateListDao();
    TrustedCertificateListDao trustedcertificatelistdao2 = new TrustedCertificateListDao();
    assertNotNull(trustedcertificatelistdao1);
    assertNotNull(trustedcertificatelistdao2);
    assertNotSame(trustedcertificatelistdao2, trustedcertificatelistdao1);
    assertEquals(trustedcertificatelistdao2, trustedcertificatelistdao1);
    assertEquals(trustedcertificatelistdao2.hashCode(), trustedcertificatelistdao1.hashCode());
    int hashCode = trustedcertificatelistdao1.hashCode();
    for (int i = 0; i < 5 ; i++) {
      assertEquals(hashCode, trustedcertificatelistdao1.hashCode());
    }
  }

  /**
   * Tests the equals method.
   */
  @Test
  public void testEquals() {
    TrustedCertificateListDao trustedcertificatelistdao1 = new TrustedCertificateListDao();
    TrustedCertificateListDao trustedcertificatelistdao2 = new TrustedCertificateListDao();
    TrustedCertificateListDao trustedcertificatelistdao3 = new TrustedCertificateListDao();
    assertNotNull(trustedcertificatelistdao1);
    assertNotNull(trustedcertificatelistdao2);
    assertNotNull(trustedcertificatelistdao3);
    assertNotSame(trustedcertificatelistdao2, trustedcertificatelistdao1);
    assertNotSame(trustedcertificatelistdao3, trustedcertificatelistdao1);
    assertEquals(trustedcertificatelistdao2, trustedcertificatelistdao1);
    assertEquals(trustedcertificatelistdao2, trustedcertificatelistdao1);
    assertEquals(trustedcertificatelistdao1, trustedcertificatelistdao2);
    assertEquals(trustedcertificatelistdao1, trustedcertificatelistdao1);
    assertFalse(trustedcertificatelistdao1.equals(null));
    assertNotEquals(trustedcertificatelistdao3, trustedcertificatelistdao1);
  }
}
