// This file was generated by the Pelion SDK foundation code generator.
// This unit test suite was autogenerated on Fri Dec 28 16:23:55 GMT 2018. Feel free to change its contents as you wish.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model UserInvitationDao. */
public class TestUserInvitationDao {
  /**
   * Tests the clone method.
   */
  @Test
  public void testClone() {
    UserInvitationDao userinvitationdao1 = new UserInvitationDao();
    UserInvitationDao userinvitationdao2 = userinvitationdao1.clone();
    assertNotNull(userinvitationdao1);
    assertNotNull(userinvitationdao2);
    assertNotSame(userinvitationdao2, userinvitationdao1);
    assertEquals(userinvitationdao2, userinvitationdao1);
  }

  /**
   * Tests the hashCode method.
   */
  @Test
  public void testHashcode() {
    UserInvitationDao userinvitationdao1 = new UserInvitationDao();
    UserInvitationDao userinvitationdao2 = new UserInvitationDao();
    assertNotNull(userinvitationdao1);
    assertNotNull(userinvitationdao2);
    assertNotSame(userinvitationdao2, userinvitationdao1);
    assertEquals(userinvitationdao2, userinvitationdao1);
    assertEquals(userinvitationdao2.hashCode(), userinvitationdao1.hashCode());
    int hashCode = userinvitationdao1.hashCode();
    for (int i = 0; i < 5 ; i++) {
      assertEquals(hashCode, userinvitationdao1.hashCode());
    }
  }

  /**
   * Tests the equals method.
   */
  @Test
  public void testEquals() {
    UserInvitationDao userinvitationdao1 = new UserInvitationDao();
    UserInvitationDao userinvitationdao2 = new UserInvitationDao();
    UserInvitationDao userinvitationdao3 = new UserInvitationDao();
    assertNotNull(userinvitationdao1);
    assertNotNull(userinvitationdao2);
    assertNotNull(userinvitationdao3);
    assertNotSame(userinvitationdao2, userinvitationdao1);
    assertNotSame(userinvitationdao3, userinvitationdao1);
    assertEquals(userinvitationdao2, userinvitationdao1);
    assertEquals(userinvitationdao2, userinvitationdao1);
    assertEquals(userinvitationdao1, userinvitationdao2);
    assertEquals(userinvitationdao1, userinvitationdao1);
    assertFalse(userinvitationdao1.equals(null));
    assertNotEquals(userinvitationdao3, userinvitationdao1);
  }
}
