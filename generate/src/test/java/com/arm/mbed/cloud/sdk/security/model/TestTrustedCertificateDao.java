// This file was generated by the Pelion SDK foundation code generator.
// This unit test suite was autogenerated on Fri Dec 28 16:23:55 GMT 2018. Feel free to change its contents as you wish.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model TrustedCertificateDao. */
public class TestTrustedCertificateDao {
  /**
   * Tests the clone method.
   */
  @Test
  public void testClone() {
    TrustedCertificateDao trustedcertificatedao1 = new TrustedCertificateDao();
    TrustedCertificateDao trustedcertificatedao2 = trustedcertificatedao1.clone();
    assertNotNull(trustedcertificatedao1);
    assertNotNull(trustedcertificatedao2);
    assertNotSame(trustedcertificatedao2, trustedcertificatedao1);
    assertEquals(trustedcertificatedao2, trustedcertificatedao1);
  }

  /**
   * Tests the hashCode method.
   */
  @Test
  public void testHashcode() {
    TrustedCertificateDao trustedcertificatedao1 = new TrustedCertificateDao();
    TrustedCertificateDao trustedcertificatedao2 = new TrustedCertificateDao();
    assertNotNull(trustedcertificatedao1);
    assertNotNull(trustedcertificatedao2);
    assertNotSame(trustedcertificatedao2, trustedcertificatedao1);
    assertEquals(trustedcertificatedao2, trustedcertificatedao1);
    assertEquals(trustedcertificatedao2.hashCode(), trustedcertificatedao1.hashCode());
    int hashCode = trustedcertificatedao1.hashCode();
    for (int i = 0; i < 5 ; i++) {
      assertEquals(hashCode, trustedcertificatedao1.hashCode());
    }
  }

  /**
   * Tests the equals method.
   */
  @Test
  public void testEquals() {
    TrustedCertificateDao trustedcertificatedao1 = new TrustedCertificateDao();
    TrustedCertificateDao trustedcertificatedao2 = new TrustedCertificateDao();
    TrustedCertificateDao trustedcertificatedao3 = new TrustedCertificateDao();
    assertNotNull(trustedcertificatedao1);
    assertNotNull(trustedcertificatedao2);
    assertNotNull(trustedcertificatedao3);
    assertNotSame(trustedcertificatedao2, trustedcertificatedao1);
    assertNotSame(trustedcertificatedao3, trustedcertificatedao1);
    assertEquals(trustedcertificatedao2, trustedcertificatedao1);
    assertEquals(trustedcertificatedao2, trustedcertificatedao1);
    assertEquals(trustedcertificatedao1, trustedcertificatedao2);
    assertEquals(trustedcertificatedao1, trustedcertificatedao1);
    assertFalse(trustedcertificatedao1.equals(null));
    assertNotEquals(trustedcertificatedao3, trustedcertificatedao1);
  }
}
