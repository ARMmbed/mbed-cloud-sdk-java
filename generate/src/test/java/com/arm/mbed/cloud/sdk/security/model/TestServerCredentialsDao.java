// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ServerCredentialsDao. */
public class TestServerCredentialsDao {
  /**
   * Tests the clone method.
   */
  @Test
  public void testClone() {
    ServerCredentialsDao servercredentialsdao1 = new ServerCredentialsDao();
    ServerCredentialsDao servercredentialsdao2 = servercredentialsdao1.clone();
    assertNotNull(servercredentialsdao1);
    assertNotNull(servercredentialsdao2);
    assertNotSame(servercredentialsdao2, servercredentialsdao1);
    assertEquals(servercredentialsdao2, servercredentialsdao1);
  }

  /**
   * Tests the hashCode method.
   */
  @Test
  public void testHashcode() {
    ServerCredentialsDao servercredentialsdao1 = new ServerCredentialsDao();
    ServerCredentialsDao servercredentialsdao2 = new ServerCredentialsDao();
    assertNotNull(servercredentialsdao1);
    assertNotNull(servercredentialsdao2);
    assertNotSame(servercredentialsdao2, servercredentialsdao1);
    assertEquals(servercredentialsdao2, servercredentialsdao1);
    assertEquals(servercredentialsdao2.hashCode(), servercredentialsdao1.hashCode());
    int hashCode = servercredentialsdao1.hashCode();
    for (int i = 0; i < 5 ; i++) {
      assertEquals(hashCode, servercredentialsdao1.hashCode());
    }
  }

  /**
   * Tests the equals method.
   */
  @Test
  public void testEquals() {
    ServerCredentialsDao servercredentialsdao1 = new ServerCredentialsDao();
    ServerCredentialsDao servercredentialsdao2 = new ServerCredentialsDao();
    ServerCredentialsDao servercredentialsdao3 = new ServerCredentialsDao();
    assertNotNull(servercredentialsdao1);
    assertNotNull(servercredentialsdao2);
    assertNotNull(servercredentialsdao3);
    assertNotSame(servercredentialsdao2, servercredentialsdao1);
    assertNotSame(servercredentialsdao3, servercredentialsdao1);
    assertEquals(servercredentialsdao2, servercredentialsdao1);
    assertEquals(servercredentialsdao2, servercredentialsdao1);
    assertEquals(servercredentialsdao1, servercredentialsdao2);
    assertEquals(servercredentialsdao1, servercredentialsdao1);
    assertFalse(servercredentialsdao1.equals(null));
    assertNotEquals(servercredentialsdao3, servercredentialsdao1);
  }
}
