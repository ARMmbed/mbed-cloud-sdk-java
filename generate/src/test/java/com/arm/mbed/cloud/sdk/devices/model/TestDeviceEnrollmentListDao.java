// This file was generated by the Pelion SDK foundation code generator.
// This unit test suite was autogenerated on Fri Dec 28 16:23:54 GMT 2018. Feel free to change its contents as you wish.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentListDao. */
public class TestDeviceEnrollmentListDao {
  /**
   * Tests the clone method.
   */
  @Test
  public void testClone() {
    DeviceEnrollmentListDao deviceenrollmentlistdao1 = new DeviceEnrollmentListDao();
    DeviceEnrollmentListDao deviceenrollmentlistdao2 = deviceenrollmentlistdao1.clone();
    assertNotNull(deviceenrollmentlistdao1);
    assertNotNull(deviceenrollmentlistdao2);
    assertNotSame(deviceenrollmentlistdao2, deviceenrollmentlistdao1);
    assertEquals(deviceenrollmentlistdao2, deviceenrollmentlistdao1);
  }

  /**
   * Tests the hashCode method.
   */
  @Test
  public void testHashcode() {
    DeviceEnrollmentListDao deviceenrollmentlistdao1 = new DeviceEnrollmentListDao();
    DeviceEnrollmentListDao deviceenrollmentlistdao2 = new DeviceEnrollmentListDao();
    assertNotNull(deviceenrollmentlistdao1);
    assertNotNull(deviceenrollmentlistdao2);
    assertNotSame(deviceenrollmentlistdao2, deviceenrollmentlistdao1);
    assertEquals(deviceenrollmentlistdao2, deviceenrollmentlistdao1);
    assertEquals(deviceenrollmentlistdao2.hashCode(), deviceenrollmentlistdao1.hashCode());
    int hashCode = deviceenrollmentlistdao1.hashCode();
    for (int i = 0; i < 5 ; i++) {
      assertEquals(hashCode, deviceenrollmentlistdao1.hashCode());
    }
  }

  /**
   * Tests the equals method.
   */
  @Test
  public void testEquals() {
    DeviceEnrollmentListDao deviceenrollmentlistdao1 = new DeviceEnrollmentListDao();
    DeviceEnrollmentListDao deviceenrollmentlistdao2 = new DeviceEnrollmentListDao();
    DeviceEnrollmentListDao deviceenrollmentlistdao3 = new DeviceEnrollmentListDao();
    assertNotNull(deviceenrollmentlistdao1);
    assertNotNull(deviceenrollmentlistdao2);
    assertNotNull(deviceenrollmentlistdao3);
    assertNotSame(deviceenrollmentlistdao2, deviceenrollmentlistdao1);
    assertNotSame(deviceenrollmentlistdao3, deviceenrollmentlistdao1);
    assertEquals(deviceenrollmentlistdao2, deviceenrollmentlistdao1);
    assertEquals(deviceenrollmentlistdao2, deviceenrollmentlistdao1);
    assertEquals(deviceenrollmentlistdao1, deviceenrollmentlistdao2);
    assertEquals(deviceenrollmentlistdao1, deviceenrollmentlistdao1);
    assertFalse(deviceenrollmentlistdao1.equals(null));
    assertNotEquals(deviceenrollmentlistdao3, deviceenrollmentlistdao1);
  }
}
