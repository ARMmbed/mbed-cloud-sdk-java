// This file was generated by the Pelion SDK foundation code generator.
// This unit test suite was autogenerated on Fri Dec 28 16:23:55 GMT 2018. Feel free to change its contents as you wish.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListDao. */
public class TestDeviceEventsListDao {
  /**
   * Tests the clone method.
   */
  @Test
  public void testClone() {
    DeviceEventsListDao deviceeventslistdao1 = new DeviceEventsListDao();
    DeviceEventsListDao deviceeventslistdao2 = deviceeventslistdao1.clone();
    assertNotNull(deviceeventslistdao1);
    assertNotNull(deviceeventslistdao2);
    assertNotSame(deviceeventslistdao2, deviceeventslistdao1);
    assertEquals(deviceeventslistdao2, deviceeventslistdao1);
  }

  /**
   * Tests the hashCode method.
   */
  @Test
  public void testHashcode() {
    DeviceEventsListDao deviceeventslistdao1 = new DeviceEventsListDao();
    DeviceEventsListDao deviceeventslistdao2 = new DeviceEventsListDao();
    assertNotNull(deviceeventslistdao1);
    assertNotNull(deviceeventslistdao2);
    assertNotSame(deviceeventslistdao2, deviceeventslistdao1);
    assertEquals(deviceeventslistdao2, deviceeventslistdao1);
    assertEquals(deviceeventslistdao2.hashCode(), deviceeventslistdao1.hashCode());
    int hashCode = deviceeventslistdao1.hashCode();
    for (int i = 0; i < 5 ; i++) {
      assertEquals(hashCode, deviceeventslistdao1.hashCode());
    }
  }

  /**
   * Tests the equals method.
   */
  @Test
  public void testEquals() {
    DeviceEventsListDao deviceeventslistdao1 = new DeviceEventsListDao();
    DeviceEventsListDao deviceeventslistdao2 = new DeviceEventsListDao();
    DeviceEventsListDao deviceeventslistdao3 = new DeviceEventsListDao();
    assertNotNull(deviceeventslistdao1);
    assertNotNull(deviceeventslistdao2);
    assertNotNull(deviceeventslistdao3);
    assertNotSame(deviceeventslistdao2, deviceeventslistdao1);
    assertNotSame(deviceeventslistdao3, deviceeventslistdao1);
    assertEquals(deviceeventslistdao2, deviceeventslistdao1);
    assertEquals(deviceeventslistdao2, deviceeventslistdao1);
    assertEquals(deviceeventslistdao1, deviceeventslistdao2);
    assertEquals(deviceeventslistdao1, deviceeventslistdao1);
    assertFalse(deviceeventslistdao1.equals(null));
    assertNotEquals(deviceeventslistdao3, deviceeventslistdao1);
  }
}
