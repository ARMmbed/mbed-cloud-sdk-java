// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk;

import com.arm.mbed.cloud.sdk.accounts.adapters.AccountAdapter;
import com.arm.mbed.cloud.sdk.accounts.adapters.ApiKeyAdapter;
import com.arm.mbed.cloud.sdk.accounts.adapters.UserAdapter;
import com.arm.mbed.cloud.sdk.accounts.adapters.UserInvitationAdapter;
import com.arm.mbed.cloud.sdk.accounts.model.Account;
import com.arm.mbed.cloud.sdk.accounts.model.AccountListOptions;
import com.arm.mbed.cloud.sdk.accounts.model.AccountOrder;
import com.arm.mbed.cloud.sdk.accounts.model.AccountsEndpoints;
import com.arm.mbed.cloud.sdk.accounts.model.ApiKey;
import com.arm.mbed.cloud.sdk.accounts.model.ApiKeyListOptions;
import com.arm.mbed.cloud.sdk.accounts.model.User;
import com.arm.mbed.cloud.sdk.accounts.model.UserInvitation;
import com.arm.mbed.cloud.sdk.accounts.model.UserInvitationListOptions;
import com.arm.mbed.cloud.sdk.accounts.model.UserListOptions;
import com.arm.mbed.cloud.sdk.annotations.API;
import com.arm.mbed.cloud.sdk.annotations.DefaultValue;
import com.arm.mbed.cloud.sdk.annotations.Internal;
import com.arm.mbed.cloud.sdk.annotations.Module;
import com.arm.mbed.cloud.sdk.annotations.NonNull;
import com.arm.mbed.cloud.sdk.annotations.Nullable;
import com.arm.mbed.cloud.sdk.annotations.Preamble;
import com.arm.mbed.cloud.sdk.common.AbstractModule;
import com.arm.mbed.cloud.sdk.common.ApiClientWrapper;
import com.arm.mbed.cloud.sdk.common.CloudCaller;
import com.arm.mbed.cloud.sdk.common.CloudRequest;
import com.arm.mbed.cloud.sdk.common.ConnectionOptions;
import com.arm.mbed.cloud.sdk.common.MbedCloudException;
import com.arm.mbed.cloud.sdk.common.SdkContext;
import com.arm.mbed.cloud.sdk.common.listing.ListOptions;
import com.arm.mbed.cloud.sdk.common.listing.ListResponse;
import com.arm.mbed.cloud.sdk.common.listing.PageRequester;
import com.arm.mbed.cloud.sdk.common.listing.Paginator;
import com.arm.mbed.cloud.sdk.internal.iam.model.AccountCreationResp;
import com.arm.mbed.cloud.sdk.internal.iam.model.AccountInfo;
import com.arm.mbed.cloud.sdk.internal.iam.model.AccountInfoList;
import com.arm.mbed.cloud.sdk.internal.iam.model.ApiKeyInfoResp;
import com.arm.mbed.cloud.sdk.internal.iam.model.ApiKeyInfoRespList;
import com.arm.mbed.cloud.sdk.internal.iam.model.TrustedCertificateInternalRespList;
import com.arm.mbed.cloud.sdk.internal.iam.model.TrustedCertificateRespList;
import com.arm.mbed.cloud.sdk.internal.iam.model.UserInfoResp;
import com.arm.mbed.cloud.sdk.internal.iam.model.UserInfoRespList;
import com.arm.mbed.cloud.sdk.internal.iam.model.UserInvitationResp;
import com.arm.mbed.cloud.sdk.internal.iam.model.UserInvitationRespList;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Override;
import java.lang.String;
import java.lang.Void;
import retrofit2.Call;

/**
 * Specifies Accounts APIs.
 * <p>
 *  API definitions exposing functionality for dealing with accounts */
@Preamble(
    description = "Specifies Accounts APIs."
)
@Internal
@Module
public class Accounts extends AbstractModule {
  /**
   * Parameter name. */
  @Internal
  private static final String TAG_ARG0 = "arg0";

  /**
   * Parameter name. */
  @Internal
  private static final String TAG_ACCOUNT = "account";

  /**
   * Parameter name. */
  @Internal
  private static final String TAG_ARG1 = "arg1";

  /**
   * Parameter name. */
  @Internal
  private static final String TAG_API_KEY = "apiKey";

  /**
   * Parameter name. */
  @Internal
  private static final String TAG_USER = "user";

  /**
   * Parameter name. */
  @Internal
  private static final String TAG_ARG2 = "arg2";

  /**
   * Parameter name. */
  @Internal
  private static final String TAG_USER_INVITATION = "userInvitation";

  /**
   * module endpoints. */
  @Internal
  private final AccountsEndpoints endpoints;

  /**
   * Constructor.
   * @param options connection options @see {@link ConnectionOptions}.
   */
  public Accounts(ConnectionOptions options) {
    super(options);
    this.endpoints = new AccountsEndpoints(this.serviceRegistry);
  }

  /**
   * Constructor.
   * @param client Cloud client @see {@link ApiClientWrapper}.
   */
  public Accounts(ApiClientWrapper client) {
    super(client);
    this.endpoints = new AccountsEndpoints(this.serviceRegistry);
  }

  /**
   * Constructor.
   * @param context SDK context @see {@link SdkContext}.
   */
  public Accounts(SdkContext context) {
    super(context);
    this.endpoints = new AccountsEndpoints(this.serviceRegistry);
  }

  /**
   * Gets module endpoints.
   * @return endpoints
   */
  public AccountsEndpoints getEndpoints() {
    return endpoints;
  }

  /**
   * Adds an account.
   * <p>
   * An endpoint for creating a new account. 
   *
   * **Example usage:**
   * `curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts -d '{"display_name": "MyAccount1", "admin_name": "accountAdmin1", "email": "example_admin@myaccount.info"}' -H 'content-type: application/json' -H 'Authorization: Bearer API_KEY'`
   * @param action Action, either 'create' or 'enroll'. <ul><li>'create' creates the account where its admin user has ACTIVE status if admin_password was defined in the request, or RESET status if no admin_password was defined. If the user already exists, its status is not modified. </li><li>'enroll' creates the account where its admin user has ENROLLING status. If the user already exists, its status is not modified. Email to finish the enrollment or to notify the existing user about the new account is sent to the admin_email defined in the request. </li></ul>.
   * @param arg0 an account.
   * @param arg1 null
   * @return an added  account
   */
  @API
  @Nullable
  public Account createAccount(@Nullable @DefaultValue("create") String action,
      @NonNull Account arg0, @Nullable String arg1) throws MbedCloudException {
    checkNotNull(arg0,TAG_ARG0);
    checkModelValidity(arg0,TAG_ARG0);
    final String finalAction = action;
    final Account finalArg0 = arg0;
    final String finalArg1 = arg1;
    return CloudCaller.call(this, "createAccount()",AccountAdapter.getMapper(),new CloudRequest.CloudCall<AccountCreationResp>() {
      /**
       * Makes the low level call to the Cloud.
       * @return Corresponding Retrofit2 Call object
       */
      @Override
      public Call<AccountCreationResp> call() {
        return endpoints.getAggregatorAccountAdminApi().createAccount(AccountAdapter.reverseMapAddRequest(finalArg0), finalArg1);
      }
    } );
  }

  /**
   * Adds an account.
   * <p>
   * Similar to {@link #createAccount(String,Account,String)}
   * @param action Action, either 'create' or 'enroll'. <ul><li>'create' creates the account where its admin user has ACTIVE status if admin_password was defined in the request, or RESET status if no admin_password was defined. If the user already exists, its status is not modified. </li><li>'enroll' creates the account where its admin user has ENROLLING status. If the user already exists, its status is not modified. Email to finish the enrollment or to notify the existing user about the new account is sent to the admin_email defined in the request. </li></ul>.
   * @param account an account.
   * @return something
   */
  @API
  @Nullable
  public Account createAccount(@Nullable @DefaultValue("create") String action,
      @NonNull Account account) throws MbedCloudException {
    checkNotNull(account,TAG_ACCOUNT);
    checkModelValidity(account,TAG_ACCOUNT);
    final String finalAction = action;
    final Account finalAccount = account;
    return  createAccount(finalAction, finalAccount.getArg0(), finalAccount.getArg1());
  }

  /**
   * Gets an account.
   * <p>
   * Returns detailed information about the account. 
   *
   * **Example usage:**
   * `curl https://api.us-east-1.mbedcloud.com/v3/accounts/{account-id} -H 'Authorization: Bearer API_KEY'`.
   * @param include Comma separated additional data to return. Currently supported: limits, policies, sub_accounts.
   * @param properties Property name to be returned from account specific properties.
   * @param arg0 null
   * @param arg1 null
   * @param arg2 null
   * @return something
   */
  @API
  @Nullable
  public Account getAccount(@Nullable String include, @Nullable String properties,
      @Nullable String arg0, @Nullable String arg1, @Nullable String arg2) throws
      MbedCloudException {
    final String finalInclude = include;
    final String finalProperties = properties;
    final String finalArg0 = arg0;
    final String finalArg1 = arg1;
    final String finalArg2 = arg2;
    return CloudCaller.call(this, "getAccount()",AccountAdapter.getMapper(),new CloudRequest.CloudCall<AccountInfo>() {
      /**
       * Makes the low level call to the Cloud.
       * @return Corresponding Retrofit2 Call object
       */
      @Override
      public Call<AccountInfo> call() {
        return endpoints.getAggregatorAccountAdminApi().getAccountInfo(finalArg0, finalArg1, finalArg2);
      }
    } );
  }

  /**
   * Gets an account.
   * <p>
   * Similar to {@link #getAccount(String,String,String,String,String)}
   * @param include Comma separated additional data to return. Currently supported: limits, policies, sub_accounts.
   * @param properties Property name to be returned from account specific properties.
   * @param account an account.
   * @return something
   */
  @API
  @Nullable
  public Account getAccount(@Nullable String include, @Nullable String properties,
      @NonNull Account account) throws MbedCloudException {
    checkNotNull(account,TAG_ACCOUNT);
    final String finalInclude = include;
    final String finalProperties = properties;
    final Account finalAccount = account;
    return  getAccount(finalInclude, finalProperties, finalAccount.getArg0(), finalAccount.getArg1(), finalAccount.getArg2());
  }

  /**
   * Lists accounts matching filter options.
   * <p>
   * Returns an array of account objects, optionally filtered by status and tier level. 
   *
   * **Example usage:**
   * `curl https://api.us-east-1.mbedcloud.com/v3/accounts -H 'Authorization: Bearer API_KEY'`.
   * @param format Format information for the response to the query, supported: format=breakdown.
   * @param properties Property name to be returned from account specific properties.
   * @param arg0 null
   * @param arg1 null
   * @param arg2 null
   * @param arg3 null
   * @param arg4 null
   * @param arg5 null
   * @param arg6 null
   * @param arg7 null
   * @param arg8 null
   * @param arg9 null
   * @param arg10 null
   * @param arg11 null
   * @param arg12 null
   * @param options list options.
   * @return the list of accounts corresponding to filter options (One page).
   */
  @API
  @Nullable
  public ListResponse<Account> listAccounts(@Nullable String format, @Nullable String properties,
      @Nullable String arg0, @Nullable String arg1, @Nullable String arg2, @Nullable String arg3,
      @Nullable String arg4, @Nullable String arg5, @Nullable String arg6, @Nullable Integer arg7,
      @Nullable String arg8, @Nullable String arg9, @Nullable String arg10, @Nullable String arg11,
      @Nullable String arg12, @Nullable AccountListOptions options) throws MbedCloudException {
    final String finalFormat = format;
    final String finalProperties = properties;
    final String finalArg0 = arg0;
    final String finalArg1 = arg1;
    final String finalArg2 = arg2;
    final String finalArg3 = arg3;
    final String finalArg4 = arg4;
    final String finalArg5 = arg5;
    final String finalArg6 = arg6;
    final Integer finalArg7 = arg7;
    final String finalArg8 = arg8;
    final String finalArg9 = arg9;
    final String finalArg10 = arg10;
    final String finalArg11 = arg11;
    final String finalArg12 = arg12;
    final AccountListOptions finalOptions = (options == null)? new AccountListOptions() : options;
    return CloudCaller.call(this, "listAccounts()",AccountAdapter.getListMapper(),new CloudRequest.CloudCall<AccountInfoList>() {
      /**
       * Makes the low level call to the Cloud.
       * @return Corresponding Retrofit2 Call object
       */
      @Override
      public Call<AccountInfoList> call() {
        return endpoints.getAggregatorAccountAdminApi().getAllAccounts(finalArg0, finalArg1, finalArg2, finalArg3, finalArg4, finalArg5, finalArg6, finalArg7, finalArg8, finalArg9, finalArg10, finalArg11, finalArg12);
      }
    } );
  }

  /**
   * Creates a {@link Paginator} for the list of accounts matching filter options.
   * <p>
   * Gets an iterator over all accounts matching filter options.
   * @param format Format information for the response to the query, supported: format=breakdown.
   * @param properties Property name to be returned from account specific properties.
   * @param arg0 null
   * @param arg1 null
   * @param arg2 null
   * @param arg3 null
   * @param arg4 null
   * @param arg5 null
   * @param arg6 null
   * @param arg7 null
   * @param arg8 null
   * @param arg9 null
   * @param arg10 null
   * @param arg11 null
   * @param arg12 null
   * @param options list options.
   * @return paginator over the list of accounts
   */
  @API
  @Nullable
  public Paginator<Account> listAllAccounts(@Nullable String format, @Nullable String properties,
      @Nullable String arg0, @Nullable String arg1, @Nullable String arg2, @Nullable String arg3,
      @Nullable String arg4, @Nullable String arg5, @Nullable String arg6, @Nullable Integer arg7,
      @Nullable String arg8, @Nullable String arg9, @Nullable String arg10, @Nullable String arg11,
      @Nullable String arg12, @Nullable AccountListOptions options) throws MbedCloudException {
    final String finalFormat = format;
    final String finalProperties = properties;
    final String finalArg0 = arg0;
    final String finalArg1 = arg1;
    final String finalArg2 = arg2;
    final String finalArg3 = arg3;
    final String finalArg4 = arg4;
    final String finalArg5 = arg5;
    final String finalArg6 = arg6;
    final Integer finalArg7 = arg7;
    final String finalArg8 = arg8;
    final String finalArg9 = arg9;
    final String finalArg10 = arg10;
    final String finalArg11 = arg11;
    final String finalArg12 = arg12;
    final AccountListOptions finalOptions = (options == null)? new AccountListOptions() : options;
    return new Paginator<Account>(finalOptions, new PageRequester<Account>() {
      /**
       * Makes one page request.
       * @param options a list options.
       * @return Corresponding page requester
       */
      @Override
      public ListResponse<Account> requestNewPage(ListOptions options) throws MbedCloudException {
        return listAccounts(finalFormat, finalProperties, finalArg0, finalArg1, finalArg2, finalArg3, finalArg4, finalArg5, finalArg6, finalArg7, finalArg8, finalArg9, finalArg10, finalArg11, finalArg12, (AccountListOptions) options);
      }
    });
  }

  /**
   * Get account info.
   * <p>
   * Returns detailed information about the account. 
   *
   * **Example usage:**
   * `curl https://api.us-east-1.mbedcloud.com/v3/accounts/me?include=policies -H 'Authorization: Bearer API_KEY'`.
   * @param include Comma separated additional data to return. Currently supported: limits, policies, sub_accounts.
   * @param properties Property name to be returned from account specific properties.
   * @param arg0 null
   * @param arg1 null
   * @return something
   */
  @API
  @Nullable
  public Account me(@Nullable String include, @Nullable String properties, @Nullable String arg0,
      @Nullable String arg1) throws MbedCloudException {
    final String finalInclude = include;
    final String finalProperties = properties;
    final String finalArg0 = arg0;
    final String finalArg1 = arg1;
    return CloudCaller.call(this, "me()",AccountAdapter.getMapper(),new CloudRequest.CloudCall<AccountInfo>() {
      /**
       * Makes the low level call to the Cloud.
       * @return Corresponding Retrofit2 Call object
       */
      @Override
      public Call<AccountInfo> call() {
        return endpoints.getDeveloperApi().getMyAccountInfo(finalArg0, finalArg1);
      }
    } );
  }

  /**
   * Get account info.
   * <p>
   * Similar to {@link #me(String,String,String,String)}
   * @param include Comma separated additional data to return. Currently supported: limits, policies, sub_accounts.
   * @param properties Property name to be returned from account specific properties.
   * @param account an account.
   * @return something
   */
  @API
  @Nullable
  public Account me(@Nullable String include, @Nullable String properties, @NonNull Account account)
      throws MbedCloudException {
    checkNotNull(account,TAG_ACCOUNT);
    final String finalInclude = include;
    final String finalProperties = properties;
    final Account finalAccount = account;
    return  me(finalInclude, finalProperties, finalAccount.getArg0(), finalAccount.getArg1());
  }

  /**
   * Get API key details.
   * <p>
   * An endpoint for retrieving API key details. 
   *
   * **Example usage:**
   * `curl https://api.us-east-1.mbedcloud.com/v3/api-keys/me -H 'Authorization: Bearer API_KEY'`
   * @return something
   */
  @API
  @Nullable
  public Account myApiKey() throws MbedCloudException {
    return CloudCaller.call(this, "myApiKey()",AccountAdapter.getMapper(),new CloudRequest.CloudCall<ApiKeyInfoResp>() {
      /**
       * Makes the low level call to the Cloud.
       * @return Corresponding Retrofit2 Call object
       */
      @Override
      public Call<ApiKeyInfoResp> call() {
        return endpoints.getDeveloperApi().getMyApiKey();
      }
    } );
  }

  /**
   * Get all API keys.
   * <p>
   * An endpoint for retrieving API keys in an array, optionally filtered by the owner. 
   *
   * **Example usage:**
   * `curl https://api.us-east-1.mbedcloud.com/v3/api-keys -H 'Authorization: Bearer API_KEY'`
   * @param after The entity ID to fetch after the given one.
   * @param include Comma separated additional data to return. Currently supported: total_count.
   * @param limit The number of results to return (2-1000), default is 50.
   * @param order The order of the records based on creation time, ASC or DESC; by default ASC.
   * @param arg0 null
   * @param arg1 null
   * @param arg2 null
   * @param arg3 null
   * @param arg4 null
   * @param arg5 null
   * @return something
   */
  @API
  @Nullable
  public Account myApiKeys(@Nullable String after, @Nullable String include,
      @Nullable @DefaultValue("50") int limit, @Nullable @DefaultValue("ASC") AccountOrder order,
      @Nullable Integer arg0, @Nullable String arg1, @Nullable String arg2, @Nullable String arg3,
      @Nullable String arg4, @Nullable String arg5) throws MbedCloudException {
    final String finalAfter = after;
    final String finalInclude = include;
    final int finalLimit = limit;
    final AccountOrder finalOrder = order;
    final Integer finalArg0 = arg0;
    final String finalArg1 = arg1;
    final String finalArg2 = arg2;
    final String finalArg3 = arg3;
    final String finalArg4 = arg4;
    final String finalArg5 = arg5;
    return CloudCaller.call(this, "myApiKeys()",AccountAdapter.getMapper(),new CloudRequest.CloudCall<ApiKeyInfoRespList>() {
      /**
       * Makes the low level call to the Cloud.
       * @return Corresponding Retrofit2 Call object
       */
      @Override
      public Call<ApiKeyInfoRespList> call() {
        return endpoints.getDeveloperApi().getAllApiKeys(finalArg0, finalArg1, finalArg2, finalArg3, finalArg4, finalArg5);
      }
    } );
  }

  /**
   * Get all API keys.
   * <p>
   * Similar to {@link #myApiKeys(String,String,int,AccountOrder,Integer,String,String,String,String,String)}
   * @param after The entity ID to fetch after the given one.
   * @param include Comma separated additional data to return. Currently supported: total_count.
   * @param limit The number of results to return (2-1000), default is 50.
   * @param order The order of the records based on creation time, ASC or DESC; by default ASC.
   * @param account an account.
   * @return something
   */
  @API
  @Nullable
  public Account myApiKeys(@Nullable String after, @Nullable String include,
      @Nullable @DefaultValue("50") int limit, @Nullable @DefaultValue("ASC") AccountOrder order,
      @NonNull Account account) throws MbedCloudException {
    checkNotNull(account,TAG_ACCOUNT);
    final String finalAfter = after;
    final String finalInclude = include;
    final int finalLimit = limit;
    final AccountOrder finalOrder = order;
    final Account finalAccount = account;
    return  myApiKeys(finalAfter, finalInclude, finalLimit, finalOrder, finalAccount.getArg0(), finalAccount.getArg1(), finalAccount.getArg2(), finalAccount.getArg3(), finalAccount.getArg4(), finalAccount.getArg5());
  }

  /**
   * Get all trusted certificates.
   * <p>
   * An endpoint for retrieving trusted certificates in an array. 
   *
   * **Example usage:**
   * `curl https://api.us-east-1.mbedcloud.com/v3/trusted-certificates -H 'Authorization: Bearer API_KEY'`
   * @param after The entity ID to fetch after the given one.
   * @param deviceExecutionModeEq Device execution mode, as 1 for developer certificates or as another natural integer value.
   * @param deviceExecutionModeNeq Device execution mode not equals filter.
   * @param enrollmentModeEq Enrollment mode filter.
   * @param expireEq Expire filter in days.
   * @param include Comma separated additional data to return. Currently supported: total_count.
   * @param issuerLike Issuer filter. Finds all matches where the filter value is a case insensitive substring of the result. Example: issuer__like=cn=iss matches CN=issuer.
   * @param limit The number of results to return (2-1000), default is 50.
   * @param nameEq Filter for certificate name.
   * @param order The order of the records based on creation time, ASC or DESC; by default ASC.
   * @param ownerEq Owner name filter.
   * @param serviceEq Service filter, either lwm2m or bootstrap.
   * @param subjectLike Subject filter. Finds all matches where the filter value is a case insensitive substring of the result. Example: subject__like=cn=su matches CN=subject.
   * @param arg0 null
   * @param arg1 null
   * @param arg2 null
   * @param arg3 null
   * @param arg4 null
   * @param arg5 null
   * @param arg6 null
   * @param arg7 null
   * @param arg8 null
   * @param arg9 null
   * @param arg10 null
   * @param arg11 null
   * @param arg12 null
   * @return something
   */
  @API
  @Nullable
  public Account myTrustedCertificates(@Nullable String after, @Nullable int deviceExecutionModeEq,
      @Nullable int deviceExecutionModeNeq, @Nullable boolean enrollmentModeEq,
      @Nullable int expireEq, @Nullable String include, @Nullable String issuerLike,
      @Nullable @DefaultValue("50") int limit, @Nullable String nameEq,
      @Nullable @DefaultValue("ASC") String order, @Nullable String ownerEq,
      @Nullable String serviceEq, @Nullable String subjectLike, @Nullable Integer arg0,
      @Nullable String arg1, @Nullable String arg2, @Nullable String arg3, @Nullable String arg4,
      @Nullable String arg5, @Nullable Integer arg6, @Nullable Integer arg7, @Nullable Integer arg8,
      @Nullable String arg9, @Nullable Boolean arg10, @Nullable String arg11,
      @Nullable String arg12) throws MbedCloudException {
    final String finalAfter = after;
    final int finalDeviceExecutionModeEq = deviceExecutionModeEq;
    final int finalDeviceExecutionModeNeq = deviceExecutionModeNeq;
    final boolean finalEnrollmentModeEq = enrollmentModeEq;
    final int finalExpireEq = expireEq;
    final String finalInclude = include;
    final String finalIssuerLike = issuerLike;
    final int finalLimit = limit;
    final String finalNameEq = nameEq;
    final String finalOrder = order;
    final String finalOwnerEq = ownerEq;
    final String finalServiceEq = serviceEq;
    final String finalSubjectLike = subjectLike;
    final Integer finalArg0 = arg0;
    final String finalArg1 = arg1;
    final String finalArg2 = arg2;
    final String finalArg3 = arg3;
    final String finalArg4 = arg4;
    final String finalArg5 = arg5;
    final Integer finalArg6 = arg6;
    final Integer finalArg7 = arg7;
    final Integer finalArg8 = arg8;
    final String finalArg9 = arg9;
    final Boolean finalArg10 = arg10;
    final String finalArg11 = arg11;
    final String finalArg12 = arg12;
    return CloudCaller.call(this, "myTrustedCertificates()",AccountAdapter.getMapper(),new CloudRequest.CloudCall<TrustedCertificateRespList>() {
      /**
       * Makes the low level call to the Cloud.
       * @return Corresponding Retrofit2 Call object
       */
      @Override
      public Call<TrustedCertificateRespList> call() {
        return endpoints.getDeveloperApi().getAllCertificates(finalArg0, finalArg1, finalArg2, finalArg3, finalArg4, finalArg5, finalArg6, finalArg7, finalArg8, finalArg9, finalArg10, finalArg11, finalArg12);
      }
    } );
  }

  /**
   * Get all trusted certificates.
   * <p>
   * Similar to {@link #myTrustedCertificates(String,int,int,boolean,int,String,String,int,String,String,String,String,String,Integer,String,String,String,String,String,Integer,Integer,Integer,String,Boolean,String,String)}
   * @param after The entity ID to fetch after the given one.
   * @param deviceExecutionModeEq Device execution mode, as 1 for developer certificates or as another natural integer value.
   * @param deviceExecutionModeNeq Device execution mode not equals filter.
   * @param enrollmentModeEq Enrollment mode filter.
   * @param expireEq Expire filter in days.
   * @param include Comma separated additional data to return. Currently supported: total_count.
   * @param issuerLike Issuer filter. Finds all matches where the filter value is a case insensitive substring of the result. Example: issuer__like=cn=iss matches CN=issuer.
   * @param limit The number of results to return (2-1000), default is 50.
   * @param nameEq Filter for certificate name.
   * @param order The order of the records based on creation time, ASC or DESC; by default ASC.
   * @param ownerEq Owner name filter.
   * @param serviceEq Service filter, either lwm2m or bootstrap.
   * @param subjectLike Subject filter. Finds all matches where the filter value is a case insensitive substring of the result. Example: subject__like=cn=su matches CN=subject.
   * @param account an account.
   * @return something
   */
  @API
  @Nullable
  public Account myTrustedCertificates(@Nullable String after, @Nullable int deviceExecutionModeEq,
      @Nullable int deviceExecutionModeNeq, @Nullable boolean enrollmentModeEq,
      @Nullable int expireEq, @Nullable String include, @Nullable String issuerLike,
      @Nullable @DefaultValue("50") int limit, @Nullable String nameEq,
      @Nullable @DefaultValue("ASC") String order, @Nullable String ownerEq,
      @Nullable String serviceEq, @Nullable String subjectLike, @NonNull Account account) throws
      MbedCloudException {
    checkNotNull(account,TAG_ACCOUNT);
    final String finalAfter = after;
    final int finalDeviceExecutionModeEq = deviceExecutionModeEq;
    final int finalDeviceExecutionModeNeq = deviceExecutionModeNeq;
    final boolean finalEnrollmentModeEq = enrollmentModeEq;
    final int finalExpireEq = expireEq;
    final String finalInclude = include;
    final String finalIssuerLike = issuerLike;
    final int finalLimit = limit;
    final String finalNameEq = nameEq;
    final String finalOrder = order;
    final String finalOwnerEq = ownerEq;
    final String finalServiceEq = serviceEq;
    final String finalSubjectLike = subjectLike;
    final Account finalAccount = account;
    return  myTrustedCertificates(finalAfter, finalDeviceExecutionModeEq, finalDeviceExecutionModeNeq, finalEnrollmentModeEq, finalExpireEq, finalInclude, finalIssuerLike, finalLimit, finalNameEq, finalOrder, finalOwnerEq, finalServiceEq, finalSubjectLike, finalAccount.getArg0(), finalAccount.getArg1(), finalAccount.getArg2(), finalAccount.getArg3(), finalAccount.getArg4(), finalAccount.getArg5(), finalAccount.getArg6(), finalAccount.getArg7(), finalAccount.getArg8(), finalAccount.getArg9(), finalAccount.isArg10(), finalAccount.getArg11(), finalAccount.getArg12());
  }

  /**
   * Get the details of all the user invitations.
   * <p>
   * An endpoint for retrieving the details of all the active user invitations sent for new or existing users to join the account. 
   *
   * **Example usage:**
   * `curl https://api.us-east-1.mbedcloud.com/v3/user-invitations -H 'Authorization: Bearer API_KEY'`
   * @param after The entity ID to fetch after the given one.
   * @param limit The number of results to return (2-1000), default is 50.
   * @param order The order of the records based on creation time, ASC or DESC; by default ASC.
   * @param arg0 null
   * @param arg1 null
   * @param arg2 null
   * @return something
   */
  @API
  @Nullable
  public Account myUserInvitations(@Nullable String after, @Nullable @DefaultValue("50") int limit,
      @Nullable @DefaultValue("ASC") String order, @Nullable Integer arg0, @Nullable String arg1,
      @Nullable String arg2) throws MbedCloudException {
    final String finalAfter = after;
    final int finalLimit = limit;
    final String finalOrder = order;
    final Integer finalArg0 = arg0;
    final String finalArg1 = arg1;
    final String finalArg2 = arg2;
    return CloudCaller.call(this, "myUserInvitations()",AccountAdapter.getMapper(),new CloudRequest.CloudCall<UserInvitationRespList>() {
      /**
       * Makes the low level call to the Cloud.
       * @return Corresponding Retrofit2 Call object
       */
      @Override
      public Call<UserInvitationRespList> call() {
        return endpoints.getAccountAdminApi().getAllInvitations(finalArg0, finalArg1, finalArg2);
      }
    } );
  }

  /**
   * Get the details of all the user invitations.
   * <p>
   * Similar to {@link #myUserInvitations(String,int,String,Integer,String,String)}
   * @param after The entity ID to fetch after the given one.
   * @param limit The number of results to return (2-1000), default is 50.
   * @param order The order of the records based on creation time, ASC or DESC; by default ASC.
   * @param account an account.
   * @return something
   */
  @API
  @Nullable
  public Account myUserInvitations(@Nullable String after, @Nullable @DefaultValue("50") int limit,
      @Nullable @DefaultValue("ASC") String order, @NonNull Account account) throws
      MbedCloudException {
    checkNotNull(account,TAG_ACCOUNT);
    final String finalAfter = after;
    final int finalLimit = limit;
    final String finalOrder = order;
    final Account finalAccount = account;
    return  myUserInvitations(finalAfter, finalLimit, finalOrder, finalAccount.getArg0(), finalAccount.getArg1(), finalAccount.getArg2());
  }

  /**
   * Get the details of all users.
   * <p>
   * An endpoint for retrieving the details of all users. 
   *
   * **Example usage:**
   * `curl https://api.us-east-1.mbedcloud.com/v3/users -H 'Authorization: Bearer API_KEY'`
   * @param after The entity ID to fetch after the given one.
   * @param emailEq Filter for email address.
   * @param include Comma separated additional data to return. Currently supported: total_count.
   * @param limit The number of results to return (2-1000), default is 50.
   * @param order The order of the records based on creation time, ASC or DESC; by default ASC.
   * @param statusEq Filter for status, for example active or reset.
   * @param statusIn An optional filter for getting users with a specified set of statuses.
   * @param statusNin An optional filter for excluding users with a specified set of statuses.
   * @param arg0 null
   * @param arg1 null
   * @param arg2 null
   * @param arg3 null
   * @param arg4 null
   * @param arg5 null
   * @param arg6 null
   * @param arg7 null
   * @return something
   */
  @API
  @Nullable
  public Account myUsers(@Nullable String after, @Nullable String emailEq, @Nullable String include,
      @Nullable @DefaultValue("50") int limit, @Nullable @DefaultValue("ASC") String order,
      @Nullable String statusEq, @Nullable String statusIn, @Nullable String statusNin,
      @Nullable Integer arg0, @Nullable String arg1, @Nullable String arg2, @Nullable String arg3,
      @Nullable String arg4, @Nullable String arg5, @Nullable String arg6, @Nullable String arg7)
      throws MbedCloudException {
    final String finalAfter = after;
    final String finalEmailEq = emailEq;
    final String finalInclude = include;
    final int finalLimit = limit;
    final String finalOrder = order;
    final String finalStatusEq = statusEq;
    final String finalStatusIn = statusIn;
    final String finalStatusNin = statusNin;
    final Integer finalArg0 = arg0;
    final String finalArg1 = arg1;
    final String finalArg2 = arg2;
    final String finalArg3 = arg3;
    final String finalArg4 = arg4;
    final String finalArg5 = arg5;
    final String finalArg6 = arg6;
    final String finalArg7 = arg7;
    return CloudCaller.call(this, "myUsers()",AccountAdapter.getMapper(),new CloudRequest.CloudCall<UserInfoRespList>() {
      /**
       * Makes the low level call to the Cloud.
       * @return Corresponding Retrofit2 Call object
       */
      @Override
      public Call<UserInfoRespList> call() {
        return endpoints.getAccountAdminApi().getAllUsers(finalArg0, finalArg1, finalArg2, finalArg3, finalArg4, finalArg5, finalArg6, finalArg7);
      }
    } );
  }

  /**
   * Get the details of all users.
   * <p>
   * Similar to {@link #myUsers(String,String,String,int,String,String,String,String,Integer,String,String,String,String,String,String,String)}
   * @param after The entity ID to fetch after the given one.
   * @param emailEq Filter for email address.
   * @param include Comma separated additional data to return. Currently supported: total_count.
   * @param limit The number of results to return (2-1000), default is 50.
   * @param order The order of the records based on creation time, ASC or DESC; by default ASC.
   * @param statusEq Filter for status, for example active or reset.
   * @param statusIn An optional filter for getting users with a specified set of statuses.
   * @param statusNin An optional filter for excluding users with a specified set of statuses.
   * @param account an account.
   * @return something
   */
  @API
  @Nullable
  public Account myUsers(@Nullable String after, @Nullable String emailEq, @Nullable String include,
      @Nullable @DefaultValue("50") int limit, @Nullable @DefaultValue("ASC") String order,
      @Nullable String statusEq, @Nullable String statusIn, @Nullable String statusNin,
      @NonNull Account account) throws MbedCloudException {
    checkNotNull(account,TAG_ACCOUNT);
    final String finalAfter = after;
    final String finalEmailEq = emailEq;
    final String finalInclude = include;
    final int finalLimit = limit;
    final String finalOrder = order;
    final String finalStatusEq = statusEq;
    final String finalStatusIn = statusIn;
    final String finalStatusNin = statusNin;
    final Account finalAccount = account;
    return  myUsers(finalAfter, finalEmailEq, finalInclude, finalLimit, finalOrder, finalStatusEq, finalStatusIn, finalStatusNin, finalAccount.getArg0(), finalAccount.getArg1(), finalAccount.getArg2(), finalAccount.getArg3(), finalAccount.getArg4(), finalAccount.getArg5(), finalAccount.getArg6(), finalAccount.getArg7());
  }

  /**
   * Get all trusted certificates.
   * <p>
   * An endpoint for retrieving trusted certificates in an array. 
   *
   * **Example usage:**
   * `curl https://api.us-east-1.mbedcloud.com/v3/accounts/{accountID}/trusted-certificates -H 'Authorization: Bearer API_KEY'`
   * @param after The entity ID to fetch after the given one.
   * @param deviceExecutionModeEq Filter for developer certificates.
   * @param deviceExecutionModeNeq Filter for not developer certificates.
   * @param enrollmentModeEq Enrollment mode filter.
   * @param expireEq Filter for expire.
   * @param include Comma separated additional data to return. Currently supported: total_count.
   * @param issuerLike Filter for issuer. Finds all matches where the filter value is a case insensitive substring of the result. Example: issuer__like=cn=iss matches CN=issuer.
   * @param limit The number of results to return (2-1000), default is 50.
   * @param nameEq Filter for certificate name.
   * @param order The order of the records based on creation time, ASC or DESC; by default ASC.
   * @param ownerEq Owner name filter.
   * @param serviceEq Filter for service.
   * @param subjectLike Filter for subject. Finds all matches where the filter value is a case insensitive substring of the result. Example: subject__like=cn=su matches CN=subject.
   * @param arg0 null
   * @param arg1 null
   * @param arg2 null
   * @param arg3 null
   * @param arg4 null
   * @param arg5 null
   * @param arg6 null
   * @param arg7 null
   * @param arg8 null
   * @param arg9 null
   * @param arg10 null
   * @param arg11 null
   * @param arg12 null
   * @param arg13 null
   * @return something
   */
  @API
  @Nullable
  public Account trustedCertificates(@Nullable String after, @Nullable int deviceExecutionModeEq,
      @Nullable int deviceExecutionModeNeq, @Nullable boolean enrollmentModeEq,
      @Nullable int expireEq, @Nullable String include, @Nullable String issuerLike,
      @Nullable @DefaultValue("50") int limit, @Nullable String nameEq,
      @Nullable @DefaultValue("ASC") String order, @Nullable String ownerEq,
      @Nullable String serviceEq, @Nullable String subjectLike, @Nullable String arg0,
      @Nullable Integer arg1, @Nullable String arg2, @Nullable String arg3, @Nullable String arg4,
      @Nullable String arg5, @Nullable String arg6, @Nullable Integer arg7, @Nullable Integer arg8,
      @Nullable Integer arg9, @Nullable String arg10, @Nullable Boolean arg11,
      @Nullable String arg12, @Nullable String arg13) throws MbedCloudException {
    final String finalAfter = after;
    final int finalDeviceExecutionModeEq = deviceExecutionModeEq;
    final int finalDeviceExecutionModeNeq = deviceExecutionModeNeq;
    final boolean finalEnrollmentModeEq = enrollmentModeEq;
    final int finalExpireEq = expireEq;
    final String finalInclude = include;
    final String finalIssuerLike = issuerLike;
    final int finalLimit = limit;
    final String finalNameEq = nameEq;
    final String finalOrder = order;
    final String finalOwnerEq = ownerEq;
    final String finalServiceEq = serviceEq;
    final String finalSubjectLike = subjectLike;
    final String finalArg0 = arg0;
    final Integer finalArg1 = arg1;
    final String finalArg2 = arg2;
    final String finalArg3 = arg3;
    final String finalArg4 = arg4;
    final String finalArg5 = arg5;
    final String finalArg6 = arg6;
    final Integer finalArg7 = arg7;
    final Integer finalArg8 = arg8;
    final Integer finalArg9 = arg9;
    final String finalArg10 = arg10;
    final Boolean finalArg11 = arg11;
    final String finalArg12 = arg12;
    final String finalArg13 = arg13;
    return CloudCaller.call(this, "trustedCertificates()",AccountAdapter.getMapper(),new CloudRequest.CloudCall<TrustedCertificateInternalRespList>() {
      /**
       * Makes the low level call to the Cloud.
       * @return Corresponding Retrofit2 Call object
       */
      @Override
      public Call<TrustedCertificateInternalRespList> call() {
        return endpoints.getAggregatorAccountAdminApi().getAllAccountCertificates(finalArg0, finalArg1, finalArg2, finalArg3, finalArg4, finalArg5, finalArg6, finalArg7, finalArg8, finalArg9, finalArg10, finalArg11, finalArg12, finalArg13);
      }
    } );
  }

  /**
   * Get all trusted certificates.
   * <p>
   * Similar to {@link #trustedCertificates(String,int,int,boolean,int,String,String,int,String,String,String,String,String,String,Integer,String,String,String,String,String,Integer,Integer,Integer,String,Boolean,String,String)}
   * @param after The entity ID to fetch after the given one.
   * @param deviceExecutionModeEq Filter for developer certificates.
   * @param deviceExecutionModeNeq Filter for not developer certificates.
   * @param enrollmentModeEq Enrollment mode filter.
   * @param expireEq Filter for expire.
   * @param include Comma separated additional data to return. Currently supported: total_count.
   * @param issuerLike Filter for issuer. Finds all matches where the filter value is a case insensitive substring of the result. Example: issuer__like=cn=iss matches CN=issuer.
   * @param limit The number of results to return (2-1000), default is 50.
   * @param nameEq Filter for certificate name.
   * @param order The order of the records based on creation time, ASC or DESC; by default ASC.
   * @param ownerEq Owner name filter.
   * @param serviceEq Filter for service.
   * @param subjectLike Filter for subject. Finds all matches where the filter value is a case insensitive substring of the result. Example: subject__like=cn=su matches CN=subject.
   * @param account an account.
   * @return something
   */
  @API
  @Nullable
  public Account trustedCertificates(@Nullable String after, @Nullable int deviceExecutionModeEq,
      @Nullable int deviceExecutionModeNeq, @Nullable boolean enrollmentModeEq,
      @Nullable int expireEq, @Nullable String include, @Nullable String issuerLike,
      @Nullable @DefaultValue("50") int limit, @Nullable String nameEq,
      @Nullable @DefaultValue("ASC") String order, @Nullable String ownerEq,
      @Nullable String serviceEq, @Nullable String subjectLike, @NonNull Account account) throws
      MbedCloudException {
    checkNotNull(account,TAG_ACCOUNT);
    final String finalAfter = after;
    final int finalDeviceExecutionModeEq = deviceExecutionModeEq;
    final int finalDeviceExecutionModeNeq = deviceExecutionModeNeq;
    final boolean finalEnrollmentModeEq = enrollmentModeEq;
    final int finalExpireEq = expireEq;
    final String finalInclude = include;
    final String finalIssuerLike = issuerLike;
    final int finalLimit = limit;
    final String finalNameEq = nameEq;
    final String finalOrder = order;
    final String finalOwnerEq = ownerEq;
    final String finalServiceEq = serviceEq;
    final String finalSubjectLike = subjectLike;
    final Account finalAccount = account;
    return  trustedCertificates(finalAfter, finalDeviceExecutionModeEq, finalDeviceExecutionModeNeq, finalEnrollmentModeEq, finalExpireEq, finalInclude, finalIssuerLike, finalLimit, finalNameEq, finalOrder, finalOwnerEq, finalServiceEq, finalSubjectLike, finalAccount.getArg0(), finalAccount.getArg1(), finalAccount.getArg2(), finalAccount.getArg3(), finalAccount.getArg4(), finalAccount.getArg5(), finalAccount.getArg6(), finalAccount.getArg7(), finalAccount.getArg8(), finalAccount.getArg9(), finalAccount.getArg10(), finalAccount.isArg11(), finalAccount.getArg12(), finalAccount.getArg13());
  }

  /**
   * Modifies an account.
   * <p>
   * An endpoint for updating an account. 
   *
   * **Example usage:**
   * `curl -X PUT https://api.us-east-1.mbedcloud.com/v3/accounts/{account-id} -d '{"phone_number": "12345678"}' -H 'content-type: application/json' -H 'Authorization: Bearer API_KEY'`
   * @param arg0 null
   * @param arg1 an account.
   * @return an updated  account
   */
  @API
  @Nullable
  public Account updateAccount(@Nullable String arg0, @NonNull Account arg1) throws
      MbedCloudException {
    checkNotNull(arg1,TAG_ARG1);
    checkModelValidity(arg1,TAG_ARG1);
    final String finalArg0 = arg0;
    final Account finalArg1 = arg1;
    return CloudCaller.call(this, "updateAccount()",AccountAdapter.getMapper(),new CloudRequest.CloudCall<AccountInfo>() {
      /**
       * Makes the low level call to the Cloud.
       * @return Corresponding Retrofit2 Call object
       */
      @Override
      public Call<AccountInfo> call() {
        return endpoints.getAggregatorAccountAdminApi().updateAccount(finalArg0, AccountAdapter.reverseMapUpdateRequest(finalArg1));
      }
    } );
  }

  /**
   * Modifies an account.
   * <p>
   * Similar to {@link #updateAccount(String,Account)}
   * @param account an account.
   * @return something
   */
  @API
  @Nullable
  public Account updateAccount(@NonNull Account account) throws MbedCloudException {
    checkNotNull(account,TAG_ACCOUNT);
    checkModelValidity(account,TAG_ACCOUNT);
    final Account finalAccount = account;
    return  updateAccount(finalAccount.getArg0(), finalAccount.getArg1());
  }

  /**
   * Get the details of all the user invitations.
   * <p>
   * An endpoint for retrieving the details of all the active user invitations sent for new or existing users to join the account. 
   *
   * **Example usage:**
   * `curl https://api.us-east-1.mbedcloud.com/v3/accounts/{account-id}/user-invitations -H 'Authorization: Bearer API_KEY'`
   * @param after The entity ID to fetch after the given one.
   * @param limit The number of results to return (2-1000), default is 50.
   * @param order The order of the records based on creation time, ASC or DESC; by default ASC.
   * @param arg0 null
   * @param arg1 null
   * @param arg2 null
   * @param arg3 null
   * @return something
   */
  @API
  @Nullable
  public Account userInvitations(@Nullable String after, @Nullable @DefaultValue("50") int limit,
      @Nullable @DefaultValue("ASC") String order, @Nullable String arg0, @Nullable Integer arg1,
      @Nullable String arg2, @Nullable String arg3) throws MbedCloudException {
    final String finalAfter = after;
    final int finalLimit = limit;
    final String finalOrder = order;
    final String finalArg0 = arg0;
    final Integer finalArg1 = arg1;
    final String finalArg2 = arg2;
    final String finalArg3 = arg3;
    return CloudCaller.call(this, "userInvitations()",AccountAdapter.getMapper(),new CloudRequest.CloudCall<UserInvitationRespList>() {
      /**
       * Makes the low level call to the Cloud.
       * @return Corresponding Retrofit2 Call object
       */
      @Override
      public Call<UserInvitationRespList> call() {
        return endpoints.getAggregatorAccountAdminApi().getAllAccountInvitations(finalArg0, finalArg1, finalArg2, finalArg3);
      }
    } );
  }

  /**
   * Get the details of all the user invitations.
   * <p>
   * Similar to {@link #userInvitations(String,int,String,String,Integer,String,String)}
   * @param after The entity ID to fetch after the given one.
   * @param limit The number of results to return (2-1000), default is 50.
   * @param order The order of the records based on creation time, ASC or DESC; by default ASC.
   * @param account an account.
   * @return something
   */
  @API
  @Nullable
  public Account userInvitations(@Nullable String after, @Nullable @DefaultValue("50") int limit,
      @Nullable @DefaultValue("ASC") String order, @NonNull Account account) throws
      MbedCloudException {
    checkNotNull(account,TAG_ACCOUNT);
    final String finalAfter = after;
    final int finalLimit = limit;
    final String finalOrder = order;
    final Account finalAccount = account;
    return  userInvitations(finalAfter, finalLimit, finalOrder, finalAccount.getArg0(), finalAccount.getArg1(), finalAccount.getArg2(), finalAccount.getArg3());
  }

  /**
   * Get all user details.
   * <p>
   * An endpoint for retrieving details of all users. 
   *
   * **Example usage:**
   * `curl https://api.us-east-1.mbedcloud.com/v3/accounts/{accountID}/users -H 'Authorization: Bearer API_KEY'`
   * @param after The entity ID to fetch after the given one.
   * @param emailEq Filter for email address.
   * @param include Comma separated additional data to return. Currently supported: total_count.
   * @param limit The number of results to return (2-1000), default is 50.
   * @param order The order of the records based on creation time, ASC or DESC; by default ASC.
   * @param statusEq Filter for status.
   * @param statusIn An optional filter for getting users with a specified set of statuses.
   * @param statusNin An optional filter for excluding users with a specified set of statuses.
   * @param arg0 null
   * @param arg1 null
   * @param arg2 null
   * @param arg3 null
   * @param arg4 null
   * @param arg5 null
   * @param arg6 null
   * @param arg7 null
   * @param arg8 null
   * @return something
   */
  @API
  @Nullable
  public Account users(@Nullable String after, @Nullable String emailEq, @Nullable String include,
      @Nullable @DefaultValue("50") int limit, @Nullable @DefaultValue("ASC") String order,
      @Nullable String statusEq, @Nullable String statusIn, @Nullable String statusNin,
      @Nullable String arg0, @Nullable Integer arg1, @Nullable String arg2, @Nullable String arg3,
      @Nullable String arg4, @Nullable String arg5, @Nullable String arg6, @Nullable String arg7,
      @Nullable String arg8) throws MbedCloudException {
    final String finalAfter = after;
    final String finalEmailEq = emailEq;
    final String finalInclude = include;
    final int finalLimit = limit;
    final String finalOrder = order;
    final String finalStatusEq = statusEq;
    final String finalStatusIn = statusIn;
    final String finalStatusNin = statusNin;
    final String finalArg0 = arg0;
    final Integer finalArg1 = arg1;
    final String finalArg2 = arg2;
    final String finalArg3 = arg3;
    final String finalArg4 = arg4;
    final String finalArg5 = arg5;
    final String finalArg6 = arg6;
    final String finalArg7 = arg7;
    final String finalArg8 = arg8;
    return CloudCaller.call(this, "users()",AccountAdapter.getMapper(),new CloudRequest.CloudCall<UserInfoRespList>() {
      /**
       * Makes the low level call to the Cloud.
       * @return Corresponding Retrofit2 Call object
       */
      @Override
      public Call<UserInfoRespList> call() {
        return endpoints.getAggregatorAccountAdminApi().getAllAccountUsers(finalArg0, finalArg1, finalArg2, finalArg3, finalArg4, finalArg5, finalArg6, finalArg7, finalArg8);
      }
    } );
  }

  /**
   * Get all user details.
   * <p>
   * Similar to {@link #users(String,String,String,int,String,String,String,String,String,Integer,String,String,String,String,String,String,String)}
   * @param after The entity ID to fetch after the given one.
   * @param emailEq Filter for email address.
   * @param include Comma separated additional data to return. Currently supported: total_count.
   * @param limit The number of results to return (2-1000), default is 50.
   * @param order The order of the records based on creation time, ASC or DESC; by default ASC.
   * @param statusEq Filter for status.
   * @param statusIn An optional filter for getting users with a specified set of statuses.
   * @param statusNin An optional filter for excluding users with a specified set of statuses.
   * @param account an account.
   * @return something
   */
  @API
  @Nullable
  public Account users(@Nullable String after, @Nullable String emailEq, @Nullable String include,
      @Nullable @DefaultValue("50") int limit, @Nullable @DefaultValue("ASC") String order,
      @Nullable String statusEq, @Nullable String statusIn, @Nullable String statusNin,
      @NonNull Account account) throws MbedCloudException {
    checkNotNull(account,TAG_ACCOUNT);
    final String finalAfter = after;
    final String finalEmailEq = emailEq;
    final String finalInclude = include;
    final int finalLimit = limit;
    final String finalOrder = order;
    final String finalStatusEq = statusEq;
    final String finalStatusIn = statusIn;
    final String finalStatusNin = statusNin;
    final Account finalAccount = account;
    return  users(finalAfter, finalEmailEq, finalInclude, finalLimit, finalOrder, finalStatusEq, finalStatusIn, finalStatusNin, finalAccount.getArg0(), finalAccount.getArg1(), finalAccount.getArg2(), finalAccount.getArg3(), finalAccount.getArg4(), finalAccount.getArg5(), finalAccount.getArg6(), finalAccount.getArg7(), finalAccount.getArg8());
  }

  /**
   * Gets module name.
   * @return module name
   */
  @Override
  @Internal
  public String getModuleName() {
    return "Accounts";
  }

  /**
   * Gets an api key.
   * <p>
   * An endpoint for retrieving API key details. 
   *
   * **Example usage:**
   * `curl https://api.us-east-1.mbedcloud.com/v3/api-keys/{apikey-id} -H 'Authorization: Bearer API_KEY'`
   * @param arg0 null
   * @return something
   */
  @API
  @Nullable
  public ApiKey getApiKey(@Nullable String arg0) throws MbedCloudException {
    final String finalArg0 = arg0;
    return CloudCaller.call(this, "getApiKey()",ApiKeyAdapter.getMapper(),new CloudRequest.CloudCall<ApiKeyInfoResp>() {
      /**
       * Makes the low level call to the Cloud.
       * @return Corresponding Retrofit2 Call object
       */
      @Override
      public Call<ApiKeyInfoResp> call() {
        return endpoints.getDeveloperApi().getApiKey(finalArg0);
      }
    } );
  }

  /**
   * Gets an api key.
   * <p>
   * Similar to {@link #getApiKey(String)}
   * @param apiKey an api key.
   * @return something
   */
  @API
  @Nullable
  public ApiKey getApiKey(@NonNull ApiKey apiKey) throws MbedCloudException {
    checkNotNull(apiKey,TAG_API_KEY);
    final ApiKey finalApiKey = apiKey;
    return  getApiKey(finalApiKey.getArg0());
  }

  /**
   * Lists api keys matching filter options.
   * <p>
   * An endpoint for retrieving API keys in an array, optionally filtered by the owner. 
   *
   * **Example usage:**
   * `curl https://api.us-east-1.mbedcloud.com/v3/api-keys -H 'Authorization: Bearer API_KEY'`
   * @param arg0 null
   * @param arg1 null
   * @param arg2 null
   * @param arg3 null
   * @param arg4 null
   * @param arg5 null
   * @param options list options.
   * @return the list of api keys corresponding to filter options (One page).
   */
  @API
  @Nullable
  public ListResponse<ApiKey> listApiKeys(@Nullable Integer arg0, @Nullable String arg1,
      @Nullable String arg2, @Nullable String arg3, @Nullable String arg4, @Nullable String arg5,
      @Nullable ApiKeyListOptions options) throws MbedCloudException {
    final Integer finalArg0 = arg0;
    final String finalArg1 = arg1;
    final String finalArg2 = arg2;
    final String finalArg3 = arg3;
    final String finalArg4 = arg4;
    final String finalArg5 = arg5;
    final ApiKeyListOptions finalOptions = (options == null)? new ApiKeyListOptions() : options;
    return CloudCaller.call(this, "listApiKeys()",ApiKeyAdapter.getListMapper(),new CloudRequest.CloudCall<ApiKeyInfoRespList>() {
      /**
       * Makes the low level call to the Cloud.
       * @return Corresponding Retrofit2 Call object
       */
      @Override
      public Call<ApiKeyInfoRespList> call() {
        return endpoints.getDeveloperApi().getAllApiKeys(finalArg0, finalArg1, finalArg2, finalArg3, finalArg4, finalArg5);
      }
    } );
  }

  /**
   * Creates a {@link Paginator} for the list of api keys matching filter options.
   * <p>
   * Gets an iterator over all api keys matching filter options.
   * @param arg0 null
   * @param arg1 null
   * @param arg2 null
   * @param arg3 null
   * @param arg4 null
   * @param arg5 null
   * @param options list options.
   * @return paginator over the list of api keys
   */
  @API
  @Nullable
  public Paginator<ApiKey> listAllApiKeys(@Nullable Integer arg0, @Nullable String arg1,
      @Nullable String arg2, @Nullable String arg3, @Nullable String arg4, @Nullable String arg5,
      @Nullable ApiKeyListOptions options) throws MbedCloudException {
    final Integer finalArg0 = arg0;
    final String finalArg1 = arg1;
    final String finalArg2 = arg2;
    final String finalArg3 = arg3;
    final String finalArg4 = arg4;
    final String finalArg5 = arg5;
    final ApiKeyListOptions finalOptions = (options == null)? new ApiKeyListOptions() : options;
    return new Paginator<ApiKey>(finalOptions, new PageRequester<ApiKey>() {
      /**
       * Makes one page request.
       * @param options a list options.
       * @return Corresponding page requester
       */
      @Override
      public ListResponse<ApiKey> requestNewPage(ListOptions options) throws MbedCloudException {
        return listApiKeys(finalArg0, finalArg1, finalArg2, finalArg3, finalArg4, finalArg5, (ApiKeyListOptions) options);
      }
    });
  }

  /**
   * Adds a user.
   * <p>
   * An endpoint for creating or inviting a new user to the account. In case of invitation email address is used only, other attributes are set in the 2nd step. 
   *
   * **Example usage:**
   * `curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{accountID}/users -d {"email": "myemail@company.com"} -H 'content-type: application/json' -H 'Authorization: Bearer API_KEY'`
   * @param action Create or invite user.
   * @param arg0 null
   * @param arg1 a user.
   * @param arg2 null
   * @return an added  user
   */
  @API
  @Nullable
  public User createUser(@Nullable @DefaultValue("create") String action, @Nullable String arg0,
      @NonNull User arg1, @Nullable String arg2) throws MbedCloudException {
    checkNotNull(arg1,TAG_ARG1);
    checkModelValidity(arg1,TAG_ARG1);
    final String finalAction = action;
    final String finalArg0 = arg0;
    final User finalArg1 = arg1;
    final String finalArg2 = arg2;
    return CloudCaller.call(this, "createUser()",UserAdapter.getMapper(),new CloudRequest.CloudCall<UserInfoResp>() {
      /**
       * Makes the low level call to the Cloud.
       * @return Corresponding Retrofit2 Call object
       */
      @Override
      public Call<UserInfoResp> call() {
        return endpoints.getAggregatorAccountAdminApi().createAccountUser(finalArg0, UserAdapter.reverseMapAddRequest(finalArg1), finalArg2);
      }
    } );
  }

  /**
   * Adds a user.
   * <p>
   * Similar to {@link #createUser(String,String,User,String)}
   * @param action Create or invite user.
   * @param user a user.
   * @return something
   */
  @API
  @Nullable
  public User createUser(@Nullable @DefaultValue("create") String action, @NonNull User user) throws
      MbedCloudException {
    checkNotNull(user,TAG_USER);
    checkModelValidity(user,TAG_USER);
    final String finalAction = action;
    final User finalUser = user;
    return  createUser(finalAction, finalUser.getArg0(), finalUser.getArg1(), finalUser.getArg2());
  }

  /**
   * Deletes a user.
   * <p>
   * An endpoint for deleting a user. 
   *
   * **Example usage:**
   * `curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/accounts/{accountID}/users/{user-id} -H 'Authorization: Bearer API_KEY'`
   * @param arg0 null
   * @param arg1 null
   */
  @API
  public void deleteUser(@Nullable String arg0, @Nullable String arg1) throws MbedCloudException {
    final String finalArg0 = arg0;
    final String finalArg1 = arg1;
    CloudCaller.call(this, "deleteUser()",null,new CloudRequest.CloudCall<Void>() {
      /**
       * Makes the low level call to the Cloud.
       * @return Corresponding Retrofit2 Call object
       */
      @Override
      public Call<Void> call() {
        return endpoints.getAggregatorAccountAdminApi().deleteAccountUser(finalArg0, finalArg1);
      }
    } );
  }

  /**
   * Deletes a user.
   * <p>
   * Similar to {@link #deleteUser(String,String)}
   * @param user a user.
   */
  @API
  public void deleteUser(@NonNull User user) throws MbedCloudException {
    checkNotNull(user,TAG_USER);
    final User finalUser = user;
     deleteUser(finalUser.getArg0(), finalUser.getArg1());
  }

  /**
   * Gets a user.
   * <p>
   * An endpoint for retrieving details of the user. 
   *
   * **Example usage:**
   * `curl https://api.us-east-1.mbedcloud.com/v3/accounts/{accountID}/users/{userID} -H 'Authorization: Bearer API_KEY'`
   * @param arg0 null
   * @param arg1 null
   * @return something
   */
  @API
  @Nullable
  public User getUser(@Nullable String arg0, @Nullable String arg1) throws MbedCloudException {
    final String finalArg0 = arg0;
    final String finalArg1 = arg1;
    return CloudCaller.call(this, "getUser()",UserAdapter.getMapper(),new CloudRequest.CloudCall<UserInfoResp>() {
      /**
       * Makes the low level call to the Cloud.
       * @return Corresponding Retrofit2 Call object
       */
      @Override
      public Call<UserInfoResp> call() {
        return endpoints.getAggregatorAccountAdminApi().getAccountUser(finalArg0, finalArg1);
      }
    } );
  }

  /**
   * Gets a user.
   * <p>
   * Similar to {@link #getUser(String,String)}
   * @param user a user.
   * @return something
   */
  @API
  @Nullable
  public User getUser(@NonNull User user) throws MbedCloudException {
    checkNotNull(user,TAG_USER);
    final User finalUser = user;
    return  getUser(finalUser.getArg0(), finalUser.getArg1());
  }

  /**
   * Lists users matching filter options.
   * <p>
   * An endpoint for retrieving details of all users. 
   *
   * **Example usage:**
   * `curl https://api.us-east-1.mbedcloud.com/v3/accounts/{accountID}/users -H 'Authorization: Bearer API_KEY'`
   * @param arg0 null
   * @param arg1 null
   * @param arg2 null
   * @param arg3 null
   * @param arg4 null
   * @param arg5 null
   * @param arg6 null
   * @param arg7 null
   * @param arg8 null
   * @param options list options.
   * @return the list of users corresponding to filter options (One page).
   */
  @API
  @Nullable
  public ListResponse<User> listUsers(@Nullable String arg0, @Nullable Integer arg1,
      @Nullable String arg2, @Nullable String arg3, @Nullable String arg4, @Nullable String arg5,
      @Nullable String arg6, @Nullable String arg7, @Nullable String arg8,
      @Nullable UserListOptions options) throws MbedCloudException {
    final String finalArg0 = arg0;
    final Integer finalArg1 = arg1;
    final String finalArg2 = arg2;
    final String finalArg3 = arg3;
    final String finalArg4 = arg4;
    final String finalArg5 = arg5;
    final String finalArg6 = arg6;
    final String finalArg7 = arg7;
    final String finalArg8 = arg8;
    final UserListOptions finalOptions = (options == null)? new UserListOptions() : options;
    return CloudCaller.call(this, "listUsers()",UserAdapter.getListMapper(),new CloudRequest.CloudCall<UserInfoRespList>() {
      /**
       * Makes the low level call to the Cloud.
       * @return Corresponding Retrofit2 Call object
       */
      @Override
      public Call<UserInfoRespList> call() {
        return endpoints.getAggregatorAccountAdminApi().getAllAccountUsers(finalArg0, finalArg1, finalArg2, finalArg3, finalArg4, finalArg5, finalArg6, finalArg7, finalArg8);
      }
    } );
  }

  /**
   * Creates a {@link Paginator} for the list of users matching filter options.
   * <p>
   * Gets an iterator over all users matching filter options.
   * @param arg0 null
   * @param arg1 null
   * @param arg2 null
   * @param arg3 null
   * @param arg4 null
   * @param arg5 null
   * @param arg6 null
   * @param arg7 null
   * @param arg8 null
   * @param options list options.
   * @return paginator over the list of users
   */
  @API
  @Nullable
  public Paginator<User> listAllUsers(@Nullable String arg0, @Nullable Integer arg1,
      @Nullable String arg2, @Nullable String arg3, @Nullable String arg4, @Nullable String arg5,
      @Nullable String arg6, @Nullable String arg7, @Nullable String arg8,
      @Nullable UserListOptions options) throws MbedCloudException {
    final String finalArg0 = arg0;
    final Integer finalArg1 = arg1;
    final String finalArg2 = arg2;
    final String finalArg3 = arg3;
    final String finalArg4 = arg4;
    final String finalArg5 = arg5;
    final String finalArg6 = arg6;
    final String finalArg7 = arg7;
    final String finalArg8 = arg8;
    final UserListOptions finalOptions = (options == null)? new UserListOptions() : options;
    return new Paginator<User>(finalOptions, new PageRequester<User>() {
      /**
       * Makes one page request.
       * @param options a list options.
       * @return Corresponding page requester
       */
      @Override
      public ListResponse<User> requestNewPage(ListOptions options) throws MbedCloudException {
        return listUsers(finalArg0, finalArg1, finalArg2, finalArg3, finalArg4, finalArg5, finalArg6, finalArg7, finalArg8, (UserListOptions) options);
      }
    });
  }

  /**
   * Modifies a user.
   * <p>
   * An endpoint for updating user details. 
   *
   * **Example usage:**
   * `curl -X PUT https://api.us-east-1.mbedcloud.com/v3/accounts/{accountID}/users/{user-id} -d '{"username": "myusername"}' -H 'content-type: application/json' -H 'Authorization: Bearer API_KEY'`
   * @param arg0 null
   * @param arg1 null
   * @param arg2 a user.
   * @return an updated  user
   */
  @API
  @Nullable
  public User updateUser(@Nullable String arg0, @Nullable String arg1, @NonNull User arg2) throws
      MbedCloudException {
    checkNotNull(arg2,TAG_ARG2);
    checkModelValidity(arg2,TAG_ARG2);
    final String finalArg0 = arg0;
    final String finalArg1 = arg1;
    final User finalArg2 = arg2;
    return CloudCaller.call(this, "updateUser()",UserAdapter.getMapper(),new CloudRequest.CloudCall<UserInfoResp>() {
      /**
       * Makes the low level call to the Cloud.
       * @return Corresponding Retrofit2 Call object
       */
      @Override
      public Call<UserInfoResp> call() {
        return endpoints.getAggregatorAccountAdminApi().updateAccountUser(finalArg0, finalArg1, UserAdapter.reverseMapUpdateRequest(finalArg2));
      }
    } );
  }

  /**
   * Modifies a user.
   * <p>
   * Similar to {@link #updateUser(String,String,User)}
   * @param user a user.
   * @return something
   */
  @API
  @Nullable
  public User updateUser(@NonNull User user) throws MbedCloudException {
    checkNotNull(user,TAG_USER);
    checkModelValidity(user,TAG_USER);
    final User finalUser = user;
    return  updateUser(finalUser.getArg0(), finalUser.getArg1(), finalUser.getArg2());
  }

  /**
   * Validate the user email.
   * <p>
   * An endpoint for validating the user email. 
   *
   * **Example usage:**
   * `curl -X POST https://api.us-east-1.mbedcloud.com/v3/accounts/{accountID}/users/{user-id}/validate-email -H 'Authorization: Bearer API_KEY'`
   * @param arg0 null
   * @param arg1 null
   */
  @API
  public void validateEmail(@Nullable String arg0, @Nullable String arg1) throws
      MbedCloudException {
    final String finalArg0 = arg0;
    final String finalArg1 = arg1;
    CloudCaller.call(this, "validateEmail()",null,new CloudRequest.CloudCall<Void>() {
      /**
       * Makes the low level call to the Cloud.
       * @return Corresponding Retrofit2 Call object
       */
      @Override
      public Call<Void> call() {
        return endpoints.getAggregatorAccountAdminApi().validateAccountUserEmail(finalArg0, finalArg1);
      }
    } );
  }

  /**
   * Validate the user email.
   * <p>
   * Similar to {@link #validateEmail(String,String)}
   * @param user a user.
   */
  @API
  public void validateEmail(@NonNull User user) throws MbedCloudException {
    checkNotNull(user,TAG_USER);
    final User finalUser = user;
     validateEmail(finalUser.getArg0(), finalUser.getArg1());
  }

  /**
   * Adds a user invitation.
   * <p>
   * An endpoint for inviting a new or an existing user to join the account. 
   *
   * **Example usage:**
   * `curl -X POST https://api.us-east-1.mbedcloud.com/v3/accouns/{account-id}/user-invitations -d {"email": "myemail@company.com"} -H 'content-type: application/json' -H 'Authorization: Bearer API_KEY'`
   * @param arg0 null
   * @param arg1 a user invitation.
   * @return an added  user invitation
   */
  @API
  @Nullable
  public UserInvitation createUserInvitation(@Nullable String arg0, @NonNull UserInvitation arg1)
      throws MbedCloudException {
    checkNotNull(arg1,TAG_ARG1);
    checkModelValidity(arg1,TAG_ARG1);
    final String finalArg0 = arg0;
    final UserInvitation finalArg1 = arg1;
    return CloudCaller.call(this, "createUserInvitation()",UserInvitationAdapter.getMapper(),new CloudRequest.CloudCall<UserInvitationResp>() {
      /**
       * Makes the low level call to the Cloud.
       * @return Corresponding Retrofit2 Call object
       */
      @Override
      public Call<UserInvitationResp> call() {
        return endpoints.getAggregatorAccountAdminApi().createAccountInvitation(finalArg0, UserInvitationAdapter.reverseMapAddRequest(finalArg1));
      }
    } );
  }

  /**
   * Adds a user invitation.
   * <p>
   * Similar to {@link #createUserInvitation(String,UserInvitation)}
   * @param userInvitation a user invitation.
   * @return something
   */
  @API
  @Nullable
  public UserInvitation createUserInvitation(@NonNull UserInvitation userInvitation) throws
      MbedCloudException {
    checkNotNull(userInvitation,TAG_USER_INVITATION);
    checkModelValidity(userInvitation,TAG_USER_INVITATION);
    final UserInvitation finalUserInvitation = userInvitation;
    return  createUserInvitation(finalUserInvitation.getArg0(), finalUserInvitation.getArg1());
  }

  /**
   * Deletes a user invitation.
   * <p>
   * An endpoint for deleting an active user invitation which has been sent for a new or an existing user to join the account. 
   *
   * **Example usage:**
   * `curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/accounts/{account-id}/user-invitations/{invitation-id} -H 'Authorization: Bearer API_KEY'`
   * @param arg0 null
   * @param arg1 null
   */
  @API
  public void deleteUserInvitation(@Nullable String arg0, @Nullable String arg1) throws
      MbedCloudException {
    final String finalArg0 = arg0;
    final String finalArg1 = arg1;
    CloudCaller.call(this, "deleteUserInvitation()",null,new CloudRequest.CloudCall<Void>() {
      /**
       * Makes the low level call to the Cloud.
       * @return Corresponding Retrofit2 Call object
       */
      @Override
      public Call<Void> call() {
        return endpoints.getAggregatorAccountAdminApi().deleteAccountInvitation(finalArg0, finalArg1);
      }
    } );
  }

  /**
   * Deletes a user invitation.
   * <p>
   * Similar to {@link #deleteUserInvitation(String,String)}
   * @param userInvitation a user invitation.
   */
  @API
  public void deleteUserInvitation(@NonNull UserInvitation userInvitation) throws
      MbedCloudException {
    checkNotNull(userInvitation,TAG_USER_INVITATION);
    final UserInvitation finalUserInvitation = userInvitation;
     deleteUserInvitation(finalUserInvitation.getArg0(), finalUserInvitation.getArg1());
  }

  /**
   * Gets a user invitation.
   * <p>
   * An endpoint for retrieving the details of an active user invitation sent for a new or an existing user to join the account. 
   *
   * **Example usage:**
   * `curl https://api.us-east-1.mbedcloud.com/v3/accounts/{account-id}/user-invitations/{invitation-id} -H 'Authorization: Bearer API_KEY'`
   * @param arg0 null
   * @param arg1 null
   * @return something
   */
  @API
  @Nullable
  public UserInvitation getUserInvitation(@Nullable String arg0, @Nullable String arg1) throws
      MbedCloudException {
    final String finalArg0 = arg0;
    final String finalArg1 = arg1;
    return CloudCaller.call(this, "getUserInvitation()",UserInvitationAdapter.getMapper(),new CloudRequest.CloudCall<UserInvitationResp>() {
      /**
       * Makes the low level call to the Cloud.
       * @return Corresponding Retrofit2 Call object
       */
      @Override
      public Call<UserInvitationResp> call() {
        return endpoints.getAggregatorAccountAdminApi().getAccountInvitation(finalArg0, finalArg1);
      }
    } );
  }

  /**
   * Gets a user invitation.
   * <p>
   * Similar to {@link #getUserInvitation(String,String)}
   * @param userInvitation a user invitation.
   * @return something
   */
  @API
  @Nullable
  public UserInvitation getUserInvitation(@NonNull UserInvitation userInvitation) throws
      MbedCloudException {
    checkNotNull(userInvitation,TAG_USER_INVITATION);
    final UserInvitation finalUserInvitation = userInvitation;
    return  getUserInvitation(finalUserInvitation.getArg0(), finalUserInvitation.getArg1());
  }

  /**
   * Lists user invitations matching filter options.
   * <p>
   * An endpoint for retrieving the details of all the active user invitations sent for new or existing users to join the account. 
   *
   * **Example usage:**
   * `curl https://api.us-east-1.mbedcloud.com/v3/accounts/{account-id}/user-invitations -H 'Authorization: Bearer API_KEY'`
   * @param arg0 null
   * @param arg1 null
   * @param arg2 null
   * @param arg3 null
   * @param options list options.
   * @return the list of user invitations corresponding to filter options (One page).
   */
  @API
  @Nullable
  public ListResponse<UserInvitation> listUserInvitations(@Nullable String arg0,
      @Nullable Integer arg1, @Nullable String arg2, @Nullable String arg3,
      @Nullable UserInvitationListOptions options) throws MbedCloudException {
    final String finalArg0 = arg0;
    final Integer finalArg1 = arg1;
    final String finalArg2 = arg2;
    final String finalArg3 = arg3;
    final UserInvitationListOptions finalOptions = (options == null)? new UserInvitationListOptions() : options;
    return CloudCaller.call(this, "listUserInvitations()",UserInvitationAdapter.getListMapper(),new CloudRequest.CloudCall<UserInvitationRespList>() {
      /**
       * Makes the low level call to the Cloud.
       * @return Corresponding Retrofit2 Call object
       */
      @Override
      public Call<UserInvitationRespList> call() {
        return endpoints.getAggregatorAccountAdminApi().getAllAccountInvitations(finalArg0, finalArg1, finalArg2, finalArg3);
      }
    } );
  }

  /**
   * Creates a {@link Paginator} for the list of user invitations matching filter options.
   * <p>
   * Gets an iterator over all user invitations matching filter options.
   * @param arg0 null
   * @param arg1 null
   * @param arg2 null
   * @param arg3 null
   * @param options list options.
   * @return paginator over the list of user invitations
   */
  @API
  @Nullable
  public Paginator<UserInvitation> listAllUserInvitations(@Nullable String arg0,
      @Nullable Integer arg1, @Nullable String arg2, @Nullable String arg3,
      @Nullable UserInvitationListOptions options) throws MbedCloudException {
    final String finalArg0 = arg0;
    final Integer finalArg1 = arg1;
    final String finalArg2 = arg2;
    final String finalArg3 = arg3;
    final UserInvitationListOptions finalOptions = (options == null)? new UserInvitationListOptions() : options;
    return new Paginator<UserInvitation>(finalOptions, new PageRequester<UserInvitation>() {
      /**
       * Makes one page request.
       * @param options a list options.
       * @return Corresponding page requester
       */
      @Override
      public ListResponse<UserInvitation> requestNewPage(ListOptions options) throws
          MbedCloudException {
        return listUserInvitations(finalArg0, finalArg1, finalArg2, finalArg3, (UserInvitationListOptions) options);
      }
    });
  }
}
