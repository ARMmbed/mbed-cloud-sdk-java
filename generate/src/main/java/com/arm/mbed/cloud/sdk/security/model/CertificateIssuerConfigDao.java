// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import com.arm.mbed.cloud.sdk.Security;
import com.arm.mbed.cloud.sdk.annotations.Internal;
import com.arm.mbed.cloud.sdk.annotations.NonNull;
import com.arm.mbed.cloud.sdk.annotations.Nullable;
import com.arm.mbed.cloud.sdk.annotations.Preamble;
import com.arm.mbed.cloud.sdk.common.ApiClientWrapper;
import com.arm.mbed.cloud.sdk.common.ConnectionOptions;
import com.arm.mbed.cloud.sdk.common.MbedCloudException;
import com.arm.mbed.cloud.sdk.common.SdkContext;
import com.arm.mbed.cloud.sdk.common.dao.AbstractModelDao;
import com.arm.mbed.cloud.sdk.common.dao.CrudDao;
import java.lang.Override;
import java.lang.String;

/**
 * Data Access Object (DAO) for certificate issuer configs.
 * <p>
 * @see <a  href="http://www.corej2eepatterns.com/Patterns/DataAccessObject.htm">Core J2EE Patterns - Data Access Object</a> */
@Preamble(
    description = "Data Access Object (DAO) for certificate issuer configs."
)
public class CertificateIssuerConfigDao extends AbstractModelDao<CertificateIssuerConfig> implements CrudDao<CertificateIssuerConfig> {
  /**
   * Constructor.
   */
  public CertificateIssuerConfigDao() throws MbedCloudException {
    super();
  }

  /**
   * Adds a certificate issuer config.
   * <p>
   * Similar to {@link com.arm.mbed.cloud.sdk.security.model.CertificateIssuerConfig#createCertificateIssuerConfig(CertificateIssuerConfig)}
   */
  @Override
  public void create() throws MbedCloudException {
    checkDaoConfiguration();
    setModel(module.createCertificateIssuerConfig(getModel()));
  }

  /**
   * Adds a certificate issuer config.
   * <p>
   * Similar to {@link com.arm.mbed.cloud.sdk.security.model.CertificateIssuerConfig#createCertificateIssuerConfig(CertificateIssuerConfig)}
   * @param arg0 a certificate issuer config.
   */
  @Override
  public void create(@NonNull @NonNull CertificateIssuerConfig arg0) throws MbedCloudException {
    checkDaoConfiguration();
    setModel(arg0);
    create();
  }

  /**
   * Deletes a certificate issuer config.
   * <p>
   * Similar to {@link com.arm.mbed.cloud.sdk.security.model.CertificateIssuerConfig#deleteCertificateIssuerConfig(String)}
   * @param arg0 null
   */
  @Override
  public void delete(@Nullable @Nullable String arg0) throws MbedCloudException {
    checkDaoConfiguration();
    module.deleteCertificateIssuerConfig(arg0);
  }

  /**
   * Deletes a certificate issuer config.
   * <p>
   * Similar to {@link com.arm.mbed.cloud.sdk.security.model.CertificateIssuerConfig#deleteCertificateIssuerConfig(CertificateIssuerConfig)}
   */
  @Override
  public void delete() throws MbedCloudException {
    checkDaoConfiguration();
    module.deleteCertificateIssuerConfig(getModel());
  }

  /**
   * Deletes a certificate issuer config.
   * <p>
   * Similar to {@link com.arm.mbed.cloud.sdk.security.model.CertificateIssuerConfig#deleteCertificateIssuerConfig(CertificateIssuerConfig)}
   * @param certificateIssuerConfig a certificate issuer config.
   */
  @Override
  public void delete(@NonNull @NonNull CertificateIssuerConfig certificateIssuerConfig) throws
      MbedCloudException {
    checkDaoConfiguration();
    setModel(certificateIssuerConfig);
    delete();
  }

  /**
   * Gets a certificate issuer config.
   * <p>
   * Similar to {@link com.arm.mbed.cloud.sdk.security.model.CertificateIssuerConfig#getCertificateIssuerConfig(String)}
   * @param arg0 null
   */
  @Override
  public void read(@Nullable @Nullable String arg0) throws MbedCloudException {
    checkDaoConfiguration();
    setModel(module.getCertificateIssuerConfig(arg0));
  }

  /**
   * Gets a certificate issuer config.
   * <p>
   * Similar to {@link com.arm.mbed.cloud.sdk.security.model.CertificateIssuerConfig#getCertificateIssuerConfig(CertificateIssuerConfig)}
   */
  @Override
  public void read() throws MbedCloudException {
    checkDaoConfiguration();
    setModel(module.getCertificateIssuerConfig(getModel()));
  }

  /**
   * Modifies a certificate issuer config.
   * <p>
   * Similar to {@link com.arm.mbed.cloud.sdk.security.model.CertificateIssuerConfig#updateCertificateIssuerConfig(String,CertificateIssuerConfig)}
   * @param arg0 null
   */
  public void update(@Nullable @Nullable String arg0) throws MbedCloudException {
    checkDaoConfiguration();
    setModel(module.updateCertificateIssuerConfig(arg0, getModel()));
  }

  /**
   * Modifies a certificate issuer config.
   * <p>
   * Similar to {@link com.arm.mbed.cloud.sdk.security.model.CertificateIssuerConfig#updateCertificateIssuerConfig(CertificateIssuerConfig)}
   */
  @Override
  public void update() throws MbedCloudException {
    checkDaoConfiguration();
    setModel(module.updateCertificateIssuerConfig(getModel()));
  }

  /**
   * Modifies a certificate issuer config.
   * <p>
   * Similar to {@link com.arm.mbed.cloud.sdk.security.model.CertificateIssuerConfig#updateCertificateIssuerConfig(CertificateIssuerConfig)}
   * @param certificateIssuerConfig a certificate issuer config.
   */
  @Override
  public void update(@NonNull @NonNull CertificateIssuerConfig certificateIssuerConfig) throws
      MbedCloudException {
    checkDaoConfiguration();
    setModel(certificateIssuerConfig);
    update();
  }

  /**
   * Instantiates modules.
   * @param client an api client wrapper.
   * @return instantiated module
   */
  @Override
  @Internal
  protected SdkContext instantiateModule(ApiClientWrapper client) {
    return new Security(client);
  }

  /**
   * Instantiates modules.
   * @param context an sdk context.
   * @return instantiated module
   */
  @Override
  @Internal
  protected SdkContext instantiateModule(SdkContext context) {
    return new Security(context);
  }

  /**
   * Instantiates modules.
   * @param options a connection options.
   * @return instantiated module
   */
  @Override
  @Internal
  protected SdkContext instantiateModule(ConnectionOptions options) {
    return new Security(options);
  }

  /**
   * Instantiates model.
   * @return instantiated model
   */
  @Override
  @Internal
  protected CertificateIssuerConfig instantiateModel() {
    return new CertificateIssuerConfig();
  }
}
