// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk;

import com.arm.mbed.cloud.sdk.accounts.model.AccountDao;
import com.arm.mbed.cloud.sdk.accounts.model.AccountListDao;
import com.arm.mbed.cloud.sdk.accounts.model.ApiKeyDao;
import com.arm.mbed.cloud.sdk.accounts.model.ApiKeyListDao;
import com.arm.mbed.cloud.sdk.accounts.model.UserDao;
import com.arm.mbed.cloud.sdk.accounts.model.UserInvitationDao;
import com.arm.mbed.cloud.sdk.accounts.model.UserInvitationListDao;
import com.arm.mbed.cloud.sdk.accounts.model.UserListDao;
import com.arm.mbed.cloud.sdk.annotations.Internal;
import com.arm.mbed.cloud.sdk.annotations.Preamble;
import com.arm.mbed.cloud.sdk.annotations.Required;
import com.arm.mbed.cloud.sdk.common.SdkContext;
import com.arm.mbed.cloud.sdk.common.dao.DaoProvider;
import com.arm.mbed.cloud.sdk.devices.model.DeviceDao;
import com.arm.mbed.cloud.sdk.devices.model.DeviceEnrollmentBulkCreateDao;
import com.arm.mbed.cloud.sdk.devices.model.DeviceEnrollmentBulkDeleteDao;
import com.arm.mbed.cloud.sdk.devices.model.DeviceEnrollmentDao;
import com.arm.mbed.cloud.sdk.devices.model.DeviceEnrollmentListDao;
import com.arm.mbed.cloud.sdk.devices.model.DeviceEventsDao;
import com.arm.mbed.cloud.sdk.devices.model.DeviceEventsListDao;
import com.arm.mbed.cloud.sdk.devices.model.DeviceListDao;
import com.arm.mbed.cloud.sdk.security.model.CertificateEnrollmentDao;
import com.arm.mbed.cloud.sdk.security.model.CertificateEnrollmentListDao;
import com.arm.mbed.cloud.sdk.security.model.CertificateIssuerConfigDao;
import com.arm.mbed.cloud.sdk.security.model.CertificateIssuerConfigListDao;
import com.arm.mbed.cloud.sdk.security.model.CertificateIssuerDao;
import com.arm.mbed.cloud.sdk.security.model.CertificateIssuerListDao;
import com.arm.mbed.cloud.sdk.security.model.DeveloperCertificateDao;
import com.arm.mbed.cloud.sdk.security.model.ServerCredentialsDao;
import com.arm.mbed.cloud.sdk.security.model.TrustedCertificateDao;
import com.arm.mbed.cloud.sdk.security.model.TrustedCertificateListDao;
import java.lang.Override;
import java.lang.String;

/**
 * Factory for SDK DAOs.
 * <p>
 * Utility for fetching DAOs similar to DaoProvider but without using reflection */
@Preamble(
    description = "Factory for SDK DAOs."
)
@Internal
public class DaoFactory {
  /**
   * Context. */
  @Internal
  @Required
  private final SdkContext context;

  /**
   * Constructor.
   * @param context Context.
   */
  public DaoFactory(SdkContext context) {
    super();
    this.context = context;
  }

  /**
   * Constructor.
   * @param daoFactory a dao factory.
   */
  public DaoFactory(DaoFactory daoFactory) {
    this(daoFactory == null ? (SdkContext) null : daoFactory.context);
  }

  /**
   * Constructor.
   */
  public DaoFactory() {
    this((SdkContext) null);
  }

  /**
   * Gets an account dao.
   * @return an account dao
   */
  public AccountDao getAccountDao() {
    return new AccountDao().configureAndGet(context);
  }

  /**
   * Gets an account list dao.
   * @return an account list dao
   */
  public AccountListDao getAccountListDao() {
    return new AccountListDao().configureAndGet(context);
  }

  /**
   * Gets an api key dao.
   * @return an api key dao
   */
  public ApiKeyDao getApiKeyDao() {
    return new ApiKeyDao().configureAndGet(context);
  }

  /**
   * Gets an api key list dao.
   * @return an api key list dao
   */
  public ApiKeyListDao getApiKeyListDao() {
    return new ApiKeyListDao().configureAndGet(context);
  }

  /**
   * Gets a certificate enrollment dao.
   * @return a certificate enrollment dao
   */
  public CertificateEnrollmentDao getCertificateEnrollmentDao() {
    return new CertificateEnrollmentDao().configureAndGet(context);
  }

  /**
   * Gets a certificate enrollment list dao.
   * @return a certificate enrollment list dao
   */
  public CertificateEnrollmentListDao getCertificateEnrollmentListDao() {
    return new CertificateEnrollmentListDao().configureAndGet(context);
  }

  /**
   * Gets a certificate issuer dao.
   * @return a certificate issuer dao
   */
  public CertificateIssuerDao getCertificateIssuerDao() {
    return new CertificateIssuerDao().configureAndGet(context);
  }

  /**
   * Gets a certificate issuer list dao.
   * @return a certificate issuer list dao
   */
  public CertificateIssuerListDao getCertificateIssuerListDao() {
    return new CertificateIssuerListDao().configureAndGet(context);
  }

  /**
   * Gets a certificate issuer config dao.
   * @return a certificate issuer config dao
   */
  public CertificateIssuerConfigDao getCertificateIssuerConfigDao() {
    return new CertificateIssuerConfigDao().configureAndGet(context);
  }

  /**
   * Gets a certificate issuer config list dao.
   * @return a certificate issuer config list dao
   */
  public CertificateIssuerConfigListDao getCertificateIssuerConfigListDao() {
    return new CertificateIssuerConfigListDao().configureAndGet(context);
  }

  /**
   * Gets a developer certificate dao.
   * @return a developer certificate dao
   */
  public DeveloperCertificateDao getDeveloperCertificateDao() {
    return new DeveloperCertificateDao().configureAndGet(context);
  }

  /**
   * Gets a device dao.
   * @return a device dao
   */
  public DeviceDao getDeviceDao() {
    return new DeviceDao().configureAndGet(context);
  }

  /**
   * Gets a device list dao.
   * @return a device list dao
   */
  public DeviceListDao getDeviceListDao() {
    return new DeviceListDao().configureAndGet(context);
  }

  /**
   * Gets a device enrollment dao.
   * @return a device enrollment dao
   */
  public DeviceEnrollmentDao getDeviceEnrollmentDao() {
    return new DeviceEnrollmentDao().configureAndGet(context);
  }

  /**
   * Gets a device enrollment list dao.
   * @return a device enrollment list dao
   */
  public DeviceEnrollmentListDao getDeviceEnrollmentListDao() {
    return new DeviceEnrollmentListDao().configureAndGet(context);
  }

  /**
   * Gets a device enrollment bulk create dao.
   * @return a device enrollment bulk create dao
   */
  public DeviceEnrollmentBulkCreateDao getDeviceEnrollmentBulkCreateDao() {
    return new DeviceEnrollmentBulkCreateDao().configureAndGet(context);
  }

  /**
   * Gets a device enrollment bulk delete dao.
   * @return a device enrollment bulk delete dao
   */
  public DeviceEnrollmentBulkDeleteDao getDeviceEnrollmentBulkDeleteDao() {
    return new DeviceEnrollmentBulkDeleteDao().configureAndGet(context);
  }

  /**
   * Gets a device events dao.
   * @return a device events dao
   */
  public DeviceEventsDao getDeviceEventsDao() {
    return new DeviceEventsDao().configureAndGet(context);
  }

  /**
   * Gets a device events list dao.
   * @return a device events list dao
   */
  public DeviceEventsListDao getDeviceEventsListDao() {
    return new DeviceEventsListDao().configureAndGet(context);
  }

  /**
   * Gets a server credentials dao.
   * @return a server credentials dao
   */
  public ServerCredentialsDao getServerCredentialsDao() {
    return new ServerCredentialsDao().configureAndGet(context);
  }

  /**
   * Gets a trusted certificate dao.
   * @return a trusted certificate dao
   */
  public TrustedCertificateDao getTrustedCertificateDao() {
    return new TrustedCertificateDao().configureAndGet(context);
  }

  /**
   * Gets a trusted certificate list dao.
   * @return a trusted certificate list dao
   */
  public TrustedCertificateListDao getTrustedCertificateListDao() {
    return new TrustedCertificateListDao().configureAndGet(context);
  }

  /**
   * Gets a user dao.
   * @return a user dao
   */
  public UserDao getUserDao() {
    return new UserDao().configureAndGet(context);
  }

  /**
   * Gets a user list dao.
   * @return a user list dao
   */
  public UserListDao getUserListDao() {
    return new UserListDao().configureAndGet(context);
  }

  /**
   * Gets a user invitation dao.
   * @return a user invitation dao
   */
  public UserInvitationDao getUserInvitationDao() {
    return new UserInvitationDao().configureAndGet(context);
  }

  /**
   * Gets a user invitation list dao.
   * @return a user invitation list dao
   */
  public UserInvitationListDao getUserInvitationListDao() {
    return new UserInvitationListDao().configureAndGet(context);
  }

  /**
   * Gets context.
   * @return context
   */
  public SdkContext getContext() {
    return context;
  }

  /**
   * Gets a dao provider.
   * @return a dao provider
   */
  public DaoProvider getDaoProvider() {
    return new DaoProvider(context);
  }

  /**
   * Returns a string representation of the object.
   * <p>
   * @see java.lang.Object#toString()
   * @return the string representation
   */
  @Override
  public String toString() {
    return "DaoFactory [context=" + context + "]";
  }

  /**
   * Clones this instance.
   * <p>
   * @see java.lang.Object#clone()
   * @return a cloned instance
   */
  @Override
  public DaoFactory clone() {
    return new DaoFactory(this);
  }
}
