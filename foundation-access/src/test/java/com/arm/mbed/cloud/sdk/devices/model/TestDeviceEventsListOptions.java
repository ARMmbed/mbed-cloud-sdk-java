// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEventsListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(86),
                                                                                           Long.valueOf(114),
                                                                                           Order.getDefault(),
                                                                                           "98c313b9-69ed-4dc5-a254-ea9f2bc31087",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = deviceeventslistoptions1.clone();
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            DeviceEventsListOptions option = new DeviceEventsListOptions().equalToDeviceId("62d8812e-0a2c-46e5-ae3a-ce7f9c6033b9")
                                                                          .notEqualToDeviceId("199425a1-ca2c-450e-839d-9e19a41ec163")
                                                                          .inDeviceIds(Arrays.asList("1570cf7d-3130-42d1-a086-3eb3a2a3290a",
                                                                                                     "bc06f55b-9672-43ad-8c68-622c36f710df",
                                                                                                     "a74cd7e7-1d5a-4817-83c6-ca00d190f4f9",
                                                                                                     "c9a34036-ccb4-4746-a640-6528c4fe9aad",
                                                                                                     "0ca70ef9-fca8-48e1-ab7c-ab25eb0c0603"))
                                                                          .notInDeviceIds(Arrays.asList("58d8d2d6-1592-44e1-82f9-cb018377f7ec"))
                                                                          .equalToDescription("f3a5facf-5e31-4a99-89c8-dbf24bdc3e64")
                                                                          .notEqualToDescription("ad427af2-238b-4908-bb3b-aa57473a3060")
                                                                          .inDescriptions(Arrays.asList("44ed11a0-2b86-4285-a63a-fa5331a4e9df",
                                                                                                        "3b2c7011-8458-4989-be73-d1673a0a8562",
                                                                                                        "b4b79cc9-695f-413a-8aed-ecd223e4b97f",
                                                                                                        "8f274f72-9eb0-4ba7-85ca-b2e725c71303",
                                                                                                        "31f91e50-5f32-424e-bcad-31fa96312e37",
                                                                                                        "eec68b3a-84e2-4092-b546-8c8b1183d2ad",
                                                                                                        "be2ec933-2d18-429b-a83f-d63e1ec64397",
                                                                                                        "1f127565-4129-424c-8e88-c8b18e6ae0db",
                                                                                                        "7c89abf1-08a2-4a5c-8ca6-7737816fe870"))
                                                                          .notInDescriptions(Arrays.asList("a65f3a24-4e4f-4379-b9f2-4fea2d5bd13b",
                                                                                                           "065ab993-cbef-443e-ad4f-fc901520b068",
                                                                                                           "700f83ae-8b55-4f6e-9901-9eca7ad90a25",
                                                                                                           "ba3fb2cb-ff4b-4277-902d-9bd965c501d6"))
                                                                          .inDateTimes(Arrays.asList(new Date(1559754645214L),
                                                                                                     new Date(1559754644237L),
                                                                                                     new Date(1559754638654L),
                                                                                                     new Date(1559754644670L),
                                                                                                     new Date(1559754641892L),
                                                                                                     new Date(1559754645496L),
                                                                                                     new Date(1559754639516L),
                                                                                                     new Date(1559754641455L)))
                                                                          .notInDateTimes(Arrays.asList(new Date(1559754645854L),
                                                                                                        new Date(1559754644531L),
                                                                                                        new Date(1559754644354L),
                                                                                                        new Date(1559754644743L),
                                                                                                        new Date(1559754640396L),
                                                                                                        new Date(1559754638572L),
                                                                                                        new Date(1559754642824L),
                                                                                                        new Date(1559754644985L)))
                                                                          .lessThanDateTime(new Date(1559754644717L))
                                                                          .greaterThanDateTime(new Date(1559754637765L))
                                                                          .equalToStateChange(Boolean.TRUE)
                                                                          .notEqualToStateChange(Boolean.FALSE)
                                                                          .equalToId("a29bb94e-ad40-4331-b8aa-d67b6852dc93")
                                                                          .notEqualToId("f892db2b-9791-4653-a0fe-c6fd957e7295")
                                                                          .inIds(Arrays.asList("eae900d6-f9b8-4bb1-930e-cd06f619dc18",
                                                                                               "f3efa8a3-ec6c-40bf-8210-a641515581d3",
                                                                                               "17d9aba9-e8e6-403e-ad91-0685b1d59ce2",
                                                                                               "553abcfe-c8fb-4974-acc8-91bd0ef6f807",
                                                                                               "688f930d-4f41-496e-88ea-957300630a3e",
                                                                                               "d989a4a3-5344-43f7-840e-0cb43d50ba93"))
                                                                          .notInIds(Arrays.asList("0c8209da-9752-4f52-9030-c325cc66b747"))
                                                                          .equalToEventType("1d8a1a50-c43c-487f-8cc7-e16158f312db")
                                                                          .notEqualToEventType("3802421e-0e62-44bc-a510-2c94bb385f1f")
                                                                          .inEventTypes(Arrays.asList("f9c8ee45-28fc-4139-b37c-180f2b830a07",
                                                                                                      "ed0615e0-a68c-43a5-901d-25b353381034",
                                                                                                      "fca4f96d-2a53-4841-b874-eb892dca9e79",
                                                                                                      "5fb3c428-7e14-43b2-af70-2e5fdc9aea39",
                                                                                                      "249c31a5-c2a2-4a54-94ba-9c4eacef8ca1",
                                                                                                      "39594df4-9eb2-47ac-97bd-db1acf0da7c3",
                                                                                                      "193fdad5-29ca-4bda-a95c-57fea0f09160",
                                                                                                      "3cfde3bf-3280-47ff-8c80-0af28e1657ec"))
                                                                          .notInEventTypes(Arrays.asList("a61406b8-0c93-41f1-99e2-f58f1f57af12",
                                                                                                         "ea6c8572-84bc-41fb-9b44-c3fe190b6faa"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("62d8812e-0a2c-46e5-ae3a-ce7f9c6033b9",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("199425a1-ca2c-450e-839d-9e19a41ec163",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("1570cf7d-3130-42d1-a086-3eb3a2a3290a", "bc06f55b-9672-43ad-8c68-622c36f710df",
                                       "a74cd7e7-1d5a-4817-83c6-ca00d190f4f9", "c9a34036-ccb4-4746-a640-6528c4fe9aad",
                                       "0ca70ef9-fca8-48e1-ab7c-ab25eb0c0603"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("58d8d2d6-1592-44e1-82f9-cb018377f7ec"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("f3a5facf-5e31-4a99-89c8-dbf24bdc3e64",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("ad427af2-238b-4908-bb3b-aa57473a3060",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("44ed11a0-2b86-4285-a63a-fa5331a4e9df", "3b2c7011-8458-4989-be73-d1673a0a8562",
                                       "b4b79cc9-695f-413a-8aed-ecd223e4b97f", "8f274f72-9eb0-4ba7-85ca-b2e725c71303",
                                       "31f91e50-5f32-424e-bcad-31fa96312e37", "eec68b3a-84e2-4092-b546-8c8b1183d2ad",
                                       "be2ec933-2d18-429b-a83f-d63e1ec64397", "1f127565-4129-424c-8e88-c8b18e6ae0db",
                                       "7c89abf1-08a2-4a5c-8ca6-7737816fe870"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("a65f3a24-4e4f-4379-b9f2-4fea2d5bd13b", "065ab993-cbef-443e-ad4f-fc901520b068",
                                       "700f83ae-8b55-4f6e-9901-9eca7ad90a25", "ba3fb2cb-ff4b-4277-902d-9bd965c501d6"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1559754645214L), new Date(1559754644237L), new Date(1559754638654L),
                                       new Date(1559754644670L), new Date(1559754641892L), new Date(1559754645496L),
                                       new Date(1559754639516L), new Date(1559754641455L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.NOT_IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1559754645854L), new Date(1559754644531L), new Date(1559754644354L),
                                       new Date(1559754644743L), new Date(1559754640396L), new Date(1559754638572L),
                                       new Date(1559754642824L), new Date(1559754644985L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.LESS_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1559754644717L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.GREATER_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1559754637765L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.TRUE,
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                    Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                       Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("a29bb94e-ad40-4331-b8aa-d67b6852dc93",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("f892db2b-9791-4653-a0fe-c6fd957e7295",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("eae900d6-f9b8-4bb1-930e-cd06f619dc18", "f3efa8a3-ec6c-40bf-8210-a641515581d3",
                                       "17d9aba9-e8e6-403e-ad91-0685b1d59ce2", "553abcfe-c8fb-4974-acc8-91bd0ef6f807",
                                       "688f930d-4f41-496e-88ea-957300630a3e", "d989a4a3-5344-43f7-840e-0cb43d50ba93"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("0c8209da-9752-4f52-9030-c325cc66b747"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("1d8a1a50-c43c-487f-8cc7-e16158f312db",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("3802421e-0e62-44bc-a510-2c94bb385f1f",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("f9c8ee45-28fc-4139-b37c-180f2b830a07", "ed0615e0-a68c-43a5-901d-25b353381034",
                                       "fca4f96d-2a53-4841-b874-eb892dca9e79", "5fb3c428-7e14-43b2-af70-2e5fdc9aea39",
                                       "249c31a5-c2a2-4a54-94ba-9c4eacef8ca1", "39594df4-9eb2-47ac-97bd-db1acf0da7c3",
                                       "193fdad5-29ca-4bda-a95c-57fea0f09160", "3cfde3bf-3280-47ff-8c80-0af28e1657ec"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("a61406b8-0c93-41f1-99e2-f58f1f57af12", "ea6c8572-84bc-41fb-9b44-c3fe190b6faa"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(71),
                                                                                           Long.valueOf(-46),
                                                                                           Order.getDefault(),
                                                                                           "d4cff7ef-7a59-4e94-8b9e-7c6babadd335",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(71),
                                                                                           Long.valueOf(-46),
                                                                                           Order.getDefault(),
                                                                                           "d4cff7ef-7a59-4e94-8b9e-7c6babadd335",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2.hashCode(), deviceeventslistoptions1.hashCode());
            int hashCode = deviceeventslistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceeventslistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-59),
                                                                                           Long.valueOf(5),
                                                                                           Order.getDefault(),
                                                                                           "186aab78-c6f2-4bfa-90c1-0c43e213c40d",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-59),
                                                                                           Long.valueOf(5),
                                                                                           Order.getDefault(),
                                                                                           "186aab78-c6f2-4bfa-90c1-0c43e213c40d",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions3 = new DeviceEventsListOptions(Integer.valueOf(8),
                                                                                           Long.valueOf(105),
                                                                                           Order.getDefault(),
                                                                                           "46930cde-ccc5-4659-9163-1c3d715aa230",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotNull(deviceeventslistoptions3);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertNotSame(deviceeventslistoptions3, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions2);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions1);
            assertFalse(deviceeventslistoptions1.equals(null));
            assertNotEquals(deviceeventslistoptions3, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
