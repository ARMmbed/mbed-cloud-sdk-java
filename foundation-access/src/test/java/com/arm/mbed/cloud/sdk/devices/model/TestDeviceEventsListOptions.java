// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEventsListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(91),
                                                                                           Long.valueOf(28),
                                                                                           Order.getDefault(),
                                                                                           "cb2efc26-c30c-4eb3-aea7-ee2d816414c0",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = deviceeventslistoptions1.clone();
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            DeviceEventsListOptions option = new DeviceEventsListOptions().equalToDeviceId("e10303ef-dcab-46f3-af58-dc7ff7aa4645")
                                                                          .notEqualToDeviceId("266cba84-eeb8-4b5e-bb39-09529fb9541f")
                                                                          .inDeviceIds(Arrays.asList("39cb191f-041a-4656-b9f7-af1e6bb7011f",
                                                                                                     "bd1aa01e-2c48-4cb5-910e-54254ad5ad76",
                                                                                                     "626be1cf-3d6f-422d-9e52-bbdae583d05a",
                                                                                                     "cbc55a16-9d6b-432e-a2a3-8e7ab9f1e8aa",
                                                                                                     "6c4eda99-75c1-4787-9934-32c756c44f9e"))
                                                                          .notInDeviceIds(Arrays.asList("d45bbacb-e7f4-4eaa-947c-9c0e0d1d0281",
                                                                                                        "baf397bf-d1c2-4959-87c9-2f1d0ff65501",
                                                                                                        "39d4973d-8bcd-4e4e-b6c7-1395e30d598a",
                                                                                                        "528b46b7-8a2c-4a01-91c8-f84fbcf2ec4b",
                                                                                                        "a31bb8eb-898c-494e-85ac-583f87978fa7",
                                                                                                        "8d617815-82a5-4e20-9614-5d17e3cc508e"))
                                                                          .equalToDescription("2e16ad52-07a8-49c1-833c-0699ab8f16a2")
                                                                          .notEqualToDescription("d67b8c63-b207-4446-bf42-c76f3da6559e")
                                                                          .inDescriptions(Arrays.asList("b7e6d3d1-311d-4c68-b46e-b887b66dcbd1",
                                                                                                        "3f5ea546-7c2f-4096-b0e0-8e5fe34f533d",
                                                                                                        "868f67fe-3ef4-4618-8369-7a410f9c4d7a"))
                                                                          .notInDescriptions(Arrays.asList("46857524-3fa3-42de-afc4-956bad828c47",
                                                                                                           "1c6e9e8f-e1a8-445f-9573-d2574e9724c6",
                                                                                                           "ed6185b7-ab56-463d-9546-99ad4b800745",
                                                                                                           "263dcbcd-3504-45ab-835e-c833b8f58f16",
                                                                                                           "854798a5-09a7-44e0-aa7f-4a5952e25bf9",
                                                                                                           "59af84e2-32a2-453c-919a-9f9b27ef591b",
                                                                                                           "d20004b4-de6e-4cdb-8fa2-f07bb5bde01e"))
                                                                          .inDateTimes(Arrays.asList(new Date(1559300100015L),
                                                                                                     new Date(1559300106478L)))
                                                                          .notInDateTimes(Arrays.asList(new Date(1559300099509L),
                                                                                                        new Date(1559300106493L),
                                                                                                        new Date(1559300103615L)))
                                                                          .lessThanDateTime(new Date(1559300099848L))
                                                                          .greaterThanDateTime(new Date(1559300106671L))
                                                                          .equalToStateChange(Boolean.FALSE)
                                                                          .notEqualToStateChange(Boolean.TRUE)
                                                                          .equalToId("f9a48e52-2ffe-4332-a40e-ec693cf58264")
                                                                          .notEqualToId("34a8a568-3fcd-4131-a427-c7a67ce9ca47")
                                                                          .inIds(Arrays.asList("3b58c8bb-80bb-4dd3-bf16-ef58dc5747e5"))
                                                                          .notInIds(Arrays.asList("ac15f2c4-5d51-425e-9eba-3f9aa3dcaa50",
                                                                                                  "0e243d8d-a21f-4111-bc88-e594e01e2727",
                                                                                                  "01a4d5a5-e63d-4604-89b3-28a271f17e66",
                                                                                                  "2dd4fce8-ee4a-4779-b192-5b619bbb2bc6",
                                                                                                  "1eef244e-c1bc-40dd-a804-071cc6eef331",
                                                                                                  "852cf4ca-e2fb-43e2-af88-28feb68972bc",
                                                                                                  "7de2c525-7714-40fc-af8a-10914ccfa92c",
                                                                                                  "b6bb5178-515c-44b4-8790-87245b553dde",
                                                                                                  "dc87ecc7-1d07-429b-a923-4adf275e6784"))
                                                                          .equalToEventType("41d68b40-5c6e-4b9d-a815-605e6a34fdee")
                                                                          .notEqualToEventType("45c32c61-5975-41b6-a900-3042eb8d1668")
                                                                          .inEventTypes(Arrays.asList("9b258d8b-1180-4b8b-a1fc-affd1f4a405e",
                                                                                                      "72bc54da-6ccb-48be-82ac-382ff3b29eac",
                                                                                                      "336b6301-eec6-4faf-ac6d-4b845ca85a4e",
                                                                                                      "48b635ee-b3fa-46b8-bd5e-8a412913bbbc",
                                                                                                      "25884260-db78-4263-a342-dc6d66127481"))
                                                                          .notInEventTypes(Arrays.asList("f9598188-b9e8-4446-b73a-ecc186d9ac0c",
                                                                                                         "1485451e-19a3-4fe0-b74a-2f2955efd2bf",
                                                                                                         "32821f4f-5a69-409b-8b8c-c9865be77f36",
                                                                                                         "fccb44f8-a37a-4adf-a878-a935ee81ab57",
                                                                                                         "359f13d4-81e1-454e-a074-545d035c7c4c",
                                                                                                         "6a282c2a-c91a-4e00-acff-ae759f8ff4c1",
                                                                                                         "03fc31be-94a0-4eff-bed3-07f6d7be4d20"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("e10303ef-dcab-46f3-af58-dc7ff7aa4645",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("266cba84-eeb8-4b5e-bb39-09529fb9541f",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("39cb191f-041a-4656-b9f7-af1e6bb7011f", "bd1aa01e-2c48-4cb5-910e-54254ad5ad76",
                                       "626be1cf-3d6f-422d-9e52-bbdae583d05a", "cbc55a16-9d6b-432e-a2a3-8e7ab9f1e8aa",
                                       "6c4eda99-75c1-4787-9934-32c756c44f9e"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("d45bbacb-e7f4-4eaa-947c-9c0e0d1d0281", "baf397bf-d1c2-4959-87c9-2f1d0ff65501",
                                       "39d4973d-8bcd-4e4e-b6c7-1395e30d598a", "528b46b7-8a2c-4a01-91c8-f84fbcf2ec4b",
                                       "a31bb8eb-898c-494e-85ac-583f87978fa7", "8d617815-82a5-4e20-9614-5d17e3cc508e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("2e16ad52-07a8-49c1-833c-0699ab8f16a2",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("d67b8c63-b207-4446-bf42-c76f3da6559e",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("b7e6d3d1-311d-4c68-b46e-b887b66dcbd1", "3f5ea546-7c2f-4096-b0e0-8e5fe34f533d",
                                       "868f67fe-3ef4-4618-8369-7a410f9c4d7a"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("46857524-3fa3-42de-afc4-956bad828c47", "1c6e9e8f-e1a8-445f-9573-d2574e9724c6",
                                       "ed6185b7-ab56-463d-9546-99ad4b800745", "263dcbcd-3504-45ab-835e-c833b8f58f16",
                                       "854798a5-09a7-44e0-aa7f-4a5952e25bf9", "59af84e2-32a2-453c-919a-9f9b27ef591b",
                                       "d20004b4-de6e-4cdb-8fa2-f07bb5bde01e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1559300100015L), new Date(1559300106478L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.NOT_IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1559300099509L), new Date(1559300106493L), new Date(1559300103615L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.LESS_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1559300099848L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.GREATER_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1559300106671L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                    Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.TRUE,
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                       Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("f9a48e52-2ffe-4332-a40e-ec693cf58264",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("34a8a568-3fcd-4131-a427-c7a67ce9ca47",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("3b58c8bb-80bb-4dd3-bf16-ef58dc5747e5"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("ac15f2c4-5d51-425e-9eba-3f9aa3dcaa50", "0e243d8d-a21f-4111-bc88-e594e01e2727",
                                       "01a4d5a5-e63d-4604-89b3-28a271f17e66", "2dd4fce8-ee4a-4779-b192-5b619bbb2bc6",
                                       "1eef244e-c1bc-40dd-a804-071cc6eef331", "852cf4ca-e2fb-43e2-af88-28feb68972bc",
                                       "7de2c525-7714-40fc-af8a-10914ccfa92c", "b6bb5178-515c-44b4-8790-87245b553dde",
                                       "dc87ecc7-1d07-429b-a923-4adf275e6784"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("41d68b40-5c6e-4b9d-a815-605e6a34fdee",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("45c32c61-5975-41b6-a900-3042eb8d1668",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("9b258d8b-1180-4b8b-a1fc-affd1f4a405e", "72bc54da-6ccb-48be-82ac-382ff3b29eac",
                                       "336b6301-eec6-4faf-ac6d-4b845ca85a4e", "48b635ee-b3fa-46b8-bd5e-8a412913bbbc",
                                       "25884260-db78-4263-a342-dc6d66127481"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("f9598188-b9e8-4446-b73a-ecc186d9ac0c", "1485451e-19a3-4fe0-b74a-2f2955efd2bf",
                                       "32821f4f-5a69-409b-8b8c-c9865be77f36", "fccb44f8-a37a-4adf-a878-a935ee81ab57",
                                       "359f13d4-81e1-454e-a074-545d035c7c4c", "6a282c2a-c91a-4e00-acff-ae759f8ff4c1",
                                       "03fc31be-94a0-4eff-bed3-07f6d7be4d20"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-21),
                                                                                           Long.valueOf(51),
                                                                                           Order.getDefault(),
                                                                                           "c7ecb3a9-3960-4d2a-9ab8-3bff95a9015a",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-21),
                                                                                           Long.valueOf(51),
                                                                                           Order.getDefault(),
                                                                                           "c7ecb3a9-3960-4d2a-9ab8-3bff95a9015a",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2.hashCode(), deviceeventslistoptions1.hashCode());
            int hashCode = deviceeventslistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceeventslistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-3),
                                                                                           Long.valueOf(-53),
                                                                                           Order.getDefault(),
                                                                                           "00d1651f-e076-4cad-8111-ed987646c274",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-3),
                                                                                           Long.valueOf(-53),
                                                                                           Order.getDefault(),
                                                                                           "00d1651f-e076-4cad-8111-ed987646c274",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions3 = new DeviceEventsListOptions(Integer.valueOf(52),
                                                                                           Long.valueOf(43),
                                                                                           Order.getDefault(),
                                                                                           "029c70b4-124c-41e2-9d75-85ba783dbe1a",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotNull(deviceeventslistoptions3);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertNotSame(deviceeventslistoptions3, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions2);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions1);
            assertFalse(deviceeventslistoptions1.equals(null));
            assertNotEquals(deviceeventslistoptions3, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
