// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEventsListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-19),
                                                                                           Long.valueOf(2),
                                                                                           Order.getDefault(),
                                                                                           "19bf2734-c941-45da-8806-8714d5245fee",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = deviceeventslistoptions1.clone();
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            DeviceEventsListOptions option = new DeviceEventsListOptions().equalToDeviceId("ac3c21d0-07be-4d68-b141-1fce0142124b")
                                                                          .notEqualToDeviceId("039e410c-79c3-428e-af2c-b0b73f48e7a4")
                                                                          .inDeviceIds(Arrays.asList("39e71c89-d3b7-4861-9374-2acaaf2d7a0c",
                                                                                                     "85e629fd-466b-4ccb-94f9-5f37ca1f8eb4",
                                                                                                     "c97a2369-9c12-4c57-bd7e-381e10e83e17",
                                                                                                     "0a851ffa-d085-48fe-8f67-c2013599b035",
                                                                                                     "bff1136d-b49c-4f1b-8469-c24cbb273ffd"))
                                                                          .notInDeviceIds(Arrays.asList("27a6d68f-41e6-4fc7-b22f-cac668edd61e",
                                                                                                        "e4e17a0a-2c47-46a8-90b9-d4f8b4723897",
                                                                                                        "21b83d29-37f8-4110-929f-a8d3642cff64",
                                                                                                        "ba80172c-1936-460d-9029-c1fbb83adc3f",
                                                                                                        "2d1d7689-36df-4f58-b2c2-7f093d30c354",
                                                                                                        "98b5934f-2643-488c-88ef-5721edfb1d3d"))
                                                                          .equalToDescription("d10cba5d-ba5f-4efd-bb22-546578c71c42")
                                                                          .notEqualToDescription("332168fe-d32c-46f0-9b5c-9beeeb213a38")
                                                                          .inDescriptions(Arrays.asList("a82a23b2-a86b-4a51-8eb6-b9134fe48f8f",
                                                                                                        "3ecbed58-210e-4425-8a69-a2f4c90f17e1",
                                                                                                        "5be841a7-2343-4d62-8a13-7884fdfd00a1",
                                                                                                        "f87811a7-f175-422a-bf92-fcbb8b354a09",
                                                                                                        "43f6aa6a-770f-4429-94c0-abbc0656bfa4",
                                                                                                        "11f424f9-85fe-419c-9530-7617a520096a",
                                                                                                        "5cae7d2a-d8a3-442d-bf62-58e212740a14",
                                                                                                        "f73d8375-9251-4a81-b1aa-6f6fa49af715"))
                                                                          .notInDescriptions(Arrays.asList("7993939b-4d7a-4e53-91cd-8d17a6397496",
                                                                                                           "2d5e6c2c-b570-4200-a36a-b4b9a70a606b"))
                                                                          .inDateTimes(Arrays.asList(new Date(1559746952719L),
                                                                                                     new Date(1559746957861L),
                                                                                                     new Date(1559746953616L),
                                                                                                     new Date(1559746950118L),
                                                                                                     new Date(1559746948374L)))
                                                                          .notInDateTimes(Arrays.asList(new Date(1559746949895L)))
                                                                          .lessThanDateTime(new Date(1559746953750L))
                                                                          .greaterThanDateTime(new Date(1559746949360L))
                                                                          .equalToStateChange(Boolean.TRUE)
                                                                          .notEqualToStateChange(Boolean.TRUE)
                                                                          .equalToId("8e33b5fa-4b8d-4ce0-b4e5-a4f07c32cdce")
                                                                          .notEqualToId("175d9986-544e-4115-8584-363fc58622c9")
                                                                          .inIds(Arrays.asList("dec7dfcc-fd88-491d-9e8f-91eabf7d2cae",
                                                                                               "a6d3b4fc-d4da-4b20-a10d-4d46c6569e5f",
                                                                                               "2018014e-dff1-40bd-b490-21fe908d07de",
                                                                                               "c9ffddc1-1d51-494d-9acd-862da0716bad",
                                                                                               "162299a9-00e2-4b43-a488-00f95b5e2c0b",
                                                                                               "cd3d42ce-910a-4285-8f65-f3c08150e759"))
                                                                          .notInIds(Arrays.asList("6f265ba5-7f97-4199-a164-48abf312d3a6",
                                                                                                  "9ee9a0c5-1e40-4f0c-9ce5-4536f1d61e2c"))
                                                                          .equalToEventType("d4ad8e1e-7631-4965-8f07-5d64145e4848")
                                                                          .notEqualToEventType("170362f3-b27c-4598-9dd4-d0ae0133593e")
                                                                          .inEventTypes(Arrays.asList("dcfe4857-e6a8-45dc-bb01-bd37f7fc5d98",
                                                                                                      "5d4ce312-23e3-44bd-b3b7-fec1d10a2560",
                                                                                                      "ef8e96e7-c6e3-4022-a0fc-3738c49768e4"))
                                                                          .notInEventTypes(Arrays.asList("64bdf788-35d1-4094-a8c6-14a3d6dd0449",
                                                                                                         "75786a12-4549-4dcb-9c54-4ce67c626395",
                                                                                                         "5768ca0c-e4a9-409f-8ec2-56b761d6dd04",
                                                                                                         "621610c4-8dda-47bc-a382-fe6f9f245bd8"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("ac3c21d0-07be-4d68-b141-1fce0142124b",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("039e410c-79c3-428e-af2c-b0b73f48e7a4",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("39e71c89-d3b7-4861-9374-2acaaf2d7a0c", "85e629fd-466b-4ccb-94f9-5f37ca1f8eb4",
                                       "c97a2369-9c12-4c57-bd7e-381e10e83e17", "0a851ffa-d085-48fe-8f67-c2013599b035",
                                       "bff1136d-b49c-4f1b-8469-c24cbb273ffd"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("27a6d68f-41e6-4fc7-b22f-cac668edd61e", "e4e17a0a-2c47-46a8-90b9-d4f8b4723897",
                                       "21b83d29-37f8-4110-929f-a8d3642cff64", "ba80172c-1936-460d-9029-c1fbb83adc3f",
                                       "2d1d7689-36df-4f58-b2c2-7f093d30c354", "98b5934f-2643-488c-88ef-5721edfb1d3d"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("d10cba5d-ba5f-4efd-bb22-546578c71c42",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("332168fe-d32c-46f0-9b5c-9beeeb213a38",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("a82a23b2-a86b-4a51-8eb6-b9134fe48f8f", "3ecbed58-210e-4425-8a69-a2f4c90f17e1",
                                       "5be841a7-2343-4d62-8a13-7884fdfd00a1", "f87811a7-f175-422a-bf92-fcbb8b354a09",
                                       "43f6aa6a-770f-4429-94c0-abbc0656bfa4", "11f424f9-85fe-419c-9530-7617a520096a",
                                       "5cae7d2a-d8a3-442d-bf62-58e212740a14", "f73d8375-9251-4a81-b1aa-6f6fa49af715"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("7993939b-4d7a-4e53-91cd-8d17a6397496", "2d5e6c2c-b570-4200-a36a-b4b9a70a606b"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1559746952719L), new Date(1559746957861L), new Date(1559746953616L),
                                       new Date(1559746950118L), new Date(1559746948374L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.NOT_IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1559746949895L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.LESS_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1559746953750L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.GREATER_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1559746949360L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.TRUE,
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                    Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.TRUE,
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                       Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("8e33b5fa-4b8d-4ce0-b4e5-a4f07c32cdce",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("175d9986-544e-4115-8584-363fc58622c9",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("dec7dfcc-fd88-491d-9e8f-91eabf7d2cae", "a6d3b4fc-d4da-4b20-a10d-4d46c6569e5f",
                                       "2018014e-dff1-40bd-b490-21fe908d07de", "c9ffddc1-1d51-494d-9acd-862da0716bad",
                                       "162299a9-00e2-4b43-a488-00f95b5e2c0b", "cd3d42ce-910a-4285-8f65-f3c08150e759"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("6f265ba5-7f97-4199-a164-48abf312d3a6", "9ee9a0c5-1e40-4f0c-9ce5-4536f1d61e2c"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("d4ad8e1e-7631-4965-8f07-5d64145e4848",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("170362f3-b27c-4598-9dd4-d0ae0133593e",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("dcfe4857-e6a8-45dc-bb01-bd37f7fc5d98", "5d4ce312-23e3-44bd-b3b7-fec1d10a2560",
                                       "ef8e96e7-c6e3-4022-a0fc-3738c49768e4"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("64bdf788-35d1-4094-a8c6-14a3d6dd0449", "75786a12-4549-4dcb-9c54-4ce67c626395",
                                       "5768ca0c-e4a9-409f-8ec2-56b761d6dd04", "621610c4-8dda-47bc-a382-fe6f9f245bd8"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-98),
                                                                                           Long.valueOf(-93),
                                                                                           Order.getDefault(),
                                                                                           "64059736-1a6b-4cc0-8a86-eeb81b087107",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-98),
                                                                                           Long.valueOf(-93),
                                                                                           Order.getDefault(),
                                                                                           "64059736-1a6b-4cc0-8a86-eeb81b087107",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2.hashCode(), deviceeventslistoptions1.hashCode());
            int hashCode = deviceeventslistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceeventslistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-53),
                                                                                           Long.valueOf(13),
                                                                                           Order.getDefault(),
                                                                                           "0390b8c8-640e-4e2f-b8e7-b423f9fb1d1f",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-53),
                                                                                           Long.valueOf(13),
                                                                                           Order.getDefault(),
                                                                                           "0390b8c8-640e-4e2f-b8e7-b423f9fb1d1f",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions3 = new DeviceEventsListOptions(Integer.valueOf(-46),
                                                                                           Long.valueOf(89),
                                                                                           Order.getDefault(),
                                                                                           "d81fa3f5-cdfe-458c-8478-7f70a2ab863b",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotNull(deviceeventslistoptions3);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertNotSame(deviceeventslistoptions3, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions2);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions1);
            assertFalse(deviceeventslistoptions1.equals(null));
            assertNotEquals(deviceeventslistoptions3, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
