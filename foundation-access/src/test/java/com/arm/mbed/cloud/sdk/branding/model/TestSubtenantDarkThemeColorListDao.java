// This file was generated by the Pelion SDK foundation code generator.
// This unit test suite was autogenerated on Tue Jun 04 15:39:38 UTC 2019. Feel free to change its contents as you wish.
package com.arm.mbed.cloud.sdk.branding.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model SubtenantDarkThemeColorListDao.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantDarkThemeColorListDao {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantDarkThemeColorListDao subtenantdarkthemecolorlistdao1 = new SubtenantDarkThemeColorListDao();
            SubtenantDarkThemeColorListDao subtenantdarkthemecolorlistdao2 = subtenantdarkthemecolorlistdao1.clone();
            assertNotNull(subtenantdarkthemecolorlistdao1);
            assertNotNull(subtenantdarkthemecolorlistdao2);
            assertNotSame(subtenantdarkthemecolorlistdao2, subtenantdarkthemecolorlistdao1);
            assertEquals(subtenantdarkthemecolorlistdao2, subtenantdarkthemecolorlistdao1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantDarkThemeColorListDao subtenantdarkthemecolorlistdao1 = new SubtenantDarkThemeColorListDao();
            SubtenantDarkThemeColorListDao subtenantdarkthemecolorlistdao2 = new SubtenantDarkThemeColorListDao();
            assertNotNull(subtenantdarkthemecolorlistdao1);
            assertNotNull(subtenantdarkthemecolorlistdao2);
            assertNotSame(subtenantdarkthemecolorlistdao2, subtenantdarkthemecolorlistdao1);
            assertEquals(subtenantdarkthemecolorlistdao2, subtenantdarkthemecolorlistdao1);
            assertEquals(subtenantdarkthemecolorlistdao2.hashCode(), subtenantdarkthemecolorlistdao1.hashCode());
            int hashCode = subtenantdarkthemecolorlistdao1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantdarkthemecolorlistdao1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantDarkThemeColorListDao subtenantdarkthemecolorlistdao1 = new SubtenantDarkThemeColorListDao();
            SubtenantDarkThemeColorListDao subtenantdarkthemecolorlistdao2 = new SubtenantDarkThemeColorListDao();
            assertNotNull(subtenantdarkthemecolorlistdao1);
            assertNotNull(subtenantdarkthemecolorlistdao2);
            assertNotSame(subtenantdarkthemecolorlistdao2, subtenantdarkthemecolorlistdao1);
            assertEquals(subtenantdarkthemecolorlistdao2, subtenantdarkthemecolorlistdao1);
            assertEquals(subtenantdarkthemecolorlistdao2, subtenantdarkthemecolorlistdao1);
            assertEquals(subtenantdarkthemecolorlistdao1, subtenantdarkthemecolorlistdao2);
            assertEquals(subtenantdarkthemecolorlistdao1, subtenantdarkthemecolorlistdao1);
            assertFalse(subtenantdarkthemecolorlistdao1.equals(null));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
