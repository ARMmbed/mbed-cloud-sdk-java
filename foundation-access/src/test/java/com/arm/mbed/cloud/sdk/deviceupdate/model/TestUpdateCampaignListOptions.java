// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model UpdateCampaignListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUpdateCampaignListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(-80),
                                                                                                 Long.valueOf(87),
                                                                                                 Order.getDefault(),
                                                                                                 "57d31553-adf0-4f8a-b02d-8f0d40305f87",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = updatecampaignlistoptions1.clone();
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testFilters() {
        try {
            UpdateCampaignListOptions option = new UpdateCampaignListOptions().inCreatedAts(Arrays.asList(new Date(1559758610268L),
                                                                                                          new Date(1559758606337L),
                                                                                                          new Date(1559758608148L),
                                                                                                          new Date(1559758611858L),
                                                                                                          new Date(1559758612145L),
                                                                                                          new Date(1559758605986L)))
                                                                              .notInCreatedAts(Arrays.asList(new Date(1559758608369L),
                                                                                                             new Date(1559758609109L),
                                                                                                             new Date(1559758612486L),
                                                                                                             new Date(1559758612147L),
                                                                                                             new Date(1559758611164L)))
                                                                              .lessThanCreatedAt(new Date(1559758613367L))
                                                                              .greaterThanCreatedAt(new Date(1559758610778L))
                                                                              .equalToName("f6e7d87e-97db-436b-bc75-41d9517ac854")
                                                                              .notEqualToName("476f0c5a-bcb1-4927-8a5d-c94473254a4b")
                                                                              .inNames(Arrays.asList("b5735418-f4a8-4ece-a3d6-c5c4d403d260"))
                                                                              .notInNames(Arrays.asList("f3a30d06-08fc-4fac-b73f-9e1fa8ac1dcc",
                                                                                                        "d5019703-f6e9-409f-af20-1ad9e7a6c1c3",
                                                                                                        "2fcf69af-8380-47cc-b9cd-3e4cd0be912e",
                                                                                                        "fbe1645b-4a6e-4ea1-aef7-3484766953ef"))
                                                                              .equalToId("2c05f937-5efe-441b-8342-d89eed2e4874")
                                                                              .notEqualToId("71f4ff12-2618-4ae6-89ad-3457fecf5432")
                                                                              .inIds(Arrays.asList("3aed0ad2-45e0-4745-85fe-34905ae9cfb0",
                                                                                                   "75375802-2806-4358-96c3-97d131e05129",
                                                                                                   "fd707f79-28e5-4239-be99-abee7eb85cf1"))
                                                                              .notInIds(Arrays.asList("17a50b54-7d91-496e-a809-28ffed931523",
                                                                                                      "ea796f14-8fe9-43e6-9632-31a961b15b4f",
                                                                                                      "41199c2a-8fbe-41a6-8b19-712bec7c5f52",
                                                                                                      "1f8f51ea-e8c1-40af-9b05-cea880c8d505",
                                                                                                      "803d3fc3-f150-44ff-96c2-8620557c8529",
                                                                                                      "ece3ebec-0296-4e70-8f74-0462ac629eb3",
                                                                                                      "667f0cf3-ed73-42cd-84fd-f505f0560ddb"))
                                                                              .equalToDeviceFilter("88dc0af6-4134-42bc-a924-8bd7b88d5a1c")
                                                                              .notEqualToDeviceFilter("86f39981-f9ba-4e41-82b5-c839321945cb")
                                                                              .inDeviceFilters(Arrays.asList("d4b1f191-e7b0-40ca-83a4-b821790e05c1",
                                                                                                             "1dadad1b-339b-4aa6-95d5-d8620c5a9d0a",
                                                                                                             "12df32b3-5328-4e49-843a-07edce8c1f03",
                                                                                                             "f4eb74ff-0970-4a2e-9989-7f1d4d172622",
                                                                                                             "9926dc27-3520-422d-a169-64f1ef5bc82c",
                                                                                                             "66f71964-bc39-449d-9ee3-817a7265173a",
                                                                                                             "75a814b1-65b4-4a92-98bb-b75a69cabede",
                                                                                                             "f8c217d0-52b4-46ec-a551-8c6dcb29dd18"))
                                                                              .notInDeviceFilters(Arrays.asList("3d4f7336-5373-4e3e-af9d-11ac3bd99a1c",
                                                                                                                "802090fc-f829-4e7a-985d-83db39e70254",
                                                                                                                "7c876692-e7ac-41bf-aaf6-31e70eefffea",
                                                                                                                "a7fa9eca-34e4-44f9-bd38-670483954684",
                                                                                                                "6f9982d8-5655-4f6b-b21c-565efa7f6264",
                                                                                                                "c7cca356-8537-475c-9921-72b44d7f2e82",
                                                                                                                "88a6909e-167b-440b-bb85-ccddf625e0c7",
                                                                                                                "14809825-b000-4672-a860-e06bb8a6390a",
                                                                                                                "fb60d05c-28c3-491e-9f1b-49ddc0cb85b9"))
                                                                              .inFinisheds(Arrays.asList(new Date(1559758609679L),
                                                                                                         new Date(1559758612123L),
                                                                                                         new Date(1559758611026L),
                                                                                                         new Date(1559758608006L)))
                                                                              .notInFinisheds(Arrays.asList(new Date(1559758611267L),
                                                                                                            new Date(1559758613299L),
                                                                                                            new Date(1559758605837L),
                                                                                                            new Date(1559758605871L),
                                                                                                            new Date(1559758609035L),
                                                                                                            new Date(1559758607899L),
                                                                                                            new Date(1559758608613L),
                                                                                                            new Date(1559758611633L),
                                                                                                            new Date(1559758610485L)))
                                                                              .lessThanFinished(new Date(1559758612107L))
                                                                              .greaterThanFinished(new Date(1559758611700L))
                                                                              .inStartedAts(Arrays.asList(new Date(1559758607687L)))
                                                                              .notInStartedAts(Arrays.asList(new Date(1559758608775L),
                                                                                                             new Date(1559758610155L),
                                                                                                             new Date(1559758608095L),
                                                                                                             new Date(1559758610542L),
                                                                                                             new Date(1559758607346L),
                                                                                                             new Date(1559758606677L),
                                                                                                             new Date(1559758614603L)))
                                                                              .lessThanStartedAt(new Date(1559758610172L))
                                                                              .greaterThanStartedAt(new Date(1559758607273L))
                                                                              .inWhens(Arrays.asList(new Date(1559758605881L),
                                                                                                     new Date(1559758609039L),
                                                                                                     new Date(1559758610180L),
                                                                                                     new Date(1559758608029L),
                                                                                                     new Date(1559758607085L)))
                                                                              .notInWhens(Arrays.asList(new Date(1559758611229L)))
                                                                              .lessThanWhen(new Date(1559758613449L))
                                                                              .greaterThanWhen(new Date(1559758609156L))
                                                                              .inUpdatedAts(Arrays.asList(new Date(1559758609831L)))
                                                                              .notInUpdatedAts(Arrays.asList(new Date(1559758609557L)))
                                                                              .lessThanUpdatedAt(new Date(1559758613148L))
                                                                              .greaterThanUpdatedAt(new Date(1559758612586L))
                                                                              .equalToRootManifestId("67e70dee-097a-465a-9cb9-2b534601898a")
                                                                              .notEqualToRootManifestId("a0628722-8ef8-4b40-aed5-9d5ddfff2f20")
                                                                              .inRootManifestIds(Arrays.asList("514048c9-c18d-4308-9fad-f0b7344dac8d",
                                                                                                               "1a509e81-e51a-43ee-8cb8-942396b9f7d8",
                                                                                                               "6c518116-0238-45af-af5f-46d9d928b672",
                                                                                                               "69c26602-e018-4f0d-9fbb-a60f612585b1",
                                                                                                               "b05018d0-2b8c-4199-81c3-912530007709",
                                                                                                               "22d6a9aa-cfa3-483c-b1fe-a73851181066"))
                                                                              .notInRootManifestIds(Arrays.asList("5d34c791-ede3-4011-aaeb-79203ce68af3",
                                                                                                                  "cb2e3347-0342-429e-ba50-0be21a0b2b41",
                                                                                                                  "7dbd4b75-97ed-4336-9512-bf5a8a48e34e"))
                                                                              .equalToDescription("7eb04c32-9705-4de5-93ef-7bd92f3dc880")
                                                                              .notEqualToDescription("4f35306c-83a5-424b-8394-502bc9be652e")
                                                                              .inDescriptions(Arrays.asList("0a828b49-b6ac-43ed-b586-c4559a6614a8"))
                                                                              .notInDescriptions(Arrays.asList("6b1a6a0c-fcd4-42f0-a684-ee5d56229b2f",
                                                                                                               "b3c0a9ef-e983-4bf4-9356-f21e77858669",
                                                                                                               "85efa3d2-e615-4b40-bb5a-f9b094225c66",
                                                                                                               "e985096f-9645-4f27-b4e9-4b3db473a1ff",
                                                                                                               "9b3c3d63-1594-475d-9a7a-9c4c1431c2d6"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559758610268L), new Date(1559758606337L), new Date(1559758608148L),
                                       new Date(1559758611858L), new Date(1559758612145L), new Date(1559758605986L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559758608369L), new Date(1559758609109L), new Date(1559758612486L),
                                       new Date(1559758612147L), new Date(1559758611164L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559758613367L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559758610778L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("f6e7d87e-97db-436b-bc75-41d9517ac854",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("476f0c5a-bcb1-4927-8a5d-c94473254a4b",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("b5735418-f4a8-4ece-a3d6-c5c4d403d260"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("f3a30d06-08fc-4fac-b73f-9e1fa8ac1dcc", "d5019703-f6e9-409f-af20-1ad9e7a6c1c3",
                                       "2fcf69af-8380-47cc-b9cd-3e4cd0be912e", "fbe1645b-4a6e-4ea1-aef7-3484766953ef"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("2c05f937-5efe-441b-8342-d89eed2e4874",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("71f4ff12-2618-4ae6-89ad-3457fecf5432",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("3aed0ad2-45e0-4745-85fe-34905ae9cfb0", "75375802-2806-4358-96c3-97d131e05129",
                                       "fd707f79-28e5-4239-be99-abee7eb85cf1"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("17a50b54-7d91-496e-a809-28ffed931523", "ea796f14-8fe9-43e6-9632-31a961b15b4f",
                                       "41199c2a-8fbe-41a6-8b19-712bec7c5f52", "1f8f51ea-e8c1-40af-9b05-cea880c8d505",
                                       "803d3fc3-f150-44ff-96c2-8620557c8529", "ece3ebec-0296-4e70-8f74-0462ac629eb3",
                                       "667f0cf3-ed73-42cd-84fd-f505f0560ddb"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("88dc0af6-4134-42bc-a924-8bd7b88d5a1c",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("86f39981-f9ba-4e41-82b5-c839321945cb",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("d4b1f191-e7b0-40ca-83a4-b821790e05c1", "1dadad1b-339b-4aa6-95d5-d8620c5a9d0a",
                                       "12df32b3-5328-4e49-843a-07edce8c1f03", "f4eb74ff-0970-4a2e-9989-7f1d4d172622",
                                       "9926dc27-3520-422d-a169-64f1ef5bc82c", "66f71964-bc39-449d-9ee3-817a7265173a",
                                       "75a814b1-65b4-4a92-98bb-b75a69cabede", "f8c217d0-52b4-46ec-a551-8c6dcb29dd18"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("3d4f7336-5373-4e3e-af9d-11ac3bd99a1c", "802090fc-f829-4e7a-985d-83db39e70254",
                                       "7c876692-e7ac-41bf-aaf6-31e70eefffea", "a7fa9eca-34e4-44f9-bd38-670483954684",
                                       "6f9982d8-5655-4f6b-b21c-565efa7f6264", "c7cca356-8537-475c-9921-72b44d7f2e82",
                                       "88a6909e-167b-440b-bb85-ccddf625e0c7", "14809825-b000-4672-a860-e06bb8a6390a",
                                       "fb60d05c-28c3-491e-9f1b-49ddc0cb85b9"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1559758609679L), new Date(1559758612123L), new Date(1559758611026L),
                                       new Date(1559758608006L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.NOT_IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1559758611267L), new Date(1559758613299L), new Date(1559758605837L),
                                       new Date(1559758605871L), new Date(1559758609035L), new Date(1559758607899L),
                                       new Date(1559758608613L), new Date(1559758611633L), new Date(1559758610485L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.LESS_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1559758612107L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.GREATER_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1559758611700L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1559758607687L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1559758608775L), new Date(1559758610155L), new Date(1559758608095L),
                                       new Date(1559758610542L), new Date(1559758607346L), new Date(1559758606677L),
                                       new Date(1559758614603L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1559758610172L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1559758607273L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1559758605881L), new Date(1559758609039L), new Date(1559758610180L),
                                       new Date(1559758608029L), new Date(1559758607085L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.NOT_IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1559758611229L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.LESS_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1559758613449L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.GREATER_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1559758609156L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559758609831L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559758609557L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559758613148L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559758612586L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("67e70dee-097a-465a-9cb9-2b534601898a",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("a0628722-8ef8-4b40-aed5-9d5ddfff2f20",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID, FilterOperator.IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("514048c9-c18d-4308-9fad-f0b7344dac8d", "1a509e81-e51a-43ee-8cb8-942396b9f7d8",
                                       "6c518116-0238-45af-af5f-46d9d928b672", "69c26602-e018-4f0d-9fbb-a60f612585b1",
                                       "b05018d0-2b8c-4199-81c3-912530007709", "22d6a9aa-cfa3-483c-b1fe-a73851181066"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("5d34c791-ede3-4011-aaeb-79203ce68af3", "cb2e3347-0342-429e-ba50-0be21a0b2b41",
                                       "7dbd4b75-97ed-4336-9512-bf5a8a48e34e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("7eb04c32-9705-4de5-93ef-7bd92f3dc880",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("4f35306c-83a5-424b-8394-502bc9be652e",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("0a828b49-b6ac-43ed-b586-c4559a6614a8"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("6b1a6a0c-fcd4-42f0-a684-ee5d56229b2f", "b3c0a9ef-e983-4bf4-9356-f21e77858669",
                                       "85efa3d2-e615-4b40-bb5a-f9b094225c66", "e985096f-9645-4f27-b4e9-4b3db473a1ff",
                                       "9b3c3d63-1594-475d-9a7a-9c4c1431c2d6"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(-33),
                                                                                                 Long.valueOf(-99),
                                                                                                 Order.getDefault(),
                                                                                                 "a752b8fa-9bfc-49ae-82a1-5b078580f240",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(-33),
                                                                                                 Long.valueOf(-99),
                                                                                                 Order.getDefault(),
                                                                                                 "a752b8fa-9bfc-49ae-82a1-5b078580f240",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2.hashCode(), updatecampaignlistoptions1.hashCode());
            int hashCode = updatecampaignlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, updatecampaignlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(-124),
                                                                                                 Long.valueOf(16),
                                                                                                 Order.getDefault(),
                                                                                                 "3f03fa67-f0c9-4f43-bf72-0bf69e76b21d",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(-124),
                                                                                                 Long.valueOf(16),
                                                                                                 Order.getDefault(),
                                                                                                 "3f03fa67-f0c9-4f43-bf72-0bf69e76b21d",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions3 = new UpdateCampaignListOptions(Integer.valueOf(34),
                                                                                                 Long.valueOf(-57),
                                                                                                 Order.getDefault(),
                                                                                                 "48dcb847-d446-45f4-980d-b2de9371ea72",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotNull(updatecampaignlistoptions3);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertNotSame(updatecampaignlistoptions3, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions2);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions1);
            assertFalse(updatecampaignlistoptions1.equals(null));
            assertNotEquals(updatecampaignlistoptions3, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
