// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model UpdateCampaignListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUpdateCampaignListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(100),
                                                                                                 Long.valueOf(-93),
                                                                                                 Order.getDefault(),
                                                                                                 "2f6ce41f-cb25-4a37-88ae-71df1d7607e8",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = updatecampaignlistoptions1.clone();
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testFilters() {
        try {
            UpdateCampaignListOptions option = new UpdateCampaignListOptions().inCreatedAts(Arrays.asList(new Date(1559752152390L),
                                                                                                          new Date(1559752150561L)))
                                                                              .notInCreatedAts(Arrays.asList(new Date(1559752149605L),
                                                                                                             new Date(1559752146198L)))
                                                                              .lessThanCreatedAt(new Date(1559752152176L))
                                                                              .greaterThanCreatedAt(new Date(1559752151835L))
                                                                              .equalToName("30fb161f-827c-45c2-ba7b-19948bd4e380")
                                                                              .notEqualToName("fa1859ab-7651-484f-ab7e-ccf57cab733a")
                                                                              .inNames(Arrays.asList("da5acb46-c29a-4716-98ca-c9ace1f58685"))
                                                                              .notInNames(Arrays.asList("cf3e264a-b055-4845-9215-46b00af8340a",
                                                                                                        "ae5e2762-19f1-4daf-959f-603380c503cc",
                                                                                                        "b6e28a38-7717-4f33-9eda-85377bc6b211",
                                                                                                        "a15b5ef1-b676-4a1c-8a21-30d8bb3d66ce",
                                                                                                        "942c46c3-a4ff-4a43-903f-fb4d1151157c",
                                                                                                        "828259f3-b89e-4fd0-9145-6069ea71aac1",
                                                                                                        "3e00ab15-9ef0-4407-9d0f-8aa3f6843c8b",
                                                                                                        "5d4a2cec-5fba-45be-9bde-e2f9b9f91c11",
                                                                                                        "4b5a97ef-9676-449f-ac7b-aa5d1454f41f"))
                                                                              .equalToId("8aba12a3-c572-453e-8ef8-5cd22530bf9e")
                                                                              .notEqualToId("54695bc4-68fa-49d9-be0e-7627964bee5c")
                                                                              .inIds(Arrays.asList("1c707cc1-2232-4260-b839-8142339b5c5b",
                                                                                                   "500a6716-005c-4bf7-bef0-523f02be1214",
                                                                                                   "8a23aada-597d-43af-b2c7-243efc84e548",
                                                                                                   "1e8da0fc-6dd4-4e04-95d9-0f55b5e80635"))
                                                                              .notInIds(Arrays.asList("4c4afe84-dd0d-4b59-8039-48083b5b7ffa",
                                                                                                      "50834e3f-d949-4d64-a7db-8d36c40f14db",
                                                                                                      "85f82781-6c60-4615-9583-34f1cc53cfe2",
                                                                                                      "cb80e9cb-e701-433b-9477-854c5706890f"))
                                                                              .equalToDeviceFilter("c9f7864a-e199-4947-9286-3ba3bb5a18d0")
                                                                              .notEqualToDeviceFilter("70662697-a737-48a7-8bb5-0033befa0b70")
                                                                              .inDeviceFilters(Arrays.asList("ad640d2c-3399-4684-ae40-c21f5cc9afa7",
                                                                                                             "cede48b5-4fd2-42f9-87fc-e20fed39ce2e",
                                                                                                             "0beff336-e78c-4f9a-b166-ae39353cd600",
                                                                                                             "4241692e-75f4-430a-8df8-9d73bd7efced",
                                                                                                             "fc9f210a-9b0c-4aaf-935b-d6048a0eb800"))
                                                                              .notInDeviceFilters(Arrays.asList("d5e47e70-b825-4a2f-8cb8-cac71541ef8d",
                                                                                                                "fded6a3b-9588-4cd6-a93a-6269540bd208"))
                                                                              .inFinisheds(Arrays.asList(new Date(1559752155542L)))
                                                                              .notInFinisheds(Arrays.asList(new Date(1559752152925L),
                                                                                                            new Date(1559752147391L),
                                                                                                            new Date(1559752148240L),
                                                                                                            new Date(1559752147928L),
                                                                                                            new Date(1559752148155L)))
                                                                              .lessThanFinished(new Date(1559752154065L))
                                                                              .greaterThanFinished(new Date(1559752152680L))
                                                                              .inStartedAts(Arrays.asList(new Date(1559752149561L),
                                                                                                          new Date(1559752145933L),
                                                                                                          new Date(1559752149777L)))
                                                                              .notInStartedAts(Arrays.asList(new Date(1559752147112L)))
                                                                              .lessThanStartedAt(new Date(1559752150765L))
                                                                              .greaterThanStartedAt(new Date(1559752152862L))
                                                                              .inWhens(Arrays.asList(new Date(1559752153334L),
                                                                                                     new Date(1559752154640L),
                                                                                                     new Date(1559752149685L),
                                                                                                     new Date(1559752153587L)))
                                                                              .notInWhens(Arrays.asList(new Date(1559752152232L),
                                                                                                        new Date(1559752150122L),
                                                                                                        new Date(1559752150014L),
                                                                                                        new Date(1559752153257L),
                                                                                                        new Date(1559752149489L),
                                                                                                        new Date(1559752146949L)))
                                                                              .lessThanWhen(new Date(1559752145668L))
                                                                              .greaterThanWhen(new Date(1559752152583L))
                                                                              .inUpdatedAts(Arrays.asList(new Date(1559752153627L),
                                                                                                          new Date(1559752153608L),
                                                                                                          new Date(1559752151548L)))
                                                                              .notInUpdatedAts(Arrays.asList(new Date(1559752148734L),
                                                                                                             new Date(1559752146735L),
                                                                                                             new Date(1559752148921L),
                                                                                                             new Date(1559752152085L),
                                                                                                             new Date(1559752151418L),
                                                                                                             new Date(1559752145666L),
                                                                                                             new Date(1559752149418L)))
                                                                              .lessThanUpdatedAt(new Date(1559752145912L))
                                                                              .greaterThanUpdatedAt(new Date(1559752146042L))
                                                                              .equalToRootManifestId("c4413f2f-0244-4655-b762-58d6ff13bb68")
                                                                              .notEqualToRootManifestId("98ea46be-bac8-4c0a-905c-71c4aa0664ac")
                                                                              .inRootManifestIds(Arrays.asList("4a05a866-e29a-48e1-92a7-68163edd8cac",
                                                                                                               "8bfbead8-9524-4bdf-a31b-0323ddedd465",
                                                                                                               "a1f92740-4617-4e8a-9070-a6cb8dd1b278",
                                                                                                               "5f8c1620-ad5b-4823-baee-a73264df0624"))
                                                                              .notInRootManifestIds(Arrays.asList("b27124ff-d9b8-44a4-ac26-67e702ecdf79",
                                                                                                                  "eb8b2896-6e7c-4c94-8548-be738e7f2d1f",
                                                                                                                  "e70f779e-e75f-4d57-af49-628d7b85aeb7",
                                                                                                                  "b6da8cf6-4aba-45fd-a7c7-d8ae217f267f",
                                                                                                                  "128a9e49-42dc-49f7-bf74-77e894b5a315",
                                                                                                                  "37191350-4dbd-44f8-93f5-295d9cd7d6d6",
                                                                                                                  "37ab1d35-9516-4218-a6e9-146f3efe1182",
                                                                                                                  "a0622c12-6690-467e-8dcf-05cc36190a3e"))
                                                                              .equalToDescription("7bb4c763-0542-486d-823f-62925975a3a4")
                                                                              .notEqualToDescription("501bd5b1-2978-43a6-a2e7-ae269bbe6bcf")
                                                                              .inDescriptions(Arrays.asList("2f61ca49-150c-4de7-bcf1-ae9cd3d8efb1"))
                                                                              .notInDescriptions(Arrays.asList("b7195199-1909-428a-a4f0-d4b0b806774a",
                                                                                                               "912c0a93-36d8-4d33-8aac-5b5faa0d2a3b"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559752152390L), new Date(1559752150561L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559752149605L), new Date(1559752146198L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559752152176L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559752151835L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("30fb161f-827c-45c2-ba7b-19948bd4e380",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("fa1859ab-7651-484f-ab7e-ccf57cab733a",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("da5acb46-c29a-4716-98ca-c9ace1f58685"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("cf3e264a-b055-4845-9215-46b00af8340a", "ae5e2762-19f1-4daf-959f-603380c503cc",
                                       "b6e28a38-7717-4f33-9eda-85377bc6b211", "a15b5ef1-b676-4a1c-8a21-30d8bb3d66ce",
                                       "942c46c3-a4ff-4a43-903f-fb4d1151157c", "828259f3-b89e-4fd0-9145-6069ea71aac1",
                                       "3e00ab15-9ef0-4407-9d0f-8aa3f6843c8b", "5d4a2cec-5fba-45be-9bde-e2f9b9f91c11",
                                       "4b5a97ef-9676-449f-ac7b-aa5d1454f41f"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("8aba12a3-c572-453e-8ef8-5cd22530bf9e",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("54695bc4-68fa-49d9-be0e-7627964bee5c",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("1c707cc1-2232-4260-b839-8142339b5c5b", "500a6716-005c-4bf7-bef0-523f02be1214",
                                       "8a23aada-597d-43af-b2c7-243efc84e548", "1e8da0fc-6dd4-4e04-95d9-0f55b5e80635"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("4c4afe84-dd0d-4b59-8039-48083b5b7ffa", "50834e3f-d949-4d64-a7db-8d36c40f14db",
                                       "85f82781-6c60-4615-9583-34f1cc53cfe2", "cb80e9cb-e701-433b-9477-854c5706890f"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("c9f7864a-e199-4947-9286-3ba3bb5a18d0",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("70662697-a737-48a7-8bb5-0033befa0b70",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("ad640d2c-3399-4684-ae40-c21f5cc9afa7", "cede48b5-4fd2-42f9-87fc-e20fed39ce2e",
                                       "0beff336-e78c-4f9a-b166-ae39353cd600", "4241692e-75f4-430a-8df8-9d73bd7efced",
                                       "fc9f210a-9b0c-4aaf-935b-d6048a0eb800"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("d5e47e70-b825-4a2f-8cb8-cac71541ef8d", "fded6a3b-9588-4cd6-a93a-6269540bd208"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1559752155542L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.NOT_IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1559752152925L), new Date(1559752147391L), new Date(1559752148240L),
                                       new Date(1559752147928L), new Date(1559752148155L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.LESS_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1559752154065L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.GREATER_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1559752152680L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1559752149561L), new Date(1559752145933L), new Date(1559752149777L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1559752147112L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1559752150765L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1559752152862L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1559752153334L), new Date(1559752154640L), new Date(1559752149685L),
                                       new Date(1559752153587L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.NOT_IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1559752152232L), new Date(1559752150122L), new Date(1559752150014L),
                                       new Date(1559752153257L), new Date(1559752149489L), new Date(1559752146949L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.LESS_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1559752145668L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.GREATER_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1559752152583L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559752153627L), new Date(1559752153608L), new Date(1559752151548L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559752148734L), new Date(1559752146735L), new Date(1559752148921L),
                                       new Date(1559752152085L), new Date(1559752151418L), new Date(1559752145666L),
                                       new Date(1559752149418L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559752145912L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559752146042L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("c4413f2f-0244-4655-b762-58d6ff13bb68",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("98ea46be-bac8-4c0a-905c-71c4aa0664ac",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID, FilterOperator.IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("4a05a866-e29a-48e1-92a7-68163edd8cac", "8bfbead8-9524-4bdf-a31b-0323ddedd465",
                                       "a1f92740-4617-4e8a-9070-a6cb8dd1b278", "5f8c1620-ad5b-4823-baee-a73264df0624"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("b27124ff-d9b8-44a4-ac26-67e702ecdf79", "eb8b2896-6e7c-4c94-8548-be738e7f2d1f",
                                       "e70f779e-e75f-4d57-af49-628d7b85aeb7", "b6da8cf6-4aba-45fd-a7c7-d8ae217f267f",
                                       "128a9e49-42dc-49f7-bf74-77e894b5a315", "37191350-4dbd-44f8-93f5-295d9cd7d6d6",
                                       "37ab1d35-9516-4218-a6e9-146f3efe1182", "a0622c12-6690-467e-8dcf-05cc36190a3e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("7bb4c763-0542-486d-823f-62925975a3a4",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("501bd5b1-2978-43a6-a2e7-ae269bbe6bcf",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("2f61ca49-150c-4de7-bcf1-ae9cd3d8efb1"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("b7195199-1909-428a-a4f0-d4b0b806774a", "912c0a93-36d8-4d33-8aac-5b5faa0d2a3b"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(120),
                                                                                                 Long.valueOf(18),
                                                                                                 Order.getDefault(),
                                                                                                 "9fa643c0-a6c7-4d40-bf81-f0527ea7032e",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(120),
                                                                                                 Long.valueOf(18),
                                                                                                 Order.getDefault(),
                                                                                                 "9fa643c0-a6c7-4d40-bf81-f0527ea7032e",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2.hashCode(), updatecampaignlistoptions1.hashCode());
            int hashCode = updatecampaignlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, updatecampaignlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(94),
                                                                                                 Long.valueOf(-10),
                                                                                                 Order.getDefault(),
                                                                                                 "8987cc01-8f16-4023-9274-3fe88511b5e6",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(94),
                                                                                                 Long.valueOf(-10),
                                                                                                 Order.getDefault(),
                                                                                                 "8987cc01-8f16-4023-9274-3fe88511b5e6",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions3 = new UpdateCampaignListOptions(Integer.valueOf(-70),
                                                                                                 Long.valueOf(89),
                                                                                                 Order.getDefault(),
                                                                                                 "a0bf0f33-e2a4-4097-b9f4-3a631dde1fbd",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotNull(updatecampaignlistoptions3);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertNotSame(updatecampaignlistoptions3, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions2);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions1);
            assertFalse(updatecampaignlistoptions1.equals(null));
            assertNotEquals(updatecampaignlistoptions3, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
