// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model UpdateCampaignListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUpdateCampaignListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(18),
                                                                                                 Long.valueOf(-64),
                                                                                                 Order.getDefault(),
                                                                                                 "e639e64c-e341-4c64-8c01-bb6ff56e9b49",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = updatecampaignlistoptions1.clone();
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testFilters() {
        try {
            UpdateCampaignListOptions option = new UpdateCampaignListOptions().inCreatedAts(Arrays.asList(new Date(1559746955650L),
                                                                                                          new Date(1559746950708L),
                                                                                                          new Date(1559746953134L),
                                                                                                          new Date(1559746951120L)))
                                                                              .notInCreatedAts(Arrays.asList(new Date(1559746957859L),
                                                                                                             new Date(1559746953189L),
                                                                                                             new Date(1559746955899L)))
                                                                              .lessThanCreatedAt(new Date(1559746955172L))
                                                                              .greaterThanCreatedAt(new Date(1559746957498L))
                                                                              .equalToName("cbaf4ce1-9b62-4fa1-a229-ad5715ebc718")
                                                                              .notEqualToName("df9338d5-494b-48c2-a057-d50efdacca6b")
                                                                              .inNames(Arrays.asList("da1f94fe-58dc-48e6-85ff-d48018481063",
                                                                                                     "9100d7b4-4872-4ba1-a045-c78bc3c18e0c",
                                                                                                     "c13509ef-7c81-418e-9559-b0bb053fecbe"))
                                                                              .notInNames(Arrays.asList("80876b46-2178-4bb5-81f6-383d3bc2b8c8",
                                                                                                        "0b7cfd59-9d16-4fb9-8057-64294f2d3e13",
                                                                                                        "df8cf3da-861d-4763-a2fd-6a9a0bd46d55"))
                                                                              .equalToId("adfcf2e7-13ff-4d11-8c9f-c6a99e17363d")
                                                                              .notEqualToId("9de39a9c-0819-415c-ae7b-b39c96cba820")
                                                                              .inIds(Arrays.asList("ddc2ee3b-1338-4796-a1b1-0dcc62d2a411",
                                                                                                   "82833c56-bf28-42c5-8f91-0d9057a36dee",
                                                                                                   "fb15391d-5e23-4ef7-9f47-82411b21b465",
                                                                                                   "3ae6f7d8-a7cf-4178-9f06-454d66856c2c",
                                                                                                   "b1d2fa46-22c2-4b5e-92e2-c7812fa1716a",
                                                                                                   "e2c68b3f-5aa8-4d3d-aca1-9f000a657ba4",
                                                                                                   "7d425df8-f7b5-4d6a-b080-16edac35d1a8"))
                                                                              .notInIds(Arrays.asList("2feafcc5-fb63-4b29-a6bd-ac1ba66e3c80"))
                                                                              .equalToDeviceFilter("d1ff01f0-d1d0-4f2a-b9cb-1fe7ad38c80d")
                                                                              .notEqualToDeviceFilter("0e40758a-5101-4af1-84bb-1c9d6411be09")
                                                                              .inDeviceFilters(Arrays.asList("e30e5926-9049-4b27-94e2-bf6b0bf05b5f",
                                                                                                             "431db4b9-e906-4bdf-92d2-6167c6efe294",
                                                                                                             "5ba389cb-6c81-4bfd-94c9-ae656c999ea5",
                                                                                                             "af98bd45-04b3-4b49-b37c-a422b6efc97f",
                                                                                                             "05e3a2fc-66e4-4280-bc82-8971b2c9bfdb",
                                                                                                             "8bb305f0-8cdb-403a-8c0a-fdb9d735bccb",
                                                                                                             "660dc5c8-1af7-47f7-b2fd-beb353327121",
                                                                                                             "cbb876ff-5cea-4eb7-92f5-7873c3ef77f4"))
                                                                              .notInDeviceFilters(Arrays.asList("56c97162-a1b2-4386-bd5e-3f35e23db2f1",
                                                                                                                "0085b2fa-7c3b-4119-b841-992815b82967"))
                                                                              .inFinisheds(Arrays.asList(new Date(1559746954268L),
                                                                                                         new Date(1559746949305L),
                                                                                                         new Date(1559746953757L),
                                                                                                         new Date(1559746956592L),
                                                                                                         new Date(1559746948961L),
                                                                                                         new Date(1559746957079L),
                                                                                                         new Date(1559746957232L),
                                                                                                         new Date(1559746950959L)))
                                                                              .notInFinisheds(Arrays.asList(new Date(1559746954162L),
                                                                                                            new Date(1559746956393L),
                                                                                                            new Date(1559746951846L),
                                                                                                            new Date(1559746956219L),
                                                                                                            new Date(1559746951585L),
                                                                                                            new Date(1559746957408L),
                                                                                                            new Date(1559746951057L),
                                                                                                            new Date(1559746951314L)))
                                                                              .lessThanFinished(new Date(1559746955519L))
                                                                              .greaterThanFinished(new Date(1559746955421L))
                                                                              .inStartedAts(Arrays.asList(new Date(1559746953079L),
                                                                                                          new Date(1559746949421L),
                                                                                                          new Date(1559746952106L),
                                                                                                          new Date(1559746954578L),
                                                                                                          new Date(1559746956339L),
                                                                                                          new Date(1559746948439L),
                                                                                                          new Date(1559746955700L),
                                                                                                          new Date(1559746951619L),
                                                                                                          new Date(1559746948969L)))
                                                                              .notInStartedAts(Arrays.asList(new Date(1559746953316L),
                                                                                                             new Date(1559746954263L),
                                                                                                             new Date(1559746951151L),
                                                                                                             new Date(1559746956169L),
                                                                                                             new Date(1559746957172L),
                                                                                                             new Date(1559746948287L),
                                                                                                             new Date(1559746952564L)))
                                                                              .lessThanStartedAt(new Date(1559746955777L))
                                                                              .greaterThanStartedAt(new Date(1559746953501L))
                                                                              .inWhens(Arrays.asList(new Date(1559746953681L),
                                                                                                     new Date(1559746954369L),
                                                                                                     new Date(1559746955301L),
                                                                                                     new Date(1559746948459L),
                                                                                                     new Date(1559746956192L),
                                                                                                     new Date(1559746950651L),
                                                                                                     new Date(1559746957866L),
                                                                                                     new Date(1559746949924L),
                                                                                                     new Date(1559746956713L)))
                                                                              .notInWhens(Arrays.asList(new Date(1559746949083L),
                                                                                                        new Date(1559746957996L),
                                                                                                        new Date(1559746957415L),
                                                                                                        new Date(1559746949490L),
                                                                                                        new Date(1559746954830L),
                                                                                                        new Date(1559746957690L)))
                                                                              .lessThanWhen(new Date(1559746956975L))
                                                                              .greaterThanWhen(new Date(1559746951671L))
                                                                              .inUpdatedAts(Arrays.asList(new Date(1559746950414L),
                                                                                                          new Date(1559746955334L),
                                                                                                          new Date(1559746954185L),
                                                                                                          new Date(1559746952877L),
                                                                                                          new Date(1559746952668L)))
                                                                              .notInUpdatedAts(Arrays.asList(new Date(1559746954959L),
                                                                                                             new Date(1559746956054L),
                                                                                                             new Date(1559746952303L),
                                                                                                             new Date(1559746951658L),
                                                                                                             new Date(1559746954065L),
                                                                                                             new Date(1559746954439L),
                                                                                                             new Date(1559746953260L),
                                                                                                             new Date(1559746955210L)))
                                                                              .lessThanUpdatedAt(new Date(1559746950279L))
                                                                              .greaterThanUpdatedAt(new Date(1559746948635L))
                                                                              .equalToRootManifestId("a9762f8f-2bdb-49ba-bf70-91b0bd8c3988")
                                                                              .notEqualToRootManifestId("a5945e93-27c4-4be8-994b-00b61a2d42ed")
                                                                              .inRootManifestIds(Arrays.asList("960cdc19-d32b-4e0a-8324-87b8f3e42417",
                                                                                                               "2ca25970-f141-4365-8cf0-af4af850c5e1",
                                                                                                               "9c28f6be-de15-4bfc-9ecc-8bda45fa31c2",
                                                                                                               "cd9deb98-98a7-4ddd-8d26-5fd1a2a024cf"))
                                                                              .notInRootManifestIds(Arrays.asList("e53e90e8-b390-444c-8778-acab758c759a"))
                                                                              .equalToDescription("6e2855fe-b09e-4296-9b6d-ef8b29d20c65")
                                                                              .notEqualToDescription("845a9bfd-279f-4a9c-ac95-fcf61f39034d")
                                                                              .inDescriptions(Arrays.asList("97367fcb-6922-4475-be4e-fd055479ac23",
                                                                                                            "ea5944e1-a65c-4652-9549-2cf3ce04f65c",
                                                                                                            "0218d74e-78b4-41f1-9b4f-813ec88879b5",
                                                                                                            "ca8bfc77-9411-45ba-8d32-835ebe9d91e3",
                                                                                                            "ae31fd18-0f8e-4d8b-9889-6a1ed048572f",
                                                                                                            "ac1450c7-a7cd-4c6e-9e03-0d0493dcd055",
                                                                                                            "600190ba-cb6e-4c62-85fd-96b74c692318",
                                                                                                            "0e6eda45-cb91-4de3-be5b-eeab21a2b057"))
                                                                              .notInDescriptions(Arrays.asList("f27f2456-abda-44a6-b612-0367bf6232d6",
                                                                                                               "e2b1755c-6091-44b3-bac9-24c2a4542c4d"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559746955650L), new Date(1559746950708L), new Date(1559746953134L),
                                       new Date(1559746951120L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559746957859L), new Date(1559746953189L), new Date(1559746955899L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559746955172L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559746957498L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("cbaf4ce1-9b62-4fa1-a229-ad5715ebc718",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("df9338d5-494b-48c2-a057-d50efdacca6b",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("da1f94fe-58dc-48e6-85ff-d48018481063", "9100d7b4-4872-4ba1-a045-c78bc3c18e0c",
                                       "c13509ef-7c81-418e-9559-b0bb053fecbe"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("80876b46-2178-4bb5-81f6-383d3bc2b8c8", "0b7cfd59-9d16-4fb9-8057-64294f2d3e13",
                                       "df8cf3da-861d-4763-a2fd-6a9a0bd46d55"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("adfcf2e7-13ff-4d11-8c9f-c6a99e17363d",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("9de39a9c-0819-415c-ae7b-b39c96cba820",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("ddc2ee3b-1338-4796-a1b1-0dcc62d2a411", "82833c56-bf28-42c5-8f91-0d9057a36dee",
                                       "fb15391d-5e23-4ef7-9f47-82411b21b465", "3ae6f7d8-a7cf-4178-9f06-454d66856c2c",
                                       "b1d2fa46-22c2-4b5e-92e2-c7812fa1716a", "e2c68b3f-5aa8-4d3d-aca1-9f000a657ba4",
                                       "7d425df8-f7b5-4d6a-b080-16edac35d1a8"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("2feafcc5-fb63-4b29-a6bd-ac1ba66e3c80"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("d1ff01f0-d1d0-4f2a-b9cb-1fe7ad38c80d",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("0e40758a-5101-4af1-84bb-1c9d6411be09",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("e30e5926-9049-4b27-94e2-bf6b0bf05b5f", "431db4b9-e906-4bdf-92d2-6167c6efe294",
                                       "5ba389cb-6c81-4bfd-94c9-ae656c999ea5", "af98bd45-04b3-4b49-b37c-a422b6efc97f",
                                       "05e3a2fc-66e4-4280-bc82-8971b2c9bfdb", "8bb305f0-8cdb-403a-8c0a-fdb9d735bccb",
                                       "660dc5c8-1af7-47f7-b2fd-beb353327121", "cbb876ff-5cea-4eb7-92f5-7873c3ef77f4"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("56c97162-a1b2-4386-bd5e-3f35e23db2f1", "0085b2fa-7c3b-4119-b841-992815b82967"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1559746954268L), new Date(1559746949305L), new Date(1559746953757L),
                                       new Date(1559746956592L), new Date(1559746948961L), new Date(1559746957079L),
                                       new Date(1559746957232L), new Date(1559746950959L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.NOT_IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1559746954162L), new Date(1559746956393L), new Date(1559746951846L),
                                       new Date(1559746956219L), new Date(1559746951585L), new Date(1559746957408L),
                                       new Date(1559746951057L), new Date(1559746951314L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.LESS_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1559746955519L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.GREATER_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1559746955421L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1559746953079L), new Date(1559746949421L), new Date(1559746952106L),
                                       new Date(1559746954578L), new Date(1559746956339L), new Date(1559746948439L),
                                       new Date(1559746955700L), new Date(1559746951619L), new Date(1559746948969L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1559746953316L), new Date(1559746954263L), new Date(1559746951151L),
                                       new Date(1559746956169L), new Date(1559746957172L), new Date(1559746948287L),
                                       new Date(1559746952564L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1559746955777L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1559746953501L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1559746953681L), new Date(1559746954369L), new Date(1559746955301L),
                                       new Date(1559746948459L), new Date(1559746956192L), new Date(1559746950651L),
                                       new Date(1559746957866L), new Date(1559746949924L), new Date(1559746956713L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.NOT_IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1559746949083L), new Date(1559746957996L), new Date(1559746957415L),
                                       new Date(1559746949490L), new Date(1559746954830L), new Date(1559746957690L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.LESS_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1559746956975L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.GREATER_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1559746951671L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559746950414L), new Date(1559746955334L), new Date(1559746954185L),
                                       new Date(1559746952877L), new Date(1559746952668L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559746954959L), new Date(1559746956054L), new Date(1559746952303L),
                                       new Date(1559746951658L), new Date(1559746954065L), new Date(1559746954439L),
                                       new Date(1559746953260L), new Date(1559746955210L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559746950279L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559746948635L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("a9762f8f-2bdb-49ba-bf70-91b0bd8c3988",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("a5945e93-27c4-4be8-994b-00b61a2d42ed",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID, FilterOperator.IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("960cdc19-d32b-4e0a-8324-87b8f3e42417", "2ca25970-f141-4365-8cf0-af4af850c5e1",
                                       "9c28f6be-de15-4bfc-9ecc-8bda45fa31c2", "cd9deb98-98a7-4ddd-8d26-5fd1a2a024cf"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("e53e90e8-b390-444c-8778-acab758c759a"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("6e2855fe-b09e-4296-9b6d-ef8b29d20c65",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("845a9bfd-279f-4a9c-ac95-fcf61f39034d",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("97367fcb-6922-4475-be4e-fd055479ac23", "ea5944e1-a65c-4652-9549-2cf3ce04f65c",
                                       "0218d74e-78b4-41f1-9b4f-813ec88879b5", "ca8bfc77-9411-45ba-8d32-835ebe9d91e3",
                                       "ae31fd18-0f8e-4d8b-9889-6a1ed048572f", "ac1450c7-a7cd-4c6e-9e03-0d0493dcd055",
                                       "600190ba-cb6e-4c62-85fd-96b74c692318", "0e6eda45-cb91-4de3-be5b-eeab21a2b057"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("f27f2456-abda-44a6-b612-0367bf6232d6", "e2b1755c-6091-44b3-bac9-24c2a4542c4d"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(-105),
                                                                                                 Long.valueOf(84),
                                                                                                 Order.getDefault(),
                                                                                                 "abb5e9ad-3998-40ee-85c1-79a61b0c8da3",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(-105),
                                                                                                 Long.valueOf(84),
                                                                                                 Order.getDefault(),
                                                                                                 "abb5e9ad-3998-40ee-85c1-79a61b0c8da3",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2.hashCode(), updatecampaignlistoptions1.hashCode());
            int hashCode = updatecampaignlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, updatecampaignlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(73),
                                                                                                 Long.valueOf(-1),
                                                                                                 Order.getDefault(),
                                                                                                 "71ed6400-0904-4efe-9689-581f4c3f6d1d",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(73),
                                                                                                 Long.valueOf(-1),
                                                                                                 Order.getDefault(),
                                                                                                 "71ed6400-0904-4efe-9689-581f4c3f6d1d",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions3 = new UpdateCampaignListOptions(Integer.valueOf(121),
                                                                                                 Long.valueOf(-101),
                                                                                                 Order.getDefault(),
                                                                                                 "03e91fde-73e5-4a6d-9688-b92557adcef3",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotNull(updatecampaignlistoptions3);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertNotSame(updatecampaignlistoptions3, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions2);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions1);
            assertFalse(updatecampaignlistoptions1.equals(null));
            assertNotEquals(updatecampaignlistoptions3, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
