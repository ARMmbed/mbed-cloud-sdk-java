// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model UpdateCampaignListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUpdateCampaignListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(47),
                                                                                                 Long.valueOf(31),
                                                                                                 Order.getDefault(),
                                                                                                 "c05ae961-5f5a-43fc-85cb-700f088b9058",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = updatecampaignlistoptions1.clone();
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testFilters() {
        try {
            UpdateCampaignListOptions option = new UpdateCampaignListOptions().inCreatedAts(Arrays.asList(new Date(1559300107451L),
                                                                                                          new Date(1559300101157L),
                                                                                                          new Date(1559300108343L)))
                                                                              .notInCreatedAts(Arrays.asList(new Date(1559300106413L),
                                                                                                             new Date(1559300106854L),
                                                                                                             new Date(1559300109160L),
                                                                                                             new Date(1559300101718L),
                                                                                                             new Date(1559300100157L),
                                                                                                             new Date(1559300101718L),
                                                                                                             new Date(1559300103719L),
                                                                                                             new Date(1559300108743L)))
                                                                              .lessThanCreatedAt(new Date(1559300104280L))
                                                                              .greaterThanCreatedAt(new Date(1559300099835L))
                                                                              .equalToName("bb56c333-305d-452e-b78d-4b9b478af328")
                                                                              .notEqualToName("90bac49f-f7ad-4dbe-9e68-79279de58007")
                                                                              .inNames(Arrays.asList("738e2a1b-8b60-438c-8716-241cbf8fdf36"))
                                                                              .notInNames(Arrays.asList("7996e787-e817-478e-9e97-004109c8f378",
                                                                                                        "71222a63-1ec9-4981-9bca-28e3848a0cff",
                                                                                                        "432c6f9f-d740-4f43-8c26-5b9a893033de",
                                                                                                        "c790837a-1729-459b-8da3-cda2b6458255"))
                                                                              .equalToId("5fa20613-c1bb-468b-bf98-e4582563b2eb")
                                                                              .notEqualToId("908242d4-7ab4-49bd-946c-a44bbe59a286")
                                                                              .inIds(Arrays.asList("aede0f30-4eaf-430d-b9a7-4c9323df9095",
                                                                                                   "cd8f36ef-5e48-4d26-b949-1980efec7296",
                                                                                                   "647a2e6c-5661-4f48-80c1-ace216b9e94d",
                                                                                                   "634f3fca-a517-4db7-bb17-e3417d409ded",
                                                                                                   "bb5c825b-332a-4fe9-ae22-3465916f8b4f",
                                                                                                   "18442b82-2dbb-4d05-8ffa-d7978f71d637",
                                                                                                   "fa787c44-a580-4b88-afe5-4845d2853264"))
                                                                              .notInIds(Arrays.asList("91f90702-15bb-4e71-95a4-01246b3a4463"))
                                                                              .equalToDeviceFilter("030080e8-245e-46cc-849e-d38dea4acb0c")
                                                                              .notEqualToDeviceFilter("be9cc255-535b-44c4-b035-f680971e0c1e")
                                                                              .inDeviceFilters(Arrays.asList("4524983d-4710-4ae4-bb43-b6bca18d9231",
                                                                                                             "d4ef6fe4-8254-4147-bb02-0ed1a4ab8316",
                                                                                                             "83b16cc3-1150-45ea-bc02-7e472bfcf1f8",
                                                                                                             "85eb36c6-569d-473c-9787-d7004df279c7",
                                                                                                             "4ba7d930-8ba0-433c-8a43-ed074cb88344",
                                                                                                             "ae0e318c-897c-41d3-aecb-1f731e4d640f",
                                                                                                             "d7eedc90-de1e-4d30-85c2-0d007c5cc2a5",
                                                                                                             "077a0238-e214-4609-bbfa-4cb88566f611",
                                                                                                             "2eb0a7f9-096b-4a3e-9b42-44bf9d015290"))
                                                                              .notInDeviceFilters(Arrays.asList("5fa35e5c-ac4c-4b68-8f14-7a0a1f0f0fc1",
                                                                                                                "8db13450-dba2-4ec8-a58a-fb382f2ecdb9",
                                                                                                                "7435dba9-fa3e-455f-a8e2-8233a4a6e157",
                                                                                                                "4a4c1505-13df-4d30-aa9d-003727b5b049",
                                                                                                                "da7f7348-1e03-45bb-9f08-d6723245f5a5",
                                                                                                                "767d9082-45e2-49a5-b712-a6029de31d71",
                                                                                                                "3b929e5a-fdcc-4734-95ce-f7aafd710d60",
                                                                                                                "13e12412-256d-42cf-a1a1-19072fa17ead",
                                                                                                                "daf9479f-e91e-4d65-bac8-3b2fb0e4c1c1"))
                                                                              .inFinisheds(Arrays.asList(new Date(1559300106584L),
                                                                                                         new Date(1559300100138L),
                                                                                                         new Date(1559300102972L),
                                                                                                         new Date(1559300101261L),
                                                                                                         new Date(1559300101869L),
                                                                                                         new Date(1559300107140L)))
                                                                              .notInFinisheds(Arrays.asList(new Date(1559300107528L)))
                                                                              .lessThanFinished(new Date(1559300102549L))
                                                                              .greaterThanFinished(new Date(1559300102071L))
                                                                              .inStartedAts(Arrays.asList(new Date(1559300106933L),
                                                                                                          new Date(1559300103136L),
                                                                                                          new Date(1559300105153L),
                                                                                                          new Date(1559300100568L),
                                                                                                          new Date(1559300109110L),
                                                                                                          new Date(1559300107754L)))
                                                                              .notInStartedAts(Arrays.asList(new Date(1559300105532L),
                                                                                                             new Date(1559300101721L),
                                                                                                             new Date(1559300101467L),
                                                                                                             new Date(1559300108194L),
                                                                                                             new Date(1559300108248L)))
                                                                              .lessThanStartedAt(new Date(1559300104436L))
                                                                              .greaterThanStartedAt(new Date(1559300105954L))
                                                                              .inWhens(Arrays.asList(new Date(1559300102226L),
                                                                                                     new Date(1559300104497L),
                                                                                                     new Date(1559300099602L)))
                                                                              .notInWhens(Arrays.asList(new Date(1559300106194L),
                                                                                                        new Date(1559300104088L),
                                                                                                        new Date(1559300101647L),
                                                                                                        new Date(1559300103020L),
                                                                                                        new Date(1559300102791L),
                                                                                                        new Date(1559300102664L),
                                                                                                        new Date(1559300103634L),
                                                                                                        new Date(1559300107327L)))
                                                                              .lessThanWhen(new Date(1559300099393L))
                                                                              .greaterThanWhen(new Date(1559300101910L))
                                                                              .inUpdatedAts(Arrays.asList(new Date(1559300100984L),
                                                                                                          new Date(1559300103100L),
                                                                                                          new Date(1559300107049L),
                                                                                                          new Date(1559300104940L),
                                                                                                          new Date(1559300099298L),
                                                                                                          new Date(1559300099372L),
                                                                                                          new Date(1559300105861L),
                                                                                                          new Date(1559300100862L),
                                                                                                          new Date(1559300103501L)))
                                                                              .notInUpdatedAts(Arrays.asList(new Date(1559300105951L),
                                                                                                             new Date(1559300109056L)))
                                                                              .lessThanUpdatedAt(new Date(1559300106621L))
                                                                              .greaterThanUpdatedAt(new Date(1559300105722L))
                                                                              .equalToRootManifestId("14b32145-1dac-4969-8f1b-75320d54962e")
                                                                              .notEqualToRootManifestId("6d0c929c-cee0-4c79-af3b-2ab66a58304c")
                                                                              .inRootManifestIds(Arrays.asList("190ba54e-09f3-4fbf-b14a-93dc0efb92c0",
                                                                                                               "ee8f0c5c-4de1-4f65-9910-1f317feccb5b",
                                                                                                               "8e5e6364-65a7-4436-a1dc-e983bc97af29"))
                                                                              .notInRootManifestIds(Arrays.asList("f460182b-cc68-4d1a-b910-0657b133d9e2",
                                                                                                                  "1c830d79-4b17-4a1d-991d-d3d208ca5e81",
                                                                                                                  "25ab6fcc-b169-4adc-90f6-41c17306fb39",
                                                                                                                  "c9b50545-16a2-4d5d-a3fb-acdc698e3852"))
                                                                              .equalToDescription("1f6612a1-34a9-4735-81d9-b4e918c36cb3")
                                                                              .notEqualToDescription("a5fb34c8-7369-473e-b363-e0c0217b72fd")
                                                                              .inDescriptions(Arrays.asList("3016a50a-b004-4297-bc92-2894b930a0db",
                                                                                                            "8e14fef7-dfc6-49ea-81f4-5f844e7eea6c",
                                                                                                            "5c5f19db-f92d-4ec2-adb0-2bc0cba96ee8"))
                                                                              .notInDescriptions(Arrays.asList("66cfe3e3-0877-4066-9b15-8c925d026148"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559300107451L), new Date(1559300101157L), new Date(1559300108343L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559300106413L), new Date(1559300106854L), new Date(1559300109160L),
                                       new Date(1559300101718L), new Date(1559300100157L), new Date(1559300101718L),
                                       new Date(1559300103719L), new Date(1559300108743L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559300104280L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559300099835L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("bb56c333-305d-452e-b78d-4b9b478af328",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("90bac49f-f7ad-4dbe-9e68-79279de58007",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("738e2a1b-8b60-438c-8716-241cbf8fdf36"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("7996e787-e817-478e-9e97-004109c8f378", "71222a63-1ec9-4981-9bca-28e3848a0cff",
                                       "432c6f9f-d740-4f43-8c26-5b9a893033de", "c790837a-1729-459b-8da3-cda2b6458255"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("5fa20613-c1bb-468b-bf98-e4582563b2eb",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("908242d4-7ab4-49bd-946c-a44bbe59a286",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("aede0f30-4eaf-430d-b9a7-4c9323df9095", "cd8f36ef-5e48-4d26-b949-1980efec7296",
                                       "647a2e6c-5661-4f48-80c1-ace216b9e94d", "634f3fca-a517-4db7-bb17-e3417d409ded",
                                       "bb5c825b-332a-4fe9-ae22-3465916f8b4f", "18442b82-2dbb-4d05-8ffa-d7978f71d637",
                                       "fa787c44-a580-4b88-afe5-4845d2853264"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("91f90702-15bb-4e71-95a4-01246b3a4463"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("030080e8-245e-46cc-849e-d38dea4acb0c",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("be9cc255-535b-44c4-b035-f680971e0c1e",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("4524983d-4710-4ae4-bb43-b6bca18d9231", "d4ef6fe4-8254-4147-bb02-0ed1a4ab8316",
                                       "83b16cc3-1150-45ea-bc02-7e472bfcf1f8", "85eb36c6-569d-473c-9787-d7004df279c7",
                                       "4ba7d930-8ba0-433c-8a43-ed074cb88344", "ae0e318c-897c-41d3-aecb-1f731e4d640f",
                                       "d7eedc90-de1e-4d30-85c2-0d007c5cc2a5", "077a0238-e214-4609-bbfa-4cb88566f611",
                                       "2eb0a7f9-096b-4a3e-9b42-44bf9d015290"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("5fa35e5c-ac4c-4b68-8f14-7a0a1f0f0fc1", "8db13450-dba2-4ec8-a58a-fb382f2ecdb9",
                                       "7435dba9-fa3e-455f-a8e2-8233a4a6e157", "4a4c1505-13df-4d30-aa9d-003727b5b049",
                                       "da7f7348-1e03-45bb-9f08-d6723245f5a5", "767d9082-45e2-49a5-b712-a6029de31d71",
                                       "3b929e5a-fdcc-4734-95ce-f7aafd710d60", "13e12412-256d-42cf-a1a1-19072fa17ead",
                                       "daf9479f-e91e-4d65-bac8-3b2fb0e4c1c1"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1559300106584L), new Date(1559300100138L), new Date(1559300102972L),
                                       new Date(1559300101261L), new Date(1559300101869L), new Date(1559300107140L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.NOT_IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1559300107528L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.LESS_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1559300102549L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.GREATER_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1559300102071L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1559300106933L), new Date(1559300103136L), new Date(1559300105153L),
                                       new Date(1559300100568L), new Date(1559300109110L), new Date(1559300107754L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1559300105532L), new Date(1559300101721L), new Date(1559300101467L),
                                       new Date(1559300108194L), new Date(1559300108248L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1559300104436L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1559300105954L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1559300102226L), new Date(1559300104497L), new Date(1559300099602L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.NOT_IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1559300106194L), new Date(1559300104088L), new Date(1559300101647L),
                                       new Date(1559300103020L), new Date(1559300102791L), new Date(1559300102664L),
                                       new Date(1559300103634L), new Date(1559300107327L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.LESS_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1559300099393L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.GREATER_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1559300101910L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559300100984L), new Date(1559300103100L), new Date(1559300107049L),
                                       new Date(1559300104940L), new Date(1559300099298L), new Date(1559300099372L),
                                       new Date(1559300105861L), new Date(1559300100862L), new Date(1559300103501L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559300105951L), new Date(1559300109056L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559300106621L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559300105722L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("14b32145-1dac-4969-8f1b-75320d54962e",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("6d0c929c-cee0-4c79-af3b-2ab66a58304c",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID, FilterOperator.IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("190ba54e-09f3-4fbf-b14a-93dc0efb92c0", "ee8f0c5c-4de1-4f65-9910-1f317feccb5b",
                                       "8e5e6364-65a7-4436-a1dc-e983bc97af29"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("f460182b-cc68-4d1a-b910-0657b133d9e2", "1c830d79-4b17-4a1d-991d-d3d208ca5e81",
                                       "25ab6fcc-b169-4adc-90f6-41c17306fb39", "c9b50545-16a2-4d5d-a3fb-acdc698e3852"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("1f6612a1-34a9-4735-81d9-b4e918c36cb3",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("a5fb34c8-7369-473e-b363-e0c0217b72fd",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("3016a50a-b004-4297-bc92-2894b930a0db", "8e14fef7-dfc6-49ea-81f4-5f844e7eea6c",
                                       "5c5f19db-f92d-4ec2-adb0-2bc0cba96ee8"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("66cfe3e3-0877-4066-9b15-8c925d026148"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(-15),
                                                                                                 Long.valueOf(-25),
                                                                                                 Order.getDefault(),
                                                                                                 "6987f7eb-f59d-42f9-8145-bd01c90d766e",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(-15),
                                                                                                 Long.valueOf(-25),
                                                                                                 Order.getDefault(),
                                                                                                 "6987f7eb-f59d-42f9-8145-bd01c90d766e",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2.hashCode(), updatecampaignlistoptions1.hashCode());
            int hashCode = updatecampaignlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, updatecampaignlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(40),
                                                                                                 Long.valueOf(-93),
                                                                                                 Order.getDefault(),
                                                                                                 "c491a0db-8f90-4683-b86a-9ad915bcbcc2",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(40),
                                                                                                 Long.valueOf(-93),
                                                                                                 Order.getDefault(),
                                                                                                 "c491a0db-8f90-4683-b86a-9ad915bcbcc2",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions3 = new UpdateCampaignListOptions(Integer.valueOf(-17),
                                                                                                 Long.valueOf(118),
                                                                                                 Order.getDefault(),
                                                                                                 "b090ab94-82e1-4e39-b8b2-9763cc0c73d1",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotNull(updatecampaignlistoptions3);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertNotSame(updatecampaignlistoptions3, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions2);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions1);
            assertFalse(updatecampaignlistoptions1.equals(null));
            assertNotEquals(updatecampaignlistoptions3, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
