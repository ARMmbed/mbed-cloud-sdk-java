// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model UpdateCampaignListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUpdateCampaignListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(-78),
                                                                                                 Long.valueOf(16),
                                                                                                 Order.getDefault(),
                                                                                                 "2b3d0e67-c4e7-477f-9c58-5d44bf2d0ec7",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = updatecampaignlistoptions1.clone();
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testFilters() {
        try {
            UpdateCampaignListOptions option = new UpdateCampaignListOptions().inCreatedAts(Arrays.asList(new Date(1559655034111L),
                                                                                                          new Date(1559655034578L),
                                                                                                          new Date(1559655035147L),
                                                                                                          new Date(1559655031708L),
                                                                                                          new Date(1559655036385L)))
                                                                              .notInCreatedAts(Arrays.asList(new Date(1559655039423L),
                                                                                                             new Date(1559655034732L),
                                                                                                             new Date(1559655037936L),
                                                                                                             new Date(1559655030264L),
                                                                                                             new Date(1559655035991L),
                                                                                                             new Date(1559655030687L),
                                                                                                             new Date(1559655035866L),
                                                                                                             new Date(1559655037762L)))
                                                                              .lessThanCreatedAt(new Date(1559655031890L))
                                                                              .greaterThanCreatedAt(new Date(1559655031127L))
                                                                              .equalToName("802ab4be-73b7-4643-96df-19f4bd9e0f03")
                                                                              .notEqualToName("35c9a7c3-4bff-4625-849f-8a78383a798c")
                                                                              .inNames(Arrays.asList("b614c1ef-47cc-42bf-8799-f73fb3f5cf9f"))
                                                                              .notInNames(Arrays.asList("67c2d09d-f329-442b-90bd-15b64eb846e4",
                                                                                                        "c726de7e-8ea0-4806-acfc-192267b7f829",
                                                                                                        "f90f45bc-e0e8-454c-adde-7d93d249e153",
                                                                                                        "c8cb92fc-2634-48d7-a4ad-de6ba9dea167",
                                                                                                        "ab7f9995-7e82-452c-9a6f-88fe704cf458",
                                                                                                        "ac9fce7b-3e8d-4b6a-9b16-309b5399d978",
                                                                                                        "5d4fd3f9-fc69-4887-bdcf-ba6abad80a19"))
                                                                              .equalToId("02faec8e-df4a-4190-8e71-def9fb7e28c3")
                                                                              .notEqualToId("11c29ba4-5d7a-48e3-a95b-a90659ac4949")
                                                                              .inIds(Arrays.asList("5a1b1e98-c1be-4077-8b3f-1dba1d3b1991",
                                                                                                   "e601833c-4b24-474c-b339-fb080f574823",
                                                                                                   "fd7f57ce-34d2-4cb2-8a13-671b89005346"))
                                                                              .notInIds(Arrays.asList("8db0a6e9-83c4-49d4-bc88-c216f6cf968d",
                                                                                                      "5b496080-3e47-44a7-bf3c-0573bb2aa5f9",
                                                                                                      "c94e970d-b7ac-4f28-81ad-2c17078da973",
                                                                                                      "55cf5ab4-745e-4c28-91b6-8124ec1605ec",
                                                                                                      "f86c9d95-673e-44d4-8c6f-5e2e44b1c378",
                                                                                                      "fdba4bb5-1f8f-49d8-a689-b9ebde615b02"))
                                                                              .equalToDeviceFilter("4a36d820-9d14-47b1-aac0-996bbfdd4e4d")
                                                                              .notEqualToDeviceFilter("0579d5f8-be1c-41ee-a3fc-a8261b0e844e")
                                                                              .inDeviceFilters(Arrays.asList("462494ec-ffda-4a03-b9bb-bfeba9bfb61b",
                                                                                                             "13774fb4-4255-458f-b908-a187ab9969b9",
                                                                                                             "fcd90f14-984b-45b5-83da-d425989c98c2",
                                                                                                             "7b2ae736-7345-4651-9645-7ab6a707a2a1",
                                                                                                             "70229a58-10a7-4aaf-95c6-7962f869454e",
                                                                                                             "5c7ab04f-35c0-426b-b70e-e75803a214ce"))
                                                                              .notInDeviceFilters(Arrays.asList("b2c3d117-5a5a-4469-b95d-47eaaa393f6d"))
                                                                              .inFinisheds(Arrays.asList(new Date(1559655035248L),
                                                                                                         new Date(1559655033845L),
                                                                                                         new Date(1559655036966L),
                                                                                                         new Date(1559655038291L),
                                                                                                         new Date(1559655032070L),
                                                                                                         new Date(1559655031943L),
                                                                                                         new Date(1559655037182L)))
                                                                              .notInFinisheds(Arrays.asList(new Date(1559655030645L),
                                                                                                            new Date(1559655031883L),
                                                                                                            new Date(1559655032577L),
                                                                                                            new Date(1559655036716L),
                                                                                                            new Date(1559655035761L),
                                                                                                            new Date(1559655031076L),
                                                                                                            new Date(1559655039617L)))
                                                                              .lessThanFinished(new Date(1559655035266L))
                                                                              .greaterThanFinished(new Date(1559655039130L))
                                                                              .inStartedAts(Arrays.asList(new Date(1559655036181L),
                                                                                                          new Date(1559655032431L),
                                                                                                          new Date(1559655036158L),
                                                                                                          new Date(1559655032112L),
                                                                                                          new Date(1559655032777L),
                                                                                                          new Date(1559655032032L),
                                                                                                          new Date(1559655036727L),
                                                                                                          new Date(1559655030168L),
                                                                                                          new Date(1559655032857L)))
                                                                              .notInStartedAts(Arrays.asList(new Date(1559655038232L)))
                                                                              .lessThanStartedAt(new Date(1559655037208L))
                                                                              .greaterThanStartedAt(new Date(1559655032408L))
                                                                              .inWhens(Arrays.asList(new Date(1559655037726L),
                                                                                                     new Date(1559655030342L),
                                                                                                     new Date(1559655033404L),
                                                                                                     new Date(1559655032496L)))
                                                                              .notInWhens(Arrays.asList(new Date(1559655032580L),
                                                                                                        new Date(1559655039202L),
                                                                                                        new Date(1559655031258L)))
                                                                              .lessThanWhen(new Date(1559655037354L))
                                                                              .greaterThanWhen(new Date(1559655034525L))
                                                                              .inUpdatedAts(Arrays.asList(new Date(1559655029874L),
                                                                                                          new Date(1559655029970L),
                                                                                                          new Date(1559655031031L)))
                                                                              .notInUpdatedAts(Arrays.asList(new Date(1559655032044L),
                                                                                                             new Date(1559655036074L),
                                                                                                             new Date(1559655037769L),
                                                                                                             new Date(1559655033764L),
                                                                                                             new Date(1559655031855L),
                                                                                                             new Date(1559655035791L),
                                                                                                             new Date(1559655037942L),
                                                                                                             new Date(1559655030278L)))
                                                                              .lessThanUpdatedAt(new Date(1559655029837L))
                                                                              .greaterThanUpdatedAt(new Date(1559655031012L))
                                                                              .equalToRootManifestId("c0df54f8-e8fa-42c1-8c15-c37b82696812")
                                                                              .notEqualToRootManifestId("e2685454-53d2-4bb0-9303-af12ea6497bd")
                                                                              .inRootManifestIds(Arrays.asList("f4b7ee4c-b71c-4977-b26c-7c2859efb5ab",
                                                                                                               "fbb3411e-5116-4ce1-aaa5-f97a6f796c73"))
                                                                              .notInRootManifestIds(Arrays.asList("69da38d8-280e-49dc-9235-8ade85f6219a",
                                                                                                                  "c8aa513c-90d1-4e54-a956-b68b63066176",
                                                                                                                  "e294186d-16db-452b-9bfe-9efc18f0cda5",
                                                                                                                  "419b52cc-08d8-463d-98ee-aeeafa1738d7",
                                                                                                                  "ed16a74d-0959-474f-ab0c-300a16e87700"))
                                                                              .equalToDescription("69c13657-f1b7-4cf8-9e1b-e9c7955dface")
                                                                              .notEqualToDescription("bdefbbd1-531c-43df-89aa-652089bd02c3")
                                                                              .inDescriptions(Arrays.asList("4d6e4a3e-7147-4e31-98f5-434d10a43ba3",
                                                                                                            "4a673fb3-5c37-4465-a5bb-f2d673352de7"))
                                                                              .notInDescriptions(Arrays.asList("1a299814-782f-4e66-a145-037e01357db9",
                                                                                                               "558e05e1-95b2-44a9-95fd-263514c49c62",
                                                                                                               "815a743b-633c-46cc-a283-02eb766bd8a1"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559655034111L), new Date(1559655034578L), new Date(1559655035147L),
                                       new Date(1559655031708L), new Date(1559655036385L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559655039423L), new Date(1559655034732L), new Date(1559655037936L),
                                       new Date(1559655030264L), new Date(1559655035991L), new Date(1559655030687L),
                                       new Date(1559655035866L), new Date(1559655037762L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559655031890L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559655031127L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("802ab4be-73b7-4643-96df-19f4bd9e0f03",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("35c9a7c3-4bff-4625-849f-8a78383a798c",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("b614c1ef-47cc-42bf-8799-f73fb3f5cf9f"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("67c2d09d-f329-442b-90bd-15b64eb846e4", "c726de7e-8ea0-4806-acfc-192267b7f829",
                                       "f90f45bc-e0e8-454c-adde-7d93d249e153", "c8cb92fc-2634-48d7-a4ad-de6ba9dea167",
                                       "ab7f9995-7e82-452c-9a6f-88fe704cf458", "ac9fce7b-3e8d-4b6a-9b16-309b5399d978",
                                       "5d4fd3f9-fc69-4887-bdcf-ba6abad80a19"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("02faec8e-df4a-4190-8e71-def9fb7e28c3",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("11c29ba4-5d7a-48e3-a95b-a90659ac4949",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("5a1b1e98-c1be-4077-8b3f-1dba1d3b1991", "e601833c-4b24-474c-b339-fb080f574823",
                                       "fd7f57ce-34d2-4cb2-8a13-671b89005346"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("8db0a6e9-83c4-49d4-bc88-c216f6cf968d", "5b496080-3e47-44a7-bf3c-0573bb2aa5f9",
                                       "c94e970d-b7ac-4f28-81ad-2c17078da973", "55cf5ab4-745e-4c28-91b6-8124ec1605ec",
                                       "f86c9d95-673e-44d4-8c6f-5e2e44b1c378", "fdba4bb5-1f8f-49d8-a689-b9ebde615b02"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("4a36d820-9d14-47b1-aac0-996bbfdd4e4d",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("0579d5f8-be1c-41ee-a3fc-a8261b0e844e",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("462494ec-ffda-4a03-b9bb-bfeba9bfb61b", "13774fb4-4255-458f-b908-a187ab9969b9",
                                       "fcd90f14-984b-45b5-83da-d425989c98c2", "7b2ae736-7345-4651-9645-7ab6a707a2a1",
                                       "70229a58-10a7-4aaf-95c6-7962f869454e", "5c7ab04f-35c0-426b-b70e-e75803a214ce"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("b2c3d117-5a5a-4469-b95d-47eaaa393f6d"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1559655035248L), new Date(1559655033845L), new Date(1559655036966L),
                                       new Date(1559655038291L), new Date(1559655032070L), new Date(1559655031943L),
                                       new Date(1559655037182L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.NOT_IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1559655030645L), new Date(1559655031883L), new Date(1559655032577L),
                                       new Date(1559655036716L), new Date(1559655035761L), new Date(1559655031076L),
                                       new Date(1559655039617L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.LESS_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1559655035266L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.GREATER_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1559655039130L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1559655036181L), new Date(1559655032431L), new Date(1559655036158L),
                                       new Date(1559655032112L), new Date(1559655032777L), new Date(1559655032032L),
                                       new Date(1559655036727L), new Date(1559655030168L), new Date(1559655032857L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1559655038232L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1559655037208L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1559655032408L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1559655037726L), new Date(1559655030342L), new Date(1559655033404L),
                                       new Date(1559655032496L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.NOT_IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1559655032580L), new Date(1559655039202L), new Date(1559655031258L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.LESS_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1559655037354L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.GREATER_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1559655034525L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559655029874L), new Date(1559655029970L), new Date(1559655031031L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559655032044L), new Date(1559655036074L), new Date(1559655037769L),
                                       new Date(1559655033764L), new Date(1559655031855L), new Date(1559655035791L),
                                       new Date(1559655037942L), new Date(1559655030278L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559655029837L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559655031012L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("c0df54f8-e8fa-42c1-8c15-c37b82696812",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("e2685454-53d2-4bb0-9303-af12ea6497bd",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID, FilterOperator.IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("f4b7ee4c-b71c-4977-b26c-7c2859efb5ab", "fbb3411e-5116-4ce1-aaa5-f97a6f796c73"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("69da38d8-280e-49dc-9235-8ade85f6219a", "c8aa513c-90d1-4e54-a956-b68b63066176",
                                       "e294186d-16db-452b-9bfe-9efc18f0cda5", "419b52cc-08d8-463d-98ee-aeeafa1738d7",
                                       "ed16a74d-0959-474f-ab0c-300a16e87700"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("69c13657-f1b7-4cf8-9e1b-e9c7955dface",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("bdefbbd1-531c-43df-89aa-652089bd02c3",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("4d6e4a3e-7147-4e31-98f5-434d10a43ba3", "4a673fb3-5c37-4465-a5bb-f2d673352de7"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("1a299814-782f-4e66-a145-037e01357db9", "558e05e1-95b2-44a9-95fd-263514c49c62",
                                       "815a743b-633c-46cc-a283-02eb766bd8a1"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(64),
                                                                                                 Long.valueOf(99),
                                                                                                 Order.getDefault(),
                                                                                                 "13a49ee2-492a-4ff5-a4e7-bcbe50b93209",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(64),
                                                                                                 Long.valueOf(99),
                                                                                                 Order.getDefault(),
                                                                                                 "13a49ee2-492a-4ff5-a4e7-bcbe50b93209",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2.hashCode(), updatecampaignlistoptions1.hashCode());
            int hashCode = updatecampaignlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, updatecampaignlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(31),
                                                                                                 Long.valueOf(64),
                                                                                                 Order.getDefault(),
                                                                                                 "3a3629b2-f13c-4c00-ad4a-c3fe70ea6f8d",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(31),
                                                                                                 Long.valueOf(64),
                                                                                                 Order.getDefault(),
                                                                                                 "3a3629b2-f13c-4c00-ad4a-c3fe70ea6f8d",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions3 = new UpdateCampaignListOptions(Integer.valueOf(38),
                                                                                                 Long.valueOf(-4),
                                                                                                 Order.getDefault(),
                                                                                                 "372f6e27-7a85-410d-814e-373cbe3420c2",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotNull(updatecampaignlistoptions3);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertNotSame(updatecampaignlistoptions3, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions2);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions1);
            assertFalse(updatecampaignlistoptions1.equals(null));
            assertNotEquals(updatecampaignlistoptions3, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
