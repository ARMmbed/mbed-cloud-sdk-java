// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareManifestListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareManifestListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-54),
                                                                                                       Long.valueOf(-66),
                                                                                                       Order.getDefault(),
                                                                                                       "7db03571-63d5-49fa-9130-6571c1ce6d78",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = firmwaremanifestlistoptions1.clone();
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareManifestListOptions option = new FirmwareManifestListOptions().inCreatedAts(Arrays.asList(new Date(1559747931032L),
                                                                                                              new Date(1559747927691L),
                                                                                                              new Date(1559747931463L),
                                                                                                              new Date(1559747932868L)))
                                                                                  .notInCreatedAts(Arrays.asList(new Date(1559747935485L),
                                                                                                                 new Date(1559747937201L),
                                                                                                                 new Date(1559747928871L),
                                                                                                                 new Date(1559747936290L),
                                                                                                                 new Date(1559747929850L)))
                                                                                  .lessThanCreatedAt(new Date(1559747936113L))
                                                                                  .greaterThanCreatedAt(new Date(1559747930841L))
                                                                                  .equalToName("34898759-8383-4da9-a77e-2fcd8f38f434")
                                                                                  .notEqualToName("47d4bcdb-1f33-4cff-8668-696aece4326b")
                                                                                  .inNames(Arrays.asList("32bc085b-71ec-49a0-bc2c-fa7f98e830b1",
                                                                                                         "02ef5f92-8261-432a-abcc-d48f08c336a7",
                                                                                                         "6270c1a4-bab5-4bad-a04c-0a889760ae33",
                                                                                                         "774e27ea-7b04-4615-b286-ae2a0d66fd34"))
                                                                                  .notInNames(Arrays.asList("d3c02d76-8b9e-4845-915e-60d6e0804314",
                                                                                                            "306a2463-9b86-45dc-a689-a8f9e8862a44",
                                                                                                            "138101f2-f84d-4f8f-a5d3-2828ca9fbe74",
                                                                                                            "782803b0-c73e-43a2-9d43-e9bbfc1712a8",
                                                                                                            "f6c783aa-9174-44b0-86bc-cc9f6a16a282",
                                                                                                            "a0a02455-9781-455c-b2c3-f31e5b246f75",
                                                                                                            "ae2bf950-b8b2-42bb-8294-8a8df2db7808"))
                                                                                  .equalToId("57bc719d-4e1f-401e-a6db-ac019853f8dc")
                                                                                  .notEqualToId("1c93ff8c-efdd-4d3a-a8e1-564042b47529")
                                                                                  .inIds(Arrays.asList("857c9791-c853-4fed-b6a9-e4ca58e0d1a6",
                                                                                                       "e1eba488-566f-493f-b24d-3883248d2183"))
                                                                                  .notInIds(Arrays.asList("ad174910-0668-4033-af35-6f2478b295a6",
                                                                                                          "7d05a5e5-da94-40a3-9ac2-405421557653",
                                                                                                          "beaecd5e-8efd-4c60-bc72-10b87e92287b",
                                                                                                          "724a74fa-d530-4b64-bafc-a5e4b6a9bb46",
                                                                                                          "3dabd5a1-44ae-4f40-9332-c032ebd61813",
                                                                                                          "1700e7bd-36fc-401a-a1e4-b3b74eb68027"))
                                                                                  .equalToDatafileUrl("89084556-ca52-47e1-86b3-4c2f65b73380")
                                                                                  .notEqualToDatafileUrl("ff50be83-5704-425c-bdb6-26f8778cdbf2")
                                                                                  .inDatafileUrls(Arrays.asList("06327428-51e5-4b5c-8541-1a5e9a453324",
                                                                                                                "01a37978-aed3-4781-9456-12a9c3f0eef2",
                                                                                                                "ed8f6663-56fb-451e-9e6c-efa35f69f615"))
                                                                                  .notInDatafileUrls(Arrays.asList("c4da4f25-95ec-4f9f-ae32-264d2bacecc7",
                                                                                                                   "893d0aaf-c058-4172-9c3a-37c5b2af4112",
                                                                                                                   "4c3d4c38-031f-4e1a-b390-a1031d7531a0",
                                                                                                                   "e3f9384f-6a30-4c9d-952a-8b0db55db64e",
                                                                                                                   "b3e666f8-bd6b-4885-afd0-d661f4d46795",
                                                                                                                   "3d9feab8-f960-4153-8e7a-b374455bfca9",
                                                                                                                   "47d2fe87-7fd2-4238-a1e7-c012bea0dd6e"))
                                                                                  .equalToDatafileSize(Long.valueOf(63))
                                                                                  .notEqualToDatafileSize(Long.valueOf(40))
                                                                                  .inDatafileSizes(Arrays.asList(Long.valueOf(22)))
                                                                                  .notInDatafileSizes(Arrays.asList(Long.valueOf(44),
                                                                                                                    Long.valueOf(-102)))
                                                                                  .equalToDeviceClass("3562e48c-998e-48ff-a708-690de3a09123")
                                                                                  .notEqualToDeviceClass("810269b4-dbee-4ffd-a79e-77f623fde4c4")
                                                                                  .inDeviceClass(Arrays.asList("4d0428cb-b1de-4968-ba89-503fe7232f2a",
                                                                                                               "d0271a4c-a784-48d1-b9eb-95e67126eb83",
                                                                                                               "2e16c445-b022-4686-9fce-ed05d0042f05",
                                                                                                               "82697370-6bd6-4420-8451-2b286e783873",
                                                                                                               "c0210980-5dda-4a4a-a0d8-2bc03491e3f3",
                                                                                                               "50d2a562-2ca7-4fda-bd9a-b621eb17b202",
                                                                                                               "a55a690d-1d38-4b4c-a587-53d77e1af66b"))
                                                                                  .notInDeviceClass(Arrays.asList("874535ae-f375-4851-83de-1816235c693f",
                                                                                                                  "8773acfb-b623-4fc2-b343-bc3c5b7619b9",
                                                                                                                  "3593551e-5ec3-4286-beda-3ba83a74c8dd",
                                                                                                                  "08173802-fc4b-435f-aec1-1d3339d2cd3d",
                                                                                                                  "a7f09afb-09d3-4720-83d7-2154f1db97c4",
                                                                                                                  "371afba0-0ceb-4b43-bfea-a3f4d91f3d1b",
                                                                                                                  "026da484-995b-4e6a-b26e-b1c3a88e0b2e"))
                                                                                  .inTimestamps(Arrays.asList(new Date(1559747936869L),
                                                                                                              new Date(1559747928610L),
                                                                                                              new Date(1559747927522L),
                                                                                                              new Date(1559747936054L),
                                                                                                              new Date(1559747931604L),
                                                                                                              new Date(1559747931116L)))
                                                                                  .notInTimestamps(Arrays.asList(new Date(1559747930429L),
                                                                                                                 new Date(1559747933560L),
                                                                                                                 new Date(1559747935587L)))
                                                                                  .lessThanTimestamp(new Date(1559747929709L))
                                                                                  .greaterThanTimestamp(new Date(1559747936436L))
                                                                                  .inUpdatedAts(Arrays.asList(new Date(1559747935324L),
                                                                                                              new Date(1559747936754L),
                                                                                                              new Date(1559747928525L),
                                                                                                              new Date(1559747932787L),
                                                                                                              new Date(1559747927667L),
                                                                                                              new Date(1559747935237L),
                                                                                                              new Date(1559747930605L),
                                                                                                              new Date(1559747931824L),
                                                                                                              new Date(1559747936394L)))
                                                                                  .notInUpdatedAts(Arrays.asList(new Date(1559747933802L),
                                                                                                                 new Date(1559747928091L),
                                                                                                                 new Date(1559747933437L),
                                                                                                                 new Date(1559747928906L)))
                                                                                  .lessThanUpdatedAt(new Date(1559747934085L))
                                                                                  .greaterThanUpdatedAt(new Date(1559747936499L))
                                                                                  .equalToDescription("0773b291-cbb0-4f45-85e7-99c0c07af829")
                                                                                  .notEqualToDescription("f1fd719c-47de-4680-8e2d-10af9890d11d")
                                                                                  .inDescriptions(Arrays.asList("d2c9cb69-7a92-4b19-82d4-86389faed7c5"))
                                                                                  .notInDescriptions(Arrays.asList("e2f0da36-18d0-4896-a71c-bec2fde93294",
                                                                                                                   "590b6219-69d9-4464-910a-deb5a4e148b0",
                                                                                                                   "195f8d9e-25c8-4ec4-8c7d-30cd8b10cbb7",
                                                                                                                   "7058e691-5c08-42bc-bd31-c4a00904ec2a",
                                                                                                                   "4657e481-ce46-468c-aae2-bd7f06089666"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559747931032L), new Date(1559747927691L), new Date(1559747931463L),
                                       new Date(1559747932868L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559747935485L), new Date(1559747937201L), new Date(1559747928871L),
                                       new Date(1559747936290L), new Date(1559747929850L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559747936113L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559747930841L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("34898759-8383-4da9-a77e-2fcd8f38f434",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("47d4bcdb-1f33-4cff-8668-696aece4326b",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("32bc085b-71ec-49a0-bc2c-fa7f98e830b1", "02ef5f92-8261-432a-abcc-d48f08c336a7",
                                       "6270c1a4-bab5-4bad-a04c-0a889760ae33", "774e27ea-7b04-4615-b286-ae2a0d66fd34"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("d3c02d76-8b9e-4845-915e-60d6e0804314", "306a2463-9b86-45dc-a689-a8f9e8862a44",
                                       "138101f2-f84d-4f8f-a5d3-2828ca9fbe74", "782803b0-c73e-43a2-9d43-e9bbfc1712a8",
                                       "f6c783aa-9174-44b0-86bc-cc9f6a16a282", "a0a02455-9781-455c-b2c3-f31e5b246f75",
                                       "ae2bf950-b8b2-42bb-8294-8a8df2db7808"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("57bc719d-4e1f-401e-a6db-ac019853f8dc",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("1c93ff8c-efdd-4d3a-a8e1-564042b47529",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("857c9791-c853-4fed-b6a9-e4ca58e0d1a6", "e1eba488-566f-493f-b24d-3883248d2183"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("ad174910-0668-4033-af35-6f2478b295a6", "7d05a5e5-da94-40a3-9ac2-405421557653",
                                       "beaecd5e-8efd-4c60-bc72-10b87e92287b", "724a74fa-d530-4b64-bafc-a5e4b6a9bb46",
                                       "3dabd5a1-44ae-4f40-9332-c032ebd61813", "1700e7bd-36fc-401a-a1e4-b3b74eb68027"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("89084556-ca52-47e1-86b3-4c2f65b73380",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("ff50be83-5704-425c-bdb6-26f8778cdbf2",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("06327428-51e5-4b5c-8541-1a5e9a453324", "01a37978-aed3-4781-9456-12a9c3f0eef2",
                                       "ed8f6663-56fb-451e-9e6c-efa35f69f615"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("c4da4f25-95ec-4f9f-ae32-264d2bacecc7", "893d0aaf-c058-4172-9c3a-37c5b2af4112",
                                       "4c3d4c38-031f-4e1a-b390-a1031d7531a0", "e3f9384f-6a30-4c9d-952a-8b0db55db64e",
                                       "b3e666f8-bd6b-4885-afd0-d661f4d46795", "3d9feab8-f960-4153-8e7a-b374455bfca9",
                                       "47d2fe87-7fd2-4238-a1e7-c012bea0dd6e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(63),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(40),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(22)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(44), Long.valueOf(-102)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("3562e48c-998e-48ff-a708-690de3a09123",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("810269b4-dbee-4ffd-a79e-77f623fde4c4",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("4d0428cb-b1de-4968-ba89-503fe7232f2a", "d0271a4c-a784-48d1-b9eb-95e67126eb83",
                                       "2e16c445-b022-4686-9fce-ed05d0042f05", "82697370-6bd6-4420-8451-2b286e783873",
                                       "c0210980-5dda-4a4a-a0d8-2bc03491e3f3", "50d2a562-2ca7-4fda-bd9a-b621eb17b202",
                                       "a55a690d-1d38-4b4c-a587-53d77e1af66b"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("874535ae-f375-4851-83de-1816235c693f", "8773acfb-b623-4fc2-b343-bc3c5b7619b9",
                                       "3593551e-5ec3-4286-beda-3ba83a74c8dd", "08173802-fc4b-435f-aec1-1d3339d2cd3d",
                                       "a7f09afb-09d3-4720-83d7-2154f1db97c4", "371afba0-0ceb-4b43-bfea-a3f4d91f3d1b",
                                       "026da484-995b-4e6a-b26e-b1c3a88e0b2e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1559747936869L), new Date(1559747928610L), new Date(1559747927522L),
                                       new Date(1559747936054L), new Date(1559747931604L), new Date(1559747931116L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.NOT_IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1559747930429L), new Date(1559747933560L), new Date(1559747935587L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.LESS_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1559747929709L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1559747936436L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559747935324L), new Date(1559747936754L), new Date(1559747928525L),
                                       new Date(1559747932787L), new Date(1559747927667L), new Date(1559747935237L),
                                       new Date(1559747930605L), new Date(1559747931824L), new Date(1559747936394L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559747933802L), new Date(1559747928091L), new Date(1559747933437L),
                                       new Date(1559747928906L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559747934085L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559747936499L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("0773b291-cbb0-4f45-85e7-99c0c07af829",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("f1fd719c-47de-4680-8e2d-10af9890d11d",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("d2c9cb69-7a92-4b19-82d4-86389faed7c5"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("e2f0da36-18d0-4896-a71c-bec2fde93294", "590b6219-69d9-4464-910a-deb5a4e148b0",
                                       "195f8d9e-25c8-4ec4-8c7d-30cd8b10cbb7", "7058e691-5c08-42bc-bd31-c4a00904ec2a",
                                       "4657e481-ce46-468c-aae2-bd7f06089666"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-96),
                                                                                                       Long.valueOf(6),
                                                                                                       Order.getDefault(),
                                                                                                       "ffabe3b9-fbf3-4b8e-9f90-5446c6358e61",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(-96),
                                                                                                       Long.valueOf(6),
                                                                                                       Order.getDefault(),
                                                                                                       "ffabe3b9-fbf3-4b8e-9f90-5446c6358e61",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2.hashCode(), firmwaremanifestlistoptions1.hashCode());
            int hashCode = firmwaremanifestlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwaremanifestlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(64),
                                                                                                       Long.valueOf(-14),
                                                                                                       Order.getDefault(),
                                                                                                       "a1683be9-11d6-46ae-93a7-213135feebae",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(64),
                                                                                                       Long.valueOf(-14),
                                                                                                       Order.getDefault(),
                                                                                                       "a1683be9-11d6-46ae-93a7-213135feebae",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions3 = new FirmwareManifestListOptions(Integer.valueOf(100),
                                                                                                       Long.valueOf(36),
                                                                                                       Order.getDefault(),
                                                                                                       "ef9934f4-d09d-4c10-9179-2b5c12e655a1",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotNull(firmwaremanifestlistoptions3);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertNotSame(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions2);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions1);
            assertFalse(firmwaremanifestlistoptions1.equals(null));
            assertNotEquals(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
