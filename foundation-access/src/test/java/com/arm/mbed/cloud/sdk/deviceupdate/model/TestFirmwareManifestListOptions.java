// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareManifestListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareManifestListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-42),
                                                                                                       Long.valueOf(-6),
                                                                                                       Order.getDefault(),
                                                                                                       "81eeacf5-1a65-417c-ad41-9e0afece60a5",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = firmwaremanifestlistoptions1.clone();
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareManifestListOptions option = new FirmwareManifestListOptions().inCreatedAts(Arrays.asList(new Date(1559313349948L),
                                                                                                              new Date(1559313347313L)))
                                                                                  .notInCreatedAts(Arrays.asList(new Date(1559313341840L),
                                                                                                                 new Date(1559313342421L),
                                                                                                                 new Date(1559313347693L)))
                                                                                  .lessThanCreatedAt(new Date(1559313343709L))
                                                                                  .greaterThanCreatedAt(new Date(1559313347261L))
                                                                                  .equalToName("752e06a9-6b5b-4878-ac9a-0ccc207ff646")
                                                                                  .notEqualToName("1714af76-057e-4b59-a58b-3b5ff7d69daa")
                                                                                  .inNames(Arrays.asList("be9e63f7-f606-4d6c-a5d2-45c0087bae73",
                                                                                                         "4d95c6ee-b59b-4df7-8f35-b620c700bfde"))
                                                                                  .notInNames(Arrays.asList("e3b1b34a-c267-47c6-b1bd-52473cf14e1e"))
                                                                                  .equalToId("feb06425-0742-4b24-ba65-8f9ff84b9b9b")
                                                                                  .notEqualToId("0ab774d2-67d2-4258-b25e-bff5f5f3d8aa")
                                                                                  .inIds(Arrays.asList("d11807fa-0f48-42bf-bd28-5c50aeee29d1",
                                                                                                       "f4f30fc3-d896-40a9-9829-43d984cf5176",
                                                                                                       "0cc8b8fd-cb0f-4709-925d-f9a76ebc57bf",
                                                                                                       "6ad24bf4-130f-447c-b17f-98acc687e078",
                                                                                                       "dee6753f-e3d6-4bb8-81b0-3324c76d0970",
                                                                                                       "ecf07526-6da3-415f-976e-f6388c3ad19d",
                                                                                                       "3c06532e-8e42-4cf9-a2f6-c1f90f89af7b",
                                                                                                       "8ff0e136-8980-4a8e-9fb5-28a612beab53"))
                                                                                  .notInIds(Arrays.asList("de28f6f2-165f-430b-baf9-7702527e495b",
                                                                                                          "b4301778-d174-4262-a77c-ac8d144b4a18"))
                                                                                  .equalToDatafileUrl("1c047c47-d6de-46e1-a745-d84b9cdf28b7")
                                                                                  .notEqualToDatafileUrl("6f57b238-7d06-40e3-8f62-3e75668fb054")
                                                                                  .inDatafileUrls(Arrays.asList("15260d2d-9c49-4e11-8fc3-4141e8422c37"))
                                                                                  .notInDatafileUrls(Arrays.asList("adb18745-2d30-4a6c-bdcb-c1488cdd461b"))
                                                                                  .equalToDatafileSize(Long.valueOf(-108))
                                                                                  .notEqualToDatafileSize(Long.valueOf(-18))
                                                                                  .inDatafileSizes(Arrays.asList(Long.valueOf(-41),
                                                                                                                 Long.valueOf(-57),
                                                                                                                 Long.valueOf(-45),
                                                                                                                 Long.valueOf(-5),
                                                                                                                 Long.valueOf(48),
                                                                                                                 Long.valueOf(-91),
                                                                                                                 Long.valueOf(40)))
                                                                                  .notInDatafileSizes(Arrays.asList(Long.valueOf(90),
                                                                                                                    Long.valueOf(-70),
                                                                                                                    Long.valueOf(-19),
                                                                                                                    Long.valueOf(87)))
                                                                                  .equalToDeviceClass("90dc7222-044a-4b3a-9a01-b4fef968663d")
                                                                                  .notEqualToDeviceClass("6a85003c-d2d3-47d9-ac76-aed8f241604d")
                                                                                  .inDeviceClass(Arrays.asList("5485cc9d-c6be-4480-8725-6c87ca7f6874"))
                                                                                  .notInDeviceClass(Arrays.asList("dd5764fb-a383-4949-a2a1-b213b763c439",
                                                                                                                  "4bc01d8e-e496-4f11-9946-49baa567fd83"))
                                                                                  .inTimestamps(Arrays.asList(new Date(1559313349683L),
                                                                                                              new Date(1559313343503L),
                                                                                                              new Date(1559313349239L),
                                                                                                              new Date(1559313341835L),
                                                                                                              new Date(1559313348024L),
                                                                                                              new Date(1559313347783L)))
                                                                                  .notInTimestamps(Arrays.asList(new Date(1559313345160L),
                                                                                                                 new Date(1559313350037L),
                                                                                                                 new Date(1559313344303L),
                                                                                                                 new Date(1559313351218L),
                                                                                                                 new Date(1559313350603L),
                                                                                                                 new Date(1559313345917L),
                                                                                                                 new Date(1559313346494L),
                                                                                                                 new Date(1559313349706L),
                                                                                                                 new Date(1559313349473L)))
                                                                                  .lessThanTimestamp(new Date(1559313346087L))
                                                                                  .greaterThanTimestamp(new Date(1559313344839L))
                                                                                  .inUpdatedAts(Arrays.asList(new Date(1559313344686L),
                                                                                                              new Date(1559313349268L),
                                                                                                              new Date(1559313346510L),
                                                                                                              new Date(1559313343686L),
                                                                                                              new Date(1559313342418L)))
                                                                                  .notInUpdatedAts(Arrays.asList(new Date(1559313347330L)))
                                                                                  .lessThanUpdatedAt(new Date(1559313346464L))
                                                                                  .greaterThanUpdatedAt(new Date(1559313345032L))
                                                                                  .equalToDescription("b8d505b3-0e9f-4ed5-b665-611a8098a3e6")
                                                                                  .notEqualToDescription("e0042ad7-7c3f-4a1e-ac1d-c5bea37391a1")
                                                                                  .inDescriptions(Arrays.asList("2661a015-f0bb-4cc8-b0cf-fadf97535733"))
                                                                                  .notInDescriptions(Arrays.asList("70442f6e-ae08-48b2-a255-71ad0ddb4682",
                                                                                                                   "b8b04f17-864e-4c11-8a57-07146ab1e523",
                                                                                                                   "1b345d58-e166-4aa2-81c1-00d26a8ab94e",
                                                                                                                   "5311dfe1-c5e9-4693-9e18-83e8d66edf83",
                                                                                                                   "69d8420c-e847-496b-9f1e-436beb164949",
                                                                                                                   "3daf851d-92df-44f9-9fc0-e9a592695351",
                                                                                                                   "962f752d-7b67-465e-81eb-50478d054b91",
                                                                                                                   "0bf818ec-5538-444c-aac5-bbc5c38fb3f7"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559313349948L), new Date(1559313347313L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559313341840L), new Date(1559313342421L), new Date(1559313347693L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559313343709L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559313347261L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("752e06a9-6b5b-4878-ac9a-0ccc207ff646",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("1714af76-057e-4b59-a58b-3b5ff7d69daa",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("be9e63f7-f606-4d6c-a5d2-45c0087bae73", "4d95c6ee-b59b-4df7-8f35-b620c700bfde"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("e3b1b34a-c267-47c6-b1bd-52473cf14e1e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("feb06425-0742-4b24-ba65-8f9ff84b9b9b",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("0ab774d2-67d2-4258-b25e-bff5f5f3d8aa",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("d11807fa-0f48-42bf-bd28-5c50aeee29d1", "f4f30fc3-d896-40a9-9829-43d984cf5176",
                                       "0cc8b8fd-cb0f-4709-925d-f9a76ebc57bf", "6ad24bf4-130f-447c-b17f-98acc687e078",
                                       "dee6753f-e3d6-4bb8-81b0-3324c76d0970", "ecf07526-6da3-415f-976e-f6388c3ad19d",
                                       "3c06532e-8e42-4cf9-a2f6-c1f90f89af7b", "8ff0e136-8980-4a8e-9fb5-28a612beab53"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("de28f6f2-165f-430b-baf9-7702527e495b", "b4301778-d174-4262-a77c-ac8d144b4a18"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("1c047c47-d6de-46e1-a745-d84b9cdf28b7",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("6f57b238-7d06-40e3-8f62-3e75668fb054",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("15260d2d-9c49-4e11-8fc3-4141e8422c37"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("adb18745-2d30-4a6c-bdcb-c1488cdd461b"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-108),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-18),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-41), Long.valueOf(-57), Long.valueOf(-45), Long.valueOf(-5),
                                       Long.valueOf(48), Long.valueOf(-91), Long.valueOf(40)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(90), Long.valueOf(-70), Long.valueOf(-19), Long.valueOf(87)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("90dc7222-044a-4b3a-9a01-b4fef968663d",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("6a85003c-d2d3-47d9-ac76-aed8f241604d",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("5485cc9d-c6be-4480-8725-6c87ca7f6874"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("dd5764fb-a383-4949-a2a1-b213b763c439", "4bc01d8e-e496-4f11-9946-49baa567fd83"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1559313349683L), new Date(1559313343503L), new Date(1559313349239L),
                                       new Date(1559313341835L), new Date(1559313348024L), new Date(1559313347783L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.NOT_IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1559313345160L), new Date(1559313350037L), new Date(1559313344303L),
                                       new Date(1559313351218L), new Date(1559313350603L), new Date(1559313345917L),
                                       new Date(1559313346494L), new Date(1559313349706L), new Date(1559313349473L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.LESS_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1559313346087L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1559313344839L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559313344686L), new Date(1559313349268L), new Date(1559313346510L),
                                       new Date(1559313343686L), new Date(1559313342418L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559313347330L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559313346464L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559313345032L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("b8d505b3-0e9f-4ed5-b665-611a8098a3e6",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("e0042ad7-7c3f-4a1e-ac1d-c5bea37391a1",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("2661a015-f0bb-4cc8-b0cf-fadf97535733"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("70442f6e-ae08-48b2-a255-71ad0ddb4682", "b8b04f17-864e-4c11-8a57-07146ab1e523",
                                       "1b345d58-e166-4aa2-81c1-00d26a8ab94e", "5311dfe1-c5e9-4693-9e18-83e8d66edf83",
                                       "69d8420c-e847-496b-9f1e-436beb164949", "3daf851d-92df-44f9-9fc0-e9a592695351",
                                       "962f752d-7b67-465e-81eb-50478d054b91", "0bf818ec-5538-444c-aac5-bbc5c38fb3f7"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(58),
                                                                                                       Long.valueOf(33),
                                                                                                       Order.getDefault(),
                                                                                                       "d89848fc-5151-4f32-a12d-55487284184e",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(58),
                                                                                                       Long.valueOf(33),
                                                                                                       Order.getDefault(),
                                                                                                       "d89848fc-5151-4f32-a12d-55487284184e",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2.hashCode(), firmwaremanifestlistoptions1.hashCode());
            int hashCode = firmwaremanifestlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwaremanifestlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(27),
                                                                                                       Long.valueOf(122),
                                                                                                       Order.getDefault(),
                                                                                                       "3989a972-fa20-4b48-8f31-2abd8619eb04",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(27),
                                                                                                       Long.valueOf(122),
                                                                                                       Order.getDefault(),
                                                                                                       "3989a972-fa20-4b48-8f31-2abd8619eb04",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions3 = new FirmwareManifestListOptions(Integer.valueOf(62),
                                                                                                       Long.valueOf(-31),
                                                                                                       Order.getDefault(),
                                                                                                       "5d5d6845-6ec7-48ad-b8ab-1ff7eecedf22",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotNull(firmwaremanifestlistoptions3);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertNotSame(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions2);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions1);
            assertFalse(firmwaremanifestlistoptions1.equals(null));
            assertNotEquals(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
