// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareManifestListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareManifestListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-10),
                                                                                                       Long.valueOf(-102),
                                                                                                       Order.getDefault(),
                                                                                                       "1d9dfe13-004a-49aa-8280-d97114307b81",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = firmwaremanifestlistoptions1.clone();
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareManifestListOptions option = new FirmwareManifestListOptions().inCreatedAts(Arrays.asList(new Date(1559746949698L),
                                                                                                              new Date(1559746948807L)))
                                                                                  .notInCreatedAts(Arrays.asList(new Date(1559746957578L),
                                                                                                                 new Date(1559746950487L),
                                                                                                                 new Date(1559746950705L),
                                                                                                                 new Date(1559746957004L)))
                                                                                  .lessThanCreatedAt(new Date(1559746956325L))
                                                                                  .greaterThanCreatedAt(new Date(1559746955959L))
                                                                                  .equalToName("ac8256ec-bbb9-4fbc-8a8c-dbb25c11434f")
                                                                                  .notEqualToName("6f8082ff-b388-46f4-b610-264efd1311d3")
                                                                                  .inNames(Arrays.asList("721d5acc-e27e-4784-9bba-ec9065921e76",
                                                                                                         "9b046f44-b9fd-4160-8431-4d2287129034",
                                                                                                         "b255626d-bb70-4f4e-844c-1720c13f8f40"))
                                                                                  .notInNames(Arrays.asList("9733d7af-dd0e-4311-9d26-273480a725e1",
                                                                                                            "0acdaf05-83ec-4cd5-ba2e-b14ba41fbe55",
                                                                                                            "6f270246-6f97-46bb-bd1e-c17b77fa863d",
                                                                                                            "709fe6b4-f2d7-42c8-8562-d1825f0b14d8",
                                                                                                            "c99ed30f-11cd-426d-8a1a-ff8a0f02a062",
                                                                                                            "7f2e1764-51a3-4610-abf3-82cfedcf17cf",
                                                                                                            "1c5699d1-f2cc-47a5-b0d0-c9027b3dc862",
                                                                                                            "970bfa09-605e-44fa-b394-ab43ac015d65"))
                                                                                  .equalToId("9b58af10-f11e-44ba-abf4-18262ba5f9d6")
                                                                                  .notEqualToId("0a5c575e-bde2-41f4-8864-a5c9c63fb984")
                                                                                  .inIds(Arrays.asList("0535caa6-9e44-4f8d-8bf7-22aa248aec67",
                                                                                                       "956d5497-845e-46e1-9b50-fd88b2118d7b",
                                                                                                       "45355840-af68-422f-ad32-e3f66dc7d9f2",
                                                                                                       "9e2e86f7-f5d7-4bc8-90ef-2495bf46dfe8"))
                                                                                  .notInIds(Arrays.asList("d652a798-6c0a-4dc6-801e-4dffb6d23c9e",
                                                                                                          "674553d3-c348-4c4a-ae37-21e43dd19b30",
                                                                                                          "4ad89570-99d1-4467-88d4-424ed94a3f53",
                                                                                                          "311230cf-10b8-4dec-a8ed-0c0c71dec9a3",
                                                                                                          "2e7e581b-1a49-45df-b36b-8878af09f2c7",
                                                                                                          "4a675926-fe63-4abf-9e7b-b30fdb4ed1aa"))
                                                                                  .equalToDatafileUrl("e12ecb47-543a-4494-b7ec-08fcdeb9f5bb")
                                                                                  .notEqualToDatafileUrl("2ef2c508-3184-4721-966d-a050516f699b")
                                                                                  .inDatafileUrls(Arrays.asList("06b2cabd-9f3d-4853-9ce4-f172320af1aa",
                                                                                                                "da45e60b-b3d1-456a-b1d8-364bc830ec9e",
                                                                                                                "c5ab58c1-6a20-44fc-a078-cc946ea10258",
                                                                                                                "4d5c986a-a7a8-4c99-b2f3-eae4fd20b3aa",
                                                                                                                "65ba6352-e33a-449b-895c-8a712dddb79b",
                                                                                                                "853c3354-6549-4f22-8ba6-a02ca0e56f8b",
                                                                                                                "6dd58a46-f7ac-4792-9f7c-886d8f7022ba",
                                                                                                                "5d8f04f9-fa35-410a-94d4-2fd4d9d311d5",
                                                                                                                "e5c3386a-2f01-49b0-a002-e60a6dda7470"))
                                                                                  .notInDatafileUrls(Arrays.asList("258fa717-395b-4918-ad4c-d0ceedcd5126",
                                                                                                                   "db262d36-c093-415f-bb6c-be92e54c96b9",
                                                                                                                   "5aeadeaa-7aec-4664-985c-73fabafed181",
                                                                                                                   "c842cd79-2d4a-40d3-9013-28b26f5c2a66"))
                                                                                  .equalToDatafileSize(Long.valueOf(-128))
                                                                                  .notEqualToDatafileSize(Long.valueOf(52))
                                                                                  .inDatafileSizes(Arrays.asList(Long.valueOf(-118),
                                                                                                                 Long.valueOf(-80),
                                                                                                                 Long.valueOf(92),
                                                                                                                 Long.valueOf(-17),
                                                                                                                 Long.valueOf(-67)))
                                                                                  .notInDatafileSizes(Arrays.asList(Long.valueOf(21),
                                                                                                                    Long.valueOf(-126),
                                                                                                                    Long.valueOf(123),
                                                                                                                    Long.valueOf(-84)))
                                                                                  .equalToDeviceClass("ddeff97b-b1d0-446b-b229-33887ef89e19")
                                                                                  .notEqualToDeviceClass("f70462b1-8914-4ffc-82cf-47cc6755f9a3")
                                                                                  .inDeviceClass(Arrays.asList("035f7ce4-d51a-4cab-b9fa-bf0c8fd6ca0b"))
                                                                                  .notInDeviceClass(Arrays.asList("8db735a4-e59f-4a99-8bc5-401a545c113a",
                                                                                                                  "ab63cdd7-d52a-4ed9-8359-e520395b7b06",
                                                                                                                  "e8cb39f4-8cad-4fd3-8f21-340a55a54382",
                                                                                                                  "3650791e-bf1e-4eac-9881-af2ae1e7d30b",
                                                                                                                  "865e37f1-add7-477a-84b1-fedd696910de",
                                                                                                                  "5a70651e-6a0e-40a2-b84f-c41615e3f07e"))
                                                                                  .inTimestamps(Arrays.asList(new Date(1559746957813L),
                                                                                                              new Date(1559746949875L),
                                                                                                              new Date(1559746949714L),
                                                                                                              new Date(1559746949428L)))
                                                                                  .notInTimestamps(Arrays.asList(new Date(1559746956193L),
                                                                                                                 new Date(1559746949751L),
                                                                                                                 new Date(1559746956932L),
                                                                                                                 new Date(1559746955804L),
                                                                                                                 new Date(1559746948802L),
                                                                                                                 new Date(1559746957777L),
                                                                                                                 new Date(1559746953109L)))
                                                                                  .lessThanTimestamp(new Date(1559746949837L))
                                                                                  .greaterThanTimestamp(new Date(1559746952713L))
                                                                                  .inUpdatedAts(Arrays.asList(new Date(1559746957882L),
                                                                                                              new Date(1559746955050L),
                                                                                                              new Date(1559746954804L),
                                                                                                              new Date(1559746953479L),
                                                                                                              new Date(1559746957950L),
                                                                                                              new Date(1559746954646L),
                                                                                                              new Date(1559746948168L),
                                                                                                              new Date(1559746948855L)))
                                                                                  .notInUpdatedAts(Arrays.asList(new Date(1559746948229L),
                                                                                                                 new Date(1559746953018L),
                                                                                                                 new Date(1559746949603L),
                                                                                                                 new Date(1559746953031L),
                                                                                                                 new Date(1559746957920L),
                                                                                                                 new Date(1559746948740L)))
                                                                                  .lessThanUpdatedAt(new Date(1559746957396L))
                                                                                  .greaterThanUpdatedAt(new Date(1559746949687L))
                                                                                  .equalToDescription("5dc733df-702f-41fc-b108-5845baac3475")
                                                                                  .notEqualToDescription("d72862cc-09a7-4ee9-849a-3dc6b31c8fa0")
                                                                                  .inDescriptions(Arrays.asList("05290c2e-2549-4407-b946-e193c6229c2f",
                                                                                                                "c1380d91-ff58-47ea-8f71-ddc7f6e7096f",
                                                                                                                "c088530c-0935-4910-883c-e8e9b477ff5c",
                                                                                                                "fd531167-b1d4-4be4-bafd-9532f7ea8ff7",
                                                                                                                "5f20fe85-c9a7-4c64-97f8-78c08abf9011",
                                                                                                                "210cc8e9-945e-488f-a8a7-682ba4988335",
                                                                                                                "b770b7e8-4453-4174-9be2-0691ef02684c",
                                                                                                                "3ee7165c-cffe-4a6c-a9ee-095003d72746"))
                                                                                  .notInDescriptions(Arrays.asList("2b98834f-1e29-4d02-935b-3a35a21de293"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559746949698L), new Date(1559746948807L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559746957578L), new Date(1559746950487L), new Date(1559746950705L),
                                       new Date(1559746957004L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559746956325L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559746955959L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("ac8256ec-bbb9-4fbc-8a8c-dbb25c11434f",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("6f8082ff-b388-46f4-b610-264efd1311d3",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("721d5acc-e27e-4784-9bba-ec9065921e76", "9b046f44-b9fd-4160-8431-4d2287129034",
                                       "b255626d-bb70-4f4e-844c-1720c13f8f40"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("9733d7af-dd0e-4311-9d26-273480a725e1", "0acdaf05-83ec-4cd5-ba2e-b14ba41fbe55",
                                       "6f270246-6f97-46bb-bd1e-c17b77fa863d", "709fe6b4-f2d7-42c8-8562-d1825f0b14d8",
                                       "c99ed30f-11cd-426d-8a1a-ff8a0f02a062", "7f2e1764-51a3-4610-abf3-82cfedcf17cf",
                                       "1c5699d1-f2cc-47a5-b0d0-c9027b3dc862", "970bfa09-605e-44fa-b394-ab43ac015d65"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("9b58af10-f11e-44ba-abf4-18262ba5f9d6",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("0a5c575e-bde2-41f4-8864-a5c9c63fb984",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("0535caa6-9e44-4f8d-8bf7-22aa248aec67", "956d5497-845e-46e1-9b50-fd88b2118d7b",
                                       "45355840-af68-422f-ad32-e3f66dc7d9f2", "9e2e86f7-f5d7-4bc8-90ef-2495bf46dfe8"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("d652a798-6c0a-4dc6-801e-4dffb6d23c9e", "674553d3-c348-4c4a-ae37-21e43dd19b30",
                                       "4ad89570-99d1-4467-88d4-424ed94a3f53", "311230cf-10b8-4dec-a8ed-0c0c71dec9a3",
                                       "2e7e581b-1a49-45df-b36b-8878af09f2c7", "4a675926-fe63-4abf-9e7b-b30fdb4ed1aa"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("e12ecb47-543a-4494-b7ec-08fcdeb9f5bb",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("2ef2c508-3184-4721-966d-a050516f699b",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("06b2cabd-9f3d-4853-9ce4-f172320af1aa", "da45e60b-b3d1-456a-b1d8-364bc830ec9e",
                                       "c5ab58c1-6a20-44fc-a078-cc946ea10258", "4d5c986a-a7a8-4c99-b2f3-eae4fd20b3aa",
                                       "65ba6352-e33a-449b-895c-8a712dddb79b", "853c3354-6549-4f22-8ba6-a02ca0e56f8b",
                                       "6dd58a46-f7ac-4792-9f7c-886d8f7022ba", "5d8f04f9-fa35-410a-94d4-2fd4d9d311d5",
                                       "e5c3386a-2f01-49b0-a002-e60a6dda7470"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("258fa717-395b-4918-ad4c-d0ceedcd5126", "db262d36-c093-415f-bb6c-be92e54c96b9",
                                       "5aeadeaa-7aec-4664-985c-73fabafed181", "c842cd79-2d4a-40d3-9013-28b26f5c2a66"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-128),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(52),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-118), Long.valueOf(-80), Long.valueOf(92), Long.valueOf(-17),
                                       Long.valueOf(-67)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(21), Long.valueOf(-126), Long.valueOf(123), Long.valueOf(-84)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("ddeff97b-b1d0-446b-b229-33887ef89e19",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("f70462b1-8914-4ffc-82cf-47cc6755f9a3",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("035f7ce4-d51a-4cab-b9fa-bf0c8fd6ca0b"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("8db735a4-e59f-4a99-8bc5-401a545c113a", "ab63cdd7-d52a-4ed9-8359-e520395b7b06",
                                       "e8cb39f4-8cad-4fd3-8f21-340a55a54382", "3650791e-bf1e-4eac-9881-af2ae1e7d30b",
                                       "865e37f1-add7-477a-84b1-fedd696910de", "5a70651e-6a0e-40a2-b84f-c41615e3f07e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1559746957813L), new Date(1559746949875L), new Date(1559746949714L),
                                       new Date(1559746949428L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.NOT_IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1559746956193L), new Date(1559746949751L), new Date(1559746956932L),
                                       new Date(1559746955804L), new Date(1559746948802L), new Date(1559746957777L),
                                       new Date(1559746953109L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.LESS_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1559746949837L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1559746952713L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559746957882L), new Date(1559746955050L), new Date(1559746954804L),
                                       new Date(1559746953479L), new Date(1559746957950L), new Date(1559746954646L),
                                       new Date(1559746948168L), new Date(1559746948855L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559746948229L), new Date(1559746953018L), new Date(1559746949603L),
                                       new Date(1559746953031L), new Date(1559746957920L), new Date(1559746948740L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559746957396L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559746949687L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("5dc733df-702f-41fc-b108-5845baac3475",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("d72862cc-09a7-4ee9-849a-3dc6b31c8fa0",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("05290c2e-2549-4407-b946-e193c6229c2f", "c1380d91-ff58-47ea-8f71-ddc7f6e7096f",
                                       "c088530c-0935-4910-883c-e8e9b477ff5c", "fd531167-b1d4-4be4-bafd-9532f7ea8ff7",
                                       "5f20fe85-c9a7-4c64-97f8-78c08abf9011", "210cc8e9-945e-488f-a8a7-682ba4988335",
                                       "b770b7e8-4453-4174-9be2-0691ef02684c", "3ee7165c-cffe-4a6c-a9ee-095003d72746"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("2b98834f-1e29-4d02-935b-3a35a21de293"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(1),
                                                                                                       Long.valueOf(-34),
                                                                                                       Order.getDefault(),
                                                                                                       "48f271c7-ff96-425d-90c4-d7ff2f06749a",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(1),
                                                                                                       Long.valueOf(-34),
                                                                                                       Order.getDefault(),
                                                                                                       "48f271c7-ff96-425d-90c4-d7ff2f06749a",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2.hashCode(), firmwaremanifestlistoptions1.hashCode());
            int hashCode = firmwaremanifestlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwaremanifestlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(58),
                                                                                                       Long.valueOf(-33),
                                                                                                       Order.getDefault(),
                                                                                                       "74671ac3-aa2f-45be-8239-7da545ceb949",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(58),
                                                                                                       Long.valueOf(-33),
                                                                                                       Order.getDefault(),
                                                                                                       "74671ac3-aa2f-45be-8239-7da545ceb949",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions3 = new FirmwareManifestListOptions(Integer.valueOf(70),
                                                                                                       Long.valueOf(15),
                                                                                                       Order.getDefault(),
                                                                                                       "e14525af-97ff-4671-80fc-d491aebb379f",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotNull(firmwaremanifestlistoptions3);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertNotSame(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions2);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions1);
            assertFalse(firmwaremanifestlistoptions1.equals(null));
            assertNotEquals(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
