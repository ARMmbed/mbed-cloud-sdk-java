// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareManifestListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareManifestListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-111),
                                                                                                       Long.valueOf(-18),
                                                                                                       Order.getDefault(),
                                                                                                       "005388ce-99d2-40bd-a62b-3a4e4a799976",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = firmwaremanifestlistoptions1.clone();
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareManifestListOptions option = new FirmwareManifestListOptions().inCreatedAts(Arrays.asList(new Date(1559300108928L),
                                                                                                              new Date(1559300101064L),
                                                                                                              new Date(1559300106314L),
                                                                                                              new Date(1559300109174L),
                                                                                                              new Date(1559300101554L),
                                                                                                              new Date(1559300103097L),
                                                                                                              new Date(1559300107337L),
                                                                                                              new Date(1559300106513L),
                                                                                                              new Date(1559300107071L)))
                                                                                  .notInCreatedAts(Arrays.asList(new Date(1559300108886L),
                                                                                                                 new Date(1559300103397L)))
                                                                                  .lessThanCreatedAt(new Date(1559300103694L))
                                                                                  .greaterThanCreatedAt(new Date(1559300107509L))
                                                                                  .equalToName("d987fbef-0d7e-4922-988e-ad0b44524d10")
                                                                                  .notEqualToName("5e8b3c4d-99cc-4ca8-8dc5-ff092fe39dd7")
                                                                                  .inNames(Arrays.asList("02a6ab66-cbd8-462c-a5a2-7280c7d66ed1",
                                                                                                         "d4b0a057-3018-4dc1-b4dc-87158acde7f7",
                                                                                                         "5a69d355-70a2-4668-b237-6c43db07460c",
                                                                                                         "66d4af48-7755-4b29-ba46-775b4c17ccb7",
                                                                                                         "8457f2ee-b56a-4a26-9bc9-6d877313e1f7",
                                                                                                         "38518d90-a8ed-4ee9-bc0f-4db9b8d55321",
                                                                                                         "e0816796-1b37-4e9e-955b-4cb015610112",
                                                                                                         "565650e3-1ebd-4ff3-b0e3-e50b8ebe7586"))
                                                                                  .notInNames(Arrays.asList("0bdedfdd-9545-43a7-82cb-c6b5b492f44f"))
                                                                                  .equalToId("6a80e9b2-1c31-4254-8529-2749dcba5623")
                                                                                  .notEqualToId("69858c71-3731-41eb-8afa-254ec2bfbba7")
                                                                                  .inIds(Arrays.asList("3315c885-427d-4176-a70c-2d57efa190a9",
                                                                                                       "60c8a7b4-75cf-4676-9996-d3109e52913c",
                                                                                                       "523a9fdb-9d7d-4038-8e8b-485c360e0472"))
                                                                                  .notInIds(Arrays.asList("94c28f2b-d346-4d0c-a88e-ef1a559fb248",
                                                                                                          "046b8a8f-0e94-4946-9e53-7477ec25307f",
                                                                                                          "0e374940-0add-4b09-b35e-516a532d99b6",
                                                                                                          "20f6108a-72fe-4086-b07c-18af91673cf0",
                                                                                                          "2776d8f1-5553-4af5-8bd9-0d6961a4e25d",
                                                                                                          "1b96a4fc-0dfa-4005-bbe2-b4cc21433b41",
                                                                                                          "480ecb65-eed1-410f-9e5a-f5dc4536ff40"))
                                                                                  .equalToDatafileUrl("a4d4d512-02bc-4db2-bcef-36daca86f247")
                                                                                  .notEqualToDatafileUrl("47c9346d-b3fa-48c9-a4d5-46e2e0587189")
                                                                                  .inDatafileUrls(Arrays.asList("84a2c02c-4b2f-437a-89a9-219a2d59ae5b",
                                                                                                                "45982b8f-4baf-455a-ae4f-52957dbb2515",
                                                                                                                "0cbaaae3-c1d0-4e83-a5fa-62044fb6cc42",
                                                                                                                "8d072b13-dcf8-4734-8722-6d244742b765",
                                                                                                                "57b19a6c-9960-4e91-b819-595344608af0",
                                                                                                                "6cf6fd51-2e89-4172-a98e-dbcd9f3691d0",
                                                                                                                "f7cae065-fd0b-4be3-90eb-b287e4f1d707"))
                                                                                  .notInDatafileUrls(Arrays.asList("ae3dbdbf-e0cd-488a-95a6-758cad6740f7"))
                                                                                  .equalToDatafileSize(Long.valueOf(69))
                                                                                  .notEqualToDatafileSize(Long.valueOf(-91))
                                                                                  .inDatafileSizes(Arrays.asList(Long.valueOf(126)))
                                                                                  .notInDatafileSizes(Arrays.asList(Long.valueOf(71),
                                                                                                                    Long.valueOf(-22),
                                                                                                                    Long.valueOf(-19),
                                                                                                                    Long.valueOf(-82),
                                                                                                                    Long.valueOf(105)))
                                                                                  .equalToDeviceClass("5d2a6462-dcea-4af4-afb8-274257614f7f")
                                                                                  .notEqualToDeviceClass("2bc33078-84dd-4e59-8587-f5101c93172a")
                                                                                  .inDeviceClass(Arrays.asList("9a795bc4-7f30-4497-af4b-1f3ac59f5e49",
                                                                                                               "45b1b029-eab9-4b76-818c-06b4a554fd69",
                                                                                                               "9efa9975-d10f-4dbe-b61e-dfec11a20067",
                                                                                                               "17674cc0-09f6-45df-bea9-7718c2d084aa"))
                                                                                  .notInDeviceClass(Arrays.asList("876cffdc-6299-4808-8acf-c595e5bf0bc2",
                                                                                                                  "7f045847-f5e9-4aad-a55c-4956623b52a7",
                                                                                                                  "187637c4-d18f-472b-bd15-0dcf7502e656",
                                                                                                                  "1af00804-6ff1-4988-a05d-8415c168bb9e",
                                                                                                                  "99090ee7-857f-4145-91ff-6eed9092483c",
                                                                                                                  "32839f27-8567-48d0-8f5f-97180f39ae6b",
                                                                                                                  "408a111f-b01d-45b0-9719-dab86d2aeb18"))
                                                                                  .inTimestamps(Arrays.asList(new Date(1559300103921L)))
                                                                                  .notInTimestamps(Arrays.asList(new Date(1559300099505L),
                                                                                                                 new Date(1559300101736L),
                                                                                                                 new Date(1559300101121L)))
                                                                                  .lessThanTimestamp(new Date(1559300101529L))
                                                                                  .greaterThanTimestamp(new Date(1559300105122L))
                                                                                  .inUpdatedAts(Arrays.asList(new Date(1559300102927L),
                                                                                                              new Date(1559300108402L),
                                                                                                              new Date(1559300101175L),
                                                                                                              new Date(1559300107069L),
                                                                                                              new Date(1559300109120L),
                                                                                                              new Date(1559300105277L),
                                                                                                              new Date(1559300101075L),
                                                                                                              new Date(1559300109057L)))
                                                                                  .notInUpdatedAts(Arrays.asList(new Date(1559300109030L),
                                                                                                                 new Date(1559300103704L),
                                                                                                                 new Date(1559300101850L),
                                                                                                                 new Date(1559300102155L),
                                                                                                                 new Date(1559300105729L),
                                                                                                                 new Date(1559300103698L)))
                                                                                  .lessThanUpdatedAt(new Date(1559300108767L))
                                                                                  .greaterThanUpdatedAt(new Date(1559300109110L))
                                                                                  .equalToDescription("224c6011-ea64-4995-94fe-0ffa01dbb998")
                                                                                  .notEqualToDescription("02bab769-027b-4d6a-a576-0e04129e795b")
                                                                                  .inDescriptions(Arrays.asList("520c7121-c559-4929-8596-efee5c82c3ce",
                                                                                                                "1fc03a39-c9d6-423c-a6a5-09aca7313f6f",
                                                                                                                "97312eda-43e3-434f-856a-e6fd6d56b64e",
                                                                                                                "ae811561-5d13-4aaf-b6db-b16fa8facb3f",
                                                                                                                "9167c42f-efdb-43a9-a76a-e5d6e2f66ad8",
                                                                                                                "6fc09711-1760-4a81-bbe3-1745f5f40d72",
                                                                                                                "e9272f94-e4f8-4f9b-bf99-c9bbe471081d"))
                                                                                  .notInDescriptions(Arrays.asList("1fe6dbdd-0c03-4eba-91b7-7accaf3601c1",
                                                                                                                   "2ef68113-b32c-440a-9cd2-2007b2da4aa0",
                                                                                                                   "07179c02-f12e-4fa8-9df6-1a9fed6e7b97",
                                                                                                                   "5e03c43b-6510-4c3d-9af0-c8f78f5ea2e5",
                                                                                                                   "65f6e80e-6b85-41b6-a917-25a883a59a90",
                                                                                                                   "272a3ca3-35d1-4d52-989e-9d31c63a62c3"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559300108928L), new Date(1559300101064L), new Date(1559300106314L),
                                       new Date(1559300109174L), new Date(1559300101554L), new Date(1559300103097L),
                                       new Date(1559300107337L), new Date(1559300106513L), new Date(1559300107071L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559300108886L), new Date(1559300103397L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559300103694L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559300107509L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("d987fbef-0d7e-4922-988e-ad0b44524d10",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("5e8b3c4d-99cc-4ca8-8dc5-ff092fe39dd7",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("02a6ab66-cbd8-462c-a5a2-7280c7d66ed1", "d4b0a057-3018-4dc1-b4dc-87158acde7f7",
                                       "5a69d355-70a2-4668-b237-6c43db07460c", "66d4af48-7755-4b29-ba46-775b4c17ccb7",
                                       "8457f2ee-b56a-4a26-9bc9-6d877313e1f7", "38518d90-a8ed-4ee9-bc0f-4db9b8d55321",
                                       "e0816796-1b37-4e9e-955b-4cb015610112", "565650e3-1ebd-4ff3-b0e3-e50b8ebe7586"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("0bdedfdd-9545-43a7-82cb-c6b5b492f44f"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("6a80e9b2-1c31-4254-8529-2749dcba5623",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("69858c71-3731-41eb-8afa-254ec2bfbba7",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("3315c885-427d-4176-a70c-2d57efa190a9", "60c8a7b4-75cf-4676-9996-d3109e52913c",
                                       "523a9fdb-9d7d-4038-8e8b-485c360e0472"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("94c28f2b-d346-4d0c-a88e-ef1a559fb248", "046b8a8f-0e94-4946-9e53-7477ec25307f",
                                       "0e374940-0add-4b09-b35e-516a532d99b6", "20f6108a-72fe-4086-b07c-18af91673cf0",
                                       "2776d8f1-5553-4af5-8bd9-0d6961a4e25d", "1b96a4fc-0dfa-4005-bbe2-b4cc21433b41",
                                       "480ecb65-eed1-410f-9e5a-f5dc4536ff40"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("a4d4d512-02bc-4db2-bcef-36daca86f247",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("47c9346d-b3fa-48c9-a4d5-46e2e0587189",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("84a2c02c-4b2f-437a-89a9-219a2d59ae5b", "45982b8f-4baf-455a-ae4f-52957dbb2515",
                                       "0cbaaae3-c1d0-4e83-a5fa-62044fb6cc42", "8d072b13-dcf8-4734-8722-6d244742b765",
                                       "57b19a6c-9960-4e91-b819-595344608af0", "6cf6fd51-2e89-4172-a98e-dbcd9f3691d0",
                                       "f7cae065-fd0b-4be3-90eb-b287e4f1d707"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("ae3dbdbf-e0cd-488a-95a6-758cad6740f7"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(69),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-91),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(126)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(71), Long.valueOf(-22), Long.valueOf(-19), Long.valueOf(-82),
                                       Long.valueOf(105)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("5d2a6462-dcea-4af4-afb8-274257614f7f",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("2bc33078-84dd-4e59-8587-f5101c93172a",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("9a795bc4-7f30-4497-af4b-1f3ac59f5e49", "45b1b029-eab9-4b76-818c-06b4a554fd69",
                                       "9efa9975-d10f-4dbe-b61e-dfec11a20067", "17674cc0-09f6-45df-bea9-7718c2d084aa"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("876cffdc-6299-4808-8acf-c595e5bf0bc2", "7f045847-f5e9-4aad-a55c-4956623b52a7",
                                       "187637c4-d18f-472b-bd15-0dcf7502e656", "1af00804-6ff1-4988-a05d-8415c168bb9e",
                                       "99090ee7-857f-4145-91ff-6eed9092483c", "32839f27-8567-48d0-8f5f-97180f39ae6b",
                                       "408a111f-b01d-45b0-9719-dab86d2aeb18"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1559300103921L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.NOT_IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1559300099505L), new Date(1559300101736L), new Date(1559300101121L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.LESS_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1559300101529L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1559300105122L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559300102927L), new Date(1559300108402L), new Date(1559300101175L),
                                       new Date(1559300107069L), new Date(1559300109120L), new Date(1559300105277L),
                                       new Date(1559300101075L), new Date(1559300109057L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559300109030L), new Date(1559300103704L), new Date(1559300101850L),
                                       new Date(1559300102155L), new Date(1559300105729L), new Date(1559300103698L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559300108767L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559300109110L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("224c6011-ea64-4995-94fe-0ffa01dbb998",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("02bab769-027b-4d6a-a576-0e04129e795b",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("520c7121-c559-4929-8596-efee5c82c3ce", "1fc03a39-c9d6-423c-a6a5-09aca7313f6f",
                                       "97312eda-43e3-434f-856a-e6fd6d56b64e", "ae811561-5d13-4aaf-b6db-b16fa8facb3f",
                                       "9167c42f-efdb-43a9-a76a-e5d6e2f66ad8", "6fc09711-1760-4a81-bbe3-1745f5f40d72",
                                       "e9272f94-e4f8-4f9b-bf99-c9bbe471081d"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("1fe6dbdd-0c03-4eba-91b7-7accaf3601c1", "2ef68113-b32c-440a-9cd2-2007b2da4aa0",
                                       "07179c02-f12e-4fa8-9df6-1a9fed6e7b97", "5e03c43b-6510-4c3d-9af0-c8f78f5ea2e5",
                                       "65f6e80e-6b85-41b6-a917-25a883a59a90", "272a3ca3-35d1-4d52-989e-9d31c63a62c3"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-42),
                                                                                                       Long.valueOf(-61),
                                                                                                       Order.getDefault(),
                                                                                                       "0e90c641-3cf6-49b6-95b4-0963c69ce172",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(-42),
                                                                                                       Long.valueOf(-61),
                                                                                                       Order.getDefault(),
                                                                                                       "0e90c641-3cf6-49b6-95b4-0963c69ce172",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2.hashCode(), firmwaremanifestlistoptions1.hashCode());
            int hashCode = firmwaremanifestlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwaremanifestlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-122),
                                                                                                       Long.valueOf(84),
                                                                                                       Order.getDefault(),
                                                                                                       "11ae0888-bbc3-4418-8ff5-266d80c4c4a5",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(-122),
                                                                                                       Long.valueOf(84),
                                                                                                       Order.getDefault(),
                                                                                                       "11ae0888-bbc3-4418-8ff5-266d80c4c4a5",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions3 = new FirmwareManifestListOptions(Integer.valueOf(10),
                                                                                                       Long.valueOf(-4),
                                                                                                       Order.getDefault(),
                                                                                                       "512a4be8-c14c-4fde-a691-471f6794643d",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotNull(firmwaremanifestlistoptions3);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertNotSame(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions2);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions1);
            assertFalse(firmwaremanifestlistoptions1.equals(null));
            assertNotEquals(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
