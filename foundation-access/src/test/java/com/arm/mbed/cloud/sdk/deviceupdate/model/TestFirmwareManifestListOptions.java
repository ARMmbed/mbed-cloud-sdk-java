// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareManifestListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareManifestListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-86),
                                                                                                       Long.valueOf(-91),
                                                                                                       Order.getDefault(),
                                                                                                       "e391f14c-994b-4dce-b6c7-941591b7e6b2",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = firmwaremanifestlistoptions1.clone();
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareManifestListOptions option = new FirmwareManifestListOptions().inCreatedAts(Arrays.asList(new Date(1559560668113L),
                                                                                                              new Date(1559560668963L)))
                                                                                  .notInCreatedAts(Arrays.asList(new Date(1559560670643L),
                                                                                                                 new Date(1559560669741L),
                                                                                                                 new Date(1559560669903L),
                                                                                                                 new Date(1559560672013L),
                                                                                                                 new Date(1559560674109L),
                                                                                                                 new Date(1559560673190L)))
                                                                                  .lessThanCreatedAt(new Date(1559560668331L))
                                                                                  .greaterThanCreatedAt(new Date(1559560670949L))
                                                                                  .equalToName("b47be1db-aa43-42d3-962f-f895edf52d34")
                                                                                  .notEqualToName("f0dc5ab1-db33-4a80-b2f1-db85adc31ac3")
                                                                                  .inNames(Arrays.asList("5ba6f455-0daa-4c8d-a25e-da7bbc7c7859",
                                                                                                         "def207c3-a177-4816-9100-1951dcb3929a",
                                                                                                         "1e233345-5049-4060-b565-59a906ca8c08",
                                                                                                         "05394e6f-9782-477e-b2dd-e3c3048fe664",
                                                                                                         "862fa302-043d-4e80-b385-6a24b2542a02",
                                                                                                         "d33fbe54-980a-4efa-b322-c77a76079e43",
                                                                                                         "ee72a2ff-1098-43eb-a03a-e033b7e28773",
                                                                                                         "a06b8c0d-e05a-4b9a-ad64-a66184324107",
                                                                                                         "04099ef8-3279-4bb9-b99b-9fab089fa62a"))
                                                                                  .notInNames(Arrays.asList("2686e42b-103f-4903-a740-c435b02f0ebc",
                                                                                                            "b602f149-b092-414d-93b7-d177097ad95a",
                                                                                                            "b2e0eeea-508c-4ab5-90b3-0d398ee479f2",
                                                                                                            "a3917f60-bdf9-4e1b-aa2a-4f944cce71e2",
                                                                                                            "e4b6a3f4-06b2-4139-9e5e-f4b330d37fa2",
                                                                                                            "19348a0b-3de6-4bb6-83cd-645da1445307",
                                                                                                            "b57fdbac-ac7d-4769-9f55-721c452546ef",
                                                                                                            "6f98cfe7-975d-453d-bd67-8556db00e249"))
                                                                                  .equalToId("2766bbfe-22fd-439c-94c6-f7552aec1dc9")
                                                                                  .notEqualToId("81acfa9c-3d74-4944-a5ff-5e93b997ec39")
                                                                                  .inIds(Arrays.asList("0b403c5b-e891-4f27-9d28-97b8fe2e349f",
                                                                                                       "dde60ceb-ebe6-4848-a705-88e88b3d4464",
                                                                                                       "31bac710-c67e-49b4-834a-839d392d9176"))
                                                                                  .notInIds(Arrays.asList("723c0bac-377d-4816-8668-d87ca3e7592c",
                                                                                                          "fe8caa87-958e-4184-a038-fcd85554efd9",
                                                                                                          "9356a951-5593-4fde-85bd-4168e5f3711f",
                                                                                                          "178d26d4-1cef-4291-afb8-ad4214bb64b5",
                                                                                                          "a6ad151a-9187-4a4a-9376-51bbef448bd0",
                                                                                                          "d71d264e-4c60-4fa7-b670-255be41df95f"))
                                                                                  .equalToDatafileUrl("adf6606a-beed-4fe2-8330-d1e09c7c58d5")
                                                                                  .notEqualToDatafileUrl("e01592c4-201a-40d1-9d6c-963df2137dc6")
                                                                                  .inDatafileUrls(Arrays.asList("fd998bd8-b00a-4208-9242-94bd3cfbaf9d",
                                                                                                                "77ad31b2-20f4-4d58-b27e-fbd884ea7b05",
                                                                                                                "9732b596-46b8-472c-a7f1-056d037cf679",
                                                                                                                "32119281-88de-4648-baf2-2a7779fdbaaa",
                                                                                                                "0ffeaa03-be7b-4e3d-97dd-11dff39e2eb4"))
                                                                                  .notInDatafileUrls(Arrays.asList("982cfe10-7508-40e5-a15b-ba477d2bb96d",
                                                                                                                   "02b915ed-4ca4-4501-9618-6f9bb8bf294d",
                                                                                                                   "1bab89e4-5ac1-43fb-b47d-9cc40a6cd0ac",
                                                                                                                   "0d30a3d9-b7a0-4937-8066-861598f89cac",
                                                                                                                   "280ebdee-4f5d-46a5-9802-d2d1afbb42b5",
                                                                                                                   "5a95e55e-258b-4a9c-b455-373a9206b35b"))
                                                                                  .equalToDatafileSize(Long.valueOf(-20))
                                                                                  .notEqualToDatafileSize(Long.valueOf(111))
                                                                                  .inDatafileSizes(Arrays.asList(Long.valueOf(49),
                                                                                                                 Long.valueOf(92),
                                                                                                                 Long.valueOf(30),
                                                                                                                 Long.valueOf(26),
                                                                                                                 Long.valueOf(21),
                                                                                                                 Long.valueOf(10),
                                                                                                                 Long.valueOf(-85),
                                                                                                                 Long.valueOf(107),
                                                                                                                 Long.valueOf(-122)))
                                                                                  .notInDatafileSizes(Arrays.asList(Long.valueOf(76),
                                                                                                                    Long.valueOf(61),
                                                                                                                    Long.valueOf(107)))
                                                                                  .equalToDeviceClass("72aefbc5-6d0f-4b6b-ba02-09be131f5977")
                                                                                  .notEqualToDeviceClass("a2bbbd5d-c86b-429c-927e-1ce89b8c2be5")
                                                                                  .inDeviceClass(Arrays.asList("49311e8b-2bf2-4eba-a533-0041d8e6f7d4",
                                                                                                               "095fd2dc-6806-48a1-b922-9db8d0549113",
                                                                                                               "89a5cc19-3348-40f4-9fcd-3aaa790d69cd"))
                                                                                  .notInDeviceClass(Arrays.asList("74e2ae80-64a1-4428-af67-1b2eba4c2f13",
                                                                                                                  "fa7bed55-8b4a-42ec-8f6a-13cf81e478f3"))
                                                                                  .inTimestamps(Arrays.asList(new Date(1559560671624L)))
                                                                                  .notInTimestamps(Arrays.asList(new Date(1559560672557L),
                                                                                                                 new Date(1559560669144L),
                                                                                                                 new Date(1559560669044L),
                                                                                                                 new Date(1559560673185L),
                                                                                                                 new Date(1559560668028L)))
                                                                                  .lessThanTimestamp(new Date(1559560671673L))
                                                                                  .greaterThanTimestamp(new Date(1559560669786L))
                                                                                  .inUpdatedAts(Arrays.asList(new Date(1559560672351L),
                                                                                                              new Date(1559560668218L),
                                                                                                              new Date(1559560671510L),
                                                                                                              new Date(1559560674680L),
                                                                                                              new Date(1559560666391L),
                                                                                                              new Date(1559560675418L),
                                                                                                              new Date(1559560672896L)))
                                                                                  .notInUpdatedAts(Arrays.asList(new Date(1559560674036L),
                                                                                                                 new Date(1559560672575L),
                                                                                                                 new Date(1559560671666L),
                                                                                                                 new Date(1559560669785L),
                                                                                                                 new Date(1559560672082L)))
                                                                                  .lessThanUpdatedAt(new Date(1559560668950L))
                                                                                  .greaterThanUpdatedAt(new Date(1559560675305L))
                                                                                  .equalToDescription("963e1bbc-5b20-4cd4-bd10-39d47f3f8853")
                                                                                  .notEqualToDescription("5ef37cb3-e809-42ed-81cb-ac51718b4a05")
                                                                                  .inDescriptions(Arrays.asList("b7386a08-983e-460e-8681-81577c5a8d72"))
                                                                                  .notInDescriptions(Arrays.asList("d67f0a95-96fe-40bf-a615-57444a8848e7"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559560668113L), new Date(1559560668963L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559560670643L), new Date(1559560669741L), new Date(1559560669903L),
                                       new Date(1559560672013L), new Date(1559560674109L), new Date(1559560673190L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559560668331L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559560670949L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("b47be1db-aa43-42d3-962f-f895edf52d34",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("f0dc5ab1-db33-4a80-b2f1-db85adc31ac3",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("5ba6f455-0daa-4c8d-a25e-da7bbc7c7859", "def207c3-a177-4816-9100-1951dcb3929a",
                                       "1e233345-5049-4060-b565-59a906ca8c08", "05394e6f-9782-477e-b2dd-e3c3048fe664",
                                       "862fa302-043d-4e80-b385-6a24b2542a02", "d33fbe54-980a-4efa-b322-c77a76079e43",
                                       "ee72a2ff-1098-43eb-a03a-e033b7e28773", "a06b8c0d-e05a-4b9a-ad64-a66184324107",
                                       "04099ef8-3279-4bb9-b99b-9fab089fa62a"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("2686e42b-103f-4903-a740-c435b02f0ebc", "b602f149-b092-414d-93b7-d177097ad95a",
                                       "b2e0eeea-508c-4ab5-90b3-0d398ee479f2", "a3917f60-bdf9-4e1b-aa2a-4f944cce71e2",
                                       "e4b6a3f4-06b2-4139-9e5e-f4b330d37fa2", "19348a0b-3de6-4bb6-83cd-645da1445307",
                                       "b57fdbac-ac7d-4769-9f55-721c452546ef", "6f98cfe7-975d-453d-bd67-8556db00e249"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("2766bbfe-22fd-439c-94c6-f7552aec1dc9",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("81acfa9c-3d74-4944-a5ff-5e93b997ec39",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("0b403c5b-e891-4f27-9d28-97b8fe2e349f", "dde60ceb-ebe6-4848-a705-88e88b3d4464",
                                       "31bac710-c67e-49b4-834a-839d392d9176"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("723c0bac-377d-4816-8668-d87ca3e7592c", "fe8caa87-958e-4184-a038-fcd85554efd9",
                                       "9356a951-5593-4fde-85bd-4168e5f3711f", "178d26d4-1cef-4291-afb8-ad4214bb64b5",
                                       "a6ad151a-9187-4a4a-9376-51bbef448bd0", "d71d264e-4c60-4fa7-b670-255be41df95f"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("adf6606a-beed-4fe2-8330-d1e09c7c58d5",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("e01592c4-201a-40d1-9d6c-963df2137dc6",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("fd998bd8-b00a-4208-9242-94bd3cfbaf9d", "77ad31b2-20f4-4d58-b27e-fbd884ea7b05",
                                       "9732b596-46b8-472c-a7f1-056d037cf679", "32119281-88de-4648-baf2-2a7779fdbaaa",
                                       "0ffeaa03-be7b-4e3d-97dd-11dff39e2eb4"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("982cfe10-7508-40e5-a15b-ba477d2bb96d", "02b915ed-4ca4-4501-9618-6f9bb8bf294d",
                                       "1bab89e4-5ac1-43fb-b47d-9cc40a6cd0ac", "0d30a3d9-b7a0-4937-8066-861598f89cac",
                                       "280ebdee-4f5d-46a5-9802-d2d1afbb42b5", "5a95e55e-258b-4a9c-b455-373a9206b35b"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-20),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(111),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(49), Long.valueOf(92), Long.valueOf(30), Long.valueOf(26),
                                       Long.valueOf(21), Long.valueOf(10), Long.valueOf(-85), Long.valueOf(107),
                                       Long.valueOf(-122)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(76), Long.valueOf(61), Long.valueOf(107)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("72aefbc5-6d0f-4b6b-ba02-09be131f5977",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("a2bbbd5d-c86b-429c-927e-1ce89b8c2be5",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("49311e8b-2bf2-4eba-a533-0041d8e6f7d4", "095fd2dc-6806-48a1-b922-9db8d0549113",
                                       "89a5cc19-3348-40f4-9fcd-3aaa790d69cd"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("74e2ae80-64a1-4428-af67-1b2eba4c2f13", "fa7bed55-8b4a-42ec-8f6a-13cf81e478f3"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1559560671624L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.NOT_IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1559560672557L), new Date(1559560669144L), new Date(1559560669044L),
                                       new Date(1559560673185L), new Date(1559560668028L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.LESS_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1559560671673L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1559560669786L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559560672351L), new Date(1559560668218L), new Date(1559560671510L),
                                       new Date(1559560674680L), new Date(1559560666391L), new Date(1559560675418L),
                                       new Date(1559560672896L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559560674036L), new Date(1559560672575L), new Date(1559560671666L),
                                       new Date(1559560669785L), new Date(1559560672082L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559560668950L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559560675305L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("963e1bbc-5b20-4cd4-bd10-39d47f3f8853",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("5ef37cb3-e809-42ed-81cb-ac51718b4a05",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("b7386a08-983e-460e-8681-81577c5a8d72"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("d67f0a95-96fe-40bf-a615-57444a8848e7"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(60),
                                                                                                       Long.valueOf(82),
                                                                                                       Order.getDefault(),
                                                                                                       "01f43568-d249-4be1-aaae-5d0afdbaa66d",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(60),
                                                                                                       Long.valueOf(82),
                                                                                                       Order.getDefault(),
                                                                                                       "01f43568-d249-4be1-aaae-5d0afdbaa66d",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2.hashCode(), firmwaremanifestlistoptions1.hashCode());
            int hashCode = firmwaremanifestlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwaremanifestlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-111),
                                                                                                       Long.valueOf(25),
                                                                                                       Order.getDefault(),
                                                                                                       "1fee5a75-6bc7-4490-b39e-aa3d70a8a784",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(-111),
                                                                                                       Long.valueOf(25),
                                                                                                       Order.getDefault(),
                                                                                                       "1fee5a75-6bc7-4490-b39e-aa3d70a8a784",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions3 = new FirmwareManifestListOptions(Integer.valueOf(-79),
                                                                                                       Long.valueOf(123),
                                                                                                       Order.getDefault(),
                                                                                                       "5fcf6ece-ed9d-46ac-bf6b-a33087a93b54",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotNull(firmwaremanifestlistoptions3);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertNotSame(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions2);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions1);
            assertFalse(firmwaremanifestlistoptions1.equals(null));
            assertNotEquals(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
