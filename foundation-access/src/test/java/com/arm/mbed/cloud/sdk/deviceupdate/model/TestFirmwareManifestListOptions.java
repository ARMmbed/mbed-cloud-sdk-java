// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareManifestListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareManifestListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-7),
                                                                                                       Long.valueOf(76),
                                                                                                       Order.getDefault(),
                                                                                                       "793bd069-3a83-476a-85ca-219922fbb762",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = firmwaremanifestlistoptions1.clone();
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareManifestListOptions option = new FirmwareManifestListOptions().inCreatedAts(Arrays.asList(new Date(1559662783128L),
                                                                                                              new Date(1559662778850L),
                                                                                                              new Date(1559662782914L),
                                                                                                              new Date(1559662786849L),
                                                                                                              new Date(1559662785311L)))
                                                                                  .notInCreatedAts(Arrays.asList(new Date(1559662780648L),
                                                                                                                 new Date(1559662787850L),
                                                                                                                 new Date(1559662779039L),
                                                                                                                 new Date(1559662780567L),
                                                                                                                 new Date(1559662786835L),
                                                                                                                 new Date(1559662779749L),
                                                                                                                 new Date(1559662782710L)))
                                                                                  .lessThanCreatedAt(new Date(1559662781335L))
                                                                                  .greaterThanCreatedAt(new Date(1559662788110L))
                                                                                  .equalToName("aec513e3-add5-4efb-8ec8-6dd6c4a5b597")
                                                                                  .notEqualToName("a7482aa7-8c57-4306-9f37-0a5777f16220")
                                                                                  .inNames(Arrays.asList("ee0916b3-8e10-4c54-9191-6e3ca3904972",
                                                                                                         "2ca2e27b-7cbd-4985-bf61-efbce4270fd6",
                                                                                                         "f4c7b3d7-a321-4e17-8fef-bbebc30cbfa9",
                                                                                                         "30afadfd-cce5-4fb6-861c-2d80f0382ff4"))
                                                                                  .notInNames(Arrays.asList("4c7132df-d014-4907-ab4b-fc5b0537e9e7",
                                                                                                            "25746413-837d-4664-984d-d9f45296454f",
                                                                                                            "2ca98d7e-8dca-4a90-9c0b-f691666546fb",
                                                                                                            "d950ba70-3d95-4cdc-a6f5-cbea7db1c83e"))
                                                                                  .equalToId("30388dc8-bf7e-43ae-aee0-4b62938d7a25")
                                                                                  .notEqualToId("bc693958-32f3-42fe-b621-ff83507877ae")
                                                                                  .inIds(Arrays.asList("ee03c955-0990-4085-95b2-73a59fc77628"))
                                                                                  .notInIds(Arrays.asList("f92292b7-b4c1-4369-922c-035d5d00aa14",
                                                                                                          "46a11c91-367d-46b2-895c-51891312b99f",
                                                                                                          "b796bd39-bd7e-4139-95a1-ffddec9fdf71",
                                                                                                          "e5789848-7a21-40ab-a3f8-67e0126ff5ad",
                                                                                                          "53b2e9c8-829d-481d-bf8c-ea396d61f23e"))
                                                                                  .equalToDatafileUrl("5495effe-ea32-49a5-b278-1c62759cf28c")
                                                                                  .notEqualToDatafileUrl("fda04508-281c-4b38-9f53-aa95d20994fb")
                                                                                  .inDatafileUrls(Arrays.asList("c6570c84-67ce-4f90-92ca-d08e2451fc2b",
                                                                                                                "2c0b0944-4d43-4800-985f-1335cd91e04c",
                                                                                                                "2694cb73-48f6-4d32-8244-324ad2d1de59",
                                                                                                                "4766e795-b7a0-4a53-aa7d-1c66d3ff12b0",
                                                                                                                "ccf89981-2985-422b-b95a-3bbabae23420",
                                                                                                                "1f8b514e-6e95-47db-b990-1cda74c882ca",
                                                                                                                "0451c11e-0e85-4670-beb3-9213b4a9182e",
                                                                                                                "7cfc6ea0-c19a-48f1-a6fd-9d8b55fb1a57",
                                                                                                                "bac4c381-f00f-41cc-8a75-fa91547f34c9"))
                                                                                  .notInDatafileUrls(Arrays.asList("076b0782-b656-4ee2-ba48-8b5f06afee1b",
                                                                                                                   "de0bd9ab-48a0-4f8e-a251-b11f013691b6",
                                                                                                                   "ed7199c8-d1aa-43e7-8017-84b839341c9a",
                                                                                                                   "7d203c5f-400f-42a8-ae97-d5a653c7633a",
                                                                                                                   "3d0c6758-4bf6-4124-98c3-6682d2f87eb6",
                                                                                                                   "9e7b4299-f353-4a85-9b8a-35778481e7e9",
                                                                                                                   "9dabfa17-cc4b-427a-b0c4-2e28dc18e233",
                                                                                                                   "996cb059-6183-4e25-9027-8a4470104632"))
                                                                                  .equalToDatafileSize(Long.valueOf(-107))
                                                                                  .notEqualToDatafileSize(Long.valueOf(10))
                                                                                  .inDatafileSizes(Arrays.asList(Long.valueOf(-38),
                                                                                                                 Long.valueOf(-117),
                                                                                                                 Long.valueOf(-63),
                                                                                                                 Long.valueOf(42),
                                                                                                                 Long.valueOf(35)))
                                                                                  .notInDatafileSizes(Arrays.asList(Long.valueOf(94),
                                                                                                                    Long.valueOf(85),
                                                                                                                    Long.valueOf(-70),
                                                                                                                    Long.valueOf(30),
                                                                                                                    Long.valueOf(15),
                                                                                                                    Long.valueOf(19)))
                                                                                  .equalToDeviceClass("c87a8890-aaac-4f8b-8bdf-60c60a32d5f4")
                                                                                  .notEqualToDeviceClass("26ebbb45-1743-4338-aaa8-5b74a4ca203d")
                                                                                  .inDeviceClass(Arrays.asList("0c03afbb-9ca8-493f-9c54-9ee60ca9ebe3",
                                                                                                               "ba166941-85e2-4e1e-af86-6999afdfc346",
                                                                                                               "b7f24cd4-f511-44d3-95bd-9fc67d42d6b8",
                                                                                                               "6704ac36-4dbc-458c-b803-17c5dafdc41f",
                                                                                                               "4d10dd01-48c9-480e-932c-5d3bf7ceab75",
                                                                                                               "ea77bd45-f098-4034-a425-e5ec223682cd",
                                                                                                               "6b870e2e-7458-421a-b141-849e059ee9f7"))
                                                                                  .notInDeviceClass(Arrays.asList("4752f334-a9ae-4d8a-8b0e-01f4ca872724",
                                                                                                                  "3351b05a-f724-4d94-849d-2688cbbd0d09",
                                                                                                                  "1434685b-4ac2-45fe-b884-92502a201a5b",
                                                                                                                  "bbb93f7a-aeae-4265-bbfb-7f72c2f2e6eb"))
                                                                                  .inTimestamps(Arrays.asList(new Date(1559662779763L),
                                                                                                              new Date(1559662784067L),
                                                                                                              new Date(1559662780858L),
                                                                                                              new Date(1559662782997L),
                                                                                                              new Date(1559662787368L)))
                                                                                  .notInTimestamps(Arrays.asList(new Date(1559662783705L),
                                                                                                                 new Date(1559662779410L),
                                                                                                                 new Date(1559662781600L),
                                                                                                                 new Date(1559662785178L),
                                                                                                                 new Date(1559662779007L),
                                                                                                                 new Date(1559662780536L),
                                                                                                                 new Date(1559662787862L),
                                                                                                                 new Date(1559662782263L),
                                                                                                                 new Date(1559662787420L)))
                                                                                  .lessThanTimestamp(new Date(1559662787270L))
                                                                                  .greaterThanTimestamp(new Date(1559662785022L))
                                                                                  .inUpdatedAts(Arrays.asList(new Date(1559662786434L),
                                                                                                              new Date(1559662784955L),
                                                                                                              new Date(1559662780357L),
                                                                                                              new Date(1559662778707L),
                                                                                                              new Date(1559662780062L),
                                                                                                              new Date(1559662779196L),
                                                                                                              new Date(1559662782903L),
                                                                                                              new Date(1559662779205L)))
                                                                                  .notInUpdatedAts(Arrays.asList(new Date(1559662779518L),
                                                                                                                 new Date(1559662783686L),
                                                                                                                 new Date(1559662784110L)))
                                                                                  .lessThanUpdatedAt(new Date(1559662781758L))
                                                                                  .greaterThanUpdatedAt(new Date(1559662787005L))
                                                                                  .equalToDescription("b00090b3-8513-4c95-a0f7-e76b053ddfb9")
                                                                                  .notEqualToDescription("84d6930b-e4fb-414a-906a-71acda3f2e16")
                                                                                  .inDescriptions(Arrays.asList("17298064-a836-4b0f-a9c8-c743d657538e",
                                                                                                                "0a586ed4-b983-44f2-be97-effdf5e3a1f0"))
                                                                                  .notInDescriptions(Arrays.asList("94dff14b-6bf9-43c1-8bc7-237ebabbbe07",
                                                                                                                   "c5664621-ef11-44d8-be5d-b1cb8b72d740",
                                                                                                                   "96003467-7103-4b9a-87c8-20a699f33117",
                                                                                                                   "a9298802-4b6b-43ff-925d-74a0ef5bca77",
                                                                                                                   "3eb059da-c43d-4d81-bc5c-92c5c2ab6791"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559662783128L), new Date(1559662778850L), new Date(1559662782914L),
                                       new Date(1559662786849L), new Date(1559662785311L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559662780648L), new Date(1559662787850L), new Date(1559662779039L),
                                       new Date(1559662780567L), new Date(1559662786835L), new Date(1559662779749L),
                                       new Date(1559662782710L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559662781335L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559662788110L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("aec513e3-add5-4efb-8ec8-6dd6c4a5b597",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("a7482aa7-8c57-4306-9f37-0a5777f16220",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("ee0916b3-8e10-4c54-9191-6e3ca3904972", "2ca2e27b-7cbd-4985-bf61-efbce4270fd6",
                                       "f4c7b3d7-a321-4e17-8fef-bbebc30cbfa9", "30afadfd-cce5-4fb6-861c-2d80f0382ff4"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("4c7132df-d014-4907-ab4b-fc5b0537e9e7", "25746413-837d-4664-984d-d9f45296454f",
                                       "2ca98d7e-8dca-4a90-9c0b-f691666546fb", "d950ba70-3d95-4cdc-a6f5-cbea7db1c83e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("30388dc8-bf7e-43ae-aee0-4b62938d7a25",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("bc693958-32f3-42fe-b621-ff83507877ae",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("ee03c955-0990-4085-95b2-73a59fc77628"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("f92292b7-b4c1-4369-922c-035d5d00aa14", "46a11c91-367d-46b2-895c-51891312b99f",
                                       "b796bd39-bd7e-4139-95a1-ffddec9fdf71", "e5789848-7a21-40ab-a3f8-67e0126ff5ad",
                                       "53b2e9c8-829d-481d-bf8c-ea396d61f23e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("5495effe-ea32-49a5-b278-1c62759cf28c",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("fda04508-281c-4b38-9f53-aa95d20994fb",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("c6570c84-67ce-4f90-92ca-d08e2451fc2b", "2c0b0944-4d43-4800-985f-1335cd91e04c",
                                       "2694cb73-48f6-4d32-8244-324ad2d1de59", "4766e795-b7a0-4a53-aa7d-1c66d3ff12b0",
                                       "ccf89981-2985-422b-b95a-3bbabae23420", "1f8b514e-6e95-47db-b990-1cda74c882ca",
                                       "0451c11e-0e85-4670-beb3-9213b4a9182e", "7cfc6ea0-c19a-48f1-a6fd-9d8b55fb1a57",
                                       "bac4c381-f00f-41cc-8a75-fa91547f34c9"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("076b0782-b656-4ee2-ba48-8b5f06afee1b", "de0bd9ab-48a0-4f8e-a251-b11f013691b6",
                                       "ed7199c8-d1aa-43e7-8017-84b839341c9a", "7d203c5f-400f-42a8-ae97-d5a653c7633a",
                                       "3d0c6758-4bf6-4124-98c3-6682d2f87eb6", "9e7b4299-f353-4a85-9b8a-35778481e7e9",
                                       "9dabfa17-cc4b-427a-b0c4-2e28dc18e233", "996cb059-6183-4e25-9027-8a4470104632"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-107),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(10),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-38), Long.valueOf(-117), Long.valueOf(-63), Long.valueOf(42),
                                       Long.valueOf(35)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(94), Long.valueOf(85), Long.valueOf(-70), Long.valueOf(30),
                                       Long.valueOf(15), Long.valueOf(19)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("c87a8890-aaac-4f8b-8bdf-60c60a32d5f4",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("26ebbb45-1743-4338-aaa8-5b74a4ca203d",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("0c03afbb-9ca8-493f-9c54-9ee60ca9ebe3", "ba166941-85e2-4e1e-af86-6999afdfc346",
                                       "b7f24cd4-f511-44d3-95bd-9fc67d42d6b8", "6704ac36-4dbc-458c-b803-17c5dafdc41f",
                                       "4d10dd01-48c9-480e-932c-5d3bf7ceab75", "ea77bd45-f098-4034-a425-e5ec223682cd",
                                       "6b870e2e-7458-421a-b141-849e059ee9f7"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("4752f334-a9ae-4d8a-8b0e-01f4ca872724", "3351b05a-f724-4d94-849d-2688cbbd0d09",
                                       "1434685b-4ac2-45fe-b884-92502a201a5b", "bbb93f7a-aeae-4265-bbfb-7f72c2f2e6eb"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1559662779763L), new Date(1559662784067L), new Date(1559662780858L),
                                       new Date(1559662782997L), new Date(1559662787368L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.NOT_IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1559662783705L), new Date(1559662779410L), new Date(1559662781600L),
                                       new Date(1559662785178L), new Date(1559662779007L), new Date(1559662780536L),
                                       new Date(1559662787862L), new Date(1559662782263L), new Date(1559662787420L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.LESS_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1559662787270L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1559662785022L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559662786434L), new Date(1559662784955L), new Date(1559662780357L),
                                       new Date(1559662778707L), new Date(1559662780062L), new Date(1559662779196L),
                                       new Date(1559662782903L), new Date(1559662779205L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559662779518L), new Date(1559662783686L), new Date(1559662784110L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559662781758L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559662787005L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("b00090b3-8513-4c95-a0f7-e76b053ddfb9",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("84d6930b-e4fb-414a-906a-71acda3f2e16",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("17298064-a836-4b0f-a9c8-c743d657538e", "0a586ed4-b983-44f2-be97-effdf5e3a1f0"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("94dff14b-6bf9-43c1-8bc7-237ebabbbe07", "c5664621-ef11-44d8-be5d-b1cb8b72d740",
                                       "96003467-7103-4b9a-87c8-20a699f33117", "a9298802-4b6b-43ff-925d-74a0ef5bca77",
                                       "3eb059da-c43d-4d81-bc5c-92c5c2ab6791"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-91),
                                                                                                       Long.valueOf(-9),
                                                                                                       Order.getDefault(),
                                                                                                       "774310d2-ce6b-4c74-a666-15cc73c25496",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(-91),
                                                                                                       Long.valueOf(-9),
                                                                                                       Order.getDefault(),
                                                                                                       "774310d2-ce6b-4c74-a666-15cc73c25496",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2.hashCode(), firmwaremanifestlistoptions1.hashCode());
            int hashCode = firmwaremanifestlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwaremanifestlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-117),
                                                                                                       Long.valueOf(20),
                                                                                                       Order.getDefault(),
                                                                                                       "4ee68da7-62a6-4dec-b4b7-a43672b74b76",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(-117),
                                                                                                       Long.valueOf(20),
                                                                                                       Order.getDefault(),
                                                                                                       "4ee68da7-62a6-4dec-b4b7-a43672b74b76",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions3 = new FirmwareManifestListOptions(Integer.valueOf(-81),
                                                                                                       Long.valueOf(-63),
                                                                                                       Order.getDefault(),
                                                                                                       "f588ebaa-870b-45c9-ba0c-737f8bcddcca",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotNull(firmwaremanifestlistoptions3);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertNotSame(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions2);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions1);
            assertFalse(firmwaremanifestlistoptions1.equals(null));
            assertNotEquals(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
