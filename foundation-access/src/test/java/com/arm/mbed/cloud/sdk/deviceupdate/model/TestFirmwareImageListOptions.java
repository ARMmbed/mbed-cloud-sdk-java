// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-119),
                                                                                              Long.valueOf(-83),
                                                                                              Order.getDefault(),
                                                                                              "cb8e6878-20b4-4a80-98e2-15c1c504116d",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1559758610808L),
                                                                                                        new Date(1559758608432L),
                                                                                                        new Date(1559758609454L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1559758605737L),
                                                                                                           new Date(1559758610478L),
                                                                                                           new Date(1559758614911L)))
                                                                            .lessThanUpdatedAt(new Date(1559758608466L))
                                                                            .greaterThanUpdatedAt(new Date(1559758610320L))
                                                                            .equalToName("2225312b-3db0-4571-8db0-bc3a87a37f66")
                                                                            .notEqualToName("701fe64b-316f-4a05-8501-2ae9bed48533")
                                                                            .inNames(Arrays.asList("60fd9ca8-2e6b-479b-854b-aa9c2996a820",
                                                                                                   "8e28cd8c-1b98-4fe8-ac74-83281ecef375",
                                                                                                   "658cd5cb-2fa3-4442-ab0d-93f03f26cdbb"))
                                                                            .notInNames(Arrays.asList("589e103e-a58c-4f74-bcbd-2a55bb9f84a0",
                                                                                                      "8bc632a1-0a65-41f2-a970-097d0541f962",
                                                                                                      "4eace4cb-25e4-4117-8b85-8b482a2a5ce7"))
                                                                            .equalToDescription("4a7a643b-6d23-4455-8eb0-eb93a3d6cbde")
                                                                            .notEqualToDescription("6b6ddf93-050a-4f74-9924-6fcbb4f521aa")
                                                                            .inDescriptions(Arrays.asList("ab6607f9-f2d5-48d2-a575-e548d6c3341e",
                                                                                                          "42dec7e2-6ece-472b-8055-a9e6fea889e6",
                                                                                                          "2f56e9c4-0c13-4fde-9912-c9ca8cb00937",
                                                                                                          "750ea580-9572-4888-9b90-83398e0680b5",
                                                                                                          "60fe3ddc-9821-4aab-874f-3d479d711daa",
                                                                                                          "3e8ae4a0-9127-4fe3-9fe4-3ab818f0b391",
                                                                                                          "9903a5d1-3a87-4003-9d6e-8d2aecabbcd1",
                                                                                                          "08baa680-8049-481d-a85f-eb2a6ccabffd",
                                                                                                          "a6828481-cc3a-4c17-813f-fec5f631b3e8"))
                                                                            .notInDescriptions(Arrays.asList("bbe01ad1-412f-4e3d-acd4-a81e6ceef65e",
                                                                                                             "87927a2a-2163-460e-b5a4-69c4d1bf763b",
                                                                                                             "6eb7294c-0947-462a-a186-d36ed68c98f8",
                                                                                                             "79b7b1a0-9c36-48b0-b518-10cd1a6d4060"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1559758609797L),
                                                                                                        new Date(1559758606207L),
                                                                                                        new Date(1559758613859L),
                                                                                                        new Date(1559758613293L),
                                                                                                        new Date(1559758611421L),
                                                                                                        new Date(1559758607003L),
                                                                                                        new Date(1559758606949L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1559758610401L),
                                                                                                           new Date(1559758609589L),
                                                                                                           new Date(1559758610723L)))
                                                                            .lessThanCreatedAt(new Date(1559758611972L))
                                                                            .greaterThanCreatedAt(new Date(1559758614301L))
                                                                            .equalToDatafileUrl("a7d17f9e-30aa-4903-a8eb-f396237cfc29")
                                                                            .notEqualToDatafileUrl("c828a3fc-37b0-4e77-8470-563fa9751f4b")
                                                                            .inDatafileUrls(Arrays.asList("586dfae1-cb72-41e6-8c08-9172ce82da38",
                                                                                                          "bb0eebd5-23bc-44d1-9f58-a6621fee9496",
                                                                                                          "0f1fe0c2-7efa-432a-866e-80bbd80bf778",
                                                                                                          "700c7ae3-2e6b-44e4-92b5-c1d457d67ba2",
                                                                                                          "7ee4cd44-34d8-4b82-8c7b-a550a4234d48"))
                                                                            .notInDatafileUrls(Arrays.asList("451abe4f-962e-43dc-88fb-449e72625c11",
                                                                                                             "8e40464b-5fb4-4b64-83bf-dfd760eed98b",
                                                                                                             "57cff5b7-a60c-4e17-b432-ef383b4ddd6b",
                                                                                                             "931b7295-0f9e-4f95-9142-cf62b0f6cc96",
                                                                                                             "1e92315c-2832-403b-a986-87e0f5853587",
                                                                                                             "6e07c3c3-bd11-4d6d-b06b-960480e4f4b5",
                                                                                                             "0a7c8e55-7ece-4159-bbea-a4d534cf8d25"))
                                                                            .equalToDatafileSize(Long.valueOf(-49))
                                                                            .notEqualToDatafileSize(Long.valueOf(-54))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(-22)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(110)))
                                                                            .equalToDatafileChecksum("46acb89d-c3d6-47cd-8ece-3280f6ceb1a7")
                                                                            .notEqualToDatafileChecksum("65ebd74f-af4b-457f-a3ec-063909f28b37")
                                                                            .inDatafileChecksums(Arrays.asList("84c3c0b0-8e4d-4c7e-9467-fa168ebed235",
                                                                                                               "437f209b-187a-4566-ac3c-d3c98d50bfb0"))
                                                                            .notInDatafileChecksums(Arrays.asList("e0c0ccb2-bcd6-4518-96cb-3a399cc1213b",
                                                                                                                  "ae093e33-3e77-406a-93a7-97871a9e4918"))
                                                                            .equalToId("502834ba-a2b0-465c-bde0-5dc1764315cd")
                                                                            .notEqualToId("20e3fbe0-e666-443e-9561-0c21a6036823")
                                                                            .inIds(Arrays.asList("ad18c6a8-d8fb-425b-8e1c-48746ca0f33e",
                                                                                                 "02b32a55-14d4-4a6f-ad1a-8efcab621d2b",
                                                                                                 "a8664ddc-095b-47b5-80bc-ccc20b1a75da",
                                                                                                 "0e9a2e91-979d-4095-9e54-f0576392dcd5"))
                                                                            .notInIds(Arrays.asList("b5a69635-846e-43ff-8787-136ebea2322d",
                                                                                                    "daf2a9ed-ee91-4978-b7f6-250e029e70a3",
                                                                                                    "99233f6c-2c67-453f-814b-62721b713820",
                                                                                                    "a58a7679-ea7a-4647-9677-849e81ea8bbe",
                                                                                                    "a2b664e8-d1ee-4883-a7f2-0801d2fc8c5e",
                                                                                                    "54e05563-c3ce-48f8-b8a0-e50957e6dd00"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559758610808L), new Date(1559758608432L), new Date(1559758609454L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559758605737L), new Date(1559758610478L), new Date(1559758614911L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559758608466L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559758610320L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("2225312b-3db0-4571-8db0-bc3a87a37f66",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("701fe64b-316f-4a05-8501-2ae9bed48533",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("60fd9ca8-2e6b-479b-854b-aa9c2996a820", "8e28cd8c-1b98-4fe8-ac74-83281ecef375",
                                       "658cd5cb-2fa3-4442-ab0d-93f03f26cdbb"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("589e103e-a58c-4f74-bcbd-2a55bb9f84a0", "8bc632a1-0a65-41f2-a970-097d0541f962",
                                       "4eace4cb-25e4-4117-8b85-8b482a2a5ce7"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("4a7a643b-6d23-4455-8eb0-eb93a3d6cbde",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("6b6ddf93-050a-4f74-9924-6fcbb4f521aa",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("ab6607f9-f2d5-48d2-a575-e548d6c3341e", "42dec7e2-6ece-472b-8055-a9e6fea889e6",
                                       "2f56e9c4-0c13-4fde-9912-c9ca8cb00937", "750ea580-9572-4888-9b90-83398e0680b5",
                                       "60fe3ddc-9821-4aab-874f-3d479d711daa", "3e8ae4a0-9127-4fe3-9fe4-3ab818f0b391",
                                       "9903a5d1-3a87-4003-9d6e-8d2aecabbcd1", "08baa680-8049-481d-a85f-eb2a6ccabffd",
                                       "a6828481-cc3a-4c17-813f-fec5f631b3e8"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("bbe01ad1-412f-4e3d-acd4-a81e6ceef65e", "87927a2a-2163-460e-b5a4-69c4d1bf763b",
                                       "6eb7294c-0947-462a-a186-d36ed68c98f8", "79b7b1a0-9c36-48b0-b518-10cd1a6d4060"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559758609797L), new Date(1559758606207L), new Date(1559758613859L),
                                       new Date(1559758613293L), new Date(1559758611421L), new Date(1559758607003L),
                                       new Date(1559758606949L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559758610401L), new Date(1559758609589L), new Date(1559758610723L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559758611972L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559758614301L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("a7d17f9e-30aa-4903-a8eb-f396237cfc29",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("c828a3fc-37b0-4e77-8470-563fa9751f4b",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("586dfae1-cb72-41e6-8c08-9172ce82da38", "bb0eebd5-23bc-44d1-9f58-a6621fee9496",
                                       "0f1fe0c2-7efa-432a-866e-80bbd80bf778", "700c7ae3-2e6b-44e4-92b5-c1d457d67ba2",
                                       "7ee4cd44-34d8-4b82-8c7b-a550a4234d48"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("451abe4f-962e-43dc-88fb-449e72625c11", "8e40464b-5fb4-4b64-83bf-dfd760eed98b",
                                       "57cff5b7-a60c-4e17-b432-ef383b4ddd6b", "931b7295-0f9e-4f95-9142-cf62b0f6cc96",
                                       "1e92315c-2832-403b-a986-87e0f5853587", "6e07c3c3-bd11-4d6d-b06b-960480e4f4b5",
                                       "0a7c8e55-7ece-4159-bbea-a4d534cf8d25"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-49),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-54),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-22)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(110)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("46acb89d-c3d6-47cd-8ece-3280f6ceb1a7",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("65ebd74f-af4b-457f-a3ec-063909f28b37",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("84c3c0b0-8e4d-4c7e-9467-fa168ebed235", "437f209b-187a-4566-ac3c-d3c98d50bfb0"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("e0c0ccb2-bcd6-4518-96cb-3a399cc1213b", "ae093e33-3e77-406a-93a7-97871a9e4918"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("502834ba-a2b0-465c-bde0-5dc1764315cd",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("20e3fbe0-e666-443e-9561-0c21a6036823",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("ad18c6a8-d8fb-425b-8e1c-48746ca0f33e", "02b32a55-14d4-4a6f-ad1a-8efcab621d2b",
                                       "a8664ddc-095b-47b5-80bc-ccc20b1a75da", "0e9a2e91-979d-4095-9e54-f0576392dcd5"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("b5a69635-846e-43ff-8787-136ebea2322d", "daf2a9ed-ee91-4978-b7f6-250e029e70a3",
                                       "99233f6c-2c67-453f-814b-62721b713820", "a58a7679-ea7a-4647-9677-849e81ea8bbe",
                                       "a2b664e8-d1ee-4883-a7f2-0801d2fc8c5e", "54e05563-c3ce-48f8-b8a0-e50957e6dd00"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-108),
                                                                                              Long.valueOf(75),
                                                                                              Order.getDefault(),
                                                                                              "f04cf74b-66d6-4976-bee7-8a310f731c56",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-108),
                                                                                              Long.valueOf(75),
                                                                                              Order.getDefault(),
                                                                                              "f04cf74b-66d6-4976-bee7-8a310f731c56",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(116),
                                                                                              Long.valueOf(22),
                                                                                              Order.getDefault(),
                                                                                              "d4e9e3d6-3f38-425f-97c5-60d7e77a3c0d",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(116),
                                                                                              Long.valueOf(22),
                                                                                              Order.getDefault(),
                                                                                              "d4e9e3d6-3f38-425f-97c5-60d7e77a3c0d",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(113),
                                                                                              Long.valueOf(-63),
                                                                                              Order.getDefault(),
                                                                                              "9f9c5290-6a0a-4512-83f4-8ead5563609e",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
