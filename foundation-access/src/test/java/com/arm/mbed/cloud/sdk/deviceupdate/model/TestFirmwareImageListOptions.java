// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-43),
                                                                                              Long.valueOf(76),
                                                                                              Order.getDefault(),
                                                                                              "9c4c9058-8168-4fb9-b0f9-d4a442497d91",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1559560668492L),
                                                                                                        new Date(1559560675511L),
                                                                                                        new Date(1559560669714L),
                                                                                                        new Date(1559560672596L),
                                                                                                        new Date(1559560670936L),
                                                                                                        new Date(1559560675676L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1559560670925L),
                                                                                                           new Date(1559560674110L),
                                                                                                           new Date(1559560667569L),
                                                                                                           new Date(1559560672073L),
                                                                                                           new Date(1559560666925L),
                                                                                                           new Date(1559560669118L),
                                                                                                           new Date(1559560675661L),
                                                                                                           new Date(1559560674426L),
                                                                                                           new Date(1559560670168L)))
                                                                            .lessThanUpdatedAt(new Date(1559560666313L))
                                                                            .greaterThanUpdatedAt(new Date(1559560668128L))
                                                                            .equalToName("b1be8b34-c6b4-4ead-aeef-d41e08b21fcc")
                                                                            .notEqualToName("38609079-8dd8-43be-9c04-9f531aa4b4c3")
                                                                            .inNames(Arrays.asList("79abdc35-1f0b-4991-a0a0-c3dc4325d786",
                                                                                                   "6f3f2223-0d4a-480f-b5a0-576b775d2e48",
                                                                                                   "ec632ca0-73f6-4180-8171-139d5483ceac",
                                                                                                   "74cf723d-bdf7-40e6-b65a-20838f3be314",
                                                                                                   "961e6611-3684-4697-9de3-8e26b9485d78"))
                                                                            .notInNames(Arrays.asList("135fffb7-6e74-4ae1-ba3f-b9985b4a664c",
                                                                                                      "b6677428-f2a0-401d-b594-7d0df643a876",
                                                                                                      "abdf8772-f110-461a-8a35-b3116cb47005",
                                                                                                      "d2e87b94-a2ed-4c22-8bd0-79e6dba53304",
                                                                                                      "1b137f60-2512-472d-837a-6e018425e50c",
                                                                                                      "33c7285b-f6df-4b42-b65f-28b990905e97",
                                                                                                      "9ffba5b1-6f32-46f9-9e3f-82017b1aeed1"))
                                                                            .equalToDescription("24ff139a-23db-4969-8334-bac339b47dd5")
                                                                            .notEqualToDescription("3787a9f0-6e32-476b-b221-0bc47dd8c468")
                                                                            .inDescriptions(Arrays.asList("575ef711-c498-4748-9af1-7c7798793bd1"))
                                                                            .notInDescriptions(Arrays.asList("b96f529c-f199-48fb-bf8e-141137bafe54"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1559560675388L),
                                                                                                        new Date(1559560670430L),
                                                                                                        new Date(1559560670073L),
                                                                                                        new Date(1559560671759L),
                                                                                                        new Date(1559560674533L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1559560671728L)))
                                                                            .lessThanCreatedAt(new Date(1559560671239L))
                                                                            .greaterThanCreatedAt(new Date(1559560670815L))
                                                                            .equalToDatafileUrl("2743aa94-7aa9-414e-a7d7-5a54b738bb95")
                                                                            .notEqualToDatafileUrl("86d8198c-93a6-4a76-a23e-0f9f367c73bf")
                                                                            .inDatafileUrls(Arrays.asList("3bf3d8ee-a716-43b1-8b19-03e7829198a2",
                                                                                                          "b586c004-5920-4440-9298-c0844461e72a"))
                                                                            .notInDatafileUrls(Arrays.asList("1c460f11-5417-4133-8983-b1a506e4a52b",
                                                                                                             "5582d255-1fda-401d-aad9-ea81c47f926e",
                                                                                                             "5f3431f4-de71-4b82-b484-e6bfcd1378dc",
                                                                                                             "e4638973-f7cf-47be-ab5c-e9c4d2a4e4d8",
                                                                                                             "d1b147f0-4f62-4926-940b-9577f5d287d2",
                                                                                                             "5597869b-cbbf-4a08-b7c6-d395aa00772d",
                                                                                                             "ba8a4df8-df0d-4d3f-9221-5a0724f0880a"))
                                                                            .equalToDatafileSize(Long.valueOf(38))
                                                                            .notEqualToDatafileSize(Long.valueOf(-15))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(44),
                                                                                                           Long.valueOf(-63),
                                                                                                           Long.valueOf(35)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(-83),
                                                                                                              Long.valueOf(68),
                                                                                                              Long.valueOf(-81),
                                                                                                              Long.valueOf(-39),
                                                                                                              Long.valueOf(-63),
                                                                                                              Long.valueOf(122),
                                                                                                              Long.valueOf(-76),
                                                                                                              Long.valueOf(-56)))
                                                                            .equalToDatafileChecksum("1d7ab51e-7d97-4b8d-abcd-db139ec2c483")
                                                                            .notEqualToDatafileChecksum("e4aa73ed-569c-4bce-b6d2-65fe647333e4")
                                                                            .inDatafileChecksums(Arrays.asList("9dde9473-0445-4896-a86e-50db539ddba8"))
                                                                            .notInDatafileChecksums(Arrays.asList("f6e1595b-c6c5-4fca-95f1-589ec46d81d0"))
                                                                            .equalToId("9059f4ce-de3c-4f15-b08d-14c960e59d26")
                                                                            .notEqualToId("4d4ebd90-4558-43a9-a33d-d3499655566c")
                                                                            .inIds(Arrays.asList("4d6780b1-d064-4826-bc2f-c019ea58d3c8"))
                                                                            .notInIds(Arrays.asList("7e9371cc-a4e5-47e0-91b1-4e43007ee0c8",
                                                                                                    "53b63c76-1aaa-4cb9-adf7-f97e077384f6",
                                                                                                    "ebe72e66-4b0f-4c1d-b2d9-89c48d06b1d8",
                                                                                                    "64df7634-4196-4300-8088-d08f85629186",
                                                                                                    "87286b8a-09d7-4153-8af1-96519bb3a2a0",
                                                                                                    "fc0799d0-5029-48c8-8be9-69e0e2a65a59",
                                                                                                    "f8538ba9-9bec-458d-851f-e5c0d6ba7167",
                                                                                                    "c902b536-be74-4e31-840a-2289632d95a3"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559560668492L), new Date(1559560675511L), new Date(1559560669714L),
                                       new Date(1559560672596L), new Date(1559560670936L), new Date(1559560675676L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559560670925L), new Date(1559560674110L), new Date(1559560667569L),
                                       new Date(1559560672073L), new Date(1559560666925L), new Date(1559560669118L),
                                       new Date(1559560675661L), new Date(1559560674426L), new Date(1559560670168L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559560666313L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559560668128L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("b1be8b34-c6b4-4ead-aeef-d41e08b21fcc",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("38609079-8dd8-43be-9c04-9f531aa4b4c3",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("79abdc35-1f0b-4991-a0a0-c3dc4325d786", "6f3f2223-0d4a-480f-b5a0-576b775d2e48",
                                       "ec632ca0-73f6-4180-8171-139d5483ceac", "74cf723d-bdf7-40e6-b65a-20838f3be314",
                                       "961e6611-3684-4697-9de3-8e26b9485d78"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("135fffb7-6e74-4ae1-ba3f-b9985b4a664c", "b6677428-f2a0-401d-b594-7d0df643a876",
                                       "abdf8772-f110-461a-8a35-b3116cb47005", "d2e87b94-a2ed-4c22-8bd0-79e6dba53304",
                                       "1b137f60-2512-472d-837a-6e018425e50c", "33c7285b-f6df-4b42-b65f-28b990905e97",
                                       "9ffba5b1-6f32-46f9-9e3f-82017b1aeed1"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("24ff139a-23db-4969-8334-bac339b47dd5",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("3787a9f0-6e32-476b-b221-0bc47dd8c468",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("575ef711-c498-4748-9af1-7c7798793bd1"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("b96f529c-f199-48fb-bf8e-141137bafe54"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559560675388L), new Date(1559560670430L), new Date(1559560670073L),
                                       new Date(1559560671759L), new Date(1559560674533L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559560671728L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559560671239L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559560670815L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("2743aa94-7aa9-414e-a7d7-5a54b738bb95",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("86d8198c-93a6-4a76-a23e-0f9f367c73bf",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("3bf3d8ee-a716-43b1-8b19-03e7829198a2", "b586c004-5920-4440-9298-c0844461e72a"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("1c460f11-5417-4133-8983-b1a506e4a52b", "5582d255-1fda-401d-aad9-ea81c47f926e",
                                       "5f3431f4-de71-4b82-b484-e6bfcd1378dc", "e4638973-f7cf-47be-ab5c-e9c4d2a4e4d8",
                                       "d1b147f0-4f62-4926-940b-9577f5d287d2", "5597869b-cbbf-4a08-b7c6-d395aa00772d",
                                       "ba8a4df8-df0d-4d3f-9221-5a0724f0880a"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(38),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-15),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(44), Long.valueOf(-63), Long.valueOf(35)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-83), Long.valueOf(68), Long.valueOf(-81), Long.valueOf(-39),
                                       Long.valueOf(-63), Long.valueOf(122), Long.valueOf(-76), Long.valueOf(-56)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("1d7ab51e-7d97-4b8d-abcd-db139ec2c483",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("e4aa73ed-569c-4bce-b6d2-65fe647333e4",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("9dde9473-0445-4896-a86e-50db539ddba8"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("f6e1595b-c6c5-4fca-95f1-589ec46d81d0"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("9059f4ce-de3c-4f15-b08d-14c960e59d26",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("4d4ebd90-4558-43a9-a33d-d3499655566c",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("4d6780b1-d064-4826-bc2f-c019ea58d3c8"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("7e9371cc-a4e5-47e0-91b1-4e43007ee0c8", "53b63c76-1aaa-4cb9-adf7-f97e077384f6",
                                       "ebe72e66-4b0f-4c1d-b2d9-89c48d06b1d8", "64df7634-4196-4300-8088-d08f85629186",
                                       "87286b8a-09d7-4153-8af1-96519bb3a2a0", "fc0799d0-5029-48c8-8be9-69e0e2a65a59",
                                       "f8538ba9-9bec-458d-851f-e5c0d6ba7167", "c902b536-be74-4e31-840a-2289632d95a3"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(19),
                                                                                              Long.valueOf(42),
                                                                                              Order.getDefault(),
                                                                                              "441bec18-b3d6-4211-9c99-3a8affe0f305",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(19),
                                                                                              Long.valueOf(42),
                                                                                              Order.getDefault(),
                                                                                              "441bec18-b3d6-4211-9c99-3a8affe0f305",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(26),
                                                                                              Long.valueOf(72),
                                                                                              Order.getDefault(),
                                                                                              "04f93cd5-163b-4e46-8cc7-220e7b58daa9",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(26),
                                                                                              Long.valueOf(72),
                                                                                              Order.getDefault(),
                                                                                              "04f93cd5-163b-4e46-8cc7-220e7b58daa9",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(-44),
                                                                                              Long.valueOf(24),
                                                                                              Order.getDefault(),
                                                                                              "a083719d-434f-4986-9e60-a6d860e3d7be",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
