// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-9),
                                                                                              Long.valueOf(117),
                                                                                              Order.getDefault(),
                                                                                              "7a02101f-e426-490e-acde-01dbdf034caa",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1559833685330L),
                                                                                                        new Date(1559833687237L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1559833683646L),
                                                                                                           new Date(1559833680482L),
                                                                                                           new Date(1559833687815L),
                                                                                                           new Date(1559833681740L)))
                                                                            .lessThanUpdatedAt(new Date(1559833682317L))
                                                                            .greaterThanUpdatedAt(new Date(1559833681328L))
                                                                            .equalToName("91628e6a-43ed-4b14-92d3-a74bf8d7a7fd")
                                                                            .notEqualToName("c4185700-3023-4e44-b68c-e5865c145714")
                                                                            .inNames(Arrays.asList("d253b34a-b303-494d-9677-b68fd4ae5f97",
                                                                                                   "40a1b2c9-ee16-4304-8534-e43c30b62dcb",
                                                                                                   "6e43c7ab-392e-4d3c-9e08-afbd8d2045ae",
                                                                                                   "e43e1056-e9db-4e5b-820f-66bc94b9c4c3",
                                                                                                   "59d4a3f1-91e3-4a28-8447-82a07376dfb2",
                                                                                                   "1e8847d3-8178-42bc-a8b4-386378435160",
                                                                                                   "b70da510-b33c-41cb-8cd3-b9b3f835aea6",
                                                                                                   "abde65fb-2534-4de7-83f4-e3b872fe814d",
                                                                                                   "39895b2e-3d90-4a96-a966-a11eb6681faf"))
                                                                            .notInNames(Arrays.asList("6f166f0c-1265-4eae-a3f5-dad193dd1683",
                                                                                                      "39e76ed8-84ef-4ce9-9ea9-851b54acc44f",
                                                                                                      "0e1ba9b7-8b6b-4459-9e1a-6174e7d357a6",
                                                                                                      "112f4b58-7896-4bee-8aa2-39dabaa7e412",
                                                                                                      "912d763a-cdb2-49f1-a88d-211826c8a476",
                                                                                                      "db06ec52-689f-46d7-a9a3-e570be070efc",
                                                                                                      "3c93d5aa-6656-45ea-b897-1627261be4c3",
                                                                                                      "4f935c31-6ca5-46a9-9764-51ce11582a3a"))
                                                                            .equalToDescription("b9f54862-acc7-4e48-8936-fba5145d1c92")
                                                                            .notEqualToDescription("0c44f462-8977-4134-8845-3c62bd60904e")
                                                                            .inDescriptions(Arrays.asList("6e6c0a80-aea2-4e56-aa03-9f8c4c4433b9",
                                                                                                          "8bacf1b4-8dae-4d54-a36a-27d0f4038a7a"))
                                                                            .notInDescriptions(Arrays.asList("1df4d120-66d4-494b-ae1b-0c6958ba7d79"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1559833679444L),
                                                                                                        new Date(1559833685163L),
                                                                                                        new Date(1559833686802L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1559833684945L),
                                                                                                           new Date(1559833687382L),
                                                                                                           new Date(1559833686377L),
                                                                                                           new Date(1559833685320L),
                                                                                                           new Date(1559833679390L),
                                                                                                           new Date(1559833681378L),
                                                                                                           new Date(1559833688253L)))
                                                                            .lessThanCreatedAt(new Date(1559833678996L))
                                                                            .greaterThanCreatedAt(new Date(1559833687365L))
                                                                            .equalToDatafileUrl("e87a06b0-8175-4b3c-accc-be3dba4316f9")
                                                                            .notEqualToDatafileUrl("ac135ba1-a4e9-4074-90e0-d8bc884b5827")
                                                                            .inDatafileUrls(Arrays.asList("746bef53-ef51-4bd2-97af-f8659f39a9d0",
                                                                                                          "3069422a-56f1-4263-842f-03b27f11c6f6",
                                                                                                          "2ac33c77-f584-496a-83d0-fede006f5777",
                                                                                                          "03fc62dd-b2df-4741-aff2-0ccc391a547f",
                                                                                                          "a375aba6-4a7c-4932-9f9e-e29f468529e1",
                                                                                                          "ae4d8150-be72-4e6d-9b97-d135e89fab2f",
                                                                                                          "c91e7fb2-00f5-4ae8-bbb1-7afae8d29cdb"))
                                                                            .notInDatafileUrls(Arrays.asList("9788bf8e-4a90-4d2a-82ee-4e03edcfd144",
                                                                                                             "e97d2ec5-e13a-4588-9517-43c8c7c4aebc",
                                                                                                             "3271998e-c84f-4b1d-a44e-6485f0931011",
                                                                                                             "d3f3c69f-28cf-40f2-9204-37888c7cc05a",
                                                                                                             "3f711850-dbb1-4e64-b693-93cae9a1d731",
                                                                                                             "92ada145-bb5b-4ad3-b563-4bffc8ba235c",
                                                                                                             "6c1222a1-1ff0-4eeb-91a9-0da10601ab7e",
                                                                                                             "07bec897-d106-48a3-af83-5f96ef22a46d"))
                                                                            .equalToDatafileSize(Long.valueOf(83))
                                                                            .notEqualToDatafileSize(Long.valueOf(104))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(92),
                                                                                                           Long.valueOf(-104),
                                                                                                           Long.valueOf(-103),
                                                                                                           Long.valueOf(-98),
                                                                                                           Long.valueOf(13)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(-78),
                                                                                                              Long.valueOf(77),
                                                                                                              Long.valueOf(87),
                                                                                                              Long.valueOf(73),
                                                                                                              Long.valueOf(10),
                                                                                                              Long.valueOf(-28)))
                                                                            .equalToDatafileChecksum("b5db550e-8cc9-46bb-ac14-de6b4ff19d73")
                                                                            .notEqualToDatafileChecksum("4b74d667-5af0-437f-8152-9b6d6dde9908")
                                                                            .inDatafileChecksums(Arrays.asList("9afd278b-d576-4cad-958e-a6f6f4b85c53",
                                                                                                               "4bfb0825-9c2b-4614-879e-a4c9ed37f349"))
                                                                            .notInDatafileChecksums(Arrays.asList("2f03c89d-b7b9-4ee9-b789-8c83cfcc6423",
                                                                                                                  "32f436bd-c655-41cf-b3f1-6d1ea59329cf",
                                                                                                                  "7ebc9dd6-637d-43fe-8e97-304105d0419b",
                                                                                                                  "b760ad3c-4f93-4e16-b7d7-6f8c994ac3cc"))
                                                                            .equalToId("3051fb06-66b9-421f-b053-2a2c34879c86")
                                                                            .notEqualToId("9b88637e-1466-4883-8617-4901efd711bd")
                                                                            .inIds(Arrays.asList("bc3dfb84-72d8-4628-9443-de6d457ab1d0",
                                                                                                 "9c7c66c2-4b13-4444-8bd8-85a79bb4a355",
                                                                                                 "d78d67bc-ab9e-44d6-bd36-c26907f90bf7",
                                                                                                 "da82c9bf-faec-42f6-91cd-90a37a43e492"))
                                                                            .notInIds(Arrays.asList("632e6f7b-9be0-480d-9768-8af53d8ec474",
                                                                                                    "4c1e8785-4a43-4a46-8e39-6bb044171c00",
                                                                                                    "688cb1e3-88f3-4a17-bfa1-8a2b8a2cd944",
                                                                                                    "8c319020-9e5f-45c5-8cd7-78e0088936ea",
                                                                                                    "903b3232-c44a-4d2b-ae00-851346dc2574"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559833685330L), new Date(1559833687237L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559833683646L), new Date(1559833680482L), new Date(1559833687815L),
                                       new Date(1559833681740L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559833682317L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559833681328L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("91628e6a-43ed-4b14-92d3-a74bf8d7a7fd",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("c4185700-3023-4e44-b68c-e5865c145714",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("d253b34a-b303-494d-9677-b68fd4ae5f97", "40a1b2c9-ee16-4304-8534-e43c30b62dcb",
                                       "6e43c7ab-392e-4d3c-9e08-afbd8d2045ae", "e43e1056-e9db-4e5b-820f-66bc94b9c4c3",
                                       "59d4a3f1-91e3-4a28-8447-82a07376dfb2", "1e8847d3-8178-42bc-a8b4-386378435160",
                                       "b70da510-b33c-41cb-8cd3-b9b3f835aea6", "abde65fb-2534-4de7-83f4-e3b872fe814d",
                                       "39895b2e-3d90-4a96-a966-a11eb6681faf"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("6f166f0c-1265-4eae-a3f5-dad193dd1683", "39e76ed8-84ef-4ce9-9ea9-851b54acc44f",
                                       "0e1ba9b7-8b6b-4459-9e1a-6174e7d357a6", "112f4b58-7896-4bee-8aa2-39dabaa7e412",
                                       "912d763a-cdb2-49f1-a88d-211826c8a476", "db06ec52-689f-46d7-a9a3-e570be070efc",
                                       "3c93d5aa-6656-45ea-b897-1627261be4c3", "4f935c31-6ca5-46a9-9764-51ce11582a3a"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("b9f54862-acc7-4e48-8936-fba5145d1c92",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("0c44f462-8977-4134-8845-3c62bd60904e",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("6e6c0a80-aea2-4e56-aa03-9f8c4c4433b9", "8bacf1b4-8dae-4d54-a36a-27d0f4038a7a"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("1df4d120-66d4-494b-ae1b-0c6958ba7d79"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559833679444L), new Date(1559833685163L), new Date(1559833686802L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559833684945L), new Date(1559833687382L), new Date(1559833686377L),
                                       new Date(1559833685320L), new Date(1559833679390L), new Date(1559833681378L),
                                       new Date(1559833688253L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559833678996L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559833687365L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("e87a06b0-8175-4b3c-accc-be3dba4316f9",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("ac135ba1-a4e9-4074-90e0-d8bc884b5827",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("746bef53-ef51-4bd2-97af-f8659f39a9d0", "3069422a-56f1-4263-842f-03b27f11c6f6",
                                       "2ac33c77-f584-496a-83d0-fede006f5777", "03fc62dd-b2df-4741-aff2-0ccc391a547f",
                                       "a375aba6-4a7c-4932-9f9e-e29f468529e1", "ae4d8150-be72-4e6d-9b97-d135e89fab2f",
                                       "c91e7fb2-00f5-4ae8-bbb1-7afae8d29cdb"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("9788bf8e-4a90-4d2a-82ee-4e03edcfd144", "e97d2ec5-e13a-4588-9517-43c8c7c4aebc",
                                       "3271998e-c84f-4b1d-a44e-6485f0931011", "d3f3c69f-28cf-40f2-9204-37888c7cc05a",
                                       "3f711850-dbb1-4e64-b693-93cae9a1d731", "92ada145-bb5b-4ad3-b563-4bffc8ba235c",
                                       "6c1222a1-1ff0-4eeb-91a9-0da10601ab7e", "07bec897-d106-48a3-af83-5f96ef22a46d"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(83),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(104),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(92), Long.valueOf(-104), Long.valueOf(-103), Long.valueOf(-98),
                                       Long.valueOf(13)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-78), Long.valueOf(77), Long.valueOf(87), Long.valueOf(73),
                                       Long.valueOf(10), Long.valueOf(-28)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("b5db550e-8cc9-46bb-ac14-de6b4ff19d73",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("4b74d667-5af0-437f-8152-9b6d6dde9908",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("9afd278b-d576-4cad-958e-a6f6f4b85c53", "4bfb0825-9c2b-4614-879e-a4c9ed37f349"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("2f03c89d-b7b9-4ee9-b789-8c83cfcc6423", "32f436bd-c655-41cf-b3f1-6d1ea59329cf",
                                       "7ebc9dd6-637d-43fe-8e97-304105d0419b", "b760ad3c-4f93-4e16-b7d7-6f8c994ac3cc"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("3051fb06-66b9-421f-b053-2a2c34879c86",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("9b88637e-1466-4883-8617-4901efd711bd",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("bc3dfb84-72d8-4628-9443-de6d457ab1d0", "9c7c66c2-4b13-4444-8bd8-85a79bb4a355",
                                       "d78d67bc-ab9e-44d6-bd36-c26907f90bf7", "da82c9bf-faec-42f6-91cd-90a37a43e492"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("632e6f7b-9be0-480d-9768-8af53d8ec474", "4c1e8785-4a43-4a46-8e39-6bb044171c00",
                                       "688cb1e3-88f3-4a17-bfa1-8a2b8a2cd944", "8c319020-9e5f-45c5-8cd7-78e0088936ea",
                                       "903b3232-c44a-4d2b-ae00-851346dc2574"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(104),
                                                                                              Long.valueOf(-42),
                                                                                              Order.getDefault(),
                                                                                              "65dbf179-b8a4-4482-b7dd-f77295de4ce4",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(104),
                                                                                              Long.valueOf(-42),
                                                                                              Order.getDefault(),
                                                                                              "65dbf179-b8a4-4482-b7dd-f77295de4ce4",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-122),
                                                                                              Long.valueOf(53),
                                                                                              Order.getDefault(),
                                                                                              "3eb25126-9939-4b2f-877b-4ec541bab6a7",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-122),
                                                                                              Long.valueOf(53),
                                                                                              Order.getDefault(),
                                                                                              "3eb25126-9939-4b2f-877b-4ec541bab6a7",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(108),
                                                                                              Long.valueOf(-81),
                                                                                              Order.getDefault(),
                                                                                              "3c1455a4-2944-4bbd-bb8d-6b7ec062c464",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
