// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-7),
                                                                                              Long.valueOf(16),
                                                                                              Order.getDefault(),
                                                                                              "23baf4ad-ec4b-4621-bbb7-85348edf0338",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1559655034286L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1559655034330L),
                                                                                                           new Date(1559655030044L),
                                                                                                           new Date(1559655037611L),
                                                                                                           new Date(1559655030526L),
                                                                                                           new Date(1559655034771L),
                                                                                                           new Date(1559655034261L)))
                                                                            .lessThanUpdatedAt(new Date(1559655029816L))
                                                                            .greaterThanUpdatedAt(new Date(1559655030476L))
                                                                            .equalToName("36436e33-8e54-4085-ab8e-382e4d9d726e")
                                                                            .notEqualToName("ef3e96d7-5d3d-4860-b289-77ee0abcc6a3")
                                                                            .inNames(Arrays.asList("0ec5ff53-cf47-499b-8bd9-78c69f4bd871",
                                                                                                   "9af2a5e0-732e-4a25-a9d6-2fc24593bea9",
                                                                                                   "7fec87f2-40bd-4926-9f7c-3672c5f2d545",
                                                                                                   "c3856a03-a0f6-4a69-b333-2d20975d4e4b",
                                                                                                   "0e9fdf2a-b288-48c3-b6f1-b6e33959dc27",
                                                                                                   "0a34c4c2-41f1-4592-8927-7f68e57db2e9"))
                                                                            .notInNames(Arrays.asList("3d3e6d52-02e0-4dac-b483-2b080b56963c",
                                                                                                      "6d660f9f-0802-4be6-bef8-226b78f78d9e"))
                                                                            .equalToDescription("3c84b901-952f-4660-83a8-80ee8a9ef29b")
                                                                            .notEqualToDescription("b30097f7-481f-4412-93bc-68d398788370")
                                                                            .inDescriptions(Arrays.asList("3bfa3cd6-ad0d-4bcf-8ede-98fc07cadf7e",
                                                                                                          "55d4eba4-6150-44a7-b2dc-b2109578c019",
                                                                                                          "ff09e491-2381-4728-aab0-6c943851032f",
                                                                                                          "7ac64d79-be62-44c6-8993-a0a3b71d0e75"))
                                                                            .notInDescriptions(Arrays.asList("791c8e71-2dcd-4843-a10c-251ec148070b",
                                                                                                             "35a64355-3fc5-4200-b855-a133d6124e29",
                                                                                                             "3c80a7cd-0737-451e-82b9-00f6296be1a3",
                                                                                                             "4b3a58e6-468c-42d3-a80b-8923ecffa741"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1559655034160L),
                                                                                                        new Date(1559655035022L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1559655033732L)))
                                                                            .lessThanCreatedAt(new Date(1559655037702L))
                                                                            .greaterThanCreatedAt(new Date(1559655032214L))
                                                                            .equalToDatafileUrl("ad1f24c4-ad36-49bf-af32-9ec30ade4ada")
                                                                            .notEqualToDatafileUrl("2ec8fb9c-8840-4540-a0ab-728371690adb")
                                                                            .inDatafileUrls(Arrays.asList("109e498d-a70a-48cf-82b3-e1780f0f01bb",
                                                                                                          "b171e777-8d09-4758-a8ef-61b822191026",
                                                                                                          "8c80ae36-a6df-4dfe-ae5c-61616bb046a6",
                                                                                                          "fb7eda1b-97c5-42fe-82d4-568b8f7590c7",
                                                                                                          "fe27598f-1e91-48d2-84aa-7a4841acba90",
                                                                                                          "0f8ef1a0-e35c-4e4e-86ba-bb36e9993658",
                                                                                                          "d26d251c-c685-44b1-b266-3fba33fe3824",
                                                                                                          "44adf23c-4b82-495a-9f26-45f5444e4dfa"))
                                                                            .notInDatafileUrls(Arrays.asList("d44e9deb-ab8b-4994-8498-ceb72c259c19"))
                                                                            .equalToDatafileSize(Long.valueOf(30))
                                                                            .notEqualToDatafileSize(Long.valueOf(-35))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(-51),
                                                                                                           Long.valueOf(-127),
                                                                                                           Long.valueOf(87),
                                                                                                           Long.valueOf(99)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(78),
                                                                                                              Long.valueOf(-93),
                                                                                                              Long.valueOf(86)))
                                                                            .equalToDatafileChecksum("b76a1845-fe8b-44f2-9aff-2272b39072d6")
                                                                            .notEqualToDatafileChecksum("64f06cd6-4b5d-4d73-81e4-85dda2c9d631")
                                                                            .inDatafileChecksums(Arrays.asList("9b669f7c-5463-4ee6-9b40-0ba5b60f3d83",
                                                                                                               "f68ea0b1-cce8-4941-b456-17850c76b4ea",
                                                                                                               "88a7ac77-8f3a-4305-9d51-e7938917e59e",
                                                                                                               "479de7f2-7e77-4b6b-80bf-e01962f3f2d5",
                                                                                                               "67dd5319-037f-49e5-9f9d-48a77b4c0a6f",
                                                                                                               "5e625cee-b0f9-47cb-a1cf-6f90d4f6622c",
                                                                                                               "7bf5c483-b2d5-4382-b3f8-65099e781a61",
                                                                                                               "2a92b2b0-b2e4-41a2-90c8-9801a8a96895",
                                                                                                               "c732e14d-9d12-47dd-a6f3-44f0691f34e6"))
                                                                            .notInDatafileChecksums(Arrays.asList("2e9f8f29-d6eb-4785-b1f1-e65af5fd6577",
                                                                                                                  "546e18d0-4785-4429-bd3d-ab45d161ccbe",
                                                                                                                  "bc4f48d6-3d88-4c40-aaed-aefd152a65d1",
                                                                                                                  "46029806-f9a6-4c1a-93bc-cf2a1de76f16",
                                                                                                                  "1f59e591-debd-4957-b1e9-e4c7b9a07413",
                                                                                                                  "efb9b816-c8ee-46a3-880c-a69b669428b3",
                                                                                                                  "65ea5fd0-eac4-446b-b087-59813b611026"))
                                                                            .equalToId("9c37f62a-77f9-4aeb-88f3-cd55d43c5b66")
                                                                            .notEqualToId("62c441d3-ed3f-4ab8-9f8d-01be132e9354")
                                                                            .inIds(Arrays.asList("b587320d-0522-46f6-bad8-06ecf3ba6bae",
                                                                                                 "2d69bd66-0560-4756-8bb7-bcb51a30c470",
                                                                                                 "64cb3038-acdf-411a-81d7-fd4c64c7dd49",
                                                                                                 "4e61aaa5-310d-4bc9-bada-9c534c606a26",
                                                                                                 "a127e0f2-a219-4dce-a0ae-2023ee1e3132",
                                                                                                 "ab1c2d8f-8d02-4dd9-ac33-d926ec0263ed",
                                                                                                 "84fcfb41-22ed-454b-889e-b5acc1390b0e",
                                                                                                 "f1149d42-928f-4ced-a817-9d2ef2440d39"))
                                                                            .notInIds(Arrays.asList("81ad977e-81ae-47df-9d5d-edf5a2f8bc09"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559655034286L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559655034330L), new Date(1559655030044L), new Date(1559655037611L),
                                       new Date(1559655030526L), new Date(1559655034771L), new Date(1559655034261L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559655029816L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559655030476L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("36436e33-8e54-4085-ab8e-382e4d9d726e",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("ef3e96d7-5d3d-4860-b289-77ee0abcc6a3",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("0ec5ff53-cf47-499b-8bd9-78c69f4bd871", "9af2a5e0-732e-4a25-a9d6-2fc24593bea9",
                                       "7fec87f2-40bd-4926-9f7c-3672c5f2d545", "c3856a03-a0f6-4a69-b333-2d20975d4e4b",
                                       "0e9fdf2a-b288-48c3-b6f1-b6e33959dc27", "0a34c4c2-41f1-4592-8927-7f68e57db2e9"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("3d3e6d52-02e0-4dac-b483-2b080b56963c", "6d660f9f-0802-4be6-bef8-226b78f78d9e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("3c84b901-952f-4660-83a8-80ee8a9ef29b",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("b30097f7-481f-4412-93bc-68d398788370",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("3bfa3cd6-ad0d-4bcf-8ede-98fc07cadf7e", "55d4eba4-6150-44a7-b2dc-b2109578c019",
                                       "ff09e491-2381-4728-aab0-6c943851032f", "7ac64d79-be62-44c6-8993-a0a3b71d0e75"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("791c8e71-2dcd-4843-a10c-251ec148070b", "35a64355-3fc5-4200-b855-a133d6124e29",
                                       "3c80a7cd-0737-451e-82b9-00f6296be1a3", "4b3a58e6-468c-42d3-a80b-8923ecffa741"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559655034160L), new Date(1559655035022L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559655033732L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559655037702L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559655032214L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("ad1f24c4-ad36-49bf-af32-9ec30ade4ada",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("2ec8fb9c-8840-4540-a0ab-728371690adb",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("109e498d-a70a-48cf-82b3-e1780f0f01bb", "b171e777-8d09-4758-a8ef-61b822191026",
                                       "8c80ae36-a6df-4dfe-ae5c-61616bb046a6", "fb7eda1b-97c5-42fe-82d4-568b8f7590c7",
                                       "fe27598f-1e91-48d2-84aa-7a4841acba90", "0f8ef1a0-e35c-4e4e-86ba-bb36e9993658",
                                       "d26d251c-c685-44b1-b266-3fba33fe3824", "44adf23c-4b82-495a-9f26-45f5444e4dfa"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("d44e9deb-ab8b-4994-8498-ceb72c259c19"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(30),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-35),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-51), Long.valueOf(-127), Long.valueOf(87), Long.valueOf(99)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(78), Long.valueOf(-93), Long.valueOf(86)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("b76a1845-fe8b-44f2-9aff-2272b39072d6",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("64f06cd6-4b5d-4d73-81e4-85dda2c9d631",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("9b669f7c-5463-4ee6-9b40-0ba5b60f3d83", "f68ea0b1-cce8-4941-b456-17850c76b4ea",
                                       "88a7ac77-8f3a-4305-9d51-e7938917e59e", "479de7f2-7e77-4b6b-80bf-e01962f3f2d5",
                                       "67dd5319-037f-49e5-9f9d-48a77b4c0a6f", "5e625cee-b0f9-47cb-a1cf-6f90d4f6622c",
                                       "7bf5c483-b2d5-4382-b3f8-65099e781a61", "2a92b2b0-b2e4-41a2-90c8-9801a8a96895",
                                       "c732e14d-9d12-47dd-a6f3-44f0691f34e6"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("2e9f8f29-d6eb-4785-b1f1-e65af5fd6577", "546e18d0-4785-4429-bd3d-ab45d161ccbe",
                                       "bc4f48d6-3d88-4c40-aaed-aefd152a65d1", "46029806-f9a6-4c1a-93bc-cf2a1de76f16",
                                       "1f59e591-debd-4957-b1e9-e4c7b9a07413", "efb9b816-c8ee-46a3-880c-a69b669428b3",
                                       "65ea5fd0-eac4-446b-b087-59813b611026"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("9c37f62a-77f9-4aeb-88f3-cd55d43c5b66",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("62c441d3-ed3f-4ab8-9f8d-01be132e9354",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("b587320d-0522-46f6-bad8-06ecf3ba6bae", "2d69bd66-0560-4756-8bb7-bcb51a30c470",
                                       "64cb3038-acdf-411a-81d7-fd4c64c7dd49", "4e61aaa5-310d-4bc9-bada-9c534c606a26",
                                       "a127e0f2-a219-4dce-a0ae-2023ee1e3132", "ab1c2d8f-8d02-4dd9-ac33-d926ec0263ed",
                                       "84fcfb41-22ed-454b-889e-b5acc1390b0e", "f1149d42-928f-4ced-a817-9d2ef2440d39"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("81ad977e-81ae-47df-9d5d-edf5a2f8bc09"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-61),
                                                                                              Long.valueOf(84),
                                                                                              Order.getDefault(),
                                                                                              "b7d4ce52-80f8-47e8-98f8-7737cbc6720f",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-61),
                                                                                              Long.valueOf(84),
                                                                                              Order.getDefault(),
                                                                                              "b7d4ce52-80f8-47e8-98f8-7737cbc6720f",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(88),
                                                                                              Long.valueOf(-76),
                                                                                              Order.getDefault(),
                                                                                              "fbe42374-6eac-491b-be6f-52dbdd233148",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(88),
                                                                                              Long.valueOf(-76),
                                                                                              Order.getDefault(),
                                                                                              "fbe42374-6eac-491b-be6f-52dbdd233148",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(46),
                                                                                              Long.valueOf(-94),
                                                                                              Order.getDefault(),
                                                                                              "c4266961-7881-4163-8119-525932f3e736",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
