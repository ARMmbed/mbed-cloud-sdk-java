// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(43),
                                                                                              Long.valueOf(17),
                                                                                              Order.getDefault(),
                                                                                              "4d222e92-84de-4a5a-8636-3cc2a2409f1c",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1558096046091L),
                                                                                                        new Date(1558096039164L),
                                                                                                        new Date(1558096041610L),
                                                                                                        new Date(1558096047350L),
                                                                                                        new Date(1558096046820L),
                                                                                                        new Date(1558096048349L),
                                                                                                        new Date(1558096043944L),
                                                                                                        new Date(1558096042196L),
                                                                                                        new Date(1558096043621L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1558096039406L)))
                                                                            .lessThanUpdatedAt(new Date(1558096040614L))
                                                                            .greaterThanUpdatedAt(new Date(1558096045928L))
                                                                            .equalToName("5966ca45-db63-4dfe-96e2-2db9a99dd024")
                                                                            .notEqualToName("1d5cd393-c1c1-4f1a-9272-f703fa8e9d5e")
                                                                            .inNames(Arrays.asList("51c0334b-1879-40d9-91fd-c7cbe1f359e6"))
                                                                            .notInNames(Arrays.asList("62d878bb-9baa-4f07-85e8-dfe09cc97076",
                                                                                                      "1dd1e76d-0df3-4b7a-9538-59695a4c5ce5",
                                                                                                      "cf8b02b1-a686-4081-8566-baedf2c85b94",
                                                                                                      "2fdbcec5-37dd-4ec6-9cc9-6bbcba976d9e",
                                                                                                      "02578b33-42ce-4ff5-91de-69b6a0681133"))
                                                                            .equalToDescription("e5239857-43cd-4384-86f5-2ad45a207942")
                                                                            .notEqualToDescription("8e65dbb2-4eab-485b-a306-4ae0d7630bce")
                                                                            .inDescriptions(Arrays.asList("47f34cf1-3ebb-4d6a-a691-b3971714bf1d",
                                                                                                          "b31ee202-7900-4320-8e16-39a6fb005d9b",
                                                                                                          "859bee05-8a4a-4929-b6ab-b9729065fa08",
                                                                                                          "e3d176ae-0f12-429b-be04-b98c1ba4f598",
                                                                                                          "58fb52b1-f1c2-4436-abd7-9f1c479bf27f",
                                                                                                          "f8b52ad6-ef66-49c8-a855-10ffc2faae41",
                                                                                                          "f5bb643b-190a-42ac-9dec-dd0c026d1746",
                                                                                                          "4f84d93a-b442-457a-9397-4997213a4efd",
                                                                                                          "d2dbb004-2913-4bb9-beed-2531be6d2c2c"))
                                                                            .notInDescriptions(Arrays.asList("f8b7623e-2ec5-49cf-9cf8-b25e364b2605",
                                                                                                             "4058edf1-1804-48a3-a765-c0ede00d9ec2"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1558096041123L),
                                                                                                        new Date(1558096040857L),
                                                                                                        new Date(1558096042424L),
                                                                                                        new Date(1558096038970L),
                                                                                                        new Date(1558096041335L),
                                                                                                        new Date(1558096042359L),
                                                                                                        new Date(1558096038736L),
                                                                                                        new Date(1558096046056L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1558096042176L),
                                                                                                           new Date(1558096041388L)))
                                                                            .lessThanCreatedAt(new Date(1558096047015L))
                                                                            .greaterThanCreatedAt(new Date(1558096045668L))
                                                                            .equalToDatafileUrl("2edc20cd-6e1d-4b9b-b947-d672dfd729c2")
                                                                            .notEqualToDatafileUrl("3ec35420-7162-4e54-88a8-e8e3b399d2f5")
                                                                            .inDatafileUrls(Arrays.asList("d08863e7-3145-4714-a7ad-6cb085ec5631",
                                                                                                          "a2fece32-799b-4f00-85b3-e6bd549ace0e",
                                                                                                          "094b1b6c-93bd-412c-9929-a8b9dcd71091",
                                                                                                          "bdfa1305-d219-4a75-86be-4b276bb31b7c",
                                                                                                          "e1dda2db-e788-4517-959d-e607e91743fc",
                                                                                                          "1a292898-8db6-4047-b574-55a0b4c79187",
                                                                                                          "4e5092ef-cca9-4652-923b-b87ad691eef4",
                                                                                                          "1c845ce3-cd31-42de-89a5-3d76ecf2600e"))
                                                                            .notInDatafileUrls(Arrays.asList("3c129c68-5983-4301-8a97-df0d0381de28",
                                                                                                             "5b549911-057b-43be-abfe-06bdd5047ad8",
                                                                                                             "b2b1cce9-7c07-45eb-b619-d1a826f69645",
                                                                                                             "e9a31171-9e00-4390-974d-8597a5d8ed51",
                                                                                                             "d218a788-0ad9-4e1a-add5-b75c424f66e2",
                                                                                                             "17977128-8f08-410d-a962-03dbfc55f5e1"))
                                                                            .equalToDatafileSize(Long.valueOf(35))
                                                                            .notEqualToDatafileSize(Long.valueOf(-45))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(16),
                                                                                                           Long.valueOf(-31),
                                                                                                           Long.valueOf(-107),
                                                                                                           Long.valueOf(20),
                                                                                                           Long.valueOf(-10),
                                                                                                           Long.valueOf(74),
                                                                                                           Long.valueOf(46)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(-92),
                                                                                                              Long.valueOf(88),
                                                                                                              Long.valueOf(10),
                                                                                                              Long.valueOf(-55),
                                                                                                              Long.valueOf(101)))
                                                                            .equalToDatafileChecksum("2ddcb2dd-ac9e-4f9f-a5e4-9dc97780adf3")
                                                                            .notEqualToDatafileChecksum("afe3d861-b8ff-4c8c-98e9-8839a3ee1505")
                                                                            .inDatafileChecksums(Arrays.asList("7e74f158-20d0-4dfa-9820-592b508b16ff",
                                                                                                               "38826635-4735-4603-a0a3-25d6454107e0",
                                                                                                               "d800827b-64b3-432c-b8c0-15d1fcb40790",
                                                                                                               "45042a57-0e8b-48ea-850f-a7934b62d607",
                                                                                                               "81c0827d-a5df-4784-b761-9a2dad461b84",
                                                                                                               "f8c84792-cbaa-4f98-8e1d-8327f4018729",
                                                                                                               "3a050953-92a3-448e-a9ec-5cc80b76d025"))
                                                                            .notInDatafileChecksums(Arrays.asList("0896e85f-3bce-42bc-9aeb-d6aea7b5b0dd",
                                                                                                                  "d966ae37-bf51-4539-9388-cca6ee85cddb",
                                                                                                                  "8a2ea6b3-4ca5-493f-944c-f74a3908f1c0",
                                                                                                                  "89c3dee7-6cc7-4342-bbe4-912addcb7936"))
                                                                            .equalToId("f84e68fd-1116-4f3e-b41d-aeb1fcb49e91")
                                                                            .notEqualToId("20a7b135-3c7e-4043-a1c7-77b8d6a1c7e7")
                                                                            .inIds(Arrays.asList("b101d14d-7401-4ca9-b4a4-44b0c23f8721",
                                                                                                 "0ceb4170-cfcb-44c1-842a-888bd0a943c0"))
                                                                            .notInIds(Arrays.asList("0c6f4c2c-943f-4c51-83e5-97606ec4a220",
                                                                                                    "972cb923-f63e-499e-9e4b-87eda404fe97",
                                                                                                    "1027ffcb-812d-4710-aac3-ce9d35eec024",
                                                                                                    "a488a130-b5bd-40d1-b9ba-5a82835c539c",
                                                                                                    "629e1cc7-9c4b-475f-90b3-3b47cdf829c1",
                                                                                                    "7b55abb0-a82d-402f-911a-720da61c1a16",
                                                                                                    "180c698c-8f41-4de8-853d-a560fb5919b0"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558096046091L), new Date(1558096039164L), new Date(1558096041610L),
                                       new Date(1558096047350L), new Date(1558096046820L), new Date(1558096048349L),
                                       new Date(1558096043944L), new Date(1558096042196L), new Date(1558096043621L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558096039406L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1558096040614L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1558096045928L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("5966ca45-db63-4dfe-96e2-2db9a99dd024",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("1d5cd393-c1c1-4f1a-9272-f703fa8e9d5e",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("51c0334b-1879-40d9-91fd-c7cbe1f359e6"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("62d878bb-9baa-4f07-85e8-dfe09cc97076", "1dd1e76d-0df3-4b7a-9538-59695a4c5ce5",
                                       "cf8b02b1-a686-4081-8566-baedf2c85b94", "2fdbcec5-37dd-4ec6-9cc9-6bbcba976d9e",
                                       "02578b33-42ce-4ff5-91de-69b6a0681133"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("e5239857-43cd-4384-86f5-2ad45a207942",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("8e65dbb2-4eab-485b-a306-4ae0d7630bce",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("47f34cf1-3ebb-4d6a-a691-b3971714bf1d", "b31ee202-7900-4320-8e16-39a6fb005d9b",
                                       "859bee05-8a4a-4929-b6ab-b9729065fa08", "e3d176ae-0f12-429b-be04-b98c1ba4f598",
                                       "58fb52b1-f1c2-4436-abd7-9f1c479bf27f", "f8b52ad6-ef66-49c8-a855-10ffc2faae41",
                                       "f5bb643b-190a-42ac-9dec-dd0c026d1746", "4f84d93a-b442-457a-9397-4997213a4efd",
                                       "d2dbb004-2913-4bb9-beed-2531be6d2c2c"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("f8b7623e-2ec5-49cf-9cf8-b25e364b2605", "4058edf1-1804-48a3-a765-c0ede00d9ec2"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558096041123L), new Date(1558096040857L), new Date(1558096042424L),
                                       new Date(1558096038970L), new Date(1558096041335L), new Date(1558096042359L),
                                       new Date(1558096038736L), new Date(1558096046056L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558096042176L), new Date(1558096041388L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1558096047015L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1558096045668L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("2edc20cd-6e1d-4b9b-b947-d672dfd729c2",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("3ec35420-7162-4e54-88a8-e8e3b399d2f5",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("d08863e7-3145-4714-a7ad-6cb085ec5631", "a2fece32-799b-4f00-85b3-e6bd549ace0e",
                                       "094b1b6c-93bd-412c-9929-a8b9dcd71091", "bdfa1305-d219-4a75-86be-4b276bb31b7c",
                                       "e1dda2db-e788-4517-959d-e607e91743fc", "1a292898-8db6-4047-b574-55a0b4c79187",
                                       "4e5092ef-cca9-4652-923b-b87ad691eef4", "1c845ce3-cd31-42de-89a5-3d76ecf2600e"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("3c129c68-5983-4301-8a97-df0d0381de28", "5b549911-057b-43be-abfe-06bdd5047ad8",
                                       "b2b1cce9-7c07-45eb-b619-d1a826f69645", "e9a31171-9e00-4390-974d-8597a5d8ed51",
                                       "d218a788-0ad9-4e1a-add5-b75c424f66e2", "17977128-8f08-410d-a962-03dbfc55f5e1"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(35),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-45),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(16), Long.valueOf(-31), Long.valueOf(-107), Long.valueOf(20),
                                       Long.valueOf(-10), Long.valueOf(74), Long.valueOf(46)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-92), Long.valueOf(88), Long.valueOf(10), Long.valueOf(-55),
                                       Long.valueOf(101)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("2ddcb2dd-ac9e-4f9f-a5e4-9dc97780adf3",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("afe3d861-b8ff-4c8c-98e9-8839a3ee1505",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("7e74f158-20d0-4dfa-9820-592b508b16ff", "38826635-4735-4603-a0a3-25d6454107e0",
                                       "d800827b-64b3-432c-b8c0-15d1fcb40790", "45042a57-0e8b-48ea-850f-a7934b62d607",
                                       "81c0827d-a5df-4784-b761-9a2dad461b84", "f8c84792-cbaa-4f98-8e1d-8327f4018729",
                                       "3a050953-92a3-448e-a9ec-5cc80b76d025"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("0896e85f-3bce-42bc-9aeb-d6aea7b5b0dd", "d966ae37-bf51-4539-9388-cca6ee85cddb",
                                       "8a2ea6b3-4ca5-493f-944c-f74a3908f1c0", "89c3dee7-6cc7-4342-bbe4-912addcb7936"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("f84e68fd-1116-4f3e-b41d-aeb1fcb49e91",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("20a7b135-3c7e-4043-a1c7-77b8d6a1c7e7",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("b101d14d-7401-4ca9-b4a4-44b0c23f8721", "0ceb4170-cfcb-44c1-842a-888bd0a943c0"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("0c6f4c2c-943f-4c51-83e5-97606ec4a220", "972cb923-f63e-499e-9e4b-87eda404fe97",
                                       "1027ffcb-812d-4710-aac3-ce9d35eec024", "a488a130-b5bd-40d1-b9ba-5a82835c539c",
                                       "629e1cc7-9c4b-475f-90b3-3b47cdf829c1", "7b55abb0-a82d-402f-911a-720da61c1a16",
                                       "180c698c-8f41-4de8-853d-a560fb5919b0"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-66),
                                                                                              Long.valueOf(-8),
                                                                                              Order.getDefault(),
                                                                                              "4370294a-0144-498e-ad95-f1a642bf2475",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-66),
                                                                                              Long.valueOf(-8),
                                                                                              Order.getDefault(),
                                                                                              "4370294a-0144-498e-ad95-f1a642bf2475",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-116),
                                                                                              Long.valueOf(-124),
                                                                                              Order.getDefault(),
                                                                                              "01b123db-8bec-4680-b8fd-c9f647bfc37a",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-116),
                                                                                              Long.valueOf(-124),
                                                                                              Order.getDefault(),
                                                                                              "01b123db-8bec-4680-b8fd-c9f647bfc37a",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(5),
                                                                                              Long.valueOf(27),
                                                                                              Order.getDefault(),
                                                                                              "06803d56-eb98-4e2c-b243-e1a5628a4031",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
