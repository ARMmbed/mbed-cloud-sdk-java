// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-128),
                                                                                              Long.valueOf(40),
                                                                                              Order.getDefault(),
                                                                                              "5dc72982-38c5-43e9-bfe8-e17e31dbcd16",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1559747933351L),
                                                                                                        new Date(1559747934983L),
                                                                                                        new Date(1559747929450L),
                                                                                                        new Date(1559747935842L),
                                                                                                        new Date(1559747936323L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1559747932937L)))
                                                                            .lessThanUpdatedAt(new Date(1559747928280L))
                                                                            .greaterThanUpdatedAt(new Date(1559747931647L))
                                                                            .equalToName("a7a009c3-ba4b-4adc-aaf5-9d44e397936c")
                                                                            .notEqualToName("95fdc9e1-8be1-41c9-97fd-f69124ea5d98")
                                                                            .inNames(Arrays.asList("ee311c47-4349-4992-a5fb-0bc4544253c9",
                                                                                                   "ba5a2e64-c1b8-4bc7-bd4d-9bb2bf324ec8",
                                                                                                   "35a37648-f07a-4d8b-82ec-67bc172d7a80",
                                                                                                   "3eaa37f0-9b8c-4f6f-a42f-3c501c9ac6f5",
                                                                                                   "4c88aca3-c4d6-402c-9432-cd8a83497bcf",
                                                                                                   "58db8008-5ac0-419d-b0f4-16aa35be092f",
                                                                                                   "60a34911-aae9-4fea-af54-f259b9a524cc",
                                                                                                   "0c9e8fdd-d797-473e-8cf9-a4d087297c09"))
                                                                            .notInNames(Arrays.asList("54c2d6d3-5089-41a8-88ef-025ba5272284",
                                                                                                      "80cad9d0-afa5-4577-90e6-d495fca7bf67",
                                                                                                      "85c2790e-db90-4d1d-b0b8-c71629a539ff",
                                                                                                      "a424173f-aa79-466c-b56c-c925cd2f35a4"))
                                                                            .equalToDescription("13ed3247-9ff7-4d34-b8cd-c0bc712ff2f8")
                                                                            .notEqualToDescription("a54f31b0-c4bc-4732-9784-d8227dbea759")
                                                                            .inDescriptions(Arrays.asList("964d1433-91e2-4f0c-ba00-e808722d8b41"))
                                                                            .notInDescriptions(Arrays.asList("6690ffb0-9099-4d87-9af0-e247386575f5",
                                                                                                             "a1398937-c846-4dbf-917a-2bb4c138a092",
                                                                                                             "5f2473ee-eee1-46fb-93aa-baae5d3e6eac",
                                                                                                             "b0b53af4-0dce-41fd-ad89-d1247012343d",
                                                                                                             "e06b6ac6-797b-49ba-b5ae-fc2db8aabba9",
                                                                                                             "65887918-6f42-4ab7-bdd2-87bdb1685479",
                                                                                                             "2e6eccb8-831d-4400-ab43-2382e87e813c"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1559747935956L),
                                                                                                        new Date(1559747937020L),
                                                                                                        new Date(1559747930554L),
                                                                                                        new Date(1559747931610L),
                                                                                                        new Date(1559747932241L),
                                                                                                        new Date(1559747929980L),
                                                                                                        new Date(1559747932821L),
                                                                                                        new Date(1559747934093L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1559747933609L),
                                                                                                           new Date(1559747932781L),
                                                                                                           new Date(1559747929213L),
                                                                                                           new Date(1559747930670L)))
                                                                            .lessThanCreatedAt(new Date(1559747935795L))
                                                                            .greaterThanCreatedAt(new Date(1559747929441L))
                                                                            .equalToDatafileUrl("ccda1bf8-ccb3-4ed9-b552-4de5f995c19d")
                                                                            .notEqualToDatafileUrl("9910d53f-a955-4af7-9d2e-a32c1a800047")
                                                                            .inDatafileUrls(Arrays.asList("c13e723d-0426-4621-9d6f-c9ca592392eb",
                                                                                                          "9a63e10d-dd52-41be-a43f-b6339d185ae2",
                                                                                                          "be115fec-d3e3-48a6-82e2-4efbf04670cd",
                                                                                                          "a9cfebb1-16ce-4994-8e3b-dd85d987e686",
                                                                                                          "1029087c-c240-4fb9-8755-6de3fcf68907"))
                                                                            .notInDatafileUrls(Arrays.asList("5921089b-1a85-4dfa-ba8d-d2a34716fe11"))
                                                                            .equalToDatafileSize(Long.valueOf(6))
                                                                            .notEqualToDatafileSize(Long.valueOf(-39))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(-30),
                                                                                                           Long.valueOf(-53),
                                                                                                           Long.valueOf(-42),
                                                                                                           Long.valueOf(-81)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(125),
                                                                                                              Long.valueOf(82)))
                                                                            .equalToDatafileChecksum("b9677596-18de-4032-85ca-8a29bc3b6950")
                                                                            .notEqualToDatafileChecksum("4fb3f5f3-e02d-4616-98e7-f9215f94ee02")
                                                                            .inDatafileChecksums(Arrays.asList("2f136540-c631-4bad-9099-ba3c864cf2b7",
                                                                                                               "6d3228b5-4eb7-4904-a538-d5a79c1f543b",
                                                                                                               "f61d23b2-7321-4e0b-850a-7a39a5e52c61",
                                                                                                               "a04286d5-a6e3-41df-985c-52932f5086e2",
                                                                                                               "996825db-4cae-45c8-9e3a-2c5815a5f05d",
                                                                                                               "75911ab4-0dd4-49cf-9f7e-e6424156d22a",
                                                                                                               "2ae7842b-e319-414d-af16-bd4dfb959f9d",
                                                                                                               "08451035-00a7-4b55-8bdc-011f587ed895"))
                                                                            .notInDatafileChecksums(Arrays.asList("91505639-80fc-4d4f-a456-fe32c62eeea5",
                                                                                                                  "0ea992e4-25a6-43ec-867c-edd8633a97a5",
                                                                                                                  "38b1d28f-b652-4566-b3fb-8c3903225278",
                                                                                                                  "596918a6-bfda-49c1-8ca9-ff6284c31867",
                                                                                                                  "51eb301d-e3af-437a-b639-b6398d557fc3"))
                                                                            .equalToId("92afe6f3-c4a7-42c6-92cf-c7e9d660df6e")
                                                                            .notEqualToId("0859a174-8a0d-414e-918b-647b1741caf2")
                                                                            .inIds(Arrays.asList("a29202f8-e34f-443b-9b52-1a9287b2d4ac",
                                                                                                 "6c8d8def-8d9e-4585-94ff-a90d7ee5a4fc",
                                                                                                 "936dba58-cbd0-47fe-84e5-24f12503bb24",
                                                                                                 "f524a246-fe55-4ebf-af6a-40109ddf75aa",
                                                                                                 "bef542dd-9a86-495b-bcba-1c96f8b0cade",
                                                                                                 "49b8817b-de68-4f38-8194-6d48387670d1",
                                                                                                 "f3b88a1a-36a8-4fc7-a114-6089fe925a5f",
                                                                                                 "30b9f821-92a6-4ad1-9a0e-845b633e7a46"))
                                                                            .notInIds(Arrays.asList("8f127493-027d-4ade-a19a-1fb5d944baea",
                                                                                                    "4771fe2a-7322-4bf4-ac9e-38747edb6bad",
                                                                                                    "c49eea82-ec4e-41c2-9b61-737493d8d314",
                                                                                                    "462d7034-92bd-4e54-8444-907b59a4b7c3",
                                                                                                    "f853c075-b596-407b-954c-2778284e5348",
                                                                                                    "2513e603-a70c-41a4-8932-cfc2e1b3b7e9",
                                                                                                    "3354ff5b-3ba8-43a2-93f0-fb9b2993d611",
                                                                                                    "3110c355-c294-4e27-ac02-ef51e79a5354",
                                                                                                    "d3b4e748-9a6b-4017-a88f-595f8d954c07"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559747933351L), new Date(1559747934983L), new Date(1559747929450L),
                                       new Date(1559747935842L), new Date(1559747936323L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559747932937L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559747928280L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559747931647L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("a7a009c3-ba4b-4adc-aaf5-9d44e397936c",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("95fdc9e1-8be1-41c9-97fd-f69124ea5d98",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("ee311c47-4349-4992-a5fb-0bc4544253c9", "ba5a2e64-c1b8-4bc7-bd4d-9bb2bf324ec8",
                                       "35a37648-f07a-4d8b-82ec-67bc172d7a80", "3eaa37f0-9b8c-4f6f-a42f-3c501c9ac6f5",
                                       "4c88aca3-c4d6-402c-9432-cd8a83497bcf", "58db8008-5ac0-419d-b0f4-16aa35be092f",
                                       "60a34911-aae9-4fea-af54-f259b9a524cc", "0c9e8fdd-d797-473e-8cf9-a4d087297c09"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("54c2d6d3-5089-41a8-88ef-025ba5272284", "80cad9d0-afa5-4577-90e6-d495fca7bf67",
                                       "85c2790e-db90-4d1d-b0b8-c71629a539ff", "a424173f-aa79-466c-b56c-c925cd2f35a4"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("13ed3247-9ff7-4d34-b8cd-c0bc712ff2f8",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("a54f31b0-c4bc-4732-9784-d8227dbea759",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("964d1433-91e2-4f0c-ba00-e808722d8b41"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("6690ffb0-9099-4d87-9af0-e247386575f5", "a1398937-c846-4dbf-917a-2bb4c138a092",
                                       "5f2473ee-eee1-46fb-93aa-baae5d3e6eac", "b0b53af4-0dce-41fd-ad89-d1247012343d",
                                       "e06b6ac6-797b-49ba-b5ae-fc2db8aabba9", "65887918-6f42-4ab7-bdd2-87bdb1685479",
                                       "2e6eccb8-831d-4400-ab43-2382e87e813c"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559747935956L), new Date(1559747937020L), new Date(1559747930554L),
                                       new Date(1559747931610L), new Date(1559747932241L), new Date(1559747929980L),
                                       new Date(1559747932821L), new Date(1559747934093L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559747933609L), new Date(1559747932781L), new Date(1559747929213L),
                                       new Date(1559747930670L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559747935795L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559747929441L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("ccda1bf8-ccb3-4ed9-b552-4de5f995c19d",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("9910d53f-a955-4af7-9d2e-a32c1a800047",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("c13e723d-0426-4621-9d6f-c9ca592392eb", "9a63e10d-dd52-41be-a43f-b6339d185ae2",
                                       "be115fec-d3e3-48a6-82e2-4efbf04670cd", "a9cfebb1-16ce-4994-8e3b-dd85d987e686",
                                       "1029087c-c240-4fb9-8755-6de3fcf68907"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("5921089b-1a85-4dfa-ba8d-d2a34716fe11"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(6),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-39),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-30), Long.valueOf(-53), Long.valueOf(-42), Long.valueOf(-81)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(125), Long.valueOf(82)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("b9677596-18de-4032-85ca-8a29bc3b6950",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("4fb3f5f3-e02d-4616-98e7-f9215f94ee02",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("2f136540-c631-4bad-9099-ba3c864cf2b7", "6d3228b5-4eb7-4904-a538-d5a79c1f543b",
                                       "f61d23b2-7321-4e0b-850a-7a39a5e52c61", "a04286d5-a6e3-41df-985c-52932f5086e2",
                                       "996825db-4cae-45c8-9e3a-2c5815a5f05d", "75911ab4-0dd4-49cf-9f7e-e6424156d22a",
                                       "2ae7842b-e319-414d-af16-bd4dfb959f9d", "08451035-00a7-4b55-8bdc-011f587ed895"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("91505639-80fc-4d4f-a456-fe32c62eeea5", "0ea992e4-25a6-43ec-867c-edd8633a97a5",
                                       "38b1d28f-b652-4566-b3fb-8c3903225278", "596918a6-bfda-49c1-8ca9-ff6284c31867",
                                       "51eb301d-e3af-437a-b639-b6398d557fc3"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("92afe6f3-c4a7-42c6-92cf-c7e9d660df6e",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("0859a174-8a0d-414e-918b-647b1741caf2",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("a29202f8-e34f-443b-9b52-1a9287b2d4ac", "6c8d8def-8d9e-4585-94ff-a90d7ee5a4fc",
                                       "936dba58-cbd0-47fe-84e5-24f12503bb24", "f524a246-fe55-4ebf-af6a-40109ddf75aa",
                                       "bef542dd-9a86-495b-bcba-1c96f8b0cade", "49b8817b-de68-4f38-8194-6d48387670d1",
                                       "f3b88a1a-36a8-4fc7-a114-6089fe925a5f", "30b9f821-92a6-4ad1-9a0e-845b633e7a46"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("8f127493-027d-4ade-a19a-1fb5d944baea", "4771fe2a-7322-4bf4-ac9e-38747edb6bad",
                                       "c49eea82-ec4e-41c2-9b61-737493d8d314", "462d7034-92bd-4e54-8444-907b59a4b7c3",
                                       "f853c075-b596-407b-954c-2778284e5348", "2513e603-a70c-41a4-8932-cfc2e1b3b7e9",
                                       "3354ff5b-3ba8-43a2-93f0-fb9b2993d611", "3110c355-c294-4e27-ac02-ef51e79a5354",
                                       "d3b4e748-9a6b-4017-a88f-595f8d954c07"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-39),
                                                                                              Long.valueOf(-92),
                                                                                              Order.getDefault(),
                                                                                              "e3571452-bc39-4407-8b5b-94cfca9fb081",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-39),
                                                                                              Long.valueOf(-92),
                                                                                              Order.getDefault(),
                                                                                              "e3571452-bc39-4407-8b5b-94cfca9fb081",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-32),
                                                                                              Long.valueOf(111),
                                                                                              Order.getDefault(),
                                                                                              "7582b305-042c-43e0-be2f-e1578f4ada0e",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-32),
                                                                                              Long.valueOf(111),
                                                                                              Order.getDefault(),
                                                                                              "7582b305-042c-43e0-be2f-e1578f4ada0e",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(108),
                                                                                              Long.valueOf(11),
                                                                                              Order.getDefault(),
                                                                                              "889f1d53-1212-49c5-837a-5a085040355c",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
