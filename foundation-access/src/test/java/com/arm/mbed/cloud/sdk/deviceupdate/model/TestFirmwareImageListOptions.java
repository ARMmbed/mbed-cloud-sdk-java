// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(35),
                                                                                              Long.valueOf(108),
                                                                                              Order.getDefault(),
                                                                                              "2815ef68-eafe-4234-9184-01686c0a9b5c",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1559752149201L),
                                                                                                        new Date(1559752150111L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1559752152365L),
                                                                                                           new Date(1559752145560L),
                                                                                                           new Date(1559752152432L),
                                                                                                           new Date(1559752151083L),
                                                                                                           new Date(1559752155094L),
                                                                                                           new Date(1559752145551L),
                                                                                                           new Date(1559752152145L),
                                                                                                           new Date(1559752149803L),
                                                                                                           new Date(1559752152151L)))
                                                                            .lessThanUpdatedAt(new Date(1559752152483L))
                                                                            .greaterThanUpdatedAt(new Date(1559752150944L))
                                                                            .equalToName("85b9fff4-c4c9-4884-b12d-47d5c3564bc8")
                                                                            .notEqualToName("e4176a53-f160-4e97-9407-e96882152b64")
                                                                            .inNames(Arrays.asList("aed41250-5561-43ef-9d52-5d0aa28959e5",
                                                                                                   "7d0060dd-c483-4088-bce2-d277b389f31c",
                                                                                                   "da0964e1-a16b-4118-a923-3ea9ee535cee",
                                                                                                   "449bf7c0-5cd8-44d6-9d48-e2b8fe68bc66"))
                                                                            .notInNames(Arrays.asList("f1988030-6021-4436-b1a4-ea4af17f4539"))
                                                                            .equalToDescription("361d8901-089a-437e-9c6b-2e44263207ea")
                                                                            .notEqualToDescription("68672a73-939c-44fa-a56c-292625e344e0")
                                                                            .inDescriptions(Arrays.asList("cea5fc59-0942-4517-a271-38b1d2ae6150"))
                                                                            .notInDescriptions(Arrays.asList("862a5801-32b1-44f9-91b3-5269f82b1443",
                                                                                                             "06fb4412-0c65-4cf2-aadf-724a7d6d8313",
                                                                                                             "35b8949f-76ca-43d8-9c8b-f727c7bb9df9"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1559752154092L),
                                                                                                        new Date(1559752155180L),
                                                                                                        new Date(1559752151088L),
                                                                                                        new Date(1559752150163L),
                                                                                                        new Date(1559752146532L),
                                                                                                        new Date(1559752151028L),
                                                                                                        new Date(1559752148660L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1559752154793L),
                                                                                                           new Date(1559752147805L),
                                                                                                           new Date(1559752151835L),
                                                                                                           new Date(1559752153401L),
                                                                                                           new Date(1559752148032L)))
                                                                            .lessThanCreatedAt(new Date(1559752147095L))
                                                                            .greaterThanCreatedAt(new Date(1559752146152L))
                                                                            .equalToDatafileUrl("8643c3fd-32dc-43e9-b63a-bcf36ec5de71")
                                                                            .notEqualToDatafileUrl("1ebc9a54-8aef-4424-a5d6-729b64042c22")
                                                                            .inDatafileUrls(Arrays.asList("49423418-e8d9-4ff8-8fb1-d737226f7ecc",
                                                                                                          "0fdb831a-44fd-4059-aa3d-0e3945cf885c",
                                                                                                          "7422f157-e2b2-4a0f-ad88-b2150098aec6",
                                                                                                          "5ebbfdde-1499-474e-9395-7f39038fd17c",
                                                                                                          "79da7058-903b-4090-a644-6c0bc46fb622",
                                                                                                          "2a182a87-df0a-4e1b-a719-a8ddbbced69f",
                                                                                                          "99fe9754-1f15-4186-a799-12603d029270"))
                                                                            .notInDatafileUrls(Arrays.asList("301ea3fc-2a87-469c-bc83-c96bf8a9c36a",
                                                                                                             "37b186ce-99ff-4f10-b091-b31dab700e0f"))
                                                                            .equalToDatafileSize(Long.valueOf(28))
                                                                            .notEqualToDatafileSize(Long.valueOf(80))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(35),
                                                                                                           Long.valueOf(-27),
                                                                                                           Long.valueOf(4),
                                                                                                           Long.valueOf(48),
                                                                                                           Long.valueOf(120),
                                                                                                           Long.valueOf(120),
                                                                                                           Long.valueOf(116),
                                                                                                           Long.valueOf(116)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(-31),
                                                                                                              Long.valueOf(-55),
                                                                                                              Long.valueOf(-28),
                                                                                                              Long.valueOf(-44),
                                                                                                              Long.valueOf(-19),
                                                                                                              Long.valueOf(-69)))
                                                                            .equalToDatafileChecksum("dc357e78-4bd2-490c-8d54-5d0aaa88638b")
                                                                            .notEqualToDatafileChecksum("c6ba7084-a353-4219-be63-b5ad9e3f4727")
                                                                            .inDatafileChecksums(Arrays.asList("0137a28a-73f2-4b0d-864e-df5b03b979ba",
                                                                                                               "97b8a774-b655-4689-8163-087513721133",
                                                                                                               "5fa450ee-4348-4c9d-8c73-8750805751cf",
                                                                                                               "23012778-70b9-4c7c-9a17-0b62ef25fa11"))
                                                                            .notInDatafileChecksums(Arrays.asList("c0bb3d94-7a3b-47cc-aabd-01c1e093d5da",
                                                                                                                  "e670bb98-f277-4b8b-a8c8-a56e10088c89",
                                                                                                                  "e1fd460e-dfaf-41d4-aeae-b53f4cb2645a",
                                                                                                                  "578ecb3f-3b24-4150-a8b1-43d484b9e381",
                                                                                                                  "f994d5f7-8835-4da9-89ce-31c1856acc75"))
                                                                            .equalToId("19dc9aa4-cb73-414b-a0aa-b4f7948f9829")
                                                                            .notEqualToId("b06f8a72-2c68-4ec0-8657-700a77a6cba4")
                                                                            .inIds(Arrays.asList("1753ba76-01dd-4d4e-9979-4f13ccfe19fe",
                                                                                                 "43f4e116-136f-44bb-b494-5683c7c4264d",
                                                                                                 "4fd3c873-3d0c-4e38-ab98-9e967a89f890",
                                                                                                 "7664ee1e-579f-425f-a31f-ef35366b1e59"))
                                                                            .notInIds(Arrays.asList("a42bb8c2-fed7-46ee-aa9a-a5d073730c75",
                                                                                                    "1b9d6313-1633-43cc-831c-594a8abe1e53",
                                                                                                    "97ff171f-a6dd-4351-a80c-c15d1f7494b7",
                                                                                                    "19f254e3-3247-4d55-b5c9-3fa42ca240b3",
                                                                                                    "65cdaeda-d3ea-4395-9fc9-3b4eb0673779",
                                                                                                    "72d6b606-65eb-407e-a47f-3887b2a6263b",
                                                                                                    "75e9b16e-cbef-4566-9645-419b1fe6ac10",
                                                                                                    "6d524dcd-3690-4f9d-8a21-b22901df7f72",
                                                                                                    "dc1c4e33-0390-4e6a-bb41-b6a0993de130"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559752149201L), new Date(1559752150111L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559752152365L), new Date(1559752145560L), new Date(1559752152432L),
                                       new Date(1559752151083L), new Date(1559752155094L), new Date(1559752145551L),
                                       new Date(1559752152145L), new Date(1559752149803L), new Date(1559752152151L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559752152483L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559752150944L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("85b9fff4-c4c9-4884-b12d-47d5c3564bc8",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("e4176a53-f160-4e97-9407-e96882152b64",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("aed41250-5561-43ef-9d52-5d0aa28959e5", "7d0060dd-c483-4088-bce2-d277b389f31c",
                                       "da0964e1-a16b-4118-a923-3ea9ee535cee", "449bf7c0-5cd8-44d6-9d48-e2b8fe68bc66"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("f1988030-6021-4436-b1a4-ea4af17f4539"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("361d8901-089a-437e-9c6b-2e44263207ea",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("68672a73-939c-44fa-a56c-292625e344e0",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("cea5fc59-0942-4517-a271-38b1d2ae6150"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("862a5801-32b1-44f9-91b3-5269f82b1443", "06fb4412-0c65-4cf2-aadf-724a7d6d8313",
                                       "35b8949f-76ca-43d8-9c8b-f727c7bb9df9"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559752154092L), new Date(1559752155180L), new Date(1559752151088L),
                                       new Date(1559752150163L), new Date(1559752146532L), new Date(1559752151028L),
                                       new Date(1559752148660L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559752154793L), new Date(1559752147805L), new Date(1559752151835L),
                                       new Date(1559752153401L), new Date(1559752148032L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559752147095L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559752146152L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("8643c3fd-32dc-43e9-b63a-bcf36ec5de71",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("1ebc9a54-8aef-4424-a5d6-729b64042c22",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("49423418-e8d9-4ff8-8fb1-d737226f7ecc", "0fdb831a-44fd-4059-aa3d-0e3945cf885c",
                                       "7422f157-e2b2-4a0f-ad88-b2150098aec6", "5ebbfdde-1499-474e-9395-7f39038fd17c",
                                       "79da7058-903b-4090-a644-6c0bc46fb622", "2a182a87-df0a-4e1b-a719-a8ddbbced69f",
                                       "99fe9754-1f15-4186-a799-12603d029270"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("301ea3fc-2a87-469c-bc83-c96bf8a9c36a", "37b186ce-99ff-4f10-b091-b31dab700e0f"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(28),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(80),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(35), Long.valueOf(-27), Long.valueOf(4), Long.valueOf(48),
                                       Long.valueOf(120), Long.valueOf(120), Long.valueOf(116), Long.valueOf(116)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-31), Long.valueOf(-55), Long.valueOf(-28), Long.valueOf(-44),
                                       Long.valueOf(-19), Long.valueOf(-69)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("dc357e78-4bd2-490c-8d54-5d0aaa88638b",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("c6ba7084-a353-4219-be63-b5ad9e3f4727",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("0137a28a-73f2-4b0d-864e-df5b03b979ba", "97b8a774-b655-4689-8163-087513721133",
                                       "5fa450ee-4348-4c9d-8c73-8750805751cf", "23012778-70b9-4c7c-9a17-0b62ef25fa11"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("c0bb3d94-7a3b-47cc-aabd-01c1e093d5da", "e670bb98-f277-4b8b-a8c8-a56e10088c89",
                                       "e1fd460e-dfaf-41d4-aeae-b53f4cb2645a", "578ecb3f-3b24-4150-a8b1-43d484b9e381",
                                       "f994d5f7-8835-4da9-89ce-31c1856acc75"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("19dc9aa4-cb73-414b-a0aa-b4f7948f9829",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("b06f8a72-2c68-4ec0-8657-700a77a6cba4",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("1753ba76-01dd-4d4e-9979-4f13ccfe19fe", "43f4e116-136f-44bb-b494-5683c7c4264d",
                                       "4fd3c873-3d0c-4e38-ab98-9e967a89f890", "7664ee1e-579f-425f-a31f-ef35366b1e59"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("a42bb8c2-fed7-46ee-aa9a-a5d073730c75", "1b9d6313-1633-43cc-831c-594a8abe1e53",
                                       "97ff171f-a6dd-4351-a80c-c15d1f7494b7", "19f254e3-3247-4d55-b5c9-3fa42ca240b3",
                                       "65cdaeda-d3ea-4395-9fc9-3b4eb0673779", "72d6b606-65eb-407e-a47f-3887b2a6263b",
                                       "75e9b16e-cbef-4566-9645-419b1fe6ac10", "6d524dcd-3690-4f9d-8a21-b22901df7f72",
                                       "dc1c4e33-0390-4e6a-bb41-b6a0993de130"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(100),
                                                                                              Long.valueOf(-121),
                                                                                              Order.getDefault(),
                                                                                              "2b269576-0bef-433a-9ff6-ec11f59100a3",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(100),
                                                                                              Long.valueOf(-121),
                                                                                              Order.getDefault(),
                                                                                              "2b269576-0bef-433a-9ff6-ec11f59100a3",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-124),
                                                                                              Long.valueOf(-121),
                                                                                              Order.getDefault(),
                                                                                              "f98c6f09-36d7-455b-bec0-74d53a02592d",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-124),
                                                                                              Long.valueOf(-121),
                                                                                              Order.getDefault(),
                                                                                              "f98c6f09-36d7-455b-bec0-74d53a02592d",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(-23),
                                                                                              Long.valueOf(-107),
                                                                                              Order.getDefault(),
                                                                                              "2cb38ef9-7a97-4482-a446-fc345ea86a9e",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
