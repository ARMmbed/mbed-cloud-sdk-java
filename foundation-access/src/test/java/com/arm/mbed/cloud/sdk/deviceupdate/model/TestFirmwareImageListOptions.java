// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-19),
                                                                                              Long.valueOf(70),
                                                                                              Order.getDefault(),
                                                                                              "2b3358cb-fefe-4daf-b84b-6fbe1d3e2896",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1559288265280L),
                                                                                                        new Date(1559288260131L),
                                                                                                        new Date(1559288265251L),
                                                                                                        new Date(1559288259842L),
                                                                                                        new Date(1559288260887L),
                                                                                                        new Date(1559288264668L),
                                                                                                        new Date(1559288257871L),
                                                                                                        new Date(1559288259033L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1559288263904L),
                                                                                                           new Date(1559288265247L),
                                                                                                           new Date(1559288260140L),
                                                                                                           new Date(1559288256822L),
                                                                                                           new Date(1559288263731L),
                                                                                                           new Date(1559288257393L),
                                                                                                           new Date(1559288261827L)))
                                                                            .lessThanUpdatedAt(new Date(1559288256720L))
                                                                            .greaterThanUpdatedAt(new Date(1559288257476L))
                                                                            .equalToName("506782dc-acd7-42d2-a832-a605c56c12f7")
                                                                            .notEqualToName("6721aa17-10b1-4c1b-8a66-93de809a9f7e")
                                                                            .inNames(Arrays.asList("e462d599-e79e-41e0-b833-ff2a76081133",
                                                                                                   "8f4a3f4e-47ff-4320-9d0d-a69864dd50f2",
                                                                                                   "2a2ada4e-5971-4f52-bfc1-4ffab72f87e8",
                                                                                                   "309224b6-c899-40d3-bb6a-bc0a49a95cc6"))
                                                                            .notInNames(Arrays.asList("34c2b635-9fba-4da0-b836-c04d09a3edd3",
                                                                                                      "c3c49959-7ced-4bac-b233-6dd007f3e239",
                                                                                                      "517d68ed-4910-417e-880f-a2a614e4ecbb",
                                                                                                      "a2e8758e-7685-46d8-b325-499b3b3ab1aa",
                                                                                                      "598cc0c5-72a6-4184-bf97-c705aae97a52",
                                                                                                      "d9facf91-7c37-45a2-9c93-e57e0758a092",
                                                                                                      "be7d5326-f7e5-4c29-bed2-e6931e73d5dc",
                                                                                                      "512c943a-34e0-44db-8369-7c534817065a"))
                                                                            .equalToDescription("d4f635f8-3e59-47ad-ae34-16f8ff86dad1")
                                                                            .notEqualToDescription("876cf4ba-f8d5-40aa-8bd9-aa3acfc56a7b")
                                                                            .inDescriptions(Arrays.asList("75a38f2e-0bfd-4410-b672-86cc6b45963a",
                                                                                                          "0b2fd554-14f2-4cb1-9ff9-48d065e917a9",
                                                                                                          "e41fd105-f63e-473e-9506-d8e413bbe11a"))
                                                                            .notInDescriptions(Arrays.asList("61bc7b28-c212-40ce-abd5-446e1d522408",
                                                                                                             "fdf5bf80-849c-43e2-b22d-29b191a5a55e"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1559288259155L),
                                                                                                        new Date(1559288263356L),
                                                                                                        new Date(1559288256303L),
                                                                                                        new Date(1559288265243L),
                                                                                                        new Date(1559288256975L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1559288258553L),
                                                                                                           new Date(1559288264301L),
                                                                                                           new Date(1559288263717L),
                                                                                                           new Date(1559288264013L),
                                                                                                           new Date(1559288264855L)))
                                                                            .lessThanCreatedAt(new Date(1559288265656L))
                                                                            .greaterThanCreatedAt(new Date(1559288256132L))
                                                                            .equalToDatafileUrl("585e3f6a-7a89-46d0-b400-def52f49a214")
                                                                            .notEqualToDatafileUrl("c448a5b0-ef22-408f-9392-41a78ab54f1c")
                                                                            .inDatafileUrls(Arrays.asList("9bd8a934-c42b-43b0-9b29-f6ee704abf51",
                                                                                                          "37d2bd9f-94a6-4a1f-8876-57c5dc45c0e7"))
                                                                            .notInDatafileUrls(Arrays.asList("1d1bda12-06a7-43ad-bc8a-a5e7af9e4401",
                                                                                                             "31051173-7e2f-4fb9-9b3f-33c45cc08741",
                                                                                                             "86d04235-8a66-4a06-b617-99b907a2e309",
                                                                                                             "95df3ca1-8eb9-4bda-8d8e-be5097b94f51",
                                                                                                             "28545163-51d5-46e4-b691-67d31b253a4b",
                                                                                                             "8077c158-1c12-4805-b6b3-1e5ce6e107b6",
                                                                                                             "16896009-3048-438d-ba9a-ee4cb0746250",
                                                                                                             "120b694b-fd69-463b-b10e-a9e6537868ce"))
                                                                            .equalToDatafileSize(Long.valueOf(57))
                                                                            .notEqualToDatafileSize(Long.valueOf(67))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(-57),
                                                                                                           Long.valueOf(8),
                                                                                                           Long.valueOf(-20),
                                                                                                           Long.valueOf(-121)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(113),
                                                                                                              Long.valueOf(-49),
                                                                                                              Long.valueOf(50)))
                                                                            .equalToDatafileChecksum("404d8adf-645f-4bef-b164-64922a9e5392")
                                                                            .notEqualToDatafileChecksum("37144087-7b25-4b1f-90eb-f02f18d261fe")
                                                                            .inDatafileChecksums(Arrays.asList("5bcebb52-c284-40c8-be04-c05171d9b81b",
                                                                                                               "17cadad2-b572-4714-9f3c-5624ec8b1dbf",
                                                                                                               "0068b9fe-d22c-4262-b704-a13b97674cb6",
                                                                                                               "e623f379-89ee-42b2-8a6f-a3b283c136f5",
                                                                                                               "5b3c78cd-adfa-4ce5-8942-75f9327d40a9"))
                                                                            .notInDatafileChecksums(Arrays.asList("d54d42fa-1b78-42c4-9caf-b0a00419de8b",
                                                                                                                  "a35a264d-2a9b-4839-bbb5-1745f9d707ca",
                                                                                                                  "aff89c8c-b2b2-41af-9f8a-e8c554497f47",
                                                                                                                  "9c727651-c12a-4a4b-bf1c-22a03bf75ff4",
                                                                                                                  "f205b77d-6d6e-4976-8a12-8c3ecb97f439",
                                                                                                                  "34bedc11-ea98-45e2-8235-d3d37de55de8"))
                                                                            .equalToId("9dab2894-4e46-424f-b80b-600f6c723cf7")
                                                                            .notEqualToId("49634141-1619-4d5e-897f-23d9d8cbe6e5")
                                                                            .inIds(Arrays.asList("80ce4caa-2fd8-42ee-9422-a5452b50d64a",
                                                                                                 "687921f5-3a71-47af-9479-51893bab0849",
                                                                                                 "27eebe05-d812-49bc-bd9e-25bb1ec99058"))
                                                                            .notInIds(Arrays.asList("d5257928-0135-4685-92e6-b476098fe3c2",
                                                                                                    "5232c326-507f-4e36-ad41-fd4f17dc3af3",
                                                                                                    "260fe496-5f80-4469-8ab2-b22ea93e2008",
                                                                                                    "586938bd-e156-4f90-bd57-6859c23b6715",
                                                                                                    "2526fe64-1dca-45f8-b488-a4fc3565c274",
                                                                                                    "00dbf246-8f75-41af-b9fe-0c23ef3ac999",
                                                                                                    "0ff776ca-de27-4a47-93c2-8da26ef989ed",
                                                                                                    "f7ccea94-a8cb-4b90-9f73-76f7dadd573c"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559288265280L), new Date(1559288260131L), new Date(1559288265251L),
                                       new Date(1559288259842L), new Date(1559288260887L), new Date(1559288264668L),
                                       new Date(1559288257871L), new Date(1559288259033L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559288263904L), new Date(1559288265247L), new Date(1559288260140L),
                                       new Date(1559288256822L), new Date(1559288263731L), new Date(1559288257393L),
                                       new Date(1559288261827L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559288256720L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559288257476L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("506782dc-acd7-42d2-a832-a605c56c12f7",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("6721aa17-10b1-4c1b-8a66-93de809a9f7e",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("e462d599-e79e-41e0-b833-ff2a76081133", "8f4a3f4e-47ff-4320-9d0d-a69864dd50f2",
                                       "2a2ada4e-5971-4f52-bfc1-4ffab72f87e8", "309224b6-c899-40d3-bb6a-bc0a49a95cc6"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("34c2b635-9fba-4da0-b836-c04d09a3edd3", "c3c49959-7ced-4bac-b233-6dd007f3e239",
                                       "517d68ed-4910-417e-880f-a2a614e4ecbb", "a2e8758e-7685-46d8-b325-499b3b3ab1aa",
                                       "598cc0c5-72a6-4184-bf97-c705aae97a52", "d9facf91-7c37-45a2-9c93-e57e0758a092",
                                       "be7d5326-f7e5-4c29-bed2-e6931e73d5dc", "512c943a-34e0-44db-8369-7c534817065a"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("d4f635f8-3e59-47ad-ae34-16f8ff86dad1",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("876cf4ba-f8d5-40aa-8bd9-aa3acfc56a7b",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("75a38f2e-0bfd-4410-b672-86cc6b45963a", "0b2fd554-14f2-4cb1-9ff9-48d065e917a9",
                                       "e41fd105-f63e-473e-9506-d8e413bbe11a"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("61bc7b28-c212-40ce-abd5-446e1d522408", "fdf5bf80-849c-43e2-b22d-29b191a5a55e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559288259155L), new Date(1559288263356L), new Date(1559288256303L),
                                       new Date(1559288265243L), new Date(1559288256975L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559288258553L), new Date(1559288264301L), new Date(1559288263717L),
                                       new Date(1559288264013L), new Date(1559288264855L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559288265656L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559288256132L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("585e3f6a-7a89-46d0-b400-def52f49a214",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("c448a5b0-ef22-408f-9392-41a78ab54f1c",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("9bd8a934-c42b-43b0-9b29-f6ee704abf51", "37d2bd9f-94a6-4a1f-8876-57c5dc45c0e7"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("1d1bda12-06a7-43ad-bc8a-a5e7af9e4401", "31051173-7e2f-4fb9-9b3f-33c45cc08741",
                                       "86d04235-8a66-4a06-b617-99b907a2e309", "95df3ca1-8eb9-4bda-8d8e-be5097b94f51",
                                       "28545163-51d5-46e4-b691-67d31b253a4b", "8077c158-1c12-4805-b6b3-1e5ce6e107b6",
                                       "16896009-3048-438d-ba9a-ee4cb0746250", "120b694b-fd69-463b-b10e-a9e6537868ce"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(57),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(67),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-57), Long.valueOf(8), Long.valueOf(-20), Long.valueOf(-121)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(113), Long.valueOf(-49), Long.valueOf(50)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("404d8adf-645f-4bef-b164-64922a9e5392",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("37144087-7b25-4b1f-90eb-f02f18d261fe",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("5bcebb52-c284-40c8-be04-c05171d9b81b", "17cadad2-b572-4714-9f3c-5624ec8b1dbf",
                                       "0068b9fe-d22c-4262-b704-a13b97674cb6", "e623f379-89ee-42b2-8a6f-a3b283c136f5",
                                       "5b3c78cd-adfa-4ce5-8942-75f9327d40a9"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("d54d42fa-1b78-42c4-9caf-b0a00419de8b", "a35a264d-2a9b-4839-bbb5-1745f9d707ca",
                                       "aff89c8c-b2b2-41af-9f8a-e8c554497f47", "9c727651-c12a-4a4b-bf1c-22a03bf75ff4",
                                       "f205b77d-6d6e-4976-8a12-8c3ecb97f439", "34bedc11-ea98-45e2-8235-d3d37de55de8"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("9dab2894-4e46-424f-b80b-600f6c723cf7",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("49634141-1619-4d5e-897f-23d9d8cbe6e5",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("80ce4caa-2fd8-42ee-9422-a5452b50d64a", "687921f5-3a71-47af-9479-51893bab0849",
                                       "27eebe05-d812-49bc-bd9e-25bb1ec99058"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("d5257928-0135-4685-92e6-b476098fe3c2", "5232c326-507f-4e36-ad41-fd4f17dc3af3",
                                       "260fe496-5f80-4469-8ab2-b22ea93e2008", "586938bd-e156-4f90-bd57-6859c23b6715",
                                       "2526fe64-1dca-45f8-b488-a4fc3565c274", "00dbf246-8f75-41af-b9fe-0c23ef3ac999",
                                       "0ff776ca-de27-4a47-93c2-8da26ef989ed", "f7ccea94-a8cb-4b90-9f73-76f7dadd573c"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-81),
                                                                                              Long.valueOf(64),
                                                                                              Order.getDefault(),
                                                                                              "7b619684-e053-4e40-847d-45fdd2e720c3",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-81),
                                                                                              Long.valueOf(64),
                                                                                              Order.getDefault(),
                                                                                              "7b619684-e053-4e40-847d-45fdd2e720c3",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(115),
                                                                                              Long.valueOf(-29),
                                                                                              Order.getDefault(),
                                                                                              "24c99d63-40fc-4bde-90c6-abf29eb611a6",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(115),
                                                                                              Long.valueOf(-29),
                                                                                              Order.getDefault(),
                                                                                              "24c99d63-40fc-4bde-90c6-abf29eb611a6",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(87),
                                                                                              Long.valueOf(-14),
                                                                                              Order.getDefault(),
                                                                                              "caea9d1e-94c5-4a50-9b21-4504d2bad651",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
