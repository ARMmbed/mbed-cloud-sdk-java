/*
 * Device Directory API
 * This is the API Documentation for the Device Directory service.
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.arm.mbed.cloud.sdk.internal.devicedirectory.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.joda.time.DateTime;
import java.io.Serializable;

/**
 * DeviceBlock
 */

public class DeviceBlock implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * Gets or Sets blockType
   */
  @JsonAdapter(BlockTypeEnum.Adapter.class)
  public enum BlockTypeEnum {
    SUSPENDED("suspended"),
    
    CERTIFICATE_BLACKLISTED("certificate_blacklisted");

    private String value;

    BlockTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static BlockTypeEnum fromValue(String text) {
      for (BlockTypeEnum b : BlockTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<BlockTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BlockTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public BlockTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return BlockTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("block_type")
  private BlockTypeEnum blockType = null;

  @SerializedName("created_at")
  private DateTime createdAt = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("is_user_block")
  private Boolean isUserBlock = null;

  public DeviceBlock blockType(BlockTypeEnum blockType) {
    this.blockType = blockType;
    return this;
  }

   /**
   * Get blockType
   * @return blockType
  **/
  @ApiModelProperty(value = "")
  public BlockTypeEnum getBlockType() {
    return blockType;
  }

  public void setBlockType(BlockTypeEnum blockType) {
    this.blockType = blockType;
  }

  public DeviceBlock createdAt(DateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public DateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(DateTime createdAt) {
    this.createdAt = createdAt;
  }

  public DeviceBlock description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(example = "Device was destroyed.", value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DeviceBlock id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "00000000000000000000000000000000", value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public DeviceBlock isUserBlock(Boolean isUserBlock) {
    this.isUserBlock = isUserBlock;
    return this;
  }

   /**
   * Is the block a user block? Only user blocks may be removed.
   * @return isUserBlock
  **/
  @ApiModelProperty(value = "Is the block a user block? Only user blocks may be removed.")
  public Boolean isIsUserBlock() {
    return isUserBlock;
  }

  public void setIsUserBlock(Boolean isUserBlock) {
    this.isUserBlock = isUserBlock;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceBlock deviceBlock = (DeviceBlock) o;
    return Objects.equals(this.blockType, deviceBlock.blockType) &&
        Objects.equals(this.createdAt, deviceBlock.createdAt) &&
        Objects.equals(this.description, deviceBlock.description) &&
        Objects.equals(this.id, deviceBlock.id) &&
        Objects.equals(this.isUserBlock, deviceBlock.isUserBlock);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blockType, createdAt, description, id, isUserBlock);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceBlock {\n");
    
    sb.append("    blockType: ").append(toIndentedString(blockType)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isUserBlock: ").append(toIndentedString(isUserBlock)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

