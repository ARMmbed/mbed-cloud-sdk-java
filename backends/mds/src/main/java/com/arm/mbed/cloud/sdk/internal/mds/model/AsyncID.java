/*
 * Connect API
 * mbed Cloud Connect API allows web applications to communicate with devices. You can subscribe to device resources and read/write values to them. mbed Cloud Connect makes connectivity to devices easy by queuing requests and caching resource values.
 *
 * OpenAPI spec version: 2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.arm.mbed.cloud.sdk.internal.mds.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;

/**
 * AsyncID
 */

public class AsyncID implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("async-response-id")
  private String asyncResponseId = null;

  public AsyncID asyncResponseId(String asyncResponseId) {
    this.asyncResponseId = asyncResponseId;
    return this;
  }

   /**
   * Asynchronous response unique ID.
   * @return asyncResponseId
  **/
  @ApiModelProperty(example = "null", value = "Asynchronous response unique ID.")
  public String getAsyncResponseId() {
    return asyncResponseId;
  }

  public void setAsyncResponseId(String asyncResponseId) {
    this.asyncResponseId = asyncResponseId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AsyncID asyncID = (AsyncID) o;
    return Objects.equals(this.asyncResponseId, asyncID.asyncResponseId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(asyncResponseId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AsyncID {\n");
    
    sb.append("    asyncResponseId: ").append(toIndentedString(asyncResponseId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

