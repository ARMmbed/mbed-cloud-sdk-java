/*
 * Connect API
 * mbed Cloud Connect API allows web applications to communicate with devices. You can subscribe to device resources and read/write values to them. mbed Cloud Connect makes connectivity to devices easy by queuing requests and caching resource values.
 *
 * OpenAPI spec version: 2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.arm.mbed.cloud.sdk.internal.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;

/**
 * AsyncIDResponse
 */

public class AsyncIDResponse implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("status")
  private Integer status = null;

  @SerializedName("payload")
  private String payload = null;

  @SerializedName("max-age")
  private String maxAge = null;

  @SerializedName("error")
  private String error = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("ct")
  private String ct = null;

  public AsyncIDResponse status(Integer status) {
    this.status = status;
    return this;
  }

   /**
   * HTTP status code, for example 200 for OK.
   * @return status
  **/
  @ApiModelProperty(example = "null", value = "HTTP status code, for example 200 for OK.")
  public Integer getStatus() {
    return status;
  }

  public void setStatus(Integer status) {
    this.status = status;
  }

  public AsyncIDResponse payload(String payload) {
    this.payload = payload;
    return this;
  }

   /**
   * Requested data, base64 encoded.
   * @return payload
  **/
  @ApiModelProperty(example = "null", value = "Requested data, base64 encoded.")
  public String getPayload() {
    return payload;
  }

  public void setPayload(String payload) {
    this.payload = payload;
  }

  public AsyncIDResponse maxAge(String maxAge) {
    this.maxAge = maxAge;
    return this;
  }

   /**
   * Determines how long this value will be valid in cache, in seconds. 0 means that value is not stored in cache.
   * @return maxAge
  **/
  @ApiModelProperty(example = "null", value = "Determines how long this value will be valid in cache, in seconds. 0 means that value is not stored in cache.")
  public String getMaxAge() {
    return maxAge;
  }

  public void setMaxAge(String maxAge) {
    this.maxAge = maxAge;
  }

  public AsyncIDResponse error(String error) {
    this.error = error;
    return this;
  }

   /**
   * Optional error message, describing the error.
   * @return error
  **/
  @ApiModelProperty(example = "null", value = "Optional error message, describing the error.")
  public String getError() {
    return error;
  }

  public void setError(String error) {
    this.error = error;
  }

  public AsyncIDResponse id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Asynchronous response unique ID.
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "Asynchronous response unique ID.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public AsyncIDResponse ct(String ct) {
    this.ct = ct;
    return this;
  }

   /**
   * Content type
   * @return ct
  **/
  @ApiModelProperty(example = "null", value = "Content type")
  public String getCt() {
    return ct;
  }

  public void setCt(String ct) {
    this.ct = ct;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AsyncIDResponse asyncIDResponse = (AsyncIDResponse) o;
    return Objects.equals(this.status, asyncIDResponse.status) &&
        Objects.equals(this.payload, asyncIDResponse.payload) &&
        Objects.equals(this.maxAge, asyncIDResponse.maxAge) &&
        Objects.equals(this.error, asyncIDResponse.error) &&
        Objects.equals(this.id, asyncIDResponse.id) &&
        Objects.equals(this.ct, asyncIDResponse.ct);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, payload, maxAge, error, id, ct);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AsyncIDResponse {\n");
    
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    payload: ").append(toIndentedString(payload)).append("\n");
    sb.append("    maxAge: ").append(toIndentedString(maxAge)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ct: ").append(toIndentedString(ct)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

