/*
 * Connect Statistics API
 * mbed Cloud Connect Statistics API provides statistics about other cloud services through defined counters.
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.arm.mbed.cloud.sdk.internal.statistics.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;

/**
 * Metric
 */

public class Metric implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("device_server_rest_api_error")
  private Long deviceServerRestApiError = null;

  @SerializedName("bootstraps_failed")
  private Long bootstrapsFailed = null;

  @SerializedName("transactions")
  private Long transactions = null;

  @SerializedName("timestamp")
  private String timestamp = null;

  @SerializedName("registered_devices")
  private Long registeredDevices = null;

  @SerializedName("bootstraps_pending")
  private Long bootstrapsPending = null;

  @SerializedName("device_server_rest_api_success")
  private Long deviceServerRestApiSuccess = null;

  @SerializedName("handshakes_failed")
  private Long handshakesFailed = null;

  @SerializedName("handshakes_successful")
  private Long handshakesSuccessful = null;

  @SerializedName("bootstraps_successful")
  private Long bootstrapsSuccessful = null;

  @SerializedName("id")
  private String id = null;

  public Metric deviceServerRestApiError(Long deviceServerRestApiError) {
    this.deviceServerRestApiError = deviceServerRestApiError;
    return this;
  }

   /**
   * Number of failed device server REST API requests the account has used.
   * @return deviceServerRestApiError
  **/
  @ApiModelProperty(example = "null", value = "Number of failed device server REST API requests the account has used.")
  public Long getDeviceServerRestApiError() {
    return deviceServerRestApiError;
  }

  public void setDeviceServerRestApiError(Long deviceServerRestApiError) {
    this.deviceServerRestApiError = deviceServerRestApiError;
  }

  public Metric bootstrapsFailed(Long bootstrapsFailed) {
    this.bootstrapsFailed = bootstrapsFailed;
    return this;
  }

   /**
   * Number of failed bootstraps the account has used.
   * @return bootstrapsFailed
  **/
  @ApiModelProperty(example = "null", value = "Number of failed bootstraps the account has used.")
  public Long getBootstrapsFailed() {
    return bootstrapsFailed;
  }

  public void setBootstrapsFailed(Long bootstrapsFailed) {
    this.bootstrapsFailed = bootstrapsFailed;
  }

  public Metric transactions(Long transactions) {
    this.transactions = transactions;
    return this;
  }

   /**
   * Number of transaction events from devices linked to the account.
   * @return transactions
  **/
  @ApiModelProperty(example = "null", value = "Number of transaction events from devices linked to the account.")
  public Long getTransactions() {
    return transactions;
  }

  public void setTransactions(Long transactions) {
    this.transactions = transactions;
  }

  public Metric timestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * UTC time in RFC3339 format.
   * @return timestamp
  **/
  @ApiModelProperty(example = "null", value = "UTC time in RFC3339 format.")
  public String getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }

  public Metric registeredDevices(Long registeredDevices) {
    this.registeredDevices = registeredDevices;
    return this;
  }

   /**
   * Maximum number of registered devices linked to the account.
   * @return registeredDevices
  **/
  @ApiModelProperty(example = "null", value = "Maximum number of registered devices linked to the account.")
  public Long getRegisteredDevices() {
    return registeredDevices;
  }

  public void setRegisteredDevices(Long registeredDevices) {
    this.registeredDevices = registeredDevices;
  }

  public Metric bootstrapsPending(Long bootstrapsPending) {
    this.bootstrapsPending = bootstrapsPending;
    return this;
  }

   /**
   * Number of pending bootstraps the account has used.
   * @return bootstrapsPending
  **/
  @ApiModelProperty(example = "null", value = "Number of pending bootstraps the account has used.")
  public Long getBootstrapsPending() {
    return bootstrapsPending;
  }

  public void setBootstrapsPending(Long bootstrapsPending) {
    this.bootstrapsPending = bootstrapsPending;
  }

  public Metric deviceServerRestApiSuccess(Long deviceServerRestApiSuccess) {
    this.deviceServerRestApiSuccess = deviceServerRestApiSuccess;
    return this;
  }

   /**
   * Number of successful device server REST API requests the account has used.
   * @return deviceServerRestApiSuccess
  **/
  @ApiModelProperty(example = "null", value = "Number of successful device server REST API requests the account has used.")
  public Long getDeviceServerRestApiSuccess() {
    return deviceServerRestApiSuccess;
  }

  public void setDeviceServerRestApiSuccess(Long deviceServerRestApiSuccess) {
    this.deviceServerRestApiSuccess = deviceServerRestApiSuccess;
  }

  public Metric handshakesFailed(Long handshakesFailed) {
    this.handshakesFailed = handshakesFailed;
    return this;
  }

   /**
   * Number of failed handshakes the account has used.
   * @return handshakesFailed
  **/
  @ApiModelProperty(example = "null", value = "Number of failed handshakes the account has used.")
  public Long getHandshakesFailed() {
    return handshakesFailed;
  }

  public void setHandshakesFailed(Long handshakesFailed) {
    this.handshakesFailed = handshakesFailed;
  }

  public Metric handshakesSuccessful(Long handshakesSuccessful) {
    this.handshakesSuccessful = handshakesSuccessful;
    return this;
  }

   /**
   * Number of successful handshakes the account has used.
   * @return handshakesSuccessful
  **/
  @ApiModelProperty(example = "null", value = "Number of successful handshakes the account has used.")
  public Long getHandshakesSuccessful() {
    return handshakesSuccessful;
  }

  public void setHandshakesSuccessful(Long handshakesSuccessful) {
    this.handshakesSuccessful = handshakesSuccessful;
  }

  public Metric bootstrapsSuccessful(Long bootstrapsSuccessful) {
    this.bootstrapsSuccessful = bootstrapsSuccessful;
    return this;
  }

   /**
   * Number of successful bootstraps the account has used.
   * @return bootstrapsSuccessful
  **/
  @ApiModelProperty(example = "null", value = "Number of successful bootstraps the account has used.")
  public Long getBootstrapsSuccessful() {
    return bootstrapsSuccessful;
  }

  public void setBootstrapsSuccessful(Long bootstrapsSuccessful) {
    this.bootstrapsSuccessful = bootstrapsSuccessful;
  }

  public Metric id(String id) {
    this.id = id;
    return this;
  }

   /**
   * unique metric ID.
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "unique metric ID.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Metric metric = (Metric) o;
    return Objects.equals(this.deviceServerRestApiError, metric.deviceServerRestApiError) &&
        Objects.equals(this.bootstrapsFailed, metric.bootstrapsFailed) &&
        Objects.equals(this.transactions, metric.transactions) &&
        Objects.equals(this.timestamp, metric.timestamp) &&
        Objects.equals(this.registeredDevices, metric.registeredDevices) &&
        Objects.equals(this.bootstrapsPending, metric.bootstrapsPending) &&
        Objects.equals(this.deviceServerRestApiSuccess, metric.deviceServerRestApiSuccess) &&
        Objects.equals(this.handshakesFailed, metric.handshakesFailed) &&
        Objects.equals(this.handshakesSuccessful, metric.handshakesSuccessful) &&
        Objects.equals(this.bootstrapsSuccessful, metric.bootstrapsSuccessful) &&
        Objects.equals(this.id, metric.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deviceServerRestApiError, bootstrapsFailed, transactions, timestamp, registeredDevices, bootstrapsPending, deviceServerRestApiSuccess, handshakesFailed, handshakesSuccessful, bootstrapsSuccessful, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Metric {\n");
    
    sb.append("    deviceServerRestApiError: ").append(toIndentedString(deviceServerRestApiError)).append("\n");
    sb.append("    bootstrapsFailed: ").append(toIndentedString(bootstrapsFailed)).append("\n");
    sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    registeredDevices: ").append(toIndentedString(registeredDevices)).append("\n");
    sb.append("    bootstrapsPending: ").append(toIndentedString(bootstrapsPending)).append("\n");
    sb.append("    deviceServerRestApiSuccess: ").append(toIndentedString(deviceServerRestApiSuccess)).append("\n");
    sb.append("    handshakesFailed: ").append(toIndentedString(handshakesFailed)).append("\n");
    sb.append("    handshakesSuccessful: ").append(toIndentedString(handshakesSuccessful)).append("\n");
    sb.append("    bootstrapsSuccessful: ").append(toIndentedString(bootstrapsSuccessful)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

