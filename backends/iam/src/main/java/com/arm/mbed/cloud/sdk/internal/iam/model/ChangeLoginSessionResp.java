/*
 * Account Management API
 * API for managing accounts, users, creating API keys, uploading trusted certificates
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.arm.mbed.cloud.sdk.internal.iam.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

/**
 * This object represents a response for a changed user login session.
 */
@ApiModel(description = "This object represents a response for a changed user login session.")

public class ChangeLoginSessionResp implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * The status of the logged in user. &#39;Reset&#39; means that the password must be changed immediately.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    ACTIVE("Active"),
    
    RESET("Reset"),
    
    INACTIVE("Inactive");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("user_id")
  private String userId = null;

  @SerializedName("account_id")
  private String accountId = null;

  @SerializedName("roles")
  private List<String> roles = new ArrayList<String>();

  @SerializedName("token")
  private String token = null;

  @SerializedName("parent_account_id")
  private String parentAccountId = null;

  /**
   * The enforcement status of setting up the multi-factor authentication. &#39;Enabled&#39; means that the MFA has been enabled despite the enforcement. &#39;Enforced&#39; means that setting up the MFA is required after login. &#39;Optional&#39; means that the MFA is not required.
   */
  @JsonAdapter(MfaStatusEnum.Adapter.class)
  public enum MfaStatusEnum {
    ENABLED("enabled"),
    
    ENFORCED("enforced"),
    
    OPTIONAL("optional");

    private String value;

    MfaStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MfaStatusEnum fromValue(String text) {
      for (MfaStatusEnum b : MfaStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<MfaStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MfaStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MfaStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return MfaStatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("mfa_status")
  private MfaStatusEnum mfaStatus = null;

  public ChangeLoginSessionResp status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * The status of the logged in user. &#39;Reset&#39; means that the password must be changed immediately.
   * @return status
  **/
  @ApiModelProperty(required = true, value = "The status of the logged in user. 'Reset' means that the password must be changed immediately.")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public ChangeLoginSessionResp userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * User ID.
   * @return userId
  **/
  @ApiModelProperty(required = true, value = "User ID.")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public ChangeLoginSessionResp accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * The UUID of the account where the user login session is changed to.
   * @return accountId
  **/
  @ApiModelProperty(required = true, value = "The UUID of the account where the user login session is changed to.")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public ChangeLoginSessionResp roles(List<String> roles) {
    this.roles = roles;
    return this;
  }

  public ChangeLoginSessionResp addRolesItem(String rolesItem) {
    this.roles.add(rolesItem);
    return this;
  }

   /**
   * The roles of the logged in user.
   * @return roles
  **/
  @ApiModelProperty(required = true, value = "The roles of the logged in user.")
  public List<String> getRoles() {
    return roles;
  }

  public void setRoles(List<String> roles) {
    this.roles = roles;
  }

  public ChangeLoginSessionResp token(String token) {
    this.token = token;
    return this;
  }

   /**
   * Reference token.
   * @return token
  **/
  @ApiModelProperty(required = true, value = "Reference token.")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  public ChangeLoginSessionResp parentAccountId(String parentAccountId) {
    this.parentAccountId = parentAccountId;
    return this;
  }

   /**
   * The UUID of the parent account.
   * @return parentAccountId
  **/
  @ApiModelProperty(required = true, value = "The UUID of the parent account.")
  public String getParentAccountId() {
    return parentAccountId;
  }

  public void setParentAccountId(String parentAccountId) {
    this.parentAccountId = parentAccountId;
  }

  public ChangeLoginSessionResp mfaStatus(MfaStatusEnum mfaStatus) {
    this.mfaStatus = mfaStatus;
    return this;
  }

   /**
   * The enforcement status of setting up the multi-factor authentication. &#39;Enabled&#39; means that the MFA has been enabled despite the enforcement. &#39;Enforced&#39; means that setting up the MFA is required after login. &#39;Optional&#39; means that the MFA is not required.
   * @return mfaStatus
  **/
  @ApiModelProperty(required = true, value = "The enforcement status of setting up the multi-factor authentication. 'Enabled' means that the MFA has been enabled despite the enforcement. 'Enforced' means that setting up the MFA is required after login. 'Optional' means that the MFA is not required.")
  public MfaStatusEnum getMfaStatus() {
    return mfaStatus;
  }

  public void setMfaStatus(MfaStatusEnum mfaStatus) {
    this.mfaStatus = mfaStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChangeLoginSessionResp changeLoginSessionResp = (ChangeLoginSessionResp) o;
    return Objects.equals(this.status, changeLoginSessionResp.status) &&
        Objects.equals(this.userId, changeLoginSessionResp.userId) &&
        Objects.equals(this.accountId, changeLoginSessionResp.accountId) &&
        Objects.equals(this.roles, changeLoginSessionResp.roles) &&
        Objects.equals(this.token, changeLoginSessionResp.token) &&
        Objects.equals(this.parentAccountId, changeLoginSessionResp.parentAccountId) &&
        Objects.equals(this.mfaStatus, changeLoginSessionResp.mfaStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, userId, accountId, roles, token, parentAccountId, mfaStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChangeLoginSessionResp {\n");
    
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    parentAccountId: ").append(toIndentedString(parentAccountId)).append("\n");
    sb.append("    mfaStatus: ").append(toIndentedString(mfaStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

