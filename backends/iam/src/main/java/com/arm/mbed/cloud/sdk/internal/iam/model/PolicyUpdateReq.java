/*
 * Account Management API
 * API for managing accounts, users, creating API keys, uploading trusted certificates
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.arm.mbed.cloud.sdk.internal.iam.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.joda.time.DateTime;
import java.io.Serializable;

/**
 * This object is used while creating new policies.
 */
@ApiModel(description = "This object is used while creating new policies.")

public class PolicyUpdateReq implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * The new status of this policy.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    ACTIVE("ACTIVE"),
    
    INACTIVE("INACTIVE");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("valid_from")
  private DateTime validFrom = null;

  @SerializedName("error_message")
  private String errorMessage = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("valid_until")
  private DateTime validUntil = null;

  @SerializedName("grant_expires_in")
  private Integer grantExpiresIn = null;

  @SerializedName("not_resources")
  private List<String> notResources = null;

  @SerializedName("actions")
  private Map<String, Boolean> actions = null;

  @SerializedName("not_conditions")
  private List<String> notConditions = null;

  @SerializedName("tag")
  private String tag = null;

  @SerializedName("users")
  private List<String> users = null;

  @SerializedName("groups")
  private List<String> groups = null;

  @SerializedName("notActions")
  private List<String> notActions = null;

  @SerializedName("apikeys")
  private List<String> apikeys = null;

  @SerializedName("conditions")
  private List<String> conditions = null;

  @SerializedName("resources")
  private List<String> resources = null;

  @SerializedName("name")
  private String name = null;

  public PolicyUpdateReq status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * The new status of this policy.
   * @return status
  **/
  @ApiModelProperty(value = "The new status of this policy.")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public PolicyUpdateReq validFrom(DateTime validFrom) {
    this.validFrom = validFrom;
    return this;
  }

   /**
   * Specifies the date and time when the policy will become valid in UTC time RFC3339. E.g. &#39;2018-02-05T09:43:44Z&#39;
   * @return validFrom
  **/
  @ApiModelProperty(value = "Specifies the date and time when the policy will become valid in UTC time RFC3339. E.g. '2018-02-05T09:43:44Z'")
  public DateTime getValidFrom() {
    return validFrom;
  }

  public void setValidFrom(DateTime validFrom) {
    this.validFrom = validFrom;
  }

  public PolicyUpdateReq errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

   /**
   * Custom error message returned when this policy matches with not allowed result.
   * @return errorMessage
  **/
  @ApiModelProperty(value = "Custom error message returned when this policy matches with not allowed result.")
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }

  public PolicyUpdateReq description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The new description of this policy, not longer than 500 character.
   * @return description
  **/
  @ApiModelProperty(value = "The new description of this policy, not longer than 500 character.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public PolicyUpdateReq validUntil(DateTime validUntil) {
    this.validUntil = validUntil;
    return this;
  }

   /**
   * Specifies the date and time until the policy is valid in UTC time RFC3339. E.g. &#39;2018-02-05T09:43:44Z&#39;
   * @return validUntil
  **/
  @ApiModelProperty(value = "Specifies the date and time until the policy is valid in UTC time RFC3339. E.g. '2018-02-05T09:43:44Z'")
  public DateTime getValidUntil() {
    return validUntil;
  }

  public void setValidUntil(DateTime validUntil) {
    this.validUntil = validUntil;
  }

  public PolicyUpdateReq grantExpiresIn(Integer grantExpiresIn) {
    this.grantExpiresIn = grantExpiresIn;
    return this;
  }

   /**
   * Specifies the value in seconds for how long an authorization result is valid.
   * @return grantExpiresIn
  **/
  @ApiModelProperty(value = "Specifies the value in seconds for how long an authorization result is valid.")
  public Integer getGrantExpiresIn() {
    return grantExpiresIn;
  }

  public void setGrantExpiresIn(Integer grantExpiresIn) {
    this.grantExpiresIn = grantExpiresIn;
  }

  public PolicyUpdateReq notResources(List<String> notResources) {
    this.notResources = notResources;
    return this;
  }

  public PolicyUpdateReq addNotResourcesItem(String notResourcesItem) {
    if (this.notResources == null) {
      this.notResources = new ArrayList<String>();
    }
    this.notResources.add(notResourcesItem);
    return this;
  }

   /**
   * New list of not_resources in urn:mbed-cloud:{resource-type}:{resource-name} format, not more than 100. Previous list will be overwritten.
   * @return notResources
  **/
  @ApiModelProperty(value = "New list of not_resources in urn:mbed-cloud:{resource-type}:{resource-name} format, not more than 100. Previous list will be overwritten.")
  public List<String> getNotResources() {
    return notResources;
  }

  public void setNotResources(List<String> notResources) {
    this.notResources = notResources;
  }

  public PolicyUpdateReq actions(Map<String, Boolean> actions) {
    this.actions = actions;
    return this;
  }

  public PolicyUpdateReq putActionsItem(String key, Boolean actionsItem) {
    if (this.actions == null) {
      this.actions = new HashMap<String, Boolean>();
    }
    this.actions.put(key, actionsItem);
    return this;
  }

   /**
   * New list of actions as key-pairs of &#39;{action}&#39;: &#39;true&#39; or &#39;false&#39;, not more than 100. For enabling all actions use { &#39;*&#39;: true }. Previous list will be overwritten.
   * @return actions
  **/
  @ApiModelProperty(value = "New list of actions as key-pairs of '{action}': 'true' or 'false', not more than 100. For enabling all actions use { '*': true }. Previous list will be overwritten.")
  public Map<String, Boolean> getActions() {
    return actions;
  }

  public void setActions(Map<String, Boolean> actions) {
    this.actions = actions;
  }

  public PolicyUpdateReq notConditions(List<String> notConditions) {
    this.notConditions = notConditions;
    return this;
  }

  public PolicyUpdateReq addNotConditionsItem(String notConditionsItem) {
    if (this.notConditions == null) {
      this.notConditions = new ArrayList<String>();
    }
    this.notConditions.add(notConditionsItem);
    return this;
  }

   /**
   * New list of not_conditions in urn:mbed-cloud:{resource-type}:{resource-name} format, not more than 100. Previous list will be overwritten.
   * @return notConditions
  **/
  @ApiModelProperty(value = "New list of not_conditions in urn:mbed-cloud:{resource-type}:{resource-name} format, not more than 100. Previous list will be overwritten.")
  public List<String> getNotConditions() {
    return notConditions;
  }

  public void setNotConditions(List<String> notConditions) {
    this.notConditions = notConditions;
  }

  public PolicyUpdateReq tag(String tag) {
    this.tag = tag;
    return this;
  }

   /**
   * New policy tag that can be used for various purposes to be able to distinguish between policies. Not longer than 100 characters.
   * @return tag
  **/
  @ApiModelProperty(value = "New policy tag that can be used for various purposes to be able to distinguish between policies. Not longer than 100 characters.")
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }

  public PolicyUpdateReq users(List<String> users) {
    this.users = users;
    return this;
  }

  public PolicyUpdateReq addUsersItem(String usersItem) {
    if (this.users == null) {
      this.users = new ArrayList<String>();
    }
    this.users.add(usersItem);
    return this;
  }

   /**
   * New list of user IDs this policy is attached to, not more than 100. Previous list will be overwritten.
   * @return users
  **/
  @ApiModelProperty(value = "New list of user IDs this policy is attached to, not more than 100. Previous list will be overwritten.")
  public List<String> getUsers() {
    return users;
  }

  public void setUsers(List<String> users) {
    this.users = users;
  }

  public PolicyUpdateReq groups(List<String> groups) {
    this.groups = groups;
    return this;
  }

  public PolicyUpdateReq addGroupsItem(String groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<String>();
    }
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * New list of group IDs this policy is attached to, not more than 100. Previous list will be overwritten.
   * @return groups
  **/
  @ApiModelProperty(value = "New list of group IDs this policy is attached to, not more than 100. Previous list will be overwritten.")
  public List<String> getGroups() {
    return groups;
  }

  public void setGroups(List<String> groups) {
    this.groups = groups;
  }

  public PolicyUpdateReq notActions(List<String> notActions) {
    this.notActions = notActions;
    return this;
  }

  public PolicyUpdateReq addNotActionsItem(String notActionsItem) {
    if (this.notActions == null) {
      this.notActions = new ArrayList<String>();
    }
    this.notActions.add(notActionsItem);
    return this;
  }

   /**
   * New list of not_actions, not more than 100. Previous list will be overwritten.
   * @return notActions
  **/
  @ApiModelProperty(value = "New list of not_actions, not more than 100. Previous list will be overwritten.")
  public List<String> getNotActions() {
    return notActions;
  }

  public void setNotActions(List<String> notActions) {
    this.notActions = notActions;
  }

  public PolicyUpdateReq apikeys(List<String> apikeys) {
    this.apikeys = apikeys;
    return this;
  }

  public PolicyUpdateReq addApikeysItem(String apikeysItem) {
    if (this.apikeys == null) {
      this.apikeys = new ArrayList<String>();
    }
    this.apikeys.add(apikeysItem);
    return this;
  }

   /**
   * New list of API key IDs this policy is attached to, not more than 100. Previous list will be overwritten.
   * @return apikeys
  **/
  @ApiModelProperty(value = "New list of API key IDs this policy is attached to, not more than 100. Previous list will be overwritten.")
  public List<String> getApikeys() {
    return apikeys;
  }

  public void setApikeys(List<String> apikeys) {
    this.apikeys = apikeys;
  }

  public PolicyUpdateReq conditions(List<String> conditions) {
    this.conditions = conditions;
    return this;
  }

  public PolicyUpdateReq addConditionsItem(String conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<String>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

   /**
   * New list of conditions in urn:mbed-cloud:{resource-type}:{resource-name} format, not more than 100. Previous list will be overwritten.
   * @return conditions
  **/
  @ApiModelProperty(value = "New list of conditions in urn:mbed-cloud:{resource-type}:{resource-name} format, not more than 100. Previous list will be overwritten.")
  public List<String> getConditions() {
    return conditions;
  }

  public void setConditions(List<String> conditions) {
    this.conditions = conditions;
  }

  public PolicyUpdateReq resources(List<String> resources) {
    this.resources = resources;
    return this;
  }

  public PolicyUpdateReq addResourcesItem(String resourcesItem) {
    if (this.resources == null) {
      this.resources = new ArrayList<String>();
    }
    this.resources.add(resourcesItem);
    return this;
  }

   /**
   * New list of resources in urn:mbed-cloud:{resource-type}:{resource-name} format, not more than 100. Previous list will be overwritten.
   * @return resources
  **/
  @ApiModelProperty(value = "New list of resources in urn:mbed-cloud:{resource-type}:{resource-name} format, not more than 100. Previous list will be overwritten.")
  public List<String> getResources() {
    return resources;
  }

  public void setResources(List<String> resources) {
    this.resources = resources;
  }

  public PolicyUpdateReq name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The new name of this policy, must be unique and not longer than 100 character.
   * @return name
  **/
  @ApiModelProperty(value = "The new name of this policy, must be unique and not longer than 100 character.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PolicyUpdateReq policyUpdateReq = (PolicyUpdateReq) o;
    return Objects.equals(this.status, policyUpdateReq.status) &&
        Objects.equals(this.validFrom, policyUpdateReq.validFrom) &&
        Objects.equals(this.errorMessage, policyUpdateReq.errorMessage) &&
        Objects.equals(this.description, policyUpdateReq.description) &&
        Objects.equals(this.validUntil, policyUpdateReq.validUntil) &&
        Objects.equals(this.grantExpiresIn, policyUpdateReq.grantExpiresIn) &&
        Objects.equals(this.notResources, policyUpdateReq.notResources) &&
        Objects.equals(this.actions, policyUpdateReq.actions) &&
        Objects.equals(this.notConditions, policyUpdateReq.notConditions) &&
        Objects.equals(this.tag, policyUpdateReq.tag) &&
        Objects.equals(this.users, policyUpdateReq.users) &&
        Objects.equals(this.groups, policyUpdateReq.groups) &&
        Objects.equals(this.notActions, policyUpdateReq.notActions) &&
        Objects.equals(this.apikeys, policyUpdateReq.apikeys) &&
        Objects.equals(this.conditions, policyUpdateReq.conditions) &&
        Objects.equals(this.resources, policyUpdateReq.resources) &&
        Objects.equals(this.name, policyUpdateReq.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, validFrom, errorMessage, description, validUntil, grantExpiresIn, notResources, actions, notConditions, tag, users, groups, notActions, apikeys, conditions, resources, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PolicyUpdateReq {\n");
    
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    validFrom: ").append(toIndentedString(validFrom)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    validUntil: ").append(toIndentedString(validUntil)).append("\n");
    sb.append("    grantExpiresIn: ").append(toIndentedString(grantExpiresIn)).append("\n");
    sb.append("    notResources: ").append(toIndentedString(notResources)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    notConditions: ").append(toIndentedString(notConditions)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    notActions: ").append(toIndentedString(notActions)).append("\n");
    sb.append("    apikeys: ").append(toIndentedString(apikeys)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

