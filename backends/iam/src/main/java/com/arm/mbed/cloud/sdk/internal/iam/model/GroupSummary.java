/*
 * Account Management API
 * API for managing accounts, users, creating API keys, uploading trusted certificates
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.arm.mbed.cloud.sdk.internal.iam.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.joda.time.DateTime;
import java.io.Serializable;

/**
 * This object contains basic information about groups.
 */
@ApiModel(description = "This object contains basic information about groups.")

public class GroupSummary implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("last_update_time")
  private Long lastUpdateTime = null;

  @SerializedName("user_count")
  private Integer userCount = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("created_at")
  private DateTime createdAt = null;

  /**
   * Entity name: always &#39;group&#39;
   */
  @JsonAdapter(ObjectEnum.Adapter.class)
  public enum ObjectEnum {
    USER("user"),
    
    API_KEY("api-key"),
    
    GROUP("group"),
    
    ACCOUNT("account"),
    
    ACCOUNT_TEMPLATE("account-template"),
    
    TRUSTED_CERT("trusted-cert"),
    
    LIST("list"),
    
    ERROR("error");

    private String value;

    ObjectEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ObjectEnum fromValue(String text) {
      for (ObjectEnum b : ObjectEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ObjectEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ObjectEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ObjectEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ObjectEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("object")
  private ObjectEnum object = null;

  @SerializedName("creation_time")
  private Long creationTime = null;

  @SerializedName("etag")
  private String etag = null;

  @SerializedName("apikey_count")
  private Integer apikeyCount = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("account_id")
  private String accountId = null;

  public GroupSummary lastUpdateTime(Long lastUpdateTime) {
    this.lastUpdateTime = lastUpdateTime;
    return this;
  }

   /**
   * A timestamp of the latest group update, in milliseconds.
   * @return lastUpdateTime
  **/
  @ApiModelProperty(value = "A timestamp of the latest group update, in milliseconds.")
  public Long getLastUpdateTime() {
    return lastUpdateTime;
  }

  public void setLastUpdateTime(Long lastUpdateTime) {
    this.lastUpdateTime = lastUpdateTime;
  }

  public GroupSummary userCount(Integer userCount) {
    this.userCount = userCount;
    return this;
  }

   /**
   * The number of users in this group.
   * @return userCount
  **/
  @ApiModelProperty(required = true, value = "The number of users in this group.")
  public Integer getUserCount() {
    return userCount;
  }

  public void setUserCount(Integer userCount) {
    this.userCount = userCount;
  }

  public GroupSummary name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the group.
   * @return name
  **/
  @ApiModelProperty(required = true, value = "The name of the group.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public GroupSummary createdAt(DateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Creation UTC time RFC3339.
   * @return createdAt
  **/
  @ApiModelProperty(value = "Creation UTC time RFC3339.")
  public DateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(DateTime createdAt) {
    this.createdAt = createdAt;
  }

  public GroupSummary object(ObjectEnum object) {
    this.object = object;
    return this;
  }

   /**
   * Entity name: always &#39;group&#39;
   * @return object
  **/
  @ApiModelProperty(required = true, value = "Entity name: always 'group'")
  public ObjectEnum getObject() {
    return object;
  }

  public void setObject(ObjectEnum object) {
    this.object = object;
  }

  public GroupSummary creationTime(Long creationTime) {
    this.creationTime = creationTime;
    return this;
  }

   /**
   * A timestamp of the group creation in the storage, in milliseconds.
   * @return creationTime
  **/
  @ApiModelProperty(value = "A timestamp of the group creation in the storage, in milliseconds.")
  public Long getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(Long creationTime) {
    this.creationTime = creationTime;
  }

  public GroupSummary etag(String etag) {
    this.etag = etag;
    return this;
  }

   /**
   * API resource entity version.
   * @return etag
  **/
  @ApiModelProperty(required = true, value = "API resource entity version.")
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }

  public GroupSummary apikeyCount(Integer apikeyCount) {
    this.apikeyCount = apikeyCount;
    return this;
  }

   /**
   * The number of API keys in this group.
   * @return apikeyCount
  **/
  @ApiModelProperty(required = true, value = "The number of API keys in this group.")
  public Integer getApikeyCount() {
    return apikeyCount;
  }

  public void setApikeyCount(Integer apikeyCount) {
    this.apikeyCount = apikeyCount;
  }

  public GroupSummary id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The UUID of the group.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "The UUID of the group.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public GroupSummary accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * The UUID of the account this group belongs to.
   * @return accountId
  **/
  @ApiModelProperty(required = true, value = "The UUID of the account this group belongs to.")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupSummary groupSummary = (GroupSummary) o;
    return Objects.equals(this.lastUpdateTime, groupSummary.lastUpdateTime) &&
        Objects.equals(this.userCount, groupSummary.userCount) &&
        Objects.equals(this.name, groupSummary.name) &&
        Objects.equals(this.createdAt, groupSummary.createdAt) &&
        Objects.equals(this.object, groupSummary.object) &&
        Objects.equals(this.creationTime, groupSummary.creationTime) &&
        Objects.equals(this.etag, groupSummary.etag) &&
        Objects.equals(this.apikeyCount, groupSummary.apikeyCount) &&
        Objects.equals(this.id, groupSummary.id) &&
        Objects.equals(this.accountId, groupSummary.accountId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lastUpdateTime, userCount, name, createdAt, object, creationTime, etag, apikeyCount, id, accountId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupSummary {\n");
    
    sb.append("    lastUpdateTime: ").append(toIndentedString(lastUpdateTime)).append("\n");
    sb.append("    userCount: ").append(toIndentedString(userCount)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    object: ").append(toIndentedString(object)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    apikeyCount: ").append(toIndentedString(apikeyCount)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

