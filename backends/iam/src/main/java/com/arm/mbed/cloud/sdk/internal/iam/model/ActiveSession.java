/*
 * Account Management API
 * API for managing accounts, users, creating API keys, uploading trusted certificates
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.arm.mbed.cloud.sdk.internal.iam.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.joda.time.DateTime;
import java.io.Serializable;

/**
 * This object represents an active user session.
 */
@ApiModel(description = "This object represents an active user session.")

public class ActiveSession implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("user_agent")
  private String userAgent = null;

  @SerializedName("ip_address")
  private String ipAddress = null;

  @SerializedName("account_id")
  private String accountId = null;

  @SerializedName("reference_token")
  private String referenceToken = null;

  @SerializedName("login_time")
  private DateTime loginTime = null;

  public ActiveSession userAgent(String userAgent) {
    this.userAgent = userAgent;
    return this;
  }

   /**
   * User Agent header from the login request.
   * @return userAgent
  **/
  @ApiModelProperty(required = true, value = "User Agent header from the login request.")
  public String getUserAgent() {
    return userAgent;
  }

  public void setUserAgent(String userAgent) {
    this.userAgent = userAgent;
  }

  public ActiveSession ipAddress(String ipAddress) {
    this.ipAddress = ipAddress;
    return this;
  }

   /**
   * IP address of the client.
   * @return ipAddress
  **/
  @ApiModelProperty(required = true, value = "IP address of the client.")
  public String getIpAddress() {
    return ipAddress;
  }

  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }

  public ActiveSession accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * The UUID of the account.
   * @return accountId
  **/
  @ApiModelProperty(required = true, value = "The UUID of the account.")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public ActiveSession referenceToken(String referenceToken) {
    this.referenceToken = referenceToken;
    return this;
  }

   /**
   * The reference token.
   * @return referenceToken
  **/
  @ApiModelProperty(required = true, value = "The reference token.")
  public String getReferenceToken() {
    return referenceToken;
  }

  public void setReferenceToken(String referenceToken) {
    this.referenceToken = referenceToken;
  }

  public ActiveSession loginTime(DateTime loginTime) {
    this.loginTime = loginTime;
    return this;
  }

   /**
   * The login time of the user.
   * @return loginTime
  **/
  @ApiModelProperty(required = true, value = "The login time of the user.")
  public DateTime getLoginTime() {
    return loginTime;
  }

  public void setLoginTime(DateTime loginTime) {
    this.loginTime = loginTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActiveSession activeSession = (ActiveSession) o;
    return Objects.equals(this.userAgent, activeSession.userAgent) &&
        Objects.equals(this.ipAddress, activeSession.ipAddress) &&
        Objects.equals(this.accountId, activeSession.accountId) &&
        Objects.equals(this.referenceToken, activeSession.referenceToken) &&
        Objects.equals(this.loginTime, activeSession.loginTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userAgent, ipAddress, accountId, referenceToken, loginTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActiveSession {\n");
    
    sb.append("    userAgent: ").append(toIndentedString(userAgent)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    referenceToken: ").append(toIndentedString(referenceToken)).append("\n");
    sb.append("    loginTime: ").append(toIndentedString(loginTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

