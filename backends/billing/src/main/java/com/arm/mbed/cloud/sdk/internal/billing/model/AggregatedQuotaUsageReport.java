/*
 * Billing API
 * Billing API allows commercial users to retrieve billing reports and service package details.  ## Billing Reports: Billing reports for the previous month are generated automatically during the third business day of the current month. The reports will be available usually by 02:00 AM UTC.  ## Service package: A service package can be created for the commercial accounts with a specific number of firmware updates referred to as the service package quota. A customer can only perform device updates equal to the number of firmware updates linked to an active service package. A customer needs to purchase a create new service package or renew an active service package if they have consumed all the quota linked to an active service package.  Aggregator customers share their service package quota with their own subtenant accounts. A subtenant can create campaigns utilizing their parent's service package quota. A subtenant cannot create or manage service packages on their own. The quota usage history is recorded separately between the aggregator and its subtenants.  ## Service package events: The following service package events are included in the API responses:  ### reservation: A reservation event refers to the creation of a new update campaign with an estimated number of firmware updates.  ### reservation_release: A reservation_release event refers to closing an update campaign. The unused quota reserved through the update campaign will be added to the active service package quota at this point.  ### reservation_termination: A reservation_termination event refers to the termination of an update campaign due to the expiration of an active service package. The unused quota reserved through the update campaign cannot be used anymore as the active service package is expired.  ### package_creation: A package_creation event refers to the creation of a new service package.  ### package_renewal: A package_renewal event refers to the renewal of an active service package before it expires.  ### package_termination: A package_termination event refers to the expiration of an active service package. The unused quota linked to the expired service package cannot be used anymore. 
 *
 * OpenAPI spec version: 1.4.9
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.arm.mbed.cloud.sdk.internal.billing.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.joda.time.DateTime;
import java.io.Serializable;

/**
 * Aggregated quota usage entry.
 */
@ApiModel(description = "Aggregated quota usage entry.")

public class AggregatedQuotaUsageReport implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("account_id")
  private String accountId = null;

  @SerializedName("amount")
  private Long amount = null;

  @SerializedName("campaign_name")
  private String campaignName = null;

  @SerializedName("time")
  private DateTime time = null;

  /**
   * Type of quota usage entry.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    RESERVATION("reservation"),
    
    RESERVATION_RELEASE("reservation_release"),
    
    RESERVATION_TERMINATION("reservation_termination"),
    
    PACKAGE_RENEWAL("package_renewal"),
    
    PACKAGE_CREATION("package_creation"),
    
    PACKAGE_TERMINATION("package_termination");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  public AggregatedQuotaUsageReport accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public AggregatedQuotaUsageReport amount(Long amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Amount of quota usage entry. Negative if it is quota consumption.
   * @return amount
  **/
  @ApiModelProperty(required = true, value = "Amount of quota usage entry. Negative if it is quota consumption.")
  public Long getAmount() {
    return amount;
  }

  public void setAmount(Long amount) {
    this.amount = amount;
  }

  public AggregatedQuotaUsageReport campaignName(String campaignName) {
    this.campaignName = campaignName;
    return this;
  }

   /**
   * Campaign name of quota usage entry. Null if quota usage entry type is not reservation or reservation release.
   * @return campaignName
  **/
  @ApiModelProperty(value = "Campaign name of quota usage entry. Null if quota usage entry type is not reservation or reservation release.")
  public String getCampaignName() {
    return campaignName;
  }

  public void setCampaignName(String campaignName) {
    this.campaignName = campaignName;
  }

  public AggregatedQuotaUsageReport time(DateTime time) {
    this.time = time;
    return this;
  }

   /**
   * Added time of quota usage entry in RFC3339 date-time with millisecond accuracy and UTC time zone.
   * @return time
  **/
  @ApiModelProperty(required = true, value = "Added time of quota usage entry in RFC3339 date-time with millisecond accuracy and UTC time zone.")
  public DateTime getTime() {
    return time;
  }

  public void setTime(DateTime time) {
    this.time = time;
  }

  public AggregatedQuotaUsageReport type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Type of quota usage entry.
   * @return type
  **/
  @ApiModelProperty(required = true, value = "Type of quota usage entry.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AggregatedQuotaUsageReport aggregatedQuotaUsageReport = (AggregatedQuotaUsageReport) o;
    return Objects.equals(this.accountId, aggregatedQuotaUsageReport.accountId) &&
        Objects.equals(this.amount, aggregatedQuotaUsageReport.amount) &&
        Objects.equals(this.campaignName, aggregatedQuotaUsageReport.campaignName) &&
        Objects.equals(this.time, aggregatedQuotaUsageReport.time) &&
        Objects.equals(this.type, aggregatedQuotaUsageReport.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, amount, campaignName, time, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AggregatedQuotaUsageReport {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    campaignName: ").append(toIndentedString(campaignName)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

